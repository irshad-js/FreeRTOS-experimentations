
/****************************************************************************************************//**
 * @file     D2522AA.h
 *
 * @brief    CMSIS Cortex-M0 Peripheral Access Layer Header File for
 *           D2522AA from Dialog.
 *
 * @version  V1.2
 * @date     9. October 2017
 *
 * @note     Generated with SVDConv V2.87l 
 *           from CMSIS SVD File 'D2522AA.xml' Version 1.2,
 *
 * @par      Dialog GmbH (DLG) is supplying this software for use with Cortex-M
 *           processor based microcontroller, but can be equally used for other
 *           suitable processor architectures. This file can be freely distributed.
 *           Modifications to this file shall be clearly marked.
 *           
 *           THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 *           OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 *           MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 *           ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 *           CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 *******************************************************************************************************/
/** @addtogroup Dialog
  * @{
  */
/** @addtogroup D2522AA
  * @{
  */
#ifndef D2522AA_H
#define D2522AA_H
#ifdef __cplusplus
extern "C" {
#endif
/* -------------------------  Interrupt Number Definition  ------------------------ */
typedef enum IRQn{
        /****** Cortex-M33/ARMv8MML Processor Exceptions Numbers ***************************************/
        NonMaskableInt_IRQn    = -14, /*  2 Non Maskable Interrupt.                                    */
        HardFault_IRQn         = -13, /*  3 Hard Fault Interrupt.                                      */
        MemoryManagement_IRQn  = -12, /*  4 Memory Management Interrupt.                               */
        BusFault_IRQn          = -11, /*  5 Bus Fault Interrupt.                                       */
        UsageFault_IRQn        = -10, /*  6 Usage Fault Interrupt.                                     */
        SecureFault_IRQn       =  -9, /*  7 Secure Fault Interrupt.                                    */
        SVCall_IRQn            =  -5, /* 11 SV Call Interrupt.                                         */
        DebugMonitor_IRQn      =  -4, /* 12 Debug Monitor Interrupt.                                   */
        PendSV_IRQn            =  -2, /* 14 Pend SV Interrupt.                                         */
        SysTick_IRQn           =  -1, /* 15 System Tick Interrupt.                                     */
        /****** D2522 Specific Interrupt Numbers *******************************************************/
        SENSOR_NODE_IRQn        =  0, /* Sensor Node Controller interrupt request.                     */
        DMA_IRQn                =  1, /* General Purpose DMA interrupt request.                        */
        CHARGER_STATE_IRQn      =  2, /* Charger FSM interrupt request.                                */
        CHARGER_ERROR_IRQn      =  3, /* Charger Error interrupt request.                              */
                                      /* Serves charge timeout, Die and Battery temperature errors     */
        CMAC2SYS_IRQn           =  4, /* CMAC and mailbox interrupt request.                           */
        UART_IRQn               =  5, /* UART interrupt request.                                       */
        UART2_IRQn              =  6, /* UART2 interrupt request.                                      */
        UART3_IRQn              =  7, /* UART3 interrupt request.                                      */
        I2C_IRQn                =  8, /* I2C interrupt request.                                        */
        I2C2_IRQn               =  9, /* I2C2 interrupt request.                                       */
        SPI_IRQn                = 10, /* SPI interrupt request.                                        */
        SPI2_IRQn               = 11, /* SPI2 interrupt request.                                       */
        PCM_IRQn                = 12, /* PCM interrupt request.                                        */
        SRC_IN_IRQn             = 13, /* SRC input interrupt request.                                  */
        SRC_OUT_IRQn            = 14, /* SRC output interrupt request.                                 */
        USB_IRQn                = 15, /* USB interrupt request.                                        */
        TIMER_IRQn              = 16, /* TIMER interrupt request.                                      */
        TIMER2_IRQn             = 17, /* TIMER2 interrupt request.                                     */
        RTC_IRQn                = 18, /* RTC interrupt request.                                        */
        KEY_WKUP_GPIO_IRQn      = 19, /* Debounced button press interrupt request.                     */
                                      /* This interrupt is first driven to the PDC and then directed   */
                                      /* to the required masters to be waken up/notified.              */
        PDC_IRQn                = 20, /* GPIO toggle interrupt request.                                */
                                      /* This interrupt is first driven to the PDC and then directed   */
                                      /* to the required masters to be waken up/notified.              */
        VBUS_IRQn               = 21, /* VBUS presence interrupt request.                              */
        MRM_IRQn                = 22, /* Cache Miss Rate Monitor interrupt request.                    */
        MOTOR_CONTROLLER_IRQn   = 23, /* MOTOR and mailbox interrupt request.                          */
        TRNG_IRQn               = 24, /* True Random Number Generation interrupt request.              */
        DCDC_IRQn               = 25, /* DCDC interrupt request.                                       */
                                      /* Generated upon time out threshold reach.                      */
        XTAL32M_RDY_IRQn        = 26, /* XTAL32M trimmed and ready interrupt request.                  */
                                      /* Indicates that XTAL32M oscillator is trimmed and settled and  */
                                      /* can provide a reliable 32 MHz clock.                          */
        ADC_IRQn                = 27, /* Analog-Digital Converter interrupt request.                   */
        ADC2_IRQn               = 28, /* Analog-Digital Converter 2 interrupt request.                 */
        CRYPTO_IRQn             = 29, /* Crypto interrupt request.                                     */
                                      /* Sources: AES or HASH function interrupt.                      */
        CAPTIMER1_IRQn          = 30, /* GPIO triggered Timer1 Capture interrupt request.              */
        RFDIAG_IRQn             = 31, /* Baseband or Radio Diagnostics interrupt request.              */
                                      /* Required for signalling Radio or Baseband internal events,    */
                                      /* 2 signals per Radio and 2 per BB.                             */
        LCD_CONTROLLER_IRQn     = 32, /* Parallel LCD Controller interrupt request.                    */
        PLL_LOCK_IRQn           = 33, /* Pll lock interrupt request.                                   */
                                      /* Indicates that DLL/PLL is locked at 96MHz.                    */
        TIMER3_IRQn             = 34, /* TIMER3 interrupt request.                                     */
        TIMER4_IRQn             = 35, /* TIMER4 interrupt request.                                     */
        LRA_IRQn                = 36, /* LRA interrupt request.                                        */
        RTC_EVENT_IRQn          = 37, /* RTC interrupt request.                                        */
        GPIO_P0_IRQn            = 38, /* GPIO_P0 interrupt request.                                    */
        GPIO_P1_IRQn            = 39, /* GPIO_P1 interrupt request.                                    */
        RESERVED40_IRQn         = 40, /* SoftWare interrupt request.                                   */
        RESERVED41_IRQn         = 41, /* SoftWare interrupt request.                                   */
        RESERVED42_IRQn         = 42, /* SoftWare interrupt request.                                   */
        RESERVED43_IRQn         = 43, /* SoftWare interrupt request.                                   */
        RESERVED44_IRQn         = 44, /* SoftWare interrupt request.                                   */
        RESERVED45_IRQn         = 45, /* SoftWare interrupt request.                                   */
        RESERVED46_IRQn         = 46, /* SoftWare interrupt request.                                   */
        RESERVED47_IRQn         = 47, /* SoftWare interrupt request.                                   */
} IRQn_Type;
/** @addtogroup Configuration_of_CMSIS
  * @{
  */
/* ================================================================================ */
/* ================      Processor and Core Peripheral Section     ================ */
/* ================================================================================ */
/* ----------------Configuration of the Cortex-M0 Processor and Core Peripherals---------------- */
#define __CM33_REV                0x0100            /*!< Cortex-M33 Core Revision                                               */
#define __SAU_PRESENT             0         /* SAU not present */
#define __MPU_PRESENT             1         /* MPU present */
#define __VTOR_PRESENT            1         /* VTOR present */
#define __NVIC_PRIO_BITS          3         /* Number of Bits used for Priority Levels */
#define __Vendor_SysTickConfig    0         /* Set to 1 if different SysTick Config is used */
#define __FPU_PRESENT             1         /* FPU present */
#define __FPU_DP                  0         /* single precision FPU                       */
/** @} */ /* End of group Configuration_of_CMSIS */
#include "core_cm33.h"                            /*!< Cortex-M33 processor and core peripherals                             */

/* ================================================================================ */
/* ================       Device Specific Peripheral Section       ================ */
/* ================================================================================ */
/** @addtogroup Device_Peripheral_Registers
  * @{
  */
/* -------------------  Start of section using anonymous unions  ------------------ */
#if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined(__ICCARM__)
  #pragma language=extended
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
/* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning 586
#else
  #warning Not supported compiler type
#endif
/* ================================================================================ */
/* ================                      NVIC                      ================ */
/* ================================================================================ */
/**
  * @brief Cortex M0 NVIC registers (NVIC)
  */
#if 0
typedef struct {                                    /*!< (@ 0xE000E100) NVIC Structure                                         */
  __IO uint32_t  ISER;                              /*!< (@ 0xE000E100) Interrupt set-enable register                          */
  __I  uint32_t  RESERVED[31];
  __IO uint32_t  ICER;                              /*!< (@ 0xE000E180) Interrupt clear-enable register                        */
  __I  uint32_t  RESERVED1[31];
  __IO uint32_t  ISPR;                              /*!< (@ 0xE000E200) Interrupt set-pending register                         */
  __I  uint32_t  RESERVED2[31];
  __IO uint32_t  ICPR;                              /*!< (@ 0xE000E280) Interrupt clear-pending register                       */
  __I  uint32_t  RESERVED3[95];
  __IO uint32_t  IPR0;                              /*!< (@ 0xE000E400) Interrupt priority register 0                          */
  __IO uint32_t  IPR1;                              /*!< (@ 0xE000E404) Interrupt priority register 1                          */
  __IO uint32_t  IPR2;                              /*!< (@ 0xE000E408) Interrupt priority register 2                          */
  __IO uint32_t  IPR3;                              /*!< (@ 0xE000E40C) Interrupt priority register 3                          */
  __IO uint32_t  IPR4;                              /*!< (@ 0xE000E410) Interrupt priority register 4                          */
  __IO uint32_t  IPR5;                              /*!< (@ 0xE000E414) Interrupt priority register 5                          */
  __IO uint32_t  IPR6;                              /*!< (@ 0xE000E418) Interrupt priority register 6                          */
  __IO uint32_t  IPR7;                              /*!< (@ 0xE000E41C) Interrupt priority register 7                          */
} NVIC_Type;
/* ================================================================================ */
/* ================                       SCB                      ================ */
/* ================================================================================ */
/**
  * @brief Cortex M0 SCB registers (SCB)
  */
typedef struct {                                    /*!< (@ 0xE000ED00) SCB Structure                                          */
  __IO uint32_t  CPUID;                             /*!< (@ 0xE000ED00) CPUID base register                                    */
  __IO uint32_t  ICSR;                              /*!< (@ 0xE000ED04) Interrupt control and state register                   */
  __I  uint32_t  RESERVED;
  __I  uint32_t  AIRCR;                             /*!< (@ 0xE000ED0C) Application interrupt and reset control register       */
  __IO uint32_t  SCR;                               /*!< (@ 0xE000ED10) System control register                                */
  __IO uint32_t  CCR;                               /*!< (@ 0xE000ED14) Configuration and control register                     */
  __I  uint32_t  RESERVED1;
  __IO uint32_t  SHPR2;                             /*!< (@ 0xE000ED1C) System handler priority register 2                     */
  __IO uint32_t  SHPR3;                             /*!< (@ 0xE000ED20) System handler priority register 3                     */
} SCB_Type;
/* ================================================================================ */
/* ================                     SysTick                    ================ */
/* ================================================================================ */
/**
  * @brief Cortex M0 SysTick registers (SysTick)
  */
typedef struct {                                    /*!< (@ 0xE000E010) SysTick Structure                                      */
  __IO uint32_t  CTRL;                              /*!< (@ 0xE000E010) SysTick Control and Status register                    */
  __IO uint32_t  LOAD;                              /*!< (@ 0xE000E014) SysTick Reload value register                          */
  __IO uint32_t  VAL;                               /*!< (@ 0xE000E018) SysTick Current value register                         */
  __I  uint32_t  CALIB;                             /*!< (@ 0xE000E01C) SysTick Calibration value register                     */
} SysTick_Type;
#endif
/* ================================================================================ */
/* ================                adc2522_ds_bif_00               ================ */
/* ================================================================================ */
/**
  * @brief adc2522_ds_bif_00 registers (adc2522_ds_bif_00)
  */
typedef struct {                                    /*!< (@ 0x50020800) adc2522_ds_bif_00 Structure                            */
  __IO uint32_t  SDADC_CTRL_REG;                    /*!< (@ 0x50020800) Sigma Delta ADC Control Register                       */
  __I  uint32_t  RESERVED;
  __IO uint32_t  SDADC_TEST_REG;                    /*!< (@ 0x50020808) Sigma Delta ADC Test Register                          */
  __IO uint32_t  SDADC_GAIN_CORR_REG;               /*!< (@ 0x5002080C) Sigma Delta ADC Gain Correction Register               */
  __IO uint32_t  SDADC_OFFS_CORR_REG;               /*!< (@ 0x50020810) Sigma Delta ADC Offset Correction Register             */
  __IO uint32_t  SDADC_CLEAR_INT_REG;               /*!< (@ 0x50020814) Sigma Delta ADC Clear Interrupt Register               */
  __IO uint32_t  SDADC_RESULT_REG;                  /*!< (@ 0x50020818) Sigma Delta ADC Result Register                        */
} adc2522_ds_bif_00_Type;
/* ================================================================================ */
/* ================                      ADPLL                     ================ */
/* ================================================================================ */
/**
  * @brief ADPLL registers (ADPLL)
  */
typedef struct {                                    /*!< (@ 0x40022000) ADPLL Structure                                        */
  __IO uint32_t  ADPLL_ATTR_CTRL_REG;               /*!< (@ 0x40022000) ADPLL_ATTR_CTRL_REG                                    */
  __IO uint32_t  ADPLL_CN_CTRL_REG;                 /*!< (@ 0x40022004) ADPLL_CN_CTRL_REG                                      */
  __IO uint32_t  ADPLL_FIF_CTRL1_REG;               /*!< (@ 0x40022008) ADPLL_FIF_CTRL1_REG                                    */
  __IO uint32_t  ADPLL_FIF_CTRL2_REG;               /*!< (@ 0x4002200C) ADPLL_FIF_CTRL2_REG                                    */
  __IO uint32_t  ADPLL_KDCO_CAL_CTRL1_REG;          /*!< (@ 0x40022010) ADPLL_KDCO_CAL_CTRL1_REG                               */
  __IO uint32_t  ADPLL_KDCO_CAL_CTRL2_REG;          /*!< (@ 0x40022014) ADPLL_KDCO_CAL_CTRL2_REG                               */
  __IO uint32_t  ADPLL_KDTCTDC_CAL_CTRL1_REG;       /*!< (@ 0x40022018) ADPLL_KDTCTDC_CAL_CTRL1_REG                            */
  __IO uint32_t  ADPLL_KDTCTDC_CAL_CTRL2_REG;       /*!< (@ 0x4002201C) ADPLL_KDTCTDC_CAL_CTRL2_REG                            */
  __IO uint32_t  ADPLL_DCOAMP_CAL_CTRL_REG;         /*!< (@ 0x40022020) ADPLL_DCOAMP_CAL_CTRL_REG                              */
  __IO uint32_t  ADPLL_TXMOD_CTRL_REG;              /*!< (@ 0x40022024) ADPLL_TXMOD_CTRL_REG                                   */
  __IO uint32_t  ADPLL_SDMOD_CTRL_REG;              /*!< (@ 0x40022028) ADPLL_SDMOD_CTRL_REG                                   */
  __IO uint32_t  ADPLL_LF_CTRL1_REG;                /*!< (@ 0x4002202C) ADPLL_LF_CTRL1_REG                                     */
  __IO uint32_t  ADPLL_LF_CTRL2_REG;                /*!< (@ 0x40022030) ADPLL_LF_CTRL2_REG                                     */
  __IO uint32_t  ADPLL_ANA_CTRL_REG;                /*!< (@ 0x40022034) ADPLL_ANA_CTRL_REG                                     */
  __IO uint32_t  ADPLL_DIV_CTRL_REG;                /*!< (@ 0x40022038) ADPLL_DIV_CTRL_REG                                     */
  __IO uint32_t  ADPLL_INIT_CTRL_REG;               /*!< (@ 0x4002203C) ADPLL_INIT_CTRL_REG                                    */
  __IO uint32_t  ADPLL_FSM_CTRL_REG;                /*!< (@ 0x40022040) ADPLL_FSM_CTRL_REG                                     */
  __IO uint32_t  ADPLL_MON_CTRL_REG;                /*!< (@ 0x40022044) ADPLL_MON_CTRL_REG                                     */
  __IO uint32_t  ADPLL_MISC_CTRL_REG;               /*!< (@ 0x40022048) ADPLL_MISC_CTRL_REG                                    */
  __IO uint32_t  ADPLL_OL_CTRL_REG;                 /*!< (@ 0x4002204C) ADPLL_OL_CTRL_REG                                      */
  __IO uint32_t  ADPLL_OVERRULE_CTRL1_REG;          /*!< (@ 0x40022050) ADPLL_OVERRULE_CTRL1_REG                               */
  __IO uint32_t  ADPLL_OVERRULE_CTRL2_REG;          /*!< (@ 0x40022054) ADPLL_OVERRULE_CTRL2_REG                               */
  __IO uint32_t  ADPLL_OVERRULE_CTRL3_REG;          /*!< (@ 0x40022058) ADPLL_OVERRULE_CTRL3_REG                               */
  __IO uint32_t  ADPLL_RFPT_CTRL_REG;               /*!< (@ 0x4002205C) ADPLL_RFPT_CTRL_REG                                    */
  __IO uint32_t  ADPLL_ANATST_CTRL_REG;             /*!< (@ 0x40022060) ADPLL_ANATST_CTRL_REG                                  */
  __IO uint32_t  ADPLL_ACC_CTRL_REG;                /*!< (@ 0x40022064) ADPLL_ACC_CTRL_REG                                     */
  __I  uint32_t  RESERVED[5];
  __IO uint32_t  ADPLL_FREQMEAS_RD_REG;             /*!< (@ 0x4002207C) ADPLL_FREQMEAS_RD_REG                                  */
  __IO uint32_t  ADPLL_DCO_RD_REG;                  /*!< (@ 0x40022080) ADPLL_DCO_RD_REG                                       */
  __IO uint32_t  ADPLL_KDCO_RD_REG;                 /*!< (@ 0x40022084) ADPLL_KDCO_RD_REG                                      */
  __IO uint32_t  ADPLL_KDTC_RD_REG;                 /*!< (@ 0x40022088) ADPLL_KDTC_RD_REG                                      */
  __IO uint32_t  ADPLL_TUNESTATE_RD_REG;            /*!< (@ 0x4002208C) ADPLL_TUNESTATE_RD_REG                                 */
  __IO uint32_t  ADPLL_PLLFCWDT_RD_REG;             /*!< (@ 0x40022090) ADPLL_PLLFCWDT_RD_REG                                  */
  __IO uint32_t  ADPLL_ANATST_RD_REG;               /*!< (@ 0x40022094) ADPLL_ANATST_RD_REG                                    */
} ADPLL_Type;
/* ================================================================================ */
/* ================                    AES_HASH                    ================ */
/* ================================================================================ */
/**
  * @brief AES_HASH registers (AES_HASH)
  */
typedef struct {                                    /*!< (@ 0x30040000) AES_HASH Structure                                     */
  __IO uint32_t  CRYPTO_CTRL_REG;                   /*!< (@ 0x30040000) Crypto Control register                                */
  __IO uint32_t  CRYPTO_START_REG;                  /*!< (@ 0x30040004) Crypto Start calculation                               */
  __IO uint32_t  CRYPTO_FETCH_ADDR_REG;             /*!< (@ 0x30040008) Crypto DMA fetch register                              */
  __IO uint32_t  CRYPTO_LEN_REG;                    /*!< (@ 0x3004000C) Crypto Length of the input block in bytes              */
  __IO uint32_t  CRYPTO_DEST_ADDR_REG;              /*!< (@ 0x30040010) Crypto DMA destination memory                          */
  __IO uint32_t  CRYPTO_STATUS_REG;                 /*!< (@ 0x30040014) Crypto Status register                                 */
  __IO uint32_t  CRYPTO_CLRIRQ_REG;                 /*!< (@ 0x30040018) Crypto Clear interrupt request                         */
  __IO uint32_t  CRYPTO_MREG0_REG;                  /*!< (@ 0x3004001C) Crypto Mode depended register 0                        */
  __IO uint32_t  CRYPTO_MREG1_REG;                  /*!< (@ 0x30040020) Crypto Mode depended register 1                        */
  __IO uint32_t  CRYPTO_MREG2_REG;                  /*!< (@ 0x30040024) Crypto Mode depended register 2                        */
  __IO uint32_t  CRYPTO_MREG3_REG;                  /*!< (@ 0x30040028) Crypto Mode depended register 3                        */
  __I  uint32_t  RESERVED[53];
  __IO uint32_t  CRYPTO_KEYS_START;                 /*!< (@ 0x30040100) Crypto First position of the AES keys storage
                                                         memory                                                                */
} AES_HASH_Type;
/* ================================================================================ */
/* ================                     ANAMISC                    ================ */
/* ================================================================================ */
/**
  * @brief ANAMISC registers (ANAMISC)
  */
typedef struct {                                    /*!< (@ 0x50030B00) ANAMISC Structure                                      */
  __IO uint32_t  ANA_TEST_REG;                      /*!< (@ 0x50030B00) Analog test registers                                  */
  __I  uint32_t  RESERVED[3];
  __IO uint32_t  CLK_REF_SEL_REG;                   /*!< (@ 0x50030B10) Select clock for oscillator calibration                */
  __IO uint32_t  CLK_REF_CNT_REG;                   /*!< (@ 0x50030B14) Count value for oscillator calibration                 */
  __IO uint32_t  CLK_REF_VAL_REG;                   /*!< (@ 0x50030B18) DIVN reference cycles, lower 16 bits                   */
} ANAMISC_Type;
/* ================================================================================ */
/* ================                       APU                      ================ */
/* ================================================================================ */
/**
  * @brief APU registers (APU)
  */
typedef struct {                                    /*!< (@ 0x50030600) APU Structure                                          */
  __IO uint32_t  SRC1_CTRL_REG;                     /*!< (@ 0x50030600) SRC1 control register                                  */
  __IO uint32_t  SRC1_IN_FS_REG;                    /*!< (@ 0x50030604) SRC1 Sample input rate                                 */
  __IO uint32_t  SRC1_OUT_FS_REG;                   /*!< (@ 0x50030608) SRC1 Sample output rate                                */
  __IO uint32_t  SRC1_IN1_REG;                      /*!< (@ 0x5003060C) SRC1 data in 1                                         */
  __IO uint32_t  SRC1_IN2_REG;                      /*!< (@ 0x50030610) SRC1 data in 2                                         */
  __IO uint32_t  SRC1_OUT1_REG;                     /*!< (@ 0x50030614) SRC1 data out 1                                        */
  __IO uint32_t  SRC1_OUT2_REG;                     /*!< (@ 0x50030618) SRC1 data out 2                                        */
  __IO uint32_t  APU_MUX_REG;                       /*!< (@ 0x5003061C) APU mux register                                       */
  __IO uint32_t  COEF10_SET1_REG;                   /*!< (@ 0x50030620) SRC coefficient 1,0 set 1                              */
  __IO uint32_t  COEF32_SET1_REG;                   /*!< (@ 0x50030624) SRC coefficient 3,2 set 1                              */
  __IO uint32_t  COEF54_SET1_REG;                   /*!< (@ 0x50030628) SRC coefficient 5,4 set 1                              */
  __IO uint32_t  COEF76_SET1_REG;                   /*!< (@ 0x5003062C) SRC coefficient 7,6 set 1                              */
  __IO uint32_t  COEF98_SET1_REG;                   /*!< (@ 0x50030630) SRC coefficient 9,8 set 1                              */
  __IO uint32_t  COEF0A_SET1_REG;                   /*!< (@ 0x50030634) SRC coefficient 10 set 1                               */
  __I  uint32_t  RESERVED[50];
  __IO uint32_t  PCM1_CTRL_REG;                     /*!< (@ 0x50030700) PCM1 Control register                                  */
  __IO uint32_t  PCM1_IN1_REG;                      /*!< (@ 0x50030704) PCM1 data in 1                                         */
  __IO uint32_t  PCM1_IN2_REG;                      /*!< (@ 0x50030708) PCM1 data in 2                                         */
  __IO uint32_t  PCM1_OUT1_REG;                     /*!< (@ 0x5003070C) PCM1 data out 1                                        */
  __IO uint32_t  PCM1_OUT2_REG;                     /*!< (@ 0x50030710) PCM1 data out 2                                        */
} APU_Type;
/* ================================================================================ */
/* ================                      CACHE                     ================ */
/* ================================================================================ */
/**
  * @brief CACHE registers (CACHE)
  */
typedef struct {                                    /*!< (@ 0x100C0000) CACHE Structure                                        */
  __IO uint32_t  CACHE_CTRL1_REG;                   /*!< (@ 0x100C0000) Cache control register 1                               */
  __IO uint32_t  CACHE_LNSIZECFG_REG;               /*!< (@ 0x100C0004) Cache line size configuration register                 */
  __IO uint32_t  CACHE_ASSOCCFG_REG;                /*!< (@ 0x100C0008) Cache associativity configuration register             */
  __I  uint32_t  RESERVED[5];
  __IO uint32_t  CACHE_CTRL2_REG;                   /*!< (@ 0x100C0020) Cache control register 2                               */
  __IO uint32_t  CACHE_CTRL3_REG;                   /*!< (@ 0x100C0024) Cache control register 3 (for the Cache Controller
                                                         configuration reset values)                                           */
  __IO uint32_t  CACHE_MRM_HITS_REG;                /*!< (@ 0x100C0028) Cache MRM (Miss Rate Monitor) HITS register            */
  __IO uint32_t  CACHE_MRM_MISSES_REG;              /*!< (@ 0x100C002C) Cache MRM (Miss Rate Monitor) MISSES register          */
  __IO uint32_t  CACHE_MRM_CTRL_REG;                /*!< (@ 0x100C0030) Cache MRM (Miss Rate Monitor) CONTROL register         */
  __IO uint32_t  CACHE_MRM_TINT_REG;                /*!< (@ 0x100C0034) Cache MRM (Miss Rate Monitor) TIME INTERVAL register   */
  __IO uint32_t  CACHE_MRM_MISSES_THRES_REG;        /*!< (@ 0x100C0038) Cache MRM (Miss Rate Monitor) THRESHOLD register       */
  __IO uint32_t  CACHE_MRM_HITS_THRES_REG;          /*!< (@ 0x100C003C) Cache MRM (Miss Rate Monitor) HITS THRESHOLD
                                                         register                                                              */
  __IO uint32_t  CACHE_FLASH_REG;                   /*!< (@ 0x100C0040) Cache Flash program size and base address register     */
  __I  uint32_t  RESERVED1[3];
  __IO uint32_t  SWD_RESET_REG;                     /*!< (@ 0x100C0050) SWD HW reset control register                          */
  __I  uint32_t  RESERVED2[3];
  __IO uint32_t  CACHE_CPU_M_HADDR_REG;             /*!< (@ 0x100C0060) Cache CPU Master address (RO) register                 */
  __IO uint32_t  CACHE_M_HADDR_MAP0_REG;            /*!< (@ 0x100C0064) Cache Master Remapped address (RO) register            */
  __IO uint32_t  CACHE_CTRLR_M_HADDR_REG;           /*!< (@ 0x100C0068) Cache CTRLR Master address (RO) register               */
} CACHE_Type;
/* ================================================================================ */
/* ================                     CHARGER                    ================ */
/* ================================================================================ */
/**
  * @brief CHARGER registers (CHARGER)
  */
typedef struct {                                    /*!< (@ 0x50040400) CHARGER Structure                                      */
  __IO uint32_t  CHARGER_CTRL_REG;                  /*!< (@ 0x50040400) Charger main control register                          */
  __IO uint32_t  CHARGER_TEST_CTRL_REG;             /*!< (@ 0x50040404) Charger test control register                          */
  __IO uint32_t  CHARGER_STATUS_REG;                /*!< (@ 0x50040408) Charger main status register                           */
  __IO uint32_t  CHARGER_VOLTAGE_PARAM_REG;         /*!< (@ 0x5004040C) Charger voltage settings register                      */
  __IO uint32_t  CHARGER_CURRENT_PARAM_REG;         /*!< (@ 0x50040410) Charger current settings register                      */
  __IO uint32_t  CHARGER_TEMPSET_PARAM_REG;         /*!< (@ 0x50040414) Charger battery temperature settings register          */
  __IO uint32_t  CHARGER_PRE_CHARGE_TIMER_REG;      /*!< (@ 0x50040418) Maximum pre-charge time limit register                 */
  __IO uint32_t  CHARGER_CC_CHARGE_TIMER_REG;       /*!< (@ 0x5004041C) Maximum CC-charge time limit register                  */
  __IO uint32_t  CHARGER_CV_CHARGE_TIMER_REG;       /*!< (@ 0x50040420) Maximum CV-charge time limit register                  */
  __IO uint32_t  CHARGER_TOTAL_CHARGE_TIMER_REG;    /*!< (@ 0x50040424) Maximum total charge time limit register               */
  __IO uint32_t  CHARGER_JEITA_V_CHARGE_REG;        /*!< (@ 0x50040428) JEITA-compliant Charge voltage settings register       */
  __IO uint32_t  CHARGER_JEITA_V_PRECHARGE_REG;     /*!< (@ 0x5004042C) JEITA-compliant Pre-Charge voltage settings register   */
  __IO uint32_t  CHARGER_JEITA_V_REPLENISH_REG;     /*!< (@ 0x50040430) JEITA-compliant Replenish settings register            */
  __IO uint32_t  CHARGER_JEITA_V_OVP_REG;           /*!< (@ 0x50040434) JEITA-compliant OVP settings register                  */
  __IO uint32_t  CHARGER_JEITA_CURRENT_REG;         /*!< (@ 0x50040438) JEITA-compliant current settings register              */
  __IO uint32_t  CHARGER_VBAT_COMP_TIMER_REG;       /*!< (@ 0x5004043C) Main Vbat comparator timer register                    */
  __IO uint32_t  CHARGER_VOVP_COMP_TIMER_REG;       /*!< (@ 0x50040440) Vbat OVP comparator timer register                     */
  __IO uint32_t  CHARGER_TDIE_COMP_TIMER_REG;       /*!< (@ 0x50040444) Die temperature comparator timer register              */
  __IO uint32_t  CHARGER_TBAT_MON_TIMER_REG;        /*!< (@ 0x50040448) Battery temperature monitor interval timer             */
  __IO uint32_t  CHARGER_TBAT_COMP_TIMER_REG;       /*!< (@ 0x5004044C) Battery temperature (main) comparator timer            */
  __IO uint32_t  CHARGER_THOT_COMP_TIMER_REG;       /*!< (@ 0x50040450) Battery temperature comparator timer for "Hot"
                                                         zone                                                                  */
  __IO uint32_t  CHARGER_PWR_UP_TIMER_REG;          /*!< (@ 0x50040454) Charger power-up (settling) timer                      */
  __IO uint32_t  CHARGER_STATE_IRQ_MASK_REG;        /*!< (@ 0x50040458) Mask register of Charger FSM IRQs                      */
  __IO uint32_t  CHARGER_ERROR_IRQ_MASK_REG;        /*!< (@ 0x5004045C) Mask register of Charger Error IRQs                    */
  __IO uint32_t  CHARGER_STATE_IRQ_STATUS_REG;      /*!< (@ 0x50040460) Status register of Charger FSM IRQs                    */
  __IO uint32_t  CHARGER_ERROR_IRQ_STATUS_REG;      /*!< (@ 0x50040464) Status register of Charger Error IRQs                  */
  __IO uint32_t  CHARGER_STATE_IRQ_CLR_REG;         /*!< (@ 0x50040468) Interrupt clear register of Charger FSM IRQs           */
  __IO uint32_t  CHARGER_ERROR_IRQ_CLR_REG;         /*!< (@ 0x5004046C) Interrupt clear register of Charger Error IRQs         */
} CHARGER_Type;
/* ================================================================================ */
/* ================                  CHIP_VERSION                  ================ */
/* ================================================================================ */
/**
  * @brief CHIP_VERSION registers (CHIP_VERSION)
  */
typedef struct {                                    /*!< (@ 0x50040200) CHIP_VERSION Structure                                 */
  __IO uint32_t  CHIP_ID1_REG;                      /*!< (@ 0x50040200) Chip identification register 1.                        */
  __IO uint32_t  CHIP_ID2_REG;                      /*!< (@ 0x50040204) Chip identification register 2.                        */
  __IO uint32_t  CHIP_ID3_REG;                      /*!< (@ 0x50040208) Chip identification register 3.                        */
  __IO uint32_t  CHIP_ID4_REG;                      /*!< (@ 0x5004020C) Chip identification register 4.                        */
  __IO uint32_t  CHIP_SWC_REG;                      /*!< (@ 0x50040210) Software compatibility register.                       */
  __IO uint32_t  CHIP_REVISION_REG;                 /*!< (@ 0x50040214) Chip revision register.                                */
  __I  uint32_t  RESERVED[56];
  __IO uint32_t  CHIP_TEST1_REG;                    /*!< (@ 0x500402F8) Chip test register 1.                                  */
  __IO uint32_t  CHIP_TEST2_REG;                    /*!< (@ 0x500402FC) Chip test register 2.                                  */
} CHIP_VERSION_Type;
/* ================================================================================ */
/* ================                      CMAC                      ================ */
/* ================================================================================ */
/**
  * @brief CMAC registers (CMAC)
  */
typedef struct {                                    /*!< (@ 0x40000000) CMAC Structure                                         */
  __I  uint32_t  RESERVED[2048];
  __IO uint32_t  CM_CTRL_SYS_REG;                   /*!< (@ 0x40002000) CMAC and System Control Register                       */
  __IO uint32_t  CM_WDOG_REG;                       /*!< (@ 0x40002004) CMAC Watch Dog Control Register                        */
  __I  uint32_t  RESERVED1[62];
  __IO uint32_t  CM_DIAG_IRQ1_WORD_REG;             /*!< (@ 0x40002100) Diagnostic IRQ on Word1 - Word1 Register               */
  __IO uint32_t  CM_DIAG_IRQ1_EDGE_REG;             /*!< (@ 0x40002104) Diagnostic IRQ on Word1 - Edge Register                */
  __IO uint32_t  CM_DIAG_IRQ1_STAT_REG;             /*!< (@ 0x40002108) Diagnostic IRQ on Word1 - Status Register              */
  __IO uint32_t  CM_DIAG_IRQ1_MASK_REG;             /*!< (@ 0x4000210C) Diagnostic IRQ on Word1 - Mask Register                */
} CMAC_Type;
/* ================================================================================ */
/* ================                 CMAC_TIMER_SLP                 ================ */
/* ================================================================================ */
/**
  * @brief CMAC_TIMER_SLP registers (CMAC_TIMER_SLP)
  */
typedef struct {                                    /*!< (@ 0x50010400) CMAC_TIMER_SLP Structure                               */
  __IO uint32_t  CM_SLP_CTRL_REG;                   /*!< (@ 0x50010400) CMAC Sleep Control 1 (allowed to RMW)                  */
  __IO uint32_t  CM_SLP_CTRL2_REG;                  /*!< (@ 0x50010404) CMAC Sleep Control 2 (no RMW)                          */
  __IO uint32_t  CM_SLP_TIMER_REG;                  /*!< (@ 0x50010408) CMAC Sleep Timer                                       */
} CMAC_TIMER_SLP_Type;
/* ================================================================================ */
/* ================                     CRG_COM                    ================ */
/* ================================================================================ */
/**
  * @brief CRG_COM registers (CRG_COM)
  */
typedef struct {                                    /*!< (@ 0x50020900) CRG_COM Structure                                      */
  __I  uint32_t  RESERVED;
  __IO uint32_t  CLK_COM_REG;                       /*!< (@ 0x50020904) Peripheral divider register                            */
} CRG_COM_Type;
/* ================================================================================ */
/* ================                     CRG_PER                    ================ */
/* ================================================================================ */
/**
  * @brief CRG_PER registers (CRG_PER)
  */
typedef struct {                                    /*!< (@ 0x50030C00) CRG_PER Structure                                      */
  __I  uint32_t  RESERVED;
  __IO uint32_t  CLK_PER_REG;                       /*!< (@ 0x50030C04) Peripheral divider register                            */
  __I  uint32_t  RESERVED1[14];
  __IO uint32_t  PCM_DIV_REG;                       /*!< (@ 0x50030C40) PCM divider and enables                                */
  __IO uint32_t  PCM_FDIV_REG;                      /*!< (@ 0x50030C44) PCM fractional division register                       */
  __IO uint32_t  PDM_DIV_REG;                       /*!< (@ 0x50030C48) PDM divider and enables                                */
  __IO uint32_t  SRC_DIV_REG;                       /*!< (@ 0x50030C4C) SRC divider and enables                                */
  __IO uint32_t  PERRAM_CONFIG_REG;                 /*!< (@ 0x50030C50) Peripheral RAM configurations                          */
} CRG_PER_Type;
/* ================================================================================ */
/* ================                     CRG_SYS                    ================ */
/* ================================================================================ */
/**
  * @brief CRG_SYS registers (CRG_SYS)
  */
typedef struct {                                    /*!< (@ 0x50040500) CRG_SYS Structure                                      */
  __IO uint32_t  CLK_SYS_REG;                       /*!< (@ 0x50040500) Peripheral divider register                            */
  __IO uint32_t  BATCHECK_REG;                      /*!< (@ 0x50040504) BATCHECK_REG                                           */
  __I  uint32_t  RESERVED[14];
  __IO uint32_t  SYSRAM_CONFIG_REG;                 /*!< (@ 0x50040540) System RAM configurations                              */
} CRG_SYS_Type;
/* ================================================================================ */
/* ================                     CRG_TOP                    ================ */
/* ================================================================================ */
/**
  * @brief CRG_TOP registers (CRG_TOP)
  */
typedef struct {                                    /*!< (@ 0x50000000) CRG_TOP Structure                                      */
  __IO uint32_t  CLK_AMBA_REG;                      /*!< (@ 0x50000000) HCLK, PCLK, divider and clock gates                    */
  __I  uint32_t  RESERVED[3];
  __IO uint32_t  CLK_RADIO_REG;                     /*!< (@ 0x50000010) Radio PLL control register                             */
  __IO uint32_t  CLK_CTRL_REG;                      /*!< (@ 0x50000014) Clock control register                                 */
  __IO uint32_t  CLK_TMR_REG;                       /*!< (@ 0x50000018) Clock control for the timers                           */
  __IO uint32_t  CLK_SWITCH2XTAL_REG;               /*!< (@ 0x5000001C) Switches clock from RC32M to XTAL32M                   */
  __IO uint32_t  PMU_CTRL_REG;                      /*!< (@ 0x50000020) Power Management Unit control register                 */
  __IO uint32_t  SYS_CTRL_REG;                      /*!< (@ 0x50000024) System Control register                                */
  __IO uint32_t  SYS_STAT_REG;                      /*!< (@ 0x50000028) System status register                                 */
  __I  uint32_t  RESERVED1[4];
  __IO uint32_t  CLK_RC32K_REG;                     /*!< (@ 0x5000003C) 32 kHz RC oscillator register                          */
  __IO uint32_t  CLK_XTAL32K_REG;                   /*!< (@ 0x50000040) 32 kHz XTAL oscillator register                        */
  __IO uint32_t  CLK_RC32M_REG;                     /*!< (@ 0x50000044) Fast RC control register                               */
  __IO uint32_t  CLK_RCX_REG;                       /*!< (@ 0x50000048) RCX-oscillator control register                        */
  __IO uint32_t  CLK_RTCDIV_REG;                    /*!< (@ 0x5000004C) Divisor for RTC 100Hz clock                            */
  __IO uint32_t  BANDGAP_REG;                       /*!< (@ 0x50000050) bandgap trimming                                       */
  __IO uint32_t  VBUS_IRQ_MASK_REG;                 /*!< (@ 0x50000054) IRQ masking                                            */
  __IO uint32_t  VBUS_IRQ_CLEAR_REG;                /*!< (@ 0x50000058) Clear pending IRQ register                             */
  __I  uint32_t  RESERVED2;
  __IO uint32_t  BOD_CTRL_REG;                      /*!< (@ 0x50000060) Brown Out Detection control register                   */
  __IO uint32_t  BOD_LVL_CTRL0_REG;                 /*!< (@ 0x50000064) BOD_LVL_CTRL0_REG                                      */
  __IO uint32_t  BOD_LVL_CTRL1_REG;                 /*!< (@ 0x50000068) BOD_LVL_CTRL1_REG                                      */
  __IO uint32_t  BOD_LVL_CTRL2_REG;                 /*!< (@ 0x5000006C) BOD_LVL_CTRL2_REG                                      */
  __IO uint32_t  P0_PAD_LATCH_REG;                  /*!< (@ 0x50000070) Control the state retention of the GPIO ports          */
  __IO uint32_t  P0_SET_PAD_LATCH_REG;              /*!< (@ 0x50000074) Control the state retention of the GPIO ports          */
  __IO uint32_t  P0_RESET_PAD_LATCH_REG;            /*!< (@ 0x50000078) Control the state retention of the GPIO ports          */
  __IO uint32_t  P1_PAD_LATCH_REG;                  /*!< (@ 0x5000007C) Control the state retention of the GPIO ports          */
  __IO uint32_t  P1_SET_PAD_LATCH_REG;              /*!< (@ 0x50000080) Control the state retention of the GPIO ports          */
  __IO uint32_t  P1_RESET_PAD_LATCH_REG;            /*!< (@ 0x50000084) Control the state retention of the GPIO ports          */
  __I  uint32_t  RESERVED3[2];
  __IO uint32_t  BOD_STATUS_REG;                    /*!< (@ 0x50000090) BOD_STATUS_REG                                         */
  __IO uint32_t  POR_VBAT_CTRL_REG;                 /*!< (@ 0x50000094) Controls the POR on VBAT                               */
  __IO uint32_t  POR_PIN_REG;                       /*!< (@ 0x50000098) Selects a GPIO pin for POR generation                  */
  __IO uint32_t  POR_TIMER_REG;                     /*!< (@ 0x5000009C) Time for POR to happen                                 */
  __IO uint32_t  LDO_VDDD_HIGH_CTRL_REG;            /*!< (@ 0x500000A0) LDO control register                                   */
  __IO uint32_t  BIAS_VREF_SEL_REG;                 /*!< (@ 0x500000A4) BIAS_VREF_SEL_REG                                      */
  __I  uint32_t  RESERVED4[4];
  __IO uint32_t  HW_CONFIG_REG;                     /*!< (@ 0x500000B8) Hardware configuration register                        */
  __IO uint32_t  RESET_STAT_REG;                    /*!< (@ 0x500000BC) Reset status register                                  */
  __IO uint32_t  RAM_PWR_CTRL_REG;                  /*!< (@ 0x500000C0) Control power state of System RAMS                     */
  __IO uint32_t  LDOS_DISABLE_REG;                  /*!< (@ 0x500000C4) Force off all LDOs                                     */
  __IO uint32_t  AON_SPARE_REG;                     /*!< (@ 0x500000C8) Spare register                                         */
  __IO uint32_t  SECURE_BOOT_REG;                   /*!< (@ 0x500000CC) Controls secure booting                                */
  __I  uint32_t  RESERVED5;
  __IO uint32_t  DISCHARGE_RAIL_REG;                /*!< (@ 0x500000D4) Immediate rail resetting. There is no LDO/DCDC
                                                         gating                                                                */
  __I  uint32_t  RESERVED6[5];
  __IO uint32_t  ANA_STATUS_REG;                    /*!< (@ 0x500000EC) ANA_STATUS_REG                                         */
  __IO uint32_t  POWER_CTRL_REG;                    /*!< (@ 0x500000F0) POWER_CTRL_REG                                         */
  __IO uint32_t  PMU_SLEEP_REG;                     /*!< (@ 0x500000F4) PMU_SLEEP_REG                                          */
  __IO uint32_t  PMU_TRIM_REG;                      /*!< (@ 0x500000F8) PMU_TRIM_REG                                           */
  __IO uint32_t  STARTUP_STATUS_REG;                /*!< (@ 0x500000FC) STARTUP_STATUS_REG                                     */
} CRG_TOP_Type;
/* ================================================================================ */
/* ================                    CRG_XTAL                    ================ */
/* ================================================================================ */
/**
  * @brief CRG_XTAL registers (CRG_XTAL)
  */
typedef struct {                                    /*!< (@ 0x50010000) CRG_XTAL Structure                                     */
  __IO uint32_t  CLK_FREQ_TRIM_REG;                 /*!< (@ 0x50010000) Xtal frequency trimming register.                      */
  __I  uint32_t  RESERVED[2];
  __IO uint32_t  XTAL32M_TRSTAT_REG;                /*!< (@ 0x5001000C) Read back value of current XTAL trimming               */
  __IO uint32_t  TRIM_CTRL_REG;                     /*!< (@ 0x50010010) Control trimming of the XTAL32M                        */
  __I  uint32_t  RESERVED1;
  __IO uint32_t  XTALRDY_CTRL_REG;                  /*!< (@ 0x50010018) Control register for XTALRDY IRQ                       */
  __IO uint32_t  XTALRDY_STAT_REG;                  /*!< (@ 0x5001001C) Difference between XTAL_OK and XTALRDY_IRQ in
                                                         LP clock cycles                                                       */
  __I  uint32_t  RESERVED2[4];
  __IO uint32_t  XTAL32M_CTRL0_REG;                 /*!< (@ 0x50010030) Control register for XTAL32M                           */
  __IO uint32_t  XTAL32M_CTRL1_REG;                 /*!< (@ 0x50010034) Control register for XTAL32M                           */
  __IO uint32_t  XTAL32M_CTRL2_REG;                 /*!< (@ 0x50010038) Control register for XTAL32M                           */
  __IO uint32_t  XTAL32M_CTRL3_REG;                 /*!< (@ 0x5001003C) Control register for XTAL32M                           */
  __IO uint32_t  XTAL32M_CTRL4_REG;                 /*!< (@ 0x50010040) Control register for XTAL32M                           */
  __I  uint32_t  RESERVED3[3];
  __IO uint32_t  XTAL32M_STAT0_REG;                 /*!< (@ 0x50010050) Status register for XTAL32M                            */
  __IO uint32_t  XTAL32M_STAT1_REG;                 /*!< (@ 0x50010054) Status register for XTAL32M                            */
  __I  uint32_t  RESERVED4[2];
  __IO uint32_t  PLL_SYS_CTRL1_REG;                 /*!< (@ 0x50010060) System PLL control register 1.                         */
  __IO uint32_t  PLL_SYS_CTRL2_REG;                 /*!< (@ 0x50010064) System PLL control register 2.                         */
  __IO uint32_t  PLL_SYS_CTRL3_REG;                 /*!< (@ 0x50010068) System PLL control register 3.                         */
  __I  uint32_t  RESERVED5;
  __IO uint32_t  PLL_SYS_STATUS_REG;                /*!< (@ 0x50010070) System PLL status register.                            */
  __I  uint32_t  RESERVED6[3];
  __IO uint32_t  PLL96M_CTRL1_REG;                  /*!< (@ 0x50010080) System PLL control register 2                          */
  __IO uint32_t  PLL96M_CTRL2_REG;                  /*!< (@ 0x50010084) System PLL control register 1                          */
  __IO uint32_t  PLL96M_CTRL3_REG;                  /*!< (@ 0x50010088) System PLL control register 3                          */
  __IO uint32_t  PLL96M_STATUS1_REG;                /*!< (@ 0x5001008C) System PLL status register 1                           */
  __IO uint32_t  PLL96M_STATUS2_REG;                /*!< (@ 0x50010090) System PLL status register 2                           */
} CRG_XTAL_Type;
/* ================================================================================ */
/* ================                      DCDC                      ================ */
/* ================================================================================ */
/**
  * @brief DCDC registers (DCDC)
  */
typedef struct {                                    /*!< (@ 0x50000300) DCDC Structure                                         */
  __I  uint32_t  RESERVED;
  __IO uint32_t  DCDC_CTRL1_REG;                    /*!< (@ 0x50000304) DCDC First Control Register                            */
  __IO uint32_t  DCDC_CTRL2_REG;                    /*!< (@ 0x50000308) DCDC Second Control Register                           */
  __IO uint32_t  DCDC_V14_REG;                      /*!< (@ 0x5000030C) DCDC V14 Control Register                              */
  __IO uint32_t  DCDC_VDD_REG;                      /*!< (@ 0x50000310) DCDC VDD Control Register                              */
  __IO uint32_t  DCDC_V18_REG;                      /*!< (@ 0x50000314) DCDC V18 Control Register                              */
  __IO uint32_t  DCDC_V18P_REG;                     /*!< (@ 0x50000318) DCDC V18P Control Register                             */
  __IO uint32_t  DCDC_TEST_REG;                     /*!< (@ 0x5000031C) DCDC Test Register                                     */
  __IO uint32_t  DCDC_STATUS1_REG;                  /*!< (@ 0x50000320) DCDC First Status Register                             */
  __IO uint32_t  DCDC_STATUS2_REG;                  /*!< (@ 0x50000324) DCDC Second Status Register                            */
  __IO uint32_t  DCDC_STATUS3_REG;                  /*!< (@ 0x50000328) DCDC Third Status Register                             */
  __IO uint32_t  DCDC_STATUS4_REG;                  /*!< (@ 0x5000032C) DCDC Fourth Status Register                            */
  __IO uint32_t  DCDC_IRQ_STATUS_REG;               /*!< (@ 0x50000330) DCDC Interrupt Status Register                         */
  __IO uint32_t  DCDC_IRQ_CLEAR_REG;                /*!< (@ 0x50000334) DCDC Interrupt Clear Register                          */
  __IO uint32_t  DCDC_IRQ_MASK_REG;                 /*!< (@ 0x50000338) DCDC Interrupt Clear Register                          */
} DCDC_Type;
/* ================================================================================ */
/* ================                       DEM                      ================ */
/* ================================================================================ */
/**
  * @brief DEM registers (DEM)
  */
typedef struct {                                    /*!< (@ 0x40021000) DEM Structure                                          */
  __IO uint32_t  RF_DEM_CTRL_REG;                   /*!< (@ 0x40021000) RF_DEM_CTRL_REG                                        */
  __IO uint32_t  RF_AGC_LUT_0123_REG;               /*!< (@ 0x40021004) RF_AGC_LUT_0123_REG                                    */
  __IO uint32_t  RF_AGC_LUT_4567_REG;               /*!< (@ 0x40021008) RF_AGC_LUT_4567_REG                                    */
  __IO uint32_t  RF_AGC_LUT_89AB_REG;               /*!< (@ 0x4002100C) RF_AGC_LUT_89AB_REG                                    */
  __IO uint32_t  RF_AGC_LUT_CDEF_REG;               /*!< (@ 0x40021010) RF_AGC_LUT_CDEF_REG                                    */
  __I  uint32_t  RESERVED;
  __IO uint32_t  RF_AGC_CTRL1_REG;                  /*!< (@ 0x40021018) RF_AGC_CTRL1_REG                                       */
  __IO uint32_t  RF_AGC_CTRL2_REG;                  /*!< (@ 0x4002101C) RF_AGC_CTRL2_REG                                       */
  __IO uint32_t  RF_AFC_CTRL_REG;                   /*!< (@ 0x40021020) RF_AFC_CTRL_REG                                        */
  __IO uint32_t  RF_DC_OFFSET_CTRL1_REG;            /*!< (@ 0x40021024) RF_DC_OFFSET_CTRL1_REG                                 */
  __IO uint32_t  RF_DC_OFFSET_CTRL2_REG;            /*!< (@ 0x40021028) RF_DC_OFFSET_CTRL2_REG                                 */
  __IO uint32_t  RF_DC_OFFSET_CTRL3_REG;            /*!< (@ 0x4002102C) RF_DC_OFFSET_CTRL3_REG                                 */
  __IO uint32_t  RF_DC_OFFSET_CTRL4_REG;            /*!< (@ 0x40021030) RF_DC_OFFSET_CTRL4_REG                                 */
  __IO uint32_t  RF_AGC_RESULT_REG;                 /*!< (@ 0x40021034) RF_AGC_RESULT_REG                                      */
  __IO uint32_t  RF_RSSI_RESULT_REG;                /*!< (@ 0x40021038) RF_RSSI_RESULT_REG                                     */
  __IO uint32_t  RF_DEM_ATTR_REG;                   /*!< (@ 0x4002103C) RF_DEM_ATTR_REG                                        */
  __IO uint32_t  RF_RSSI_COMP_CTRL_REG;             /*!< (@ 0x40021040) RF_RSSI_COMP_CTRL_REG                                  */
  __IO uint32_t  RF_DEM_TESTMODE_REG;               /*!< (@ 0x40021044) RF_DEM_TESTMODE_REG                                    */
  __IO uint32_t  RF_DEM_IQCORRECT_REG;              /*!< (@ 0x40021048) RF_DEM_IQCORRECT_REG                                   */
  __IO uint32_t  RF_PAD_CNT_CTRL_REG;               /*!< (@ 0x4002104C) RF_PAD_CNT_CTRL_REG                                    */
  __IO uint32_t  RF_PAD_CNT_RESULT_REG;             /*!< (@ 0x40021050) RF_PAD_CNT_RESULT_REG                                  */
  __I  uint32_t  RESERVED1;
  __IO uint32_t  RF_DC_OFFSET_RESULT_REG;           /*!< (@ 0x40021058) Must be Retained                                       */
  __IO uint32_t  RF_DC_OFFSET_FULL_RES_REG;         /*!< (@ 0x4002105C) Must be Retained                                       */
  __IO uint32_t  RF_DC_OFFSET_MPAR_RES0_REG;        /*!< (@ 0x40021060) RF_DC_OFFSET_MPAR_RES0_REG                             */
  __IO uint32_t  RF_DC_OFFSET_MPAR_RES1_REG;        /*!< (@ 0x40021064) RF_DC_OFFSET_MPAR_RES1_REG                             */
  __IO uint32_t  RF_DC_OFFSET_MPAR_RES2_REG;        /*!< (@ 0x40021068) RF_DC_OFFSET_MPAR_RES2_REG                             */
  __IO uint32_t  RF_DC_OFFSET_MPAR_RES3_REG;        /*!< (@ 0x4002106C) RF_DC_OFFSET_MPAR_RES3_REG                             */
} DEM_Type;
/* ================================================================================ */
/* ================                       DMA                      ================ */
/* ================================================================================ */
/**
  * @brief DMA registers (DMA)
  */
typedef struct {                                    /*!< (@ 0x50040800) DMA Structure                                          */
  __IO uint32_t  DMA0_A_START_REG;                  /*!< (@ 0x50040800) Start address A of DMA channel 0                       */
  __IO uint32_t  DMA0_B_START_REG;                  /*!< (@ 0x50040804) Start address B of DMA channel 0                       */
  __IO uint32_t  DMA0_INT_REG;                      /*!< (@ 0x50040808) DMA receive interrupt register channel 0               */
  __IO uint32_t  DMA0_LEN_REG;                      /*!< (@ 0x5004080C) DMA receive length register channel 0                  */
  __IO uint32_t  DMA0_CTRL_REG;                     /*!< (@ 0x50040810) Control register for the DMA channel 0                 */
  __IO uint32_t  DMA0_IDX_REG;                      /*!< (@ 0x50040814) Index value of DMA channel 0                           */
  __I  uint32_t  RESERVED[2];
  __IO uint32_t  DMA1_A_START_REG;                  /*!< (@ 0x50040820) Start address A of DMA channel 1                       */
  __IO uint32_t  DMA1_B_START_REG;                  /*!< (@ 0x50040824) Start address B of DMA channel 1                       */
  __IO uint32_t  DMA1_INT_REG;                      /*!< (@ 0x50040828) DMA receive interrupt register channel 1               */
  __IO uint32_t  DMA1_LEN_REG;                      /*!< (@ 0x5004082C) DMA receive length register channel 1                  */
  __IO uint32_t  DMA1_CTRL_REG;                     /*!< (@ 0x50040830) Control register for the DMA channel 1                 */
  __IO uint32_t  DMA1_IDX_REG;                      /*!< (@ 0x50040834) Index value of DMA channel 1                           */
  __I  uint32_t  RESERVED1[2];
  __IO uint32_t  DMA2_A_START_REG;                  /*!< (@ 0x50040840) Start address A of DMA channel 2                       */
  __IO uint32_t  DMA2_B_START_REG;                  /*!< (@ 0x50040844) Start address B of DMA channel 2                       */
  __IO uint32_t  DMA2_INT_REG;                      /*!< (@ 0x50040848) DMA receive interrupt register channel 2               */
  __IO uint32_t  DMA2_LEN_REG;                      /*!< (@ 0x5004084C) DMA receive length register channel 2                  */
  __IO uint32_t  DMA2_CTRL_REG;                     /*!< (@ 0x50040850) Control register for the DMA channel 2                 */
  __IO uint32_t  DMA2_IDX_REG;                      /*!< (@ 0x50040854) Index value of DMA channel 2                           */
  __I  uint32_t  RESERVED2[2];
  __IO uint32_t  DMA3_A_START_REG;                  /*!< (@ 0x50040860) Start address A of DMA channel 3                       */
  __IO uint32_t  DMA3_B_START_REG;                  /*!< (@ 0x50040864) Start address B of DMA channel 3                       */
  __IO uint32_t  DMA3_INT_REG;                      /*!< (@ 0x50040868) DMA receive interrupt register channel 3               */
  __IO uint32_t  DMA3_LEN_REG;                      /*!< (@ 0x5004086C) DMA receive length register channel 3                  */
  __IO uint32_t  DMA3_CTRL_REG;                     /*!< (@ 0x50040870) Control register for the DMA channel 3                 */
  __IO uint32_t  DMA3_IDX_REG;                      /*!< (@ 0x50040874) Index value of DMA channel 3                           */
  __I  uint32_t  RESERVED3[2];
  __IO uint32_t  DMA4_A_START_REG;                  /*!< (@ 0x50040880) Start address A of DMA channel 4                       */
  __IO uint32_t  DMA4_B_START_REG;                  /*!< (@ 0x50040884) Start address B of DMA channel 4                       */
  __IO uint32_t  DMA4_INT_REG;                      /*!< (@ 0x50040888) DMA receive interrupt register channel 4               */
  __IO uint32_t  DMA4_LEN_REG;                      /*!< (@ 0x5004088C) DMA receive length register channel 4                  */
  __IO uint32_t  DMA4_CTRL_REG;                     /*!< (@ 0x50040890) Control register for the DMA channel 4                 */
  __IO uint32_t  DMA4_IDX_REG;                      /*!< (@ 0x50040894) Index value of DMA channel 4                           */
  __I  uint32_t  RESERVED4[2];
  __IO uint32_t  DMA5_A_START_REG;                  /*!< (@ 0x500408A0) Start address A of DMA channel 5                       */
  __IO uint32_t  DMA5_B_START_REG;                  /*!< (@ 0x500408A4) Start address B of DMA channel 5                       */
  __IO uint32_t  DMA5_INT_REG;                      /*!< (@ 0x500408A8) DMA receive interrupt register channel 5               */
  __IO uint32_t  DMA5_LEN_REG;                      /*!< (@ 0x500408AC) DMA receive length register channel 5                  */
  __IO uint32_t  DMA5_CTRL_REG;                     /*!< (@ 0x500408B0) Control register for the DMA channel 5                 */
  __IO uint32_t  DMA5_IDX_REG;                      /*!< (@ 0x500408B4) Index value of DMA channel 5                           */
  __I  uint32_t  RESERVED5[2];
  __IO uint32_t  DMA6_A_START_REG;                  /*!< (@ 0x500408C0) Start address A of DMA channel 6                       */
  __IO uint32_t  DMA6_B_START_REG;                  /*!< (@ 0x500408C4) Start address B of DMA channel 6                       */
  __IO uint32_t  DMA6_INT_REG;                      /*!< (@ 0x500408C8) DMA receive interrupt register channel 6               */
  __IO uint32_t  DMA6_LEN_REG;                      /*!< (@ 0x500408CC) DMA receive length register channel 6                  */
  __IO uint32_t  DMA6_CTRL_REG;                     /*!< (@ 0x500408D0) Control register for the DMA channel 6                 */
  __IO uint32_t  DMA6_IDX_REG;                      /*!< (@ 0x500408D4) Index value of DMA channel 6                           */
  __I  uint32_t  RESERVED6[2];
  __IO uint32_t  DMA7_A_START_REG;                  /*!< (@ 0x500408E0) Start address A of DMA channel 7                       */
  __IO uint32_t  DMA7_B_START_REG;                  /*!< (@ 0x500408E4) Start address B of DMA channel 7                       */
  __IO uint32_t  DMA7_INT_REG;                      /*!< (@ 0x500408E8) DMA receive interrupt register channel 7               */
  __IO uint32_t  DMA7_LEN_REG;                      /*!< (@ 0x500408EC) DMA receive length register channel 7                  */
  __IO uint32_t  DMA7_CTRL_REG;                     /*!< (@ 0x500408F0) Control register for the DMA channel 7                 */
  __IO uint32_t  DMA7_IDX_REG;                      /*!< (@ 0x500408F4) Index value of DMA channel 7                           */
  __I  uint32_t  RESERVED7[2];
  __IO uint32_t  DMA_REQ_MUX_REG;                   /*!< (@ 0x50040900) DMA channel assignments                                */
  __IO uint32_t  DMA_INT_STATUS_REG;                /*!< (@ 0x50040904) DMA interrupt status register                          */
  __IO uint32_t  DMA_CLEAR_INT_REG;                 /*!< (@ 0x50040908) DMA clear interrupt register                           */
  __IO uint32_t  DMA_INT_MASK_REG;                  /*!< (@ 0x5004090C) DMA Interrupt mask register                            */
} DMA_Type;
/* ================================================================================ */
/* ================                       DW                       ================ */
/* ================================================================================ */
/**
  * @brief DW registers (DW)
  */
typedef struct {                                    /*!< (@ 0x30020000) DW Structure                                           */
  __IO uint32_t  AHB_DMA_PL1_REG;                   /*!< (@ 0x30020000) AHB-DMA layer priority level for RFTP (AHB DMA
                                                         layer only)                                                           */
  __IO uint32_t  AHB_DMA_PL2_REG;                   /*!< (@ 0x30020004) AHB-DMA layer priority level for LCD (AHB DMA
                                                         layer only)                                                           */
  __IO uint32_t  AHB_DMA_PL3_REG;                   /*!< (@ 0x30020008) AHB-DMA layer Priority level for GEN-DMA (AHB
                                                         DMA layer only)                                                       */
  __IO uint32_t  AHB_DMA_PL4_REG;                   /*!< (@ 0x3002000C) AHB-DMA layer Priority level for CRYPTO-DMA (AHB
                                                         DMA layer only)                                                       */
  __I  uint32_t  RESERVED[14];
  __IO uint32_t  AHB_DMA_DFLT_MASTER_REG;           /*!< (@ 0x30020048) Default master ID number (AHB DMA layer only)          */
  __IO uint32_t  AHB_DMA_WTEN_REG;                  /*!< (@ 0x3002004C) Weighted-Token Arbitration Scheme Enable (AHB
                                                         DMA layer only)                                                       */
  __IO uint32_t  AHB_DMA_TCL_REG;                   /*!< (@ 0x30020050) Master clock refresh period (AHB DMA layer only)       */
  __IO uint32_t  AHB_DMA_CCLM1_REG;                 /*!< (@ 0x30020054) USB Master clock tokens (AHB DMA layer only)           */
  __IO uint32_t  AHB_DMA_CCLM2_REG;                 /*!< (@ 0x30020058) GenDMA Master clock tokens (AHB DMA layer only)        */
  __IO uint32_t  AHB_DMA_CCLM3_REG;                 /*!< (@ 0x3002005C) CRYPTO Master clock tokens (AHB DMA layer only)        */
  __IO uint32_t  AHB_DMA_CCLM4_REG;                 /*!< (@ 0x30020060) CRYPTO Master clock tokens (AHB DMA layer only)        */
  __I  uint32_t  RESERVED1[11];
  __IO uint32_t  AHB_DMA_VERSION_REG;               /*!< (@ 0x30020090) Version ID (AHB DMA layer only)                        */
} DW_Type;
/* ================================================================================ */
/* ================                      GPADC                     ================ */
/* ================================================================================ */
/**
  * @brief GPADC registers (GPADC)
  */
typedef struct {                                    /*!< (@ 0x50030900) GPADC Structure                                        */
  __IO uint32_t  GP_ADC_CTRL_REG;                   /*!< (@ 0x50030900) General Purpose ADC Control Register                   */
  __IO uint32_t  GP_ADC_CTRL2_REG;                  /*!< (@ 0x50030904) General Purpose ADC Second Control Register            */
  __IO uint32_t  GP_ADC_CTRL3_REG;                  /*!< (@ 0x50030908) General Purpose ADC Third Control Register             */
  __IO uint32_t  GP_ADC_OFFP_REG;                   /*!< (@ 0x5003090C) General Purpose ADC Positive Offset Register           */
  __IO uint32_t  GP_ADC_OFFN_REG;                   /*!< (@ 0x50030910) General Purpose ADC Negative Offset Register           */
  __IO uint32_t  GP_ADC_CLEAR_INT_REG;              /*!< (@ 0x50030914) General Purpose ADC Clear Interrupt Register           */
  __IO uint32_t  GP_ADC_RESULT_REG;                 /*!< (@ 0x50030918) General Purpose ADC Result Register                    */
} GPADC_Type;
/* ================================================================================ */
/* ================                      GPIO                      ================ */
/* ================================================================================ */
/**
  * @brief GPIO registers (GPIO)
  */
typedef struct {                                    /*!< (@ 0x50020A00) GPIO Structure                                         */
  __IO uint32_t  P0_DATA_REG;                       /*!< (@ 0x50020A00) P0 Data input / output Register                        */
  __IO uint32_t  P1_DATA_REG;                       /*!< (@ 0x50020A04) P1 Data input / output Register                        */
  __IO uint32_t  P0_SET_DATA_REG;                   /*!< (@ 0x50020A08) P0 Set port pins Register                              */
  __IO uint32_t  P1_SET_DATA_REG;                   /*!< (@ 0x50020A0C) P1 Set port pins Register                              */
  __IO uint32_t  P0_RESET_DATA_REG;                 /*!< (@ 0x50020A10) P0 Reset port pins Register                            */
  __IO uint32_t  P1_RESET_DATA_REG;                 /*!< (@ 0x50020A14) P1 Reset port pins Register                            */
  __IO uint32_t  P0_00_MODE_REG;                    /*!< (@ 0x50020A18) P0_00 Mode Register                                    */
  __IO uint32_t  P0_01_MODE_REG;                    /*!< (@ 0x50020A1C) P0_01 Mode Register                                    */
  __IO uint32_t  P0_02_MODE_REG;                    /*!< (@ 0x50020A20) P0_02 Mode Register                                    */
  __IO uint32_t  P0_03_MODE_REG;                    /*!< (@ 0x50020A24) P0_03 Mode Register                                    */
  __IO uint32_t  P0_04_MODE_REG;                    /*!< (@ 0x50020A28) P0_04 Mode Register                                    */
  __IO uint32_t  P0_05_MODE_REG;                    /*!< (@ 0x50020A2C) P0_05 Mode Register                                    */
  __IO uint32_t  P0_06_MODE_REG;                    /*!< (@ 0x50020A30) P0_06 Mode Register                                    */
  __IO uint32_t  P0_07_MODE_REG;                    /*!< (@ 0x50020A34) P0_07 Mode Register                                    */
  __IO uint32_t  P0_08_MODE_REG;                    /*!< (@ 0x50020A38) P0_08 Mode Register                                    */
  __IO uint32_t  P0_09_MODE_REG;                    /*!< (@ 0x50020A3C) P0_09 Mode Register                                    */
  __IO uint32_t  P0_10_MODE_REG;                    /*!< (@ 0x50020A40) P0_10 Mode Register                                    */
  __IO uint32_t  P0_11_MODE_REG;                    /*!< (@ 0x50020A44) P0_11 Mode Register                                    */
  __IO uint32_t  P0_12_MODE_REG;                    /*!< (@ 0x50020A48) P0_12 Mode Register                                    */
  __IO uint32_t  P0_13_MODE_REG;                    /*!< (@ 0x50020A4C) P0_13 Mode Register                                    */
  __IO uint32_t  P0_14_MODE_REG;                    /*!< (@ 0x50020A50) P0_14 Mode Register                                    */
  __IO uint32_t  P0_15_MODE_REG;                    /*!< (@ 0x50020A54) P0_15 Mode Register                                    */
  __IO uint32_t  P0_16_MODE_REG;                    /*!< (@ 0x50020A58) P0_16 Mode Register                                    */
  __IO uint32_t  P0_17_MODE_REG;                    /*!< (@ 0x50020A5C) P0_17 Mode Register                                    */
  __IO uint32_t  P0_18_MODE_REG;                    /*!< (@ 0x50020A60) P0_18 Mode Register                                    */
  __IO uint32_t  P0_19_MODE_REG;                    /*!< (@ 0x50020A64) P0_19 Mode Register                                    */
  __IO uint32_t  P0_20_MODE_REG;                    /*!< (@ 0x50020A68) P0_20 Mode Register                                    */
  __IO uint32_t  P0_21_MODE_REG;                    /*!< (@ 0x50020A6C) P0_21 Mode Register                                    */
  __IO uint32_t  P0_22_MODE_REG;                    /*!< (@ 0x50020A70) P0_22 Mode Register                                    */
  __IO uint32_t  P0_23_MODE_REG;                    /*!< (@ 0x50020A74) P0_23 Mode Register                                    */
  __IO uint32_t  P0_24_MODE_REG;                    /*!< (@ 0x50020A78) P0_24 Mode Register                                    */
  __IO uint32_t  P0_25_MODE_REG;                    /*!< (@ 0x50020A7C) P0_25 Mode Register                                    */
  __IO uint32_t  P0_26_MODE_REG;                    /*!< (@ 0x50020A80) P0_26 Mode Register                                    */
  __IO uint32_t  P0_27_MODE_REG;                    /*!< (@ 0x50020A84) P0_27 Mode Register                                    */
  __IO uint32_t  P0_28_MODE_REG;                    /*!< (@ 0x50020A88) P0_28 Mode Register                                    */
  __IO uint32_t  P0_29_MODE_REG;                    /*!< (@ 0x50020A8C) P0_29 Mode Register                                    */
  __IO uint32_t  P0_30_MODE_REG;                    /*!< (@ 0x50020A90) P0_30 Mode Register                                    */
  __IO uint32_t  P0_31_MODE_REG;                    /*!< (@ 0x50020A94) P0_31 Mode Register                                    */
  __IO uint32_t  P1_00_MODE_REG;                    /*!< (@ 0x50020A98) P1_00 Mode Register                                    */
  __IO uint32_t  P1_01_MODE_REG;                    /*!< (@ 0x50020A9C) P1_01 Mode Register                                    */
  __IO uint32_t  P1_02_MODE_REG;                    /*!< (@ 0x50020AA0) P1_02 Mode Register                                    */
  __IO uint32_t  P1_03_MODE_REG;                    /*!< (@ 0x50020AA4) P1_03 Mode Register                                    */
  __IO uint32_t  P1_04_MODE_REG;                    /*!< (@ 0x50020AA8) P1_04 Mode Register                                    */
  __IO uint32_t  P1_05_MODE_REG;                    /*!< (@ 0x50020AAC) P1_05 Mode Register                                    */
  __IO uint32_t  P1_06_MODE_REG;                    /*!< (@ 0x50020AB0) P1_06 Mode Register                                    */
  __IO uint32_t  P1_07_MODE_REG;                    /*!< (@ 0x50020AB4) P1_07 Mode Register                                    */
  __IO uint32_t  P1_08_MODE_REG;                    /*!< (@ 0x50020AB8) P1_08 Mode Register                                    */
  __IO uint32_t  P1_09_MODE_REG;                    /*!< (@ 0x50020ABC) P1_09 Mode Register                                    */
  __IO uint32_t  P1_10_MODE_REG;                    /*!< (@ 0x50020AC0) P1_10 Mode Register                                    */
  __IO uint32_t  P1_11_MODE_REG;                    /*!< (@ 0x50020AC4) P1_11 Mode Register                                    */
  __IO uint32_t  P1_12_MODE_REG;                    /*!< (@ 0x50020AC8) P1_12 Mode Register                                    */
  __IO uint32_t  P1_13_MODE_REG;                    /*!< (@ 0x50020ACC) P1_13 Mode Register                                    */
  __IO uint32_t  P1_14_MODE_REG;                    /*!< (@ 0x50020AD0) P1_14 Mode Register                                    */
  __IO uint32_t  P1_15_MODE_REG;                    /*!< (@ 0x50020AD4) P1_15 Mode Register                                    */
  __IO uint32_t  P1_16_MODE_REG;                    /*!< (@ 0x50020AD8) P1_16 Mode Register                                    */
  __IO uint32_t  P1_17_MODE_REG;                    /*!< (@ 0x50020ADC) P1_17 Mode Register                                    */
  __IO uint32_t  P1_18_MODE_REG;                    /*!< (@ 0x50020AE0) P1_18 Mode Register                                    */
  __IO uint32_t  P1_19_MODE_REG;                    /*!< (@ 0x50020AE4) P1_19 Mode Register                                    */
  __IO uint32_t  P1_20_MODE_REG;                    /*!< (@ 0x50020AE8) P1_20 Mode Register                                    */
  __IO uint32_t  P1_21_MODE_REG;                    /*!< (@ 0x50020AEC) P1_21 Mode Register                                    */
  __IO uint32_t  P1_22_MODE_REG;                    /*!< (@ 0x50020AF0) P1_22 Mode Register                                    */
  __IO uint32_t  P0_PADPWR_CTRL_REG;                /*!< (@ 0x50020AF4) P0 Output Power Control Register                       */
  __IO uint32_t  P1_PADPWR_CTRL_REG;                /*!< (@ 0x50020AF8) P1 Output Power Control Register                       */
  __IO uint32_t  GPIO_CLK_SEL_REG;                  /*!< (@ 0x50020AFC) Select which clock to map on ports P0/P1               */
  __IO uint32_t  PAD_WEAK_CTRL_REG;                 /*!< (@ 0x50020B00) Weak Pads Control Register                             */
  __IO uint32_t  BIST_CTRL_REG;                     /*!< (@ 0x50020B04) Memory BIST Control Register                           */
  __IO uint32_t  RAMBIST_STATUS1_REG;               /*!< (@ 0x50020B08) RAM BIST Status Register                               */
  __IO uint32_t  RAMBIST_STATUS2_REG;               /*!< (@ 0x50020B0C) RAM BIST Status Register 2                             */
  __IO uint32_t  RAMBIST_STATUS3_REG;               /*!< (@ 0x50020B10) RAM BIST Status Register 3                             */
  __IO uint32_t  ROMBIST_RESULTL_REG;               /*!< (@ 0x50020B14) ROM BIST Status Register - 16 LSBs                     */
  __IO uint32_t  ROMBIST_RESULTH_REG;               /*!< (@ 0x50020B18) ROM BIST Status Register - 16 MSBs                     */
  __IO uint32_t  TEST_CTRL_REG;                     /*!< (@ 0x50020B1C) Test Control Register                                  */
  __IO uint32_t  TEST_CTRL2_REG;                    /*!< (@ 0x50020B20) Test Control Register 2                                */
  __IO uint32_t  TEST_CTRL3_REG;                    /*!< (@ 0x50020B24) Test Control Register 3                                */
  __IO uint32_t  TEST_CTRL4_REG;                    /*!< (@ 0x50020B28) Test Control Register 4                                */
  __IO uint32_t  TEST_CTRL5_REG;                    /*!< (@ 0x50020B2C) Test Control Register 5                                */
} GPIO_Type;
/* ================================================================================ */
/* ================                      GPREG                     ================ */
/* ================================================================================ */
/**
  * @brief GPREG registers (GPREG)
  */
typedef struct {                                    /*!< (@ 0x50040300) GPREG Structure                                        */
  __IO uint32_t  SET_FREEZE_REG;                    /*!< (@ 0x50040300) Controls freezing of various timers/counters
                                                         (incl. DMA and USB).                                                  */
  __IO uint32_t  RESET_FREEZE_REG;                  /*!< (@ 0x50040304) Controls unfreezing of various timers/counters
                                                         (incl. DMA and USB).                                                  */
  __IO uint32_t  DEBUG_REG;                         /*!< (@ 0x50040308) Various debug information register.                    */
  __IO uint32_t  GP_STATUS_REG;                     /*!< (@ 0x5004030C) General purpose system status register.                */
  __IO uint32_t  GP_CONTROL_REG;                    /*!< (@ 0x50040310) General purpose system control register.               */
  __I  uint32_t  RESERVED;
  __IO uint32_t  USBPAD_REG;                        /*!< (@ 0x50040318) USB pads control register                              */
} GPREG_Type;
/* ================================================================================ */
/* ================                       I2C                      ================ */
/* ================================================================================ */
/**
  * @brief I2C registers (I2C)
  */
typedef struct {                                    /*!< (@ 0x50020600) I2C Structure                                          */
  __IO uint32_t  I2C_CON_REG;                       /*!< (@ 0x50020600) I2C Control Register                                   */
  __IO uint32_t  I2C_TAR_REG;                       /*!< (@ 0x50020604) I2C Target Address Register                            */
  __IO uint32_t  I2C_SAR_REG;                       /*!< (@ 0x50020608) I2C Slave Address Register                             */
  __IO uint32_t  I2C_HS_MADDR_REG;                  /*!< (@ 0x5002060C) I2C High Speed Master Mode Code Address Register       */
  __IO uint32_t  I2C_DATA_CMD_REG;                  /*!< (@ 0x50020610) I2C Rx/Tx Data Buffer and Command Register             */
  __IO uint32_t  I2C_SS_SCL_HCNT_REG;               /*!< (@ 0x50020614) Standard Speed I2C Clock SCL High Count Register       */
  __IO uint32_t  I2C_SS_SCL_LCNT_REG;               /*!< (@ 0x50020618) Standard Speed I2C Clock SCL Low Count Register        */
  __IO uint32_t  I2C_FS_SCL_HCNT_REG;               /*!< (@ 0x5002061C) Fast Speed I2C Clock SCL High Count Register           */
  __IO uint32_t  I2C_FS_SCL_LCNT_REG;               /*!< (@ 0x50020620) Fast Speed I2C Clock SCL Low Count Register            */
  __IO uint32_t  I2C_HS_SCL_HCNT_REG;               /*!< (@ 0x50020624) High Speed I2C Clock SCL High Count Register           */
  __IO uint32_t  I2C_HS_SCL_LCNT_REG;               /*!< (@ 0x50020628) High Speed I2C Clock SCL Low Count Register            */
  __IO uint32_t  I2C_INTR_STAT_REG;                 /*!< (@ 0x5002062C) I2C Interrupt Status Register                          */
  __IO uint32_t  I2C_INTR_MASK_REG;                 /*!< (@ 0x50020630) I2C Interrupt Mask Register                            */
  __IO uint32_t  I2C_RAW_INTR_STAT_REG;             /*!< (@ 0x50020634) I2C Raw Interrupt Status Register                      */
  __IO uint32_t  I2C_RX_TL_REG;                     /*!< (@ 0x50020638) I2C Receive FIFO Threshold Register                    */
  __IO uint32_t  I2C_TX_TL_REG;                     /*!< (@ 0x5002063C) I2C Transmit FIFO Threshold Register                   */
  __IO uint32_t  I2C_CLR_INTR_REG;                  /*!< (@ 0x50020640) Clear Combined and Individual Interrupt Register       */
  __IO uint32_t  I2C_CLR_RX_UNDER_REG;              /*!< (@ 0x50020644) Clear RX_UNDER Interrupt Register                      */
  __IO uint32_t  I2C_CLR_RX_OVER_REG;               /*!< (@ 0x50020648) Clear RX_OVER Interrupt Register                       */
  __IO uint32_t  I2C_CLR_TX_OVER_REG;               /*!< (@ 0x5002064C) Clear TX_OVER Interrupt Register                       */
  __IO uint32_t  I2C_CLR_RD_REQ_REG;                /*!< (@ 0x50020650) Clear RD_REQ Interrupt Register                        */
  __IO uint32_t  I2C_CLR_TX_ABRT_REG;               /*!< (@ 0x50020654) Clear TX_ABRT Interrupt Register                       */
  __IO uint32_t  I2C_CLR_RX_DONE_REG;               /*!< (@ 0x50020658) Clear RX_DONE Interrupt Register                       */
  __IO uint32_t  I2C_CLR_ACTIVITY_REG;              /*!< (@ 0x5002065C) Clear ACTIVITY Interrupt Register                      */
  __IO uint32_t  I2C_CLR_STOP_DET_REG;              /*!< (@ 0x50020660) Clear STOP_DET Interrupt Register                      */
  __IO uint32_t  I2C_CLR_START_DET_REG;             /*!< (@ 0x50020664) Clear START_DET Interrupt Register                     */
  __IO uint32_t  I2C_CLR_GEN_CALL_REG;              /*!< (@ 0x50020668) Clear GEN_CALL Interrupt Register                      */
  __IO uint32_t  I2C_ENABLE_REG;                    /*!< (@ 0x5002066C) I2C Enable Register                                    */
  __IO uint32_t  I2C_STATUS_REG;                    /*!< (@ 0x50020670) I2C Status Register                                    */
  __IO uint32_t  I2C_TXFLR_REG;                     /*!< (@ 0x50020674) I2C Transmit FIFO Level Register                       */
  __IO uint32_t  I2C_RXFLR_REG;                     /*!< (@ 0x50020678) I2C Receive FIFO Level Register                        */
  __IO uint32_t  I2C_SDA_HOLD_REG;                  /*!< (@ 0x5002067C) I2C SDA Hold Time Length Register                      */
  __IO uint32_t  I2C_TX_ABRT_SOURCE_REG;            /*!< (@ 0x50020680) I2C Transmit Abort Source Register                     */
  __I  uint32_t  RESERVED;
  __IO uint32_t  I2C_DMA_CR_REG;                    /*!< (@ 0x50020688) DMA Control Register                                   */
  __IO uint32_t  I2C_DMA_TDLR_REG;                  /*!< (@ 0x5002068C) DMA Transmit Data Level Register                       */
  __IO uint32_t  I2C_DMA_RDLR_REG;                  /*!< (@ 0x50020690) I2C Receive Data Level Register                        */
  __IO uint32_t  I2C_SDA_SETUP_REG;                 /*!< (@ 0x50020694) I2C SDA Setup Register                                 */
  __IO uint32_t  I2C_ACK_GENERAL_CALL_REG;          /*!< (@ 0x50020698) I2C ACK General Call Register                          */
  __IO uint32_t  I2C_ENABLE_STATUS_REG;             /*!< (@ 0x5002069C) I2C Enable Status Register                             */
  __IO uint32_t  I2C_IC_FS_SPKLEN_REG;              /*!< (@ 0x500206A0) I2C SS and FS spike suppression limit Size             */
  __IO uint32_t  I2C_IC_HS_SPKLEN_REG;              /*!< (@ 0x500206A4) I2C HS spike suppression limit Size                    */
  __I  uint32_t  RESERVED1[19];
  __IO uint32_t  I2C_COMP_PARAM1_REG;               /*!< (@ 0x500206F4) Component Parameter Register                           */
  __IO uint32_t  I2C_COMP_VERSION_REG;              /*!< (@ 0x500206F8) I2C Component Version Register                         */
  __IO uint32_t  I2C_COMP_TYPE_REG;                 /*!< (@ 0x500206FC) I2C Component Type Register                            */
} I2C_Type;
/* ================================================================================ */
/* ================                      I2C2                      ================ */
/* ================================================================================ */
/**
  * @brief I2C2 registers (I2C2)
  */
typedef struct {                                    /*!< (@ 0x50020700) I2C2 Structure                                         */
  __IO uint32_t  I2C2_CON_REG;                      /*!< (@ 0x50020700) I2C Control Register                                   */
  __IO uint32_t  I2C2_TAR_REG;                      /*!< (@ 0x50020704) I2C Target Address Register                            */
  __IO uint32_t  I2C2_SAR_REG;                      /*!< (@ 0x50020708) I2C Slave Address Register                             */
  __IO uint32_t  I2C2_HS_MADDR_REG;                 /*!< (@ 0x5002070C) I2C High Speed Master Mode Code Address Register       */
  __IO uint32_t  I2C2_DATA_CMD_REG;                 /*!< (@ 0x50020710) I2C Rx/Tx Data Buffer and Command Register             */
  __IO uint32_t  I2C2_SS_SCL_HCNT_REG;              /*!< (@ 0x50020714) Standard Speed I2C Clock SCL High Count Register       */
  __IO uint32_t  I2C2_SS_SCL_LCNT_REG;              /*!< (@ 0x50020718) Standard Speed I2C Clock SCL Low Count Register        */
  __IO uint32_t  I2C2_FS_SCL_HCNT_REG;              /*!< (@ 0x5002071C) Fast Speed I2C Clock SCL High Count Register           */
  __IO uint32_t  I2C2_FS_SCL_LCNT_REG;              /*!< (@ 0x50020720) Fast Speed I2C Clock SCL Low Count Register            */
  __IO uint32_t  I2C2_HS_SCL_HCNT_REG;              /*!< (@ 0x50020724) High Speed I2C Clock SCL High Count Register           */
  __IO uint32_t  I2C2_HS_SCL_LCNT_REG;              /*!< (@ 0x50020728) High Speed I2C Clock SCL Low Count Register            */
  __IO uint32_t  I2C2_INTR_STAT_REG;                /*!< (@ 0x5002072C) I2C Interrupt Status Register                          */
  __IO uint32_t  I2C2_INTR_MASK_REG;                /*!< (@ 0x50020730) I2C Interrupt Mask Register                            */
  __IO uint32_t  I2C2_RAW_INTR_STAT_REG;            /*!< (@ 0x50020734) I2C Raw Interrupt Status Register                      */
  __IO uint32_t  I2C2_RX_TL_REG;                    /*!< (@ 0x50020738) I2C Receive FIFO Threshold Register                    */
  __IO uint32_t  I2C2_TX_TL_REG;                    /*!< (@ 0x5002073C) I2C Transmit FIFO Threshold Register                   */
  __IO uint32_t  I2C2_CLR_INTR_REG;                 /*!< (@ 0x50020740) Clear Combined and Individual Interrupt Register       */
  __IO uint32_t  I2C2_CLR_RX_UNDER_REG;             /*!< (@ 0x50020744) Clear RX_UNDER Interrupt Register                      */
  __IO uint32_t  I2C2_CLR_RX_OVER_REG;              /*!< (@ 0x50020748) Clear RX_OVER Interrupt Register                       */
  __IO uint32_t  I2C2_CLR_TX_OVER_REG;              /*!< (@ 0x5002074C) Clear TX_OVER Interrupt Register                       */
  __IO uint32_t  I2C2_CLR_RD_REQ_REG;               /*!< (@ 0x50020750) Clear RD_REQ Interrupt Register                        */
  __IO uint32_t  I2C2_CLR_TX_ABRT_REG;              /*!< (@ 0x50020754) Clear TX_ABRT Interrupt Register                       */
  __IO uint32_t  I2C2_CLR_RX_DONE_REG;              /*!< (@ 0x50020758) Clear RX_DONE Interrupt Register                       */
  __IO uint32_t  I2C2_CLR_ACTIVITY_REG;             /*!< (@ 0x5002075C) Clear ACTIVITY Interrupt Register                      */
  __IO uint32_t  I2C2_CLR_STOP_DET_REG;             /*!< (@ 0x50020760) Clear STOP_DET Interrupt Register                      */
  __IO uint32_t  I2C2_CLR_START_DET_REG;            /*!< (@ 0x50020764) Clear START_DET Interrupt Register                     */
  __IO uint32_t  I2C2_CLR_GEN_CALL_REG;             /*!< (@ 0x50020768) Clear GEN_CALL Interrupt Register                      */
  __IO uint32_t  I2C2_ENABLE_REG;                   /*!< (@ 0x5002076C) I2C Enable Register                                    */
  __IO uint32_t  I2C2_STATUS_REG;                   /*!< (@ 0x50020770) I2C Status Register                                    */
  __IO uint32_t  I2C2_TXFLR_REG;                    /*!< (@ 0x50020774) I2C Transmit FIFO Level Register                       */
  __IO uint32_t  I2C2_RXFLR_REG;                    /*!< (@ 0x50020778) I2C Receive FIFO Level Register                        */
  __IO uint32_t  I2C2_SDA_HOLD_REG;                 /*!< (@ 0x5002077C) I2C SDA Hold Time Length Register                      */
  __IO uint32_t  I2C2_TX_ABRT_SOURCE_REG;           /*!< (@ 0x50020780) I2C Transmit Abort Source Register                     */
  __I  uint32_t  RESERVED;
  __IO uint32_t  I2C2_DMA_CR_REG;                   /*!< (@ 0x50020788) DMA Control Register                                   */
  __IO uint32_t  I2C2_DMA_TDLR_REG;                 /*!< (@ 0x5002078C) DMA Transmit Data Level Register                       */
  __IO uint32_t  I2C2_DMA_RDLR_REG;                 /*!< (@ 0x50020790) I2C Receive Data Level Register                        */
  __IO uint32_t  I2C2_SDA_SETUP_REG;                /*!< (@ 0x50020794) I2C SDA Setup Register                                 */
  __IO uint32_t  I2C2_ACK_GENERAL_CALL_REG;         /*!< (@ 0x50020798) I2C ACK General Call Register                          */
  __IO uint32_t  I2C2_ENABLE_STATUS_REG;            /*!< (@ 0x5002079C) I2C Enable Status Register                             */
  __IO uint32_t  I2C2_IC_FS_SPKLEN_REG;             /*!< (@ 0x500207A0) I2C SS and FS spike suppression limit Size             */
  __IO uint32_t  I2C2_IC_HS_SPKLEN_REG;             /*!< (@ 0x500207A4) I2C HS spike suppression limit Size                    */
  __I  uint32_t  RESERVED1[19];
  __IO uint32_t  I2C2_COMP_PARAM1_REG;              /*!< (@ 0x500207F4) Component Parameter Register                           */
  __IO uint32_t  I2C2_COMP_VERSION_REG;             /*!< (@ 0x500207F8) I2C Component Version Register                         */
  __IO uint32_t  I2C2_COMP_TYPE_REG;                /*!< (@ 0x500207FC) I2C Component Type Register                            */
} I2C2_Type;
/* ================================================================================ */
/* ================                      LCDC                      ================ */
/* ================================================================================ */
/**
  * @brief LCDC registers (LCDC)
  */
typedef struct {                                    /*!< (@ 0x30030000) LCDC Structure                                         */
  __IO uint32_t  LCDC_MODE_REG;                     /*!< (@ 0x30030000) Display Mode                                           */
  __IO uint32_t  LCDC_CLKCTRL_REG;                  /*!< (@ 0x30030004) Clock Divider                                          */
  __IO uint32_t  LCDC_BGCOLOR_REG;                  /*!< (@ 0x30030008) Background Color                                       */
  __IO uint32_t  LCDC_RESXY_REG;                    /*!< (@ 0x3003000C) Resolution X,Y                                         */
  __I  uint32_t  RESERVED;
  __IO uint32_t  LCDC_FRONTPORCHXY_REG;             /*!< (@ 0x30030014) Front Porch X and Y                                    */
  __IO uint32_t  LCDC_BLANKINGXY_REG;               /*!< (@ 0x30030018) Blanking X and Y                                       */
  __IO uint32_t  LCDC_BACKPORCHXY_REG;              /*!< (@ 0x3003001C) Back Porch X and Y                                     */
  __I  uint32_t  RESERVED1[2];
  __IO uint32_t  LCDC_DBIB_CFG_REG;                 /*!< (@ 0x30030028) MIPI Config Register                                   */
  __IO uint32_t  LCDC_GPIO_REG;                     /*!< (@ 0x3003002C) General Purpose IO (2-bits)                            */
  __IO uint32_t  LCDC_LAYER0_MODE_REG;              /*!< (@ 0x30030030) Layer0 Mode                                            */
  __IO uint32_t  LCDC_LAYER0_STARTXY_REG;           /*!< (@ 0x30030034) Layer0 Start XY                                        */
  __IO uint32_t  LCDC_LAYER0_SIZEXY_REG;            /*!< (@ 0x30030038) Layer0 Size XY                                         */
  __IO uint32_t  LCDC_LAYER0_BASEADDR_REG;          /*!< (@ 0x3003003C) Layer0 Base Addr                                       */
  __IO uint32_t  LCDC_LAYER0_STRIDE_REG;            /*!< (@ 0x30030040) Layer0 Stride                                          */
  __IO uint32_t  LCDC_LAYER0_RESXY_REG;             /*!< (@ 0x30030044) Layer0 Res XY                                          */
  __I  uint32_t  RESERVED2[18];
  __IO uint32_t  LCDC_JDI_RESXY_REG;                /*!< (@ 0x30030090) Resolution XY for the JDI parallel I/F                 */
  __IO uint32_t  LCDC_JDI_FBX_BLANKING_REG;         /*!< (@ 0x30030094) Horizontal front/back blanking (hck half periods)      */
  __IO uint32_t  LCDC_JDI_FBY_BLANKING_REG;         /*!< (@ 0x30030098) Vertical front/back blanking (vck half periods)        */
  __IO uint32_t  LCDC_JDI_HCK_WIDTH_REG;            /*!< (@ 0x3003009C) HCK high/low width                                     */
  __IO uint32_t  LCDC_JDI_XRST_WIDTH_REG;           /*!< (@ 0x300300A0) XRST width                                             */
  __IO uint32_t  LCDC_JDI_VST_DELAY_REG;            /*!< (@ 0x300300A4) XRST-to-VST delay                                      */
  __IO uint32_t  LCDC_JDI_VST_WIDTH_REG;            /*!< (@ 0x300300A8) VST width                                              */
  __IO uint32_t  LCDC_JDI_VCK_DELAY_REG;            /*!< (@ 0x300300AC) XRST-to-VCK delay                                      */
  __IO uint32_t  LCDC_JDI_HST_DELAY_REG;            /*!< (@ 0x300300B0) VCK-to-HST delay                                       */
  __IO uint32_t  LCDC_JDI_HST_WIDTH_REG;            /*!< (@ 0x300300B4) HST width                                              */
  __IO uint32_t  LCDC_JDI_ENB_START_HLINE_REG;      /*!< (@ 0x300300B8) ENB start horizontal line                              */
  __IO uint32_t  LCDC_JDI_ENB_END_HLINE_REG;        /*!< (@ 0x300300BC) ENB end horizontal line                                */
  __IO uint32_t  LCDC_JDI_ENB_START_CLK_REG;        /*!< (@ 0x300300C0) ENB start delay                                        */
  __IO uint32_t  LCDC_JDI_ENB_WIDTH_CLK_REG;        /*!< (@ 0x300300C4) ENB width                                              */
  __I  uint32_t  RESERVED3[8];
  __IO uint32_t  LCDC_DBIB_CMD_REG;                 /*!< (@ 0x300300E8) MIPI DBIB Command Register                             */
  __I  uint32_t  RESERVED4[2];
  __IO uint32_t  LCDC_IDREG_REG;                    /*!< (@ 0x300300F4) Identification Register                                */
  __IO uint32_t  LCDC_INTERRUPT_REG;                /*!< (@ 0x300300F8) Interrupt Register                                     */
  __IO uint32_t  LCDC_STATUS_REG;                   /*!< (@ 0x300300FC) Status Register                                        */
  __I  uint32_t  RESERVED5[33];
  __IO uint32_t  LCDC_CRC_REG;                      /*!< (@ 0x30030184) CRC check                                              */
  __IO uint32_t  LCDC_LAYER0_OFFSETX_REG;           /*!< (@ 0x30030188) Layer0 OffsetX and DMA prefetch                        */
} LCDC_Type;
/* ================================================================================ */
/* ================                       LRA                      ================ */
/* ================================================================================ */
/**
  * @brief LRA registers (LRA)
  */
typedef struct {                                    /*!< (@ 0x50030A00) LRA Structure                                          */
  __IO uint32_t  LRA_CTRL1_REG;                     /*!< (@ 0x50030A00) General Purpose LRA Control Register                   */
  __IO uint32_t  LRA_CTRL2_REG;                     /*!< (@ 0x50030A04) General Purpose LRA Control Register                   */
  __IO uint32_t  LRA_CTRL3_REG;                     /*!< (@ 0x50030A08) General Purpose LRA Control Register                   */
  __IO uint32_t  LRA_FLT_SMP1_REG;                  /*!< (@ 0x50030A0C) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP2_REG;                  /*!< (@ 0x50030A10) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP3_REG;                  /*!< (@ 0x50030A14) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP4_REG;                  /*!< (@ 0x50030A18) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP5_REG;                  /*!< (@ 0x50030A1C) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP6_REG;                  /*!< (@ 0x50030A20) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP7_REG;                  /*!< (@ 0x50030A24) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_SMP8_REG;                  /*!< (@ 0x50030A28) LRA Sample Register                                    */
  __IO uint32_t  LRA_FLT_COEF1_REG;                 /*!< (@ 0x50030A2C) LRA Filter Coefficient Register                        */
  __IO uint32_t  LRA_FLT_COEF2_REG;                 /*!< (@ 0x50030A30) LRA Filter Coefficient Register                        */
  __IO uint32_t  LRA_FLT_COEF3_REG;                 /*!< (@ 0x50030A34) LRA Filter Coefficient Register                        */
  __IO uint32_t  LRA_BRD_LS_REG;                    /*!< (@ 0x50030A38) LRA_BRD_LS_REG                                         */
  __IO uint32_t  LRA_BRD_HS_REG;                    /*!< (@ 0x50030A3C) LRA_BRD_HS_REG                                         */
  __IO uint32_t  LRA_BRD_STAT_REG;                  /*!< (@ 0x50030A40) LRA_BRD_STAT_REG                                       */
  __IO uint32_t  LRA_ADC_CTRL1_REG;                 /*!< (@ 0x50030A44) General Purpose ADC Control Register                   */
  __IO uint32_t  LRA_ADC_CTRL2_REG;                 /*!< (@ 0x50030A48) Haptic Feedback Driver Current Sense ADC Control
                                                         Register 2                                                            */
  __IO uint32_t  LRA_ADC_CTRL3_REG;                 /*!< (@ 0x50030A4C) Haptic Feedback Driver Current Sense ADC Control
                                                         Register 3                                                            */
  __IO uint32_t  LRA_ADC_RESULT_REG;                /*!< (@ 0x50030A50) General Purpose ADC Result Register                    */
  __IO uint32_t  LRA_LDO_REG;                       /*!< (@ 0x50030A54) LRA LDO Regsiter                                       */
  __IO uint32_t  LRA_DFT_REG;                       /*!< (@ 0x50030A58) LRA test Register                                      */
} LRA_Type;
/* ================================================================================ */
/* ================                     MEMCTRL                    ================ */
/* ================================================================================ */
/**
  * @brief MEMCTRL registers (MEMCTRL)
  */
typedef struct {                                    /*!< (@ 0x50050000) MEMCTRL Structure                                      */
  __IO uint32_t  MEM_CTRL_REG;                      /*!< (@ 0x50050000) MEM_CTRL_REG                                           */
  __IO uint32_t  MEM_PRIO_REG;                      /*!< (@ 0x50050004) MEM_PRIO_REG                                           */
  __IO uint32_t  MEM_STALL_REG;                     /*!< (@ 0x50050008) MEM_STALL_REG                                          */
  __IO uint32_t  MEM_STATUS_REG;                    /*!< (@ 0x5005000C) MEM_STATUS_REG                                         */
  __IO uint32_t  MEM_STATUS2_REG;                   /*!< (@ 0x50050010) MEM_STATUS2_REG                                        */
  __I  uint32_t  RESERVED[3];
  __IO uint32_t  CMI_CODE_BASE_REG;                 /*!< (@ 0x50050020) CMI_CODE_BASE_REG                                      */
  __IO uint32_t  CMI_DATA_BASE_REG;                 /*!< (@ 0x50050024) CMI_DATA_BASE_REG                                      */
  __IO uint32_t  CMI_SHARED_BASE_REG;               /*!< (@ 0x50050028) CMI_SHARED_BASE_REG                                    */
  __IO uint32_t  CMI_END_REG;                       /*!< (@ 0x5005002C) CMI_END_REG                                            */
  __IO uint32_t  SNC_BASE_REG;                      /*!< (@ 0x50050030) SNC_BASE_REG                                           */
  __I  uint32_t  RESERVED1[16];
  __IO uint32_t  BUSY_SET_REG;                      /*!< (@ 0x50050074) BUSY_SET_REG                                           */
  __IO uint32_t  BUSY_RESET_REG;                    /*!< (@ 0x50050078) BUSY_RESET_REG                                         */
  __IO uint32_t  BUSY_STAT_REG;                     /*!< (@ 0x5005007C) BUSY_STAT_REG                                          */
} MEMCTRL_Type;
/* ================================================================================ */
/* ================                      OTPC                      ================ */
/* ================================================================================ */
/**
  * @brief OTPC registers (OTPC)
  */
typedef struct {                                    /*!< (@ 0x30070000) OTPC Structure                                         */
  __IO uint32_t  OTPC_MODE_REG;                     /*!< (@ 0x30070000) Mode register                                          */
  __IO uint32_t  OTPC_STAT_REG;                     /*!< (@ 0x30070004) Status register                                        */
  __IO uint32_t  OTPC_PADDR_REG;                    /*!< (@ 0x30070008) The address of the word that will be programmed,
                                                         when the PROG mode is used.                                           */
  __IO uint32_t  OTPC_PWORD_REG;                    /*!< (@ 0x3007000C) The 32-bit word that will be programmed, when
                                                         the PROG mode is used.                                                */
  __IO uint32_t  OTPC_TIM1_REG;                     /*!< (@ 0x30070010) Various timing parameters of the OTP cell.             */
  __IO uint32_t  OTPC_TIM2_REG;                     /*!< (@ 0x30070014) Various timing parameters of the OTP cell.             */
} OTPC_Type;
/* ================================================================================ */
/* ================                      PATCH                     ================ */
/* ================================================================================ */
/**
  * @brief PATCH registers (PATCH)
  */
typedef struct {                                    /*!< (@ 0x30090000) PATCH Structure                                        */
  __IO uint32_t  PATCH_VALID_REG;                   /*!< (@ 0x30090000) Validity Control Register                              */
  __I  uint32_t  RESERVED[7];
  __IO uint32_t  PATCH_ADDR0_REG;                   /*!< (@ 0x30090020) Patch Address field                                    */
  __I  uint32_t  RESERVED1;
  __IO uint32_t  PATCH_ADDR1_REG;                   /*!< (@ 0x30090028) Patch Address field                                    */
  __I  uint32_t  RESERVED2;
  __IO uint32_t  PATCH_ADDR2_REG;                   /*!< (@ 0x30090030) Patch Address field                                    */
  __I  uint32_t  RESERVED3;
  __IO uint32_t  PATCH_ADDR3_REG;                   /*!< (@ 0x30090038) Patch Address field                                    */
  __I  uint32_t  RESERVED4;
  __IO uint32_t  PATCH_ADDR4_REG;                   /*!< (@ 0x30090040) Patch Address field                                    */
  __I  uint32_t  RESERVED5;
  __IO uint32_t  PATCH_ADDR5_REG;                   /*!< (@ 0x30090048) Patch Address field                                    */
  __I  uint32_t  RESERVED6;
  __IO uint32_t  PATCH_ADDR6_REG;                   /*!< (@ 0x30090050) Patch Address field                                    */
  __I  uint32_t  RESERVED7;
  __IO uint32_t  PATCH_ADDR7_REG;                   /*!< (@ 0x30090058) Patch Address field                                    */
  __I  uint32_t  RESERVED8;
  __IO uint32_t  PATCH_ADDR8_REG;                   /*!< (@ 0x30090060) Patch Address field                                    */
  __I  uint32_t  RESERVED9;
  __IO uint32_t  PATCH_ADDR9_REG;                   /*!< (@ 0x30090068) Patch Address field                                    */
  __I  uint32_t  RESERVED10;
  __IO uint32_t  PATCH_ADDR10_REG;                  /*!< (@ 0x30090070) Patch Address field                                    */
  __I  uint32_t  RESERVED11;
  __IO uint32_t  PATCH_ADDR11_REG;                  /*!< (@ 0x30090078) Patch Address field                                    */
  __I  uint32_t  RESERVED12;
  __IO uint32_t  PATCH_ADDR12_REG;                  /*!< (@ 0x30090080) Patch Address field                                    */
  __I  uint32_t  RESERVED13;
  __IO uint32_t  PATCH_ADDR13_REG;                  /*!< (@ 0x30090088) Patch Address field                                    */
  __I  uint32_t  RESERVED14;
  __IO uint32_t  PATCH_ADDR14_REG;                  /*!< (@ 0x30090090) Patch Address field                                    */
  __I  uint32_t  RESERVED15;
  __IO uint32_t  PATCH_ADDR15_REG;                  /*!< (@ 0x30090098) Patch Address field                                    */
  __I  uint32_t  RESERVED16;
  __IO uint32_t  PATCH_ADDR16_REG;                  /*!< (@ 0x300900A0) Patch Address field                                    */
  __I  uint32_t  RESERVED17;
  __IO uint32_t  PATCH_ADDR17_REG;                  /*!< (@ 0x300900A8) Patch Address field                                    */
  __I  uint32_t  RESERVED18;
  __IO uint32_t  PATCH_ADDR18_REG;                  /*!< (@ 0x300900B0) Patch Address field                                    */
  __I  uint32_t  RESERVED19;
  __IO uint32_t  PATCH_ADDR19_REG;                  /*!< (@ 0x300900B8) Patch Address field                                    */
  __I  uint32_t  RESERVED20;
  __IO uint32_t  PATCH_ADDR20_REG;                  /*!< (@ 0x300900C0) Patch Address field                                    */
  __IO uint32_t  PATCH_DATA20_REG;                  /*!< (@ 0x300900C4) Patch Data field                                       */
  __IO uint32_t  PATCH_ADDR21_REG;                  /*!< (@ 0x300900C8) Patch Address field                                    */
  __IO uint32_t  PATCH_DATA21_REG;                  /*!< (@ 0x300900CC) Patch Data field                                       */
} PATCH_Type;
/* ================================================================================ */
/* ================                       PDC                      ================ */
/* ================================================================================ */
/**
  * @brief PDC registers (PDC)
  */
typedef struct {                                    /*!< (@ 0x50000200) PDC Structure                                          */
  __IO uint32_t  PDC_CTRL0_REG;                     /*!< (@ 0x50000200) PDC control register                                   */
  __IO uint32_t  PDC_CTRL1_REG;                     /*!< (@ 0x50000204) PDC control register                                   */
  __IO uint32_t  PDC_CTRL2_REG;                     /*!< (@ 0x50000208) PDC control register                                   */
  __IO uint32_t  PDC_CTRL3_REG;                     /*!< (@ 0x5000020C) PDC control register                                   */
  __IO uint32_t  PDC_CTRL4_REG;                     /*!< (@ 0x50000210) PDC control register                                   */
  __IO uint32_t  PDC_CTRL5_REG;                     /*!< (@ 0x50000214) PDC control register                                   */
  __IO uint32_t  PDC_CTRL6_REG;                     /*!< (@ 0x50000218) PDC control register                                   */
  __IO uint32_t  PDC_CTRL7_REG;                     /*!< (@ 0x5000021C) PDC control register                                   */
  __IO uint32_t  PDC_CTRL8_REG;                     /*!< (@ 0x50000220) PDC control register                                   */
  __IO uint32_t  PDC_CTRL9_REG;                     /*!< (@ 0x50000224) PDC control register                                   */
  __IO uint32_t  PDC_CTRL10_REG;                    /*!< (@ 0x50000228) PDC control register                                   */
  __IO uint32_t  PDC_CTRL11_REG;                    /*!< (@ 0x5000022C) PDC control register                                   */
  __IO uint32_t  PDC_CTRL12_REG;                    /*!< (@ 0x50000230) PDC control register                                   */
  __IO uint32_t  PDC_CTRL13_REG;                    /*!< (@ 0x50000234) PDC control register                                   */
  __IO uint32_t  PDC_CTRL14_REG;                    /*!< (@ 0x50000238) PDC control register                                   */
  __IO uint32_t  PDC_CTRL15_REG;                    /*!< (@ 0x5000023C) PDC control register                                   */
  __I  uint32_t  RESERVED[16];
  __IO uint32_t  PDC_ACKNOWLEDGE_REG;               /*!< (@ 0x50000280) Clear a pending PDC bit                                */
  __IO uint32_t  PDC_PENDING_REG;                   /*!< (@ 0x50000284) Shows any pending wakup event                          */
  __IO uint32_t  PDC_PENDING_SNC_REG;               /*!< (@ 0x50000288) Shows any pending IRQ to SNC                           */
  __IO uint32_t  PDC_PENDING_CM33_REG;              /*!< (@ 0x5000028C) Shows any pending IRQ to CM33                          */
  __IO uint32_t  PDC_PENDING_CMAC_REG;              /*!< (@ 0x50000290) Shows any pending IRQ to CM33                          */
  __IO uint32_t  PDC_SET_PENDING_REG;               /*!< (@ 0x50000294) Set a pending PDC bit                                  */
} PDC_Type;
/* ================================================================================ */
/* ================                     PWMLED                     ================ */
/* ================================================================================ */
/**
  * @brief PWMLED registers (PWMLED)
  */
typedef struct {                                    /*!< (@ 0x50030500) PWMLED Structure                                       */
  __IO uint32_t  PWMLED_DUTY_CYCLE_LED1_REG;        /*!< (@ 0x50030500) Defines duty cycle for PWM1                            */
  __IO uint32_t  PWMLED_DUTY_CYCLE_LED2_REG;        /*!< (@ 0x50030504) Defines duty cycle for PWM2                            */
  __IO uint32_t  PWMLED_FREQUENCY_REG;              /*!< (@ 0x50030508) Defines the PWM frequecny                              */
  __IO uint32_t  PWMLED_CTRL_REG;                   /*!< (@ 0x5003050C) PWM Control register                                   */
} PWMLED_Type;
/* ================================================================================ */
/* ================                      QSPIC                     ================ */
/* ================================================================================ */
/**
  * @brief QSPIC registers (QSPIC)
  */
typedef struct {                                    /*!< (@ 0x38000000) QSPIC Structure                                        */
  __IO uint32_t  QSPIC_CTRLBUS_REG;                 /*!< (@ 0x38000000) SPI Bus control register for the Manual mode           */
  __IO uint32_t  QSPIC_CTRLMODE_REG;                /*!< (@ 0x38000004) Mode Control register                                  */
  __IO uint32_t  QSPIC_RECVDATA_REG;                /*!< (@ 0x38000008) Received data for the Manual mode                      */
  __IO uint32_t  QSPIC_BURSTCMDA_REG;               /*!< (@ 0x3800000C) The way of reading in Auto mode (command register
                                                         A)                                                                    */
  __IO uint32_t  QSPIC_BURSTCMDB_REG;               /*!< (@ 0x38000010) The way of reading in Auto mode (command register
                                                         B)                                                                    */
  __IO uint32_t  QSPIC_STATUS_REG;                  /*!< (@ 0x38000014) The status register of the QSPI controller             */
  __IO uint32_t  QSPIC_WRITEDATA_REG;               /*!< (@ 0x38000018) Write data to SPI Bus for the Manual mode              */
  __IO uint32_t  QSPIC_READDATA_REG;                /*!< (@ 0x3800001C) Read data from SPI Bus for the Manual mode             */
  __IO uint32_t  QSPIC_DUMMYDATA_REG;               /*!< (@ 0x38000020) Send dummy clocks to SPI Bus for the Manual mode       */
  __IO uint32_t  QSPIC_ERASECTRL_REG;               /*!< (@ 0x38000024) QSPI Erase control register                            */
  __IO uint32_t  QSPIC_ERASECMDA_REG;               /*!< (@ 0x38000028) The way of erasing in Auto mode (command register
                                                         A)                                                                    */
  __IO uint32_t  QSPIC_ERASECMDB_REG;               /*!< (@ 0x3800002C) The way of erasing in Auto mode (command register
                                                         B)                                                                    */
  __IO uint32_t  QSPIC_BURSTBRK_REG;                /*!< (@ 0x38000030) Read break sequence in Auto mode                       */
  __IO uint32_t  QSPIC_STATUSCMD_REG;               /*!< (@ 0x38000034) The way of reading the status of external device
                                                         in Auto mode                                                          */
  __IO uint32_t  QSPIC_CHCKERASE_REG;               /*!< (@ 0x38000038) Check erase progress in Auto mode                      */
  __IO uint32_t  QSPIC_GP_REG;                      /*!< (@ 0x3800003C) QSPI General Purpose control register                  */
  __IO uint32_t  QSPIC_UCODE_START;                 /*!< (@ 0x38000040) QSPIC uCode memory                                     */
  __I  uint32_t  RESERVED[15];
  __IO uint32_t  QSPIC_CTR_CTRL_REG;                /*!< (@ 0x38000080) Control register for the decryption engine of
                                                         the QSPIC                                                             */
  __IO uint32_t  QSPIC_CTR_SADDR_REG;               /*!< (@ 0x38000084) Start address of the encrypted content in the
                                                         QSPI flash                                                            */
  __IO uint32_t  QSPIC_CTR_EADDR_REG;               /*!< (@ 0x38000088) End address of the encrypted content in the QSPI
                                                         flash                                                                 */
  __IO uint32_t  QSPIC_CTR_NONCE_0_3_REG;           /*!< (@ 0x3800008C) Nonce bytes 0 to 3 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_NONCE_4_7_REG;           /*!< (@ 0x38000090) Nonce bytes 4 to 7 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_KEY_0_3_REG;             /*!< (@ 0x38000094) Key bytes 0 to 3 for the AES-CTR algorithm             */
  __IO uint32_t  QSPIC_CTR_KEY_4_7_REG;             /*!< (@ 0x38000098) Key bytes 4 to 7 for the AES-CTR algorithm             */
  __IO uint32_t  QSPIC_CTR_KEY_8_11_REG;            /*!< (@ 0x3800009C) Key bytes 8 to 11 for the AES-CTR algorithm            */
  __IO uint32_t  QSPIC_CTR_KEY_12_15_REG;           /*!< (@ 0x380000A0) Key bytes 12 to 15 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_KEY_16_19_REG;           /*!< (@ 0x380000A4) Key bytes 16 to 19 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_KEY_20_23_REG;           /*!< (@ 0x380000A8) Key bytes 20 to 23 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_KEY_24_27_REG;           /*!< (@ 0x380000AC) Key bytes 24 to 27 for the AES-CTR algorithm           */
  __IO uint32_t  QSPIC_CTR_KEY_28_31_REG;           /*!< (@ 0x380000B0) Key bytes 28 to 31 for the AES-CTR algorithm           */
} QSPIC_Type;
/* ================================================================================ */
/* ================                     QSPIC2                     ================ */
/* ================================================================================ */
/**
  * @brief QSPIC2 registers (QSPIC2)
  */
typedef struct {                                    /*!< (@ 0x34000000) QSPIC2 Structure                                       */
  __IO uint32_t  QSPIC2_CTRLBUS_REG;                /*!< (@ 0x34000000) SPI Bus control register for the Manual mode           */
  __IO uint32_t  QSPIC2_CTRLMODE_REG;               /*!< (@ 0x34000004) Mode control register                                  */
  __IO uint32_t  QSPIC2_RECVDATA_REG;               /*!< (@ 0x34000008) Received data for the Manual mode                      */
  __IO uint32_t  QSPIC2_BURSTCMDA_REG;              /*!< (@ 0x3400000C) The way of reading in Auto mode (command register
                                                         A)                                                                    */
  __IO uint32_t  QSPIC2_BURSTCMDB_REG;              /*!< (@ 0x34000010) The way of reading in Auto mode (command register
                                                         B)                                                                    */
  __IO uint32_t  QSPIC2_STATUS_REG;                 /*!< (@ 0x34000014) The status register of the QSPI controller             */
  __IO uint32_t  QSPIC2_WRITEDATA_REG;              /*!< (@ 0x34000018) Write data to SPI Bus for the Manual mode              */
  __IO uint32_t  QSPIC2_READDATA_REG;               /*!< (@ 0x3400001C) Read data from SPI Bus for the Manual mode             */
  __IO uint32_t  QSPIC2_DUMMYDATA_REG;              /*!< (@ 0x34000020) Send dummy clocks to SPI Bus for the Manual mode       */
  __IO uint32_t  QSPIC2_ERASECTRL_REG;              /*!< (@ 0x34000024) Erase control register                                 */
  __IO uint32_t  QSPIC2_ERASECMDA_REG;              /*!< (@ 0x34000028) The way of erasing in Auto mode (command register
                                                         A)                                                                    */
  __IO uint32_t  QSPIC2_ERASECMDB_REG;              /*!< (@ 0x3400002C) The way of erasing in Auto mode (command register
                                                         B)                                                                    */
  __IO uint32_t  QSPIC2_BURSTBRK_REG;               /*!< (@ 0x34000030) Read break sequence in Auto mode                       */
  __IO uint32_t  QSPIC2_STATUSCMD_REG;              /*!< (@ 0x34000034) The way of reading the status of external device
                                                         in Auto mode                                                          */
  __IO uint32_t  QSPIC2_CHCKERASE_REG;              /*!< (@ 0x34000038) Check erase progress in Auto mode                      */
  __IO uint32_t  QSPIC2_GP_REG;                     /*!< (@ 0x3400003C) General purpose QSPIC2 register                        */
  __IO uint32_t  QSPIC2_AWRITECMD_REG;              /*!< (@ 0x34000040) The way of writing in Auto mode when the external
                                                         device is a serial SRAM                                               */
  __IO uint32_t  QSPIC2_MEMBLEN_REG;                /*!< (@ 0x34000044) External memory burst length configuration             */
} QSPIC2_Type;
/* ================================================================================ */
/* ================                      RFCU                      ================ */
/* ================================================================================ */
/**
  * @brief RFCU registers (RFCU)
  */
typedef struct {                                    /*!< (@ 0x40020000) RFCU Structure                                         */
  __IO uint32_t  RF_ATTR_REG;                       /*!< (@ 0x40020000) Radio attributes register                              */
  __IO uint32_t  RF_RADIO_INIT_REG;                 /*!< (@ 0x40020004) Radio initialization register                          */
  __IO uint32_t  RF_LDO_STATUS_REG;                 /*!< (@ 0x40020008) Read out value of LDO enables                          */
  __IO uint32_t  RF_ADPLLDIG_CTRL_REG;              /*!< (@ 0x4002000C) Adplldig specific settings register                    */
  __IO uint32_t  RF_AGC_EXT_LUT_REG;                /*!< (@ 0x40020010) AGC_LUT register                                       */
  __IO uint32_t  RF_CALSTATE_REG;                   /*!< (@ 0x40020014) cal_state read-out register                            */
  __IO uint32_t  RF_SCAN_FEEDBACK_REG;              /*!< (@ 0x40020018) scan feedback register                                 */
  __IO uint32_t  RF_REF_OSC_REG;                    /*!< (@ 0x4002001C) RF_REF_OSC_REG                                         */
  __IO uint32_t  RF_CAL_CTRL_REG;                   /*!< (@ 0x40020020) Calibration FSM control                                */
  __IO uint32_t  RF_IRQ_CTRL_REG;                   /*!< (@ 0x40020024) IRQ clear register                                     */
  __IO uint32_t  RF_ADCI_DC_OFFSET_REG;             /*!< (@ 0x40020028) Must be Retained                                       */
  __IO uint32_t  RF_ADCQ_DC_OFFSET_REG;             /*!< (@ 0x4002002C) Must be Retained                                       */
  __IO uint32_t  RF_SPARE_REG;                      /*!< (@ 0x40020030) Spare register for radio                               */
  __I  uint32_t  RESERVED[2];
  __IO uint32_t  RF_IFF_CTRL_REG;                   /*!< (@ 0x4002003C) IFF control register                                   */
  __IO uint32_t  RF_ADC_CTRL1_REG;                  /*!< (@ 0x40020040) ADC control register                                   */
  __IO uint32_t  RF_ADC_CTRL2_REG;                  /*!< (@ 0x40020044) ADC control register                                   */
  __IO uint32_t  RF_ADC_CTRL3_REG;                  /*!< (@ 0x40020048) ADC control register                                   */
  __IO uint32_t  RF_PA_CTRL_REG;                    /*!< (@ 0x4002004C) PA control register                                    */
  __I  uint32_t  RESERVED1[2];
  __IO uint32_t  RF_LDO_VREF_SEL_REG;               /*!< (@ 0x40020058) Vref sel control register                              */
  __I  uint32_t  RESERVED2[2];
  __IO uint32_t  RF_MIXER_CTRL1_REG;                /*!< (@ 0x40020064) Mixer control register                                 */
  __IO uint32_t  RF_MIXER_CTRL2_REG;                /*!< (@ 0x40020068) Mixer control register                                 */
  __I  uint32_t  RESERVED3[2];
  __IO uint32_t  RF_IO_CTRL_REG;                    /*!< (@ 0x40020074) IO control register                                    */
  __IO uint32_t  RF_LNA_CTRL1_REG;                  /*!< (@ 0x40020078) LNA control register                                   */
  __IO uint32_t  RF_LNA_CTRL2_REG;                  /*!< (@ 0x4002007C) LNA control register                                   */
  __IO uint32_t  RF_LNA_CTRL3_REG;                  /*!< (@ 0x40020080) LNA control register                                   */
  __I  uint32_t  RESERVED4[3];
  __IO uint32_t  RF_IFF_RESULT_REG;                 /*!< (@ 0x40020090) Not retained                                           */
  __IO uint32_t  RF_IFF_CC_SET_REG;                 /*!< (@ 0x40020094) Must be retained                                       */
  __IO uint32_t  RF_IFF_CAL_CAP_STAT_REG;           /*!< (@ 0x40020098) Current CAL_CAP value applied to the IF                */
  __IO uint32_t  RF_MIX_CAL_CAP_STAT_REG;           /*!< (@ 0x4002009C) Current CAL_CAP value applied to the Mixer             */
  __IO uint32_t  RF_ADPLLDIG_RFMON_CTRL_REG;        /*!< (@ 0x400200A0) Settings for the ADPLLDIG RFMON block                  */
  __IO uint32_t  RF_RDP_CTRL_REG;                   /*!< (@ 0x400200A4) Exposed radio mode control register                    */
  __IO uint32_t  RF_RFCU_CTRL_REG;                  /*!< (@ 0x400200A8) RFCU control register                                  */
  __IO uint32_t  RF_OVERRULE_REG;                   /*!< (@ 0x400200AC) Overrule register                                      */
} RFCU_Type;
/* ================================================================================ */
/* ================                   RFCU_POWER                   ================ */
/* ================================================================================ */
/**
  * @brief RFCU_POWER registers (RFCU_POWER)
  */
typedef struct {                                    /*!< (@ 0x40020200) RFCU_POWER Structure                                   */
  __IO uint32_t  RF_ENABLE_CONFIG0_REG;             /*!< (@ 0x40020200) RF_ENABLE_CONFIG0_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG1_REG;             /*!< (@ 0x40020204) RF_ENABLE_CONFIG1_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG2_REG;             /*!< (@ 0x40020208) RF_ENABLE_CONFIG2_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG3_REG;             /*!< (@ 0x4002020C) RF_ENABLE_CONFIG3_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG4_REG;             /*!< (@ 0x40020210) RF_ENABLE_CONFIG4_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG5_REG;             /*!< (@ 0x40020214) RF_ENABLE_CONFIG5_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG6_REG;             /*!< (@ 0x40020218) RF_ENABLE_CONFIG6_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG7_REG;             /*!< (@ 0x4002021C) RF_ENABLE_CONFIG7_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG8_REG;             /*!< (@ 0x40020220) RF_ENABLE_CONFIG8_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG9_REG;             /*!< (@ 0x40020224) RF_ENABLE_CONFIG9_REG                                  */
  __IO uint32_t  RF_ENABLE_CONFIG10_REG;            /*!< (@ 0x40020228) RF_ENABLE_CONFIG10_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG11_REG;            /*!< (@ 0x4002022C) RF_ENABLE_CONFIG11_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG12_REG;            /*!< (@ 0x40020230) RF_ENABLE_CONFIG12_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG13_REG;            /*!< (@ 0x40020234) RF_ENABLE_CONFIG13_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG14_REG;            /*!< (@ 0x40020238) RF_ENABLE_CONFIG14_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG15_REG;            /*!< (@ 0x4002023C) RF_ENABLE_CONFIG15_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG16_REG;            /*!< (@ 0x40020240) RF_ENABLE_CONFIG16_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG17_REG;            /*!< (@ 0x40020244) RF_ENABLE_CONFIG17_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG18_REG;            /*!< (@ 0x40020248) RF_ENABLE_CONFIG18_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG19_REG;            /*!< (@ 0x4002024C) RF_ENABLE_CONFIG19_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG20_REG;            /*!< (@ 0x40020250) RF_ENABLE_CONFIG20_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG21_REG;            /*!< (@ 0x40020254) RF_ENABLE_CONFIG21_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG22_REG;            /*!< (@ 0x40020258) RF_ENABLE_CONFIG22_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG23_REG;            /*!< (@ 0x4002025C) RF_ENABLE_CONFIG23_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG24_REG;            /*!< (@ 0x40020260) RF_ENABLE_CONFIG24_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG25_REG;            /*!< (@ 0x40020264) RF_ENABLE_CONFIG25_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG26_REG;            /*!< (@ 0x40020268) RF_ENABLE_CONFIG26_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG27_REG;            /*!< (@ 0x4002026C) RF_ENABLE_CONFIG27_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG28_REG;            /*!< (@ 0x40020270) RF_ENABLE_CONFIG28_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG29_REG;            /*!< (@ 0x40020274) RF_ENABLE_CONFIG29_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG30_REG;            /*!< (@ 0x40020278) RF_ENABLE_CONFIG30_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG31_REG;            /*!< (@ 0x4002027C) RF_ENABLE_CONFIG31_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG32_REG;            /*!< (@ 0x40020280) RF_ENABLE_CONFIG32_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG33_REG;            /*!< (@ 0x40020284) RF_ENABLE_CONFIG33_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG34_REG;            /*!< (@ 0x40020288) RF_ENABLE_CONFIG34_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG35_REG;            /*!< (@ 0x4002028C) RF_ENABLE_CONFIG35_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG36_REG;            /*!< (@ 0x40020290) RF_ENABLE_CONFIG36_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG37_REG;            /*!< (@ 0x40020294) RF_ENABLE_CONFIG37_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG38_REG;            /*!< (@ 0x40020298) RF_ENABLE_CONFIG38_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG39_REG;            /*!< (@ 0x4002029C) RF_ENABLE_CONFIG39_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG40_REG;            /*!< (@ 0x400202A0) RF_ENABLE_CONFIG40_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG41_REG;            /*!< (@ 0x400202A4) RF_ENABLE_CONFIG41_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG42_REG;            /*!< (@ 0x400202A8) RF_ENABLE_CONFIG42_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG43_REG;            /*!< (@ 0x400202AC) RF_ENABLE_CONFIG43_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG44_REG;            /*!< (@ 0x400202B0) RF_ENABLE_CONFIG44_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG45_REG;            /*!< (@ 0x400202B4) RF_ENABLE_CONFIG45_REG                                 */
  __IO uint32_t  RF_ENABLE_CONFIG46_REG;            /*!< (@ 0x400202B8) RF_ENABLE_CONFIG46_REG                                 */
  __I  uint32_t  RESERVED[17];
  __IO uint32_t  RF_CNTRL_TIMER_1_REG;              /*!< (@ 0x40020300) RF_CNTRL_TIMER_1_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_2_REG;              /*!< (@ 0x40020304) RF_CNTRL_TIMER_2_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_3_REG;              /*!< (@ 0x40020308) RF_CNTRL_TIMER_3_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_4_REG;              /*!< (@ 0x4002030C) RF_CNTRL_TIMER_4_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_5_REG;              /*!< (@ 0x40020310) RF_CNTRL_TIMER_5_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_6_REG;              /*!< (@ 0x40020314) RF_CNTRL_TIMER_6_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_7_REG;              /*!< (@ 0x40020318) RF_CNTRL_TIMER_7_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_8_REG;              /*!< (@ 0x4002031C) RF_CNTRL_TIMER_8_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_9_REG;              /*!< (@ 0x40020320) RF_CNTRL_TIMER_9_REG                                   */
  __IO uint32_t  RF_CNTRL_TIMER_10_REG;             /*!< (@ 0x40020324) RF_CNTRL_TIMER_10_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_11_REG;             /*!< (@ 0x40020328) RF_CNTRL_TIMER_11_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_12_REG;             /*!< (@ 0x4002032C) RF_CNTRL_TIMER_12_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_13_REG;             /*!< (@ 0x40020330) RF_CNTRL_TIMER_13_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_14_REG;             /*!< (@ 0x40020334) RF_CNTRL_TIMER_14_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_15_REG;             /*!< (@ 0x40020338) RF_CNTRL_TIMER_15_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_16_REG;             /*!< (@ 0x4002033C) RF_CNTRL_TIMER_16_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_17_REG;             /*!< (@ 0x40020340) RF_CNTRL_TIMER_17_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_18_REG;             /*!< (@ 0x40020344) RF_CNTRL_TIMER_18_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_19_REG;             /*!< (@ 0x40020348) RF_CNTRL_TIMER_19_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_20_REG;             /*!< (@ 0x4002034C) RF_CNTRL_TIMER_20_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_21_REG;             /*!< (@ 0x40020350) RF_CNTRL_TIMER_21_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_22_REG;             /*!< (@ 0x40020354) RF_CNTRL_TIMER_22_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_23_REG;             /*!< (@ 0x40020358) RF_CNTRL_TIMER_23_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_24_REG;             /*!< (@ 0x4002035C) RF_CNTRL_TIMER_24_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_25_REG;             /*!< (@ 0x40020360) RF_CNTRL_TIMER_25_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_26_REG;             /*!< (@ 0x40020364) RF_CNTRL_TIMER_26_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_27_REG;             /*!< (@ 0x40020368) RF_CNTRL_TIMER_27_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_28_REG;             /*!< (@ 0x4002036C) RF_CNTRL_TIMER_28_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_29_REG;             /*!< (@ 0x40020370) RF_CNTRL_TIMER_29_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_30_REG;             /*!< (@ 0x40020374) RF_CNTRL_TIMER_30_REG                                  */
  __IO uint32_t  RF_CNTRL_TIMER_31_REG;             /*!< (@ 0x40020378) RF_CNTRL_TIMER_31_REG                                  */
  __I  uint32_t  RESERVED1;
  __IO uint32_t  RF_ALWAYS_EN1_REG;                 /*!< (@ 0x40020380) RF_ALWAYS_EN1_REG                                      */
  __IO uint32_t  RF_ALWAYS_EN2_REG;                 /*!< (@ 0x40020384) RF_ALWAYS_EN2_REG                                      */
  __IO uint32_t  RF_PORT_EN_REG;                    /*!< (@ 0x40020388) RF_PORT_EN_REG                                         */
  __IO uint32_t  RF_PORT_POL_REG;                   /*!< (@ 0x4002038C) RF_PORT_POL_REG                                        */
} RFCU_POWER_Type;
/* ================================================================================ */
/* ================                      RFMON                     ================ */
/* ================================================================================ */
/**
  * @brief RFMON registers (RFMON)
  */
typedef struct {                                    /*!< (@ 0x50040600) RFMON Structure                                        */
  __IO uint32_t  RFMON_CTRL_REG;                    /*!< (@ 0x50040600) Control register                                       */
  __IO uint32_t  RFMON_ADDR_REG;                    /*!< (@ 0x50040604) AHB master start address                               */
  __IO uint32_t  RFMON_LEN_REG;                     /*!< (@ 0x50040608) Data length register                                   */
  __IO uint32_t  RFMON_STAT_REG;                    /*!< (@ 0x5004060C) Status register                                        */
  __IO uint32_t  RFMON_CRV_ADDR_REG;                /*!< (@ 0x50040610) AHB master current address                             */
  __IO uint32_t  RFMON_CRV_LEN_REG;                 /*!< (@ 0x50040614) The remaining data to be transferred                   */
} RFMON_Type;
/* ================================================================================ */
/* ================                       RTC                      ================ */
/* ================================================================================ */
/**
  * @brief RTC registers (RTC)
  */
typedef struct {                                    /*!< (@ 0x50000400) RTC Structure                                          */
  __IO uint32_t  RTC_CONTROL_REG;                   /*!< (@ 0x50000400) RTC Control Register                                   */
  __IO uint32_t  RTC_HOUR_MODE_REG;                 /*!< (@ 0x50000404) RTC Hour Mode Register                                 */
  __IO uint32_t  RTC_TIME_REG;                      /*!< (@ 0x50000408) RTC Time Register                                      */
  __IO uint32_t  RTC_CALENDAR_REG;                  /*!< (@ 0x5000040C) RTC Calendar Register                                  */
  __IO uint32_t  RTC_TIME_ALARM_REG;                /*!< (@ 0x50000410) RTC Time Alarm Register                                */
  __IO uint32_t  RTC_CALENDAR_ALARM_REG;            /*!< (@ 0x50000414) RTC Calendar Alram Register                            */
  __IO uint32_t  RTC_ALARM_ENABLE_REG;              /*!< (@ 0x50000418) RTC Alarm Enable Register                              */
  __IO uint32_t  RTC_EVENT_FLAGS_REG;               /*!< (@ 0x5000041C) RTC Event Flags Register                               */
  __IO uint32_t  RTC_INTERRUPT_ENABLE_REG;          /*!< (@ 0x50000420) RTC Interrupt Enable Register                          */
  __IO uint32_t  RTC_INTERRUPT_DISABLE_REG;         /*!< (@ 0x50000424) RTC Interrupt Disable Register                         */
  __IO uint32_t  RTC_INTERRUPT_MASK_REG;            /*!< (@ 0x50000428) RTC Interrupt Mask Register                            */
  __IO uint32_t  RTC_STATUS_REG;                    /*!< (@ 0x5000042C) RTC Status Register                                    */
  __IO uint32_t  RTC_KEEP_RTC_REG;                  /*!< (@ 0x50000430) RTC Keep RTC Register                                  */
  __I  uint32_t  RESERVED[19];
  __IO uint32_t  RTC_EVENT_CTRL_REG;                /*!< (@ 0x50000480) RTC Event Control Register                             */
  __IO uint32_t  RTC_MOTOR_EVENT_PERIOD_REG;        /*!< (@ 0x50000484) RTC Motor Event Period Register                        */
  __IO uint32_t  RTC_PDC_EVENT_PERIOD_REG;          /*!< (@ 0x50000488) RTC PDC Event Period Register                          */
  __IO uint32_t  RTC_PDC_EVENT_CLEAR_REG;           /*!< (@ 0x5000048C) RTC PDC Event Clear Register                           */
  __IO uint32_t  RTC_MOTOR_EVENT_CNT_REG;           /*!< (@ 0x50000490) RTC Motor Event Counter Register                       */
  __IO uint32_t  RTC_PDC_EVENT_CNT_REG;             /*!< (@ 0x50000494) RTC PDC Event Counter Register                         */
} RTC_Type;
/* ================================================================================ */
/* ================                     SMOTOR                     ================ */
/* ================================================================================ */
/**
  * @brief SMOTOR registers (SMOTOR)
  */
typedef struct {                                    /*!< (@ 0x50030E00) SMOTOR Structure                                       */
  __IO uint32_t  SMOTOR_CTRL_REG;                   /*!< (@ 0x50030E00) Motor control register                                 */
  __IO uint32_t  PG0_CTRL_REG;                      /*!< (@ 0x50030E04) Pattern generator 0 control register                   */
  __IO uint32_t  PG1_CTRL_REG;                      /*!< (@ 0x50030E08) Pattern generator 1 control register                   */
  __IO uint32_t  PG2_CTRL_REG;                      /*!< (@ 0x50030E0C) Pattern generator 2 control register                   */
  __IO uint32_t  PG3_CTRL_REG;                      /*!< (@ 0x50030E10) Pattern generator 3 control register                   */
  __IO uint32_t  PG4_CTRL_REG;                      /*!< (@ 0x50030E14) Pattern generator 4 control register                   */
  __IO uint32_t  SMOTOR_TRIGGER_REG;                /*!< (@ 0x50030E18) Motor controller trigger register                      */
  __I  uint32_t  RESERVED;
  __IO uint32_t  SMOTOR_CMD_FIFO_REG;               /*!< (@ 0x50030E20) Motor control command FIFO register                    */
  __IO uint32_t  SMOTOR_CMD_READ_PTR_REG;           /*!< (@ 0x50030E24) Command read pointer register                          */
  __IO uint32_t  SMOTOR_CMD_WRITE_PTR_REG;          /*!< (@ 0x50030E28) Command write pointer register                         */
  __IO uint32_t  SMOTOR_STATUS_REG;                 /*!< (@ 0x50030E2C) Motor controller status register                       */
  __IO uint32_t  SMOTOR_IRQ_CLEAR_REG;              /*!< (@ 0x50030E30) Motor control IRQ clear register                       */
  __I  uint32_t  RESERVED1[3];
  __IO uint32_t  WAVETABLE_BASE;                    /*!< (@ 0x50030E40) Base address of the wavetable                          */
  __I  uint32_t  RESERVED2[15];
  __IO uint32_t  CMD_TABLE_BASE;                    /*!< (@ 0x50030E80) Base address of the command table                      */
} SMOTOR_Type;
/* ================================================================================ */
/* ================                       SNC                      ================ */
/* ================================================================================ */
/**
  * @brief SNC registers (SNC)
  */
typedef struct {                                    /*!< (@ 0x50020C00) SNC Structure                                          */
  __IO uint32_t  SNC_CTRL_REG;                      /*!< (@ 0x50020C00) Sensor Node Control Register                           */
  __IO uint32_t  SNC_STATUS_REG;                    /*!< (@ 0x50020C04) Sensor Node Status Register                            */
  __IO uint32_t  SNC_LP_TIMER_REG;                  /*!< (@ 0x50020C08) Sensor Node Low-Power Timer Register                   */
  __IO uint32_t  SNC_PC_REG;                        /*!< (@ 0x50020C0C) Sensor Node Program Counter                            */
  __IO uint32_t  SNC_R1_REG;                        /*!< (@ 0x50020C10) Sensor Node core - Operand 1 Register                  */
  __IO uint32_t  SNC_R2_REG;                        /*!< (@ 0x50020C14) Sensor Node core - Operand 2 Register                  */
  __IO uint32_t  SNC_TMP1_REG;                      /*!< (@ 0x50020C18) Sensor Node core - Temporary Register 1                */
  __IO uint32_t  SNC_TMP2_REG;                      /*!< (@ 0x50020C1C) Sensor Node core - Temporary Register 2                */
} SNC_Type;
/* ================================================================================ */
/* ================                       SPI                      ================ */
/* ================================================================================ */
/**
  * @brief SPI registers (SPI)
  */
typedef struct {                                    /*!< (@ 0x50020300) SPI Structure                                          */
  __IO uint32_t  SPI_CTRL_REG;                      /*!< (@ 0x50020300) SPI control register 0                                 */
  __IO uint32_t  SPI_RX_TX_REG;                     /*!< (@ 0x50020304) SPI RX/TX register0                                    */
  __IO uint32_t  SPI_CLEAR_INT_REG;                 /*!< (@ 0x50020308) SPI clear interrupt register                           */
} SPI_Type;
/* ================================================================================ */
/* ================                      SPI2                      ================ */
/* ================================================================================ */
/**
  * @brief SPI2 registers (SPI2)
  */
typedef struct {                                    /*!< (@ 0x50020400) SPI2 Structure                                         */
  __IO uint32_t  SPI2_CTRL_REG;                     /*!< (@ 0x50020400) SPI control register 0                                 */
  __IO uint32_t  SPI2_RX_TX_REG;                    /*!< (@ 0x50020404) SPI RX/TX register0                                    */
  __IO uint32_t  SPI2_CLEAR_INT_REG;                /*!< (@ 0x50020408) SPI clear interrupt register                           */
} SPI2_Type;
/* ================================================================================ */
/* ================                    SYS_WDOG                    ================ */
/* ================================================================================ */
/**
  * @brief SYS_WDOG registers (SYS_WDOG)
  */
typedef struct {                                    /*!< (@ 0x50000700) SYS_WDOG Structure                                     */
  __IO uint32_t  WATCHDOG_REG;                      /*!< (@ 0x50000700) Watchdog timer register.                               */
  __IO uint32_t  WATCHDOG_CTRL_REG;                 /*!< (@ 0x50000704) Watchdog control register.                             */
} SYS_WDOG_Type;
/* ================================================================================ */
/* ================                      TIMER                     ================ */
/* ================================================================================ */
/**
  * @brief TIMER registers (TIMER)
  */
typedef struct {                                    /*!< (@ 0x50010200) TIMER Structure                                        */
  __IO uint32_t  TIMER_CTRL_REG;                    /*!< (@ 0x50010200) Timer control register                                 */
  __IO uint32_t  TIMER_TIMER_VAL_REG;               /*!< (@ 0x50010204) Timer counter value                                    */
  __IO uint32_t  TIMER_STATUS_REG;                  /*!< (@ 0x50010208) Timer status register                                  */
  __IO uint32_t  TIMER_GPIO1_CONF_REG;              /*!< (@ 0x5001020C) Timer gpio1 selection                                  */
  __IO uint32_t  TIMER_GPIO2_CONF_REG;              /*!< (@ 0x50010210) Timer gpio2 selection                                  */
  __IO uint32_t  TIMER_RELOAD_REG;                  /*!< (@ 0x50010214) Timer reload value and Delay in shot mode              */
  __IO uint32_t  TIMER_SHOTWIDTH_REG;               /*!< (@ 0x50010218) Timer Shot duration in shot mode                       */
  __IO uint32_t  TIMER_PRESCALER_REG;               /*!< (@ 0x5001021C) Timer prescaler value                                  */
  __IO uint32_t  TIMER_CAPTURE_GPIO1_REG;           /*!< (@ 0x50010220) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER_CAPTURE_GPIO2_REG;           /*!< (@ 0x50010224) Timer value for event on GPIO2                         */
  __IO uint32_t  TIMER_PRESCALER_VAL_REG;           /*!< (@ 0x50010228) Timer prescaler counter valuew                         */
  __IO uint32_t  TIMER_PWM_FREQ_REG;                /*!< (@ 0x5001022C) Timer pwm frequency register                           */
  __IO uint32_t  TIMER_PWM_DC_REG;                  /*!< (@ 0x50010230) Timer pwm dc register                                  */
  __IO uint32_t  TIMER_GPIO3_CONF_REG;              /*!< (@ 0x50010234) Timer gpio3 selection                                  */
  __IO uint32_t  TIMER_GPIO4_CONF_REG;              /*!< (@ 0x50010238) Timer gpio4 selection                                  */
  __IO uint32_t  TIMER_CAPTURE_GPIO3_REG;           /*!< (@ 0x5001023C) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER_CAPTURE_GPIO4_REG;           /*!< (@ 0x50010240) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER_CLEAR_GPIO_EVENT_REG;        /*!< (@ 0x50010244) Timer clear gpio event register                        */
  __IO uint32_t  TIMER_CLEAR_IRQ_REG;               /*!< (@ 0x50010248) Timer clear interrupt                                  */
} TIMER_Type;
/* ================================================================================ */
/* ================                     TIMER2                     ================ */
/* ================================================================================ */
/**
  * @brief TIMER2 registers (TIMER2)
  */
typedef struct {                                    /*!< (@ 0x50010300) TIMER2 Structure                                       */
  __IO uint32_t  TIMER2_CTRL_REG;                   /*!< (@ 0x50010300) Timer control register                                 */
  __IO uint32_t  TIMER2_TIMER_VAL_REG;              /*!< (@ 0x50010304) Timer counter value                                    */
  __IO uint32_t  TIMER2_STATUS_REG;                 /*!< (@ 0x50010308) Timer status register                                  */
  __IO uint32_t  TIMER2_GPIO1_CONF_REG;             /*!< (@ 0x5001030C) Timer gpio1 selection                                  */
  __IO uint32_t  TIMER2_GPIO2_CONF_REG;             /*!< (@ 0x50010310) Timer gpio2 selection                                  */
  __IO uint32_t  TIMER2_RELOAD_REG;                 /*!< (@ 0x50010314) Timer reload value and Delay in shot mode              */
  __IO uint32_t  TIMER2_SHOTWIDTH_REG;              /*!< (@ 0x50010318) Timer Shot duration in shot mode                       */
  __IO uint32_t  TIMER2_PRESCALER_REG;              /*!< (@ 0x5001031C) Timer prescaler value                                  */
  __IO uint32_t  TIMER2_CAPTURE_GPIO1_REG;          /*!< (@ 0x50010320) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER2_CAPTURE_GPIO2_REG;          /*!< (@ 0x50010324) Timer value for event on GPIO2                         */
  __IO uint32_t  TIMER2_PRESCALER_VAL_REG;          /*!< (@ 0x50010328) Timer prescaler counter valuew                         */
  __IO uint32_t  TIMER2_PWM_FREQ_REG;               /*!< (@ 0x5001032C) Timer pwm frequency register                           */
  __IO uint32_t  TIMER2_PWM_DC_REG;                 /*!< (@ 0x50010330) Timer pwm dc register                                  */
  __IO uint32_t  TIMER2_CLEAR_IRQ_REG;              /*!< (@ 0x50010334) Timer clear interrupt                                  */
} TIMER2_Type;
/* ================================================================================ */
/* ================                     TIMER3                     ================ */
/* ================================================================================ */
/**
  * @brief TIMER3 registers (TIMER3)
  */
typedef struct {                                    /*!< (@ 0x50040A00) TIMER3 Structure                                       */
  __IO uint32_t  TIMER3_CTRL_REG;                   /*!< (@ 0x50040A00) Timer control register                                 */
  __IO uint32_t  TIMER3_TIMER_VAL_REG;              /*!< (@ 0x50040A04) Timer counter value                                    */
  __IO uint32_t  TIMER3_STATUS_REG;                 /*!< (@ 0x50040A08) Timer status register                                  */
  __IO uint32_t  TIMER3_GPIO1_CONF_REG;             /*!< (@ 0x50040A0C) Timer gpio1 selection                                  */
  __IO uint32_t  TIMER3_GPIO2_CONF_REG;             /*!< (@ 0x50040A10) Timer gpio2 selection                                  */
  __IO uint32_t  TIMER3_RELOAD_REG;                 /*!< (@ 0x50040A14) Timer reload value and Delay in shot mode              */
  __IO uint32_t  TIMER3_SHOTWIDTH_REG;              /*!< (@ 0x50040A18) Timer Shot duration in shot mode                       */
  __IO uint32_t  TIMER3_PRESCALER_REG;              /*!< (@ 0x50040A1C) Timer prescaler value                                  */
  __IO uint32_t  TIMER3_CAPTURE_GPIO1_REG;          /*!< (@ 0x50040A20) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER3_CAPTURE_GPIO2_REG;          /*!< (@ 0x50040A24) Timer value for event on GPIO2                         */
  __IO uint32_t  TIMER3_PRESCALER_VAL_REG;          /*!< (@ 0x50040A28) Timer prescaler counter valuew                         */
  __IO uint32_t  TIMER3_PWM_FREQ_REG;               /*!< (@ 0x50040A2C) Timer pwm frequency register                           */
  __IO uint32_t  TIMER3_PWM_DC_REG;                 /*!< (@ 0x50040A30) Timer pwm dc register                                  */
  __IO uint32_t  TIMER3_CLEAR_IRQ_REG;              /*!< (@ 0x50040A34) Timer clear interrupt                                  */
} TIMER3_Type;
/* ================================================================================ */
/* ================                     TIMER4                     ================ */
/* ================================================================================ */
/**
  * @brief TIMER4 registers (TIMER4)
  */
typedef struct {                                    /*!< (@ 0x50040B00) TIMER4 Structure                                       */
  __IO uint32_t  TIMER4_CTRL_REG;                   /*!< (@ 0x50040B00) Timer control register                                 */
  __IO uint32_t  TIMER4_TIMER_VAL_REG;              /*!< (@ 0x50040B04) Timer counter value                                    */
  __IO uint32_t  TIMER4_STATUS_REG;                 /*!< (@ 0x50040B08) Timer status register                                  */
  __IO uint32_t  TIMER4_GPIO1_CONF_REG;             /*!< (@ 0x50040B0C) Timer gpio1 selection                                  */
  __IO uint32_t  TIMER4_GPIO2_CONF_REG;             /*!< (@ 0x50040B10) Timer gpio2 selection                                  */
  __IO uint32_t  TIMER4_RELOAD_REG;                 /*!< (@ 0x50040B14) Timer reload value and Delay in shot mode              */
  __IO uint32_t  TIMER4_SHOTWIDTH_REG;              /*!< (@ 0x50040B18) Timer Shot duration in shot mode                       */
  __IO uint32_t  TIMER4_PRESCALER_REG;              /*!< (@ 0x50040B1C) Timer prescaler value                                  */
  __IO uint32_t  TIMER4_CAPTURE_GPIO1_REG;          /*!< (@ 0x50040B20) Timer value for event on GPIO1                         */
  __IO uint32_t  TIMER4_CAPTURE_GPIO2_REG;          /*!< (@ 0x50040B24) Timer value for event on GPIO2                         */
  __IO uint32_t  TIMER4_PRESCALER_VAL_REG;          /*!< (@ 0x50040B28) Timer prescaler counter valuew                         */
  __IO uint32_t  TIMER4_PWM_FREQ_REG;               /*!< (@ 0x50040B2C) Timer pwm frequency register                           */
  __IO uint32_t  TIMER4_PWM_DC_REG;                 /*!< (@ 0x50040B30) Timer pwm dc register                                  */
  __IO uint32_t  TIMER4_CLEAR_IRQ_REG;              /*!< (@ 0x50040B34) Timer clear interrupt                                  */
} TIMER4_Type;
/* ================================================================================ */
/* ================                      TRNG                      ================ */
/* ================================================================================ */
/**
  * @brief TRNG registers (TRNG)
  */
typedef struct {                                    /*!< (@ 0x50040C00) TRNG Structure                                         */
  __IO uint32_t  TRNG_CTRL_REG;                     /*!< (@ 0x50040C00) TRNG control register                                  */
  __IO uint32_t  TRNG_FIFOLVL_REG;                  /*!< (@ 0x50040C04) TRNG FIFO level register                               */
  __IO uint32_t  TRNG_VER_REG;                      /*!< (@ 0x50040C08) TRNG Version register                                  */
} TRNG_Type;
/* ================================================================================ */
/* ================                      UART                      ================ */
/* ================================================================================ */
/**
  * @brief UART registers (UART)
  */
typedef struct {                                    /*!< (@ 0x50020000) UART Structure                                         */
  __IO uint32_t  UART_RBR_THR_DLL_REG;              /*!< (@ 0x50020000) Receive Buffer Register                                */
  __IO uint32_t  UART_IER_DLH_REG;                  /*!< (@ 0x50020004) Interrupt Enable Register                              */
  __IO uint32_t  UART_IIR_FCR_REG;                  /*!< (@ 0x50020008) Interrupt Identification Register/FIFO Control
                                                         Register                                                              */
  __IO uint32_t  UART_LCR_REG;                      /*!< (@ 0x5002000C) Line Control Register                                  */
  __IO uint32_t  UART_MCR_REG;                      /*!< (@ 0x50020010) Modem Control Register                                 */
  __IO uint32_t  UART_LSR_REG;                      /*!< (@ 0x50020014) Line Status Register                                   */
  __I  uint32_t  RESERVED;
  __IO uint32_t  UART_SCR_REG;                      /*!< (@ 0x5002001C) Scratchpad Register                                    */
  __I  uint32_t  RESERVED1[4];
  __IO uint32_t  UART_SRBR_STHR0_REG;               /*!< (@ 0x50020030) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR1_REG;               /*!< (@ 0x50020034) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR2_REG;               /*!< (@ 0x50020038) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR3_REG;               /*!< (@ 0x5002003C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR4_REG;               /*!< (@ 0x50020040) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR5_REG;               /*!< (@ 0x50020044) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR6_REG;               /*!< (@ 0x50020048) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR7_REG;               /*!< (@ 0x5002004C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR8_REG;               /*!< (@ 0x50020050) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR9_REG;               /*!< (@ 0x50020054) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR10_REG;              /*!< (@ 0x50020058) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR11_REG;              /*!< (@ 0x5002005C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR12_REG;              /*!< (@ 0x50020060) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR13_REG;              /*!< (@ 0x50020064) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR14_REG;              /*!< (@ 0x50020068) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART_SRBR_STHR15_REG;              /*!< (@ 0x5002006C) Shadow Receive/Transmit Buffer Register                */
  __I  uint32_t  RESERVED2[3];
  __IO uint32_t  UART_USR_REG;                      /*!< (@ 0x5002007C) UART Status register.                                  */
  __IO uint32_t  UART_TFL_REG;                      /*!< (@ 0x50020080) Transmit FIFO Level                                    */
  __IO uint32_t  UART_RFL_REG;                      /*!< (@ 0x50020084) Receive FIFO Level.                                    */
  __IO uint32_t  UART_SRR_REG;                      /*!< (@ 0x50020088) Software Reset Register.                               */
  __I  uint32_t  RESERVED3;
  __IO uint32_t  UART_SBCR_REG;                     /*!< (@ 0x50020090) Shadow Break Control Register                          */
  __IO uint32_t  UART_SDMAM_REG;                    /*!< (@ 0x50020094) Shadow DMA Mode                                        */
  __IO uint32_t  UART_SFE_REG;                      /*!< (@ 0x50020098) Shadow FIFO Enable                                     */
  __IO uint32_t  UART_SRT_REG;                      /*!< (@ 0x5002009C) Shadow RCVR Trigger                                    */
  __IO uint32_t  UART_STET_REG;                     /*!< (@ 0x500200A0) Shadow TX Empty Trigger                                */
  __IO uint32_t  UART_HTX_REG;                      /*!< (@ 0x500200A4) Halt TX                                                */
  __IO uint32_t  UART_DMASA_REG;                    /*!< (@ 0x500200A8) DMA Software Acknowledge                               */
  __I  uint32_t  RESERVED4[5];
  __IO uint32_t  UART_DLF_REG;                      /*!< (@ 0x500200C0) Divisor Latch Fraction Register                        */
  __I  uint32_t  RESERVED5[13];
  __IO uint32_t  UART_UCV_REG;                      /*!< (@ 0x500200F8) Component Version                                      */
  __IO uint32_t  UART_CTR_REG;                      /*!< (@ 0x500200FC) Component Type Register                                */
} UART_Type;
/* ================================================================================ */
/* ================                      UART2                     ================ */
/* ================================================================================ */
/**
  * @brief UART2 registers (UART2)
  */
typedef struct {                                    /*!< (@ 0x50020100) UART2 Structure                                        */
  __IO uint32_t  UART2_RBR_THR_DLL_REG;             /*!< (@ 0x50020100) Receive Buffer Register                                */
  __IO uint32_t  UART2_IER_DLH_REG;                 /*!< (@ 0x50020104) Interrupt Enable Register                              */
  __IO uint32_t  UART2_IIR_FCR_REG;                 /*!< (@ 0x50020108) Interrupt Identification Register/FIFO Control
                                                         Register                                                              */
  __IO uint32_t  UART2_LCR_REG;                     /*!< (@ 0x5002010C) Line Control Register                                  */
  __IO uint32_t  UART2_MCR_REG;                     /*!< (@ 0x50020110) Modem Control Register                                 */
  __IO uint32_t  UART2_LSR_REG;                     /*!< (@ 0x50020114) Line Status Register                                   */
  __IO uint32_t  UART2_MSR_REG;                     /*!< (@ 0x50020118) Modem Status Register                                  */
  __IO uint32_t  UART2_SCR_REG;                     /*!< (@ 0x5002011C) Scratchpad Register                                    */
  __I  uint32_t  RESERVED[4];
  __IO uint32_t  UART2_SRBR_STHR0_REG;              /*!< (@ 0x50020130) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR1_REG;              /*!< (@ 0x50020134) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR2_REG;              /*!< (@ 0x50020138) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR3_REG;              /*!< (@ 0x5002013C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR4_REG;              /*!< (@ 0x50020140) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR5_REG;              /*!< (@ 0x50020144) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR6_REG;              /*!< (@ 0x50020148) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR7_REG;              /*!< (@ 0x5002014C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR8_REG;              /*!< (@ 0x50020150) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR9_REG;              /*!< (@ 0x50020154) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR10_REG;             /*!< (@ 0x50020158) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR11_REG;             /*!< (@ 0x5002015C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR12_REG;             /*!< (@ 0x50020160) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR13_REG;             /*!< (@ 0x50020164) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR14_REG;             /*!< (@ 0x50020168) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART2_SRBR_STHR15_REG;             /*!< (@ 0x5002016C) Shadow Receive/Transmit Buffer Register                */
  __I  uint32_t  RESERVED1[3];
  __IO uint32_t  UART2_USR_REG;                     /*!< (@ 0x5002017C) UART Status register.                                  */
  __IO uint32_t  UART2_TFL_REG;                     /*!< (@ 0x50020180) Transmit FIFO Level                                    */
  __IO uint32_t  UART2_RFL_REG;                     /*!< (@ 0x50020184) Receive FIFO Level.                                    */
  __IO uint32_t  UART2_SRR_REG;                     /*!< (@ 0x50020188) Software Reset Register.                               */
  __IO uint32_t  UART2_SRTS_REG;                    /*!< (@ 0x5002018C) Shadow Request to Send                                 */
  __IO uint32_t  UART2_SBCR_REG;                    /*!< (@ 0x50020190) Shadow Break Control Register                          */
  __IO uint32_t  UART2_SDMAM_REG;                   /*!< (@ 0x50020194) Shadow DMA Mode                                        */
  __IO uint32_t  UART2_SFE_REG;                     /*!< (@ 0x50020198) Shadow FIFO Enable                                     */
  __IO uint32_t  UART2_SRT_REG;                     /*!< (@ 0x5002019C) Shadow RCVR Trigger                                    */
  __IO uint32_t  UART2_STET_REG;                    /*!< (@ 0x500201A0) Shadow TX Empty Trigger                                */
  __IO uint32_t  UART2_HTX_REG;                     /*!< (@ 0x500201A4) Halt TX                                                */
  __IO uint32_t  UART2_DMASA_REG;                   /*!< (@ 0x500201A8) DMA Software Acknowledge                               */
  __I  uint32_t  RESERVED2[5];
  __IO uint32_t  UART2_DLF_REG;                     /*!< (@ 0x500201C0) Divisor Latch Fraction Register                        */
  __IO uint32_t  UART2_RAR_REG;                     /*!< (@ 0x500201C4) Receive Address Register                               */
  __IO uint32_t  UART2_TAR_REG;                     /*!< (@ 0x500201C8) Transmit Address Register                              */
  __IO uint32_t  UART2_LCR_EXT;                     /*!< (@ 0x500201CC) Line Extended Control Register                         */
  __I  uint32_t  RESERVED3[10];
  __IO uint32_t  UART2_UCV_REG;                     /*!< (@ 0x500201F8) Component Version                                      */
  __IO uint32_t  UART2_CTR_REG;                     /*!< (@ 0x500201FC) Component Type Register                                */
} UART2_Type;
/* ================================================================================ */
/* ================                      UART3                     ================ */
/* ================================================================================ */
/**
  * @brief UART3 registers (UART3)
  */
typedef struct {                                    /*!< (@ 0x50020200) UART3 Structure                                        */
  __IO uint32_t  UART3_RBR_THR_DLL_REG;             /*!< (@ 0x50020200) Receive Buffer Register                                */
  __IO uint32_t  UART3_IER_DLH_REG;                 /*!< (@ 0x50020204) Interrupt Enable Register                              */
  __IO uint32_t  UART3_IIR_FCR_REG;                 /*!< (@ 0x50020208) Interrupt Identification Register/FIFO Control
                                                         Register                                                              */
  __IO uint32_t  UART3_LCR_REG;                     /*!< (@ 0x5002020C) Line Control Register                                  */
  __IO uint32_t  UART3_MCR_REG;                     /*!< (@ 0x50020210) Modem Control Register                                 */
  __IO uint32_t  UART3_LSR_REG;                     /*!< (@ 0x50020214) Line Status Register                                   */
  __IO uint32_t  UART3_MSR_REG;                     /*!< (@ 0x50020218) Modem Status Register                                  */
  __IO uint32_t  UART3_CONFIG_REG;                  /*!< (@ 0x5002021C) ISO7816 Config Register                                */
  __I  uint32_t  RESERVED[4];
  __IO uint32_t  UART3_SRBR_STHR0_REG;              /*!< (@ 0x50020230) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR1_REG;              /*!< (@ 0x50020234) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR2_REG;              /*!< (@ 0x50020238) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR3_REG;              /*!< (@ 0x5002023C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR4_REG;              /*!< (@ 0x50020240) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR5_REG;              /*!< (@ 0x50020244) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR6_REG;              /*!< (@ 0x50020248) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR7_REG;              /*!< (@ 0x5002024C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR8_REG;              /*!< (@ 0x50020250) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR9_REG;              /*!< (@ 0x50020254) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR10_REG;             /*!< (@ 0x50020258) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR11_REG;             /*!< (@ 0x5002025C) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR12_REG;             /*!< (@ 0x50020260) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR13_REG;             /*!< (@ 0x50020264) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR14_REG;             /*!< (@ 0x50020268) Shadow Receive/Transmit Buffer Register                */
  __IO uint32_t  UART3_SRBR_STHR15_REG;             /*!< (@ 0x5002026C) Shadow Receive/Transmit Buffer Register                */
  __I  uint32_t  RESERVED1[3];
  __IO uint32_t  UART3_USR_REG;                     /*!< (@ 0x5002027C) UART Status register.                                  */
  __IO uint32_t  UART3_TFL_REG;                     /*!< (@ 0x50020280) Transmit FIFO Level                                    */
  __IO uint32_t  UART3_RFL_REG;                     /*!< (@ 0x50020284) Receive FIFO Level.                                    */
  __IO uint32_t  UART3_SRR_REG;                     /*!< (@ 0x50020288) Software Reset Register.                               */
  __IO uint32_t  UART3_SRTS_REG;                    /*!< (@ 0x5002028C) Shadow Request to Send                                 */
  __IO uint32_t  UART3_SBCR_REG;                    /*!< (@ 0x50020290) Shadow Break Control Register                          */
  __IO uint32_t  UART3_SDMAM_REG;                   /*!< (@ 0x50020294) Shadow DMA Mode                                        */
  __IO uint32_t  UART3_SFE_REG;                     /*!< (@ 0x50020298) Shadow FIFO Enable                                     */
  __IO uint32_t  UART3_SRT_REG;                     /*!< (@ 0x5002029C) Shadow RCVR Trigger                                    */
  __IO uint32_t  UART3_STET_REG;                    /*!< (@ 0x500202A0) Shadow TX Empty Trigger                                */
  __IO uint32_t  UART3_HTX_REG;                     /*!< (@ 0x500202A4) Halt TX                                                */
  __IO uint32_t  UART3_DMASA_REG;                   /*!< (@ 0x500202A8) DMA Software Acknowledge                               */
  __I  uint32_t  RESERVED2[5];
  __IO uint32_t  UART3_DLF_REG;                     /*!< (@ 0x500202C0) Divisor Latch Fraction Register                        */
  __IO uint32_t  UART3_RAR_REG;                     /*!< (@ 0x500202C4) Receive Address Register                               */
  __IO uint32_t  UART3_TAR_REG;                     /*!< (@ 0x500202C8) Transmit Address Register                              */
  __IO uint32_t  UART3_LCR_EXT;                     /*!< (@ 0x500202CC) Line Extended Control Register                         */
  __I  uint32_t  RESERVED3[4];
  __IO uint32_t  UART3_CTRL_REG;                    /*!< (@ 0x500202E0) ISO7816 Control Register                               */
  __IO uint32_t  UART3_TIMER_REG;                   /*!< (@ 0x500202E4) ISO7816 Timer Register                                 */
  __IO uint32_t  UART3_ERR_CTRL_REG;                /*!< (@ 0x500202E8) ISO7816 Error Signal Control Register                  */
  __IO uint32_t  UART3_IRQ_STATUS_REG;              /*!< (@ 0x500202EC) ISO7816 Interrupt Status Register                      */
  __I  uint32_t  RESERVED4[2];
  __IO uint32_t  UART3_UCV_REG;                     /*!< (@ 0x500202F8) Component Version                                      */
  __IO uint32_t  UART3_CTR_REG;                     /*!< (@ 0x500202FC) Component Type Register                                */
} UART3_Type;
/* ================================================================================ */
/* ================                       USB                      ================ */
/* ================================================================================ */
/**
  * @brief USB registers (USB)
  */
typedef struct {                                    /*!< (@ 0x50040000) USB Structure                                          */
  __IO uint32_t  USB_MCTRL_REG;                     /*!< (@ 0x50040000) Main Control Register)                                 */
  __IO uint32_t  USB_XCVDIAG_REG;                   /*!< (@ 0x50040004) Transceiver diagnostic Register (for test purpose
                                                         only)                                                                 */
  __IO uint32_t  USB_TCR_REG;                       /*!< (@ 0x50040008) Transceiver configuration Register                     */
  __IO uint32_t  USB_UTR_REG;                       /*!< (@ 0x5004000C) USB test Register (for test purpose only)              */
  __IO uint32_t  USB_FAR_REG;                       /*!< (@ 0x50040010) Function Address Register                              */
  __IO uint32_t  USB_NFSR_REG;                      /*!< (@ 0x50040014) Node Functional State Register                         */
  __IO uint32_t  USB_MAEV_REG;                      /*!< (@ 0x50040018) Main Event Register                                    */
  __IO uint32_t  USB_MAMSK_REG;                     /*!< (@ 0x5004001C) Main Mask Register                                     */
  __IO uint32_t  USB_ALTEV_REG;                     /*!< (@ 0x50040020) Alternate Event Register                               */
  __IO uint32_t  USB_ALTMSK_REG;                    /*!< (@ 0x50040024) Alternate Mask Register                                */
  __IO uint32_t  USB_TXEV_REG;                      /*!< (@ 0x50040028) Transmit Event Register                                */
  __IO uint32_t  USB_TXMSK_REG;                     /*!< (@ 0x5004002C) Transmit Mask Register                                 */
  __IO uint32_t  USB_RXEV_REG;                      /*!< (@ 0x50040030) Receive Event Register                                 */
  __IO uint32_t  USB_RXMSK_REG;                     /*!< (@ 0x50040034) Receive Mask Register                                  */
  __IO uint32_t  USB_NAKEV_REG;                     /*!< (@ 0x50040038) NAK Event Register                                     */
  __IO uint32_t  USB_NAKMSK_REG;                    /*!< (@ 0x5004003C) NAK Mask Register                                      */
  __IO uint32_t  USB_FWEV_REG;                      /*!< (@ 0x50040040) FIFO Warning Event Register                            */
  __IO uint32_t  USB_FWMSK_REG;                     /*!< (@ 0x50040044) FIFO Warning Mask Register                             */
  __IO uint32_t  USB_FNH_REG;                       /*!< (@ 0x50040048) Frame Number High Byte Register                        */
  __IO uint32_t  USB_FNL_REG;                       /*!< (@ 0x5004004C) Frame Number Low Byte Register                         */
  __I  uint32_t  RESERVED[11];
  __IO uint32_t  USB_UX20CDR_REG;                   /*!< (@ 0x5004007C) Transceiver 2.0 Configuration and Diagnostics
                                                         Register(for test purpose only)                                       */
  __IO uint32_t  USB_EPC0_REG;                      /*!< (@ 0x50040080) Endpoint Control 0 Register                            */
  __IO uint32_t  USB_TXD0_REG;                      /*!< (@ 0x50040084) Transmit Data 0 Register                               */
  __IO uint32_t  USB_TXS0_REG;                      /*!< (@ 0x50040088) Transmit Status 0 Register                             */
  __IO uint32_t  USB_TXC0_REG;                      /*!< (@ 0x5004008C) Transmit command 0 Register                            */
  __IO uint32_t  USB_EP0_NAK_REG;                   /*!< (@ 0x50040090) EP0 INNAK and OUTNAK Register                          */
  __IO uint32_t  USB_RXD0_REG;                      /*!< (@ 0x50040094) Receive Data 0 Register                                */
  __IO uint32_t  USB_RXS0_REG;                      /*!< (@ 0x50040098) Receive Status 0 Register                              */
  __IO uint32_t  USB_RXC0_REG;                      /*!< (@ 0x5004009C) Receive Command 0 Register                             */
  __IO uint32_t  USB_EPC1_REG;                      /*!< (@ 0x500400A0) Endpoint Control Register 1                            */
  __IO uint32_t  USB_TXD1_REG;                      /*!< (@ 0x500400A4) Transmit Data Register 1                               */
  __IO uint32_t  USB_TXS1_REG;                      /*!< (@ 0x500400A8) Transmit Status Register 1                             */
  __IO uint32_t  USB_TXC1_REG;                      /*!< (@ 0x500400AC) Transmit Command Register 1                            */
  __IO uint32_t  USB_EPC2_REG;                      /*!< (@ 0x500400B0) Endpoint Control Register 2                            */
  __IO uint32_t  USB_RXD1_REG;                      /*!< (@ 0x500400B4) Receive Data Register,1                                */
  __IO uint32_t  USB_RXS1_REG;                      /*!< (@ 0x500400B8) Receive Status Register 1                              */
  __IO uint32_t  USB_RXC1_REG;                      /*!< (@ 0x500400BC) Receive Command Register 1                             */
  __IO uint32_t  USB_EPC3_REG;                      /*!< (@ 0x500400C0) Endpoint Control Register 3                            */
  __IO uint32_t  USB_TXD2_REG;                      /*!< (@ 0x500400C4) Transmit Data Register 2                               */
  __IO uint32_t  USB_TXS2_REG;                      /*!< (@ 0x500400C8) Transmit Status Register 2                             */
  __IO uint32_t  USB_TXC2_REG;                      /*!< (@ 0x500400CC) Transmit Command Register 2                            */
  __IO uint32_t  USB_EPC4_REG;                      /*!< (@ 0x500400D0) Endpoint Control Register 4                            */
  __IO uint32_t  USB_RXD2_REG;                      /*!< (@ 0x500400D4) Receive Data Register 2                                */
  __IO uint32_t  USB_RXS2_REG;                      /*!< (@ 0x500400D8) Receive Status Register 2                              */
  __IO uint32_t  USB_RXC2_REG;                      /*!< (@ 0x500400DC) Receive Command Register 2                             */
  __IO uint32_t  USB_EPC5_REG;                      /*!< (@ 0x500400E0) Endpoint Control Register 5                            */
  __IO uint32_t  USB_TXD3_REG;                      /*!< (@ 0x500400E4) Transmit Data Register 3                               */
  __IO uint32_t  USB_TXS3_REG;                      /*!< (@ 0x500400E8) Transmit Status Register 3                             */
  __IO uint32_t  USB_TXC3_REG;                      /*!< (@ 0x500400EC) Transmit Command Register 3                            */
  __IO uint32_t  USB_EPC6_REG;                      /*!< (@ 0x500400F0) Endpoint Control Register 6                            */
  __IO uint32_t  USB_RXD3_REG;                      /*!< (@ 0x500400F4) Receive Data Register 3                                */
  __IO uint32_t  USB_RXS3_REG;                      /*!< (@ 0x500400F8) Receive Status Register 3                              */
  __IO uint32_t  USB_RXC3_REG;                      /*!< (@ 0x500400FC) Receive Command Register 3                             */
  __I  uint32_t  RESERVED1[40];
  __IO uint32_t  USB_DMA_CTRL_REG;                  /*!< (@ 0x500401A0) USB DMA control register                               */
  __I  uint32_t  RESERVED2;
  __IO uint32_t  USB_CHARGER_CTRL_REG;              /*!< (@ 0x500401A8) USB Charger Control Register                           */
  __IO uint32_t  USB_CHARGER_STAT_REG;              /*!< (@ 0x500401AC) USB Charger Status Register                            */
} USB_Type;
/* ================================================================================ */
/* ================                     WAKEUP                     ================ */
/* ================================================================================ */
/**
  * @brief WAKEUP registers (WAKEUP)
  */
typedef struct {                                    /*!< (@ 0x50000100) WAKEUP Structure                                       */
  __IO uint32_t  WKUP_CTRL_REG;                     /*!< (@ 0x50000100) Control register for the wakeup counter                */
  __I  uint32_t  RESERVED;
  __IO uint32_t  WKUP_RESET_IRQ_REG;                /*!< (@ 0x50000108) Reset wakeup interrupt                                 */
  __I  uint32_t  RESERVED1[2];
  __IO uint32_t  WKUP_SELECT_P0_REG;                /*!< (@ 0x50000114) select which inputs from P0 port can trigger
                                                         wkup counter                                                          */
  __IO uint32_t  WKUP_SELECT_P1_REG;                /*!< (@ 0x50000118) select which inputs from P1 port can trigger
                                                         wkup counter                                                          */
  __I  uint32_t  RESERVED2[3];
  __IO uint32_t  WKUP_POL_P0_REG;                   /*!< (@ 0x50000128) select the sesitivity polarity for each P0 input       */
  __IO uint32_t  WKUP_POL_P1_REG;                   /*!< (@ 0x5000012C) select the sesitivity polarity for each P1 input       */
  __I  uint32_t  RESERVED3[3];
  __IO uint32_t  WKUP_STATUS_P0_REG;                /*!< (@ 0x5000013C) Event status register for P0 and P1                    */
  __IO uint32_t  WKUP_STATUS_P1_REG;                /*!< (@ 0x50000140) Event status register for P2                           */
  __I  uint32_t  RESERVED4;
  __IO uint32_t  WKUP_CLEAR_P0_REG;                 /*!< (@ 0x50000148) Clear event register for P0 and P1                     */
  __IO uint32_t  WKUP_CLEAR_P1_REG;                 /*!< (@ 0x5000014C) Clear event register for P2                            */
  __I  uint32_t  RESERVED5;
  __IO uint32_t  WKUP_SEL_GPIO_P0_REG;              /*!< (@ 0x50000154) select which inputs from P0 port can trigger
                                                         interrupt                                                             */
  __IO uint32_t  WKUP_SEL_GPIO_P1_REG;              /*!< (@ 0x50000158) select which inputs from P1 port can trigger
                                                         interrupt                                                             */
} WAKEUP_Type;
/* --------------------  End of section using anonymous unions  ------------------- */
#if defined(__CC_ARM)
  #pragma pop
#elif defined(__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning restore
#else
  #warning Not supported compiler type
#endif
/* ================================================================================ */
/* ================          struct 'NVIC' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------------  NVIC_ISER  --------------------------------- */
#define NVIC_ISER_BLE_WAKEUP_LP_IRQn_Pos      (0UL)                     /*!< NVIC ISER: BLE_WAKEUP_LP_IRQn (Bit 0)                       */
#define NVIC_ISER_BLE_WAKEUP_LP_IRQn_Msk      (0x1UL)                   /*!< NVIC ISER: BLE_WAKEUP_LP_IRQn (Bitfield-Mask: 0x01)         */
#define NVIC_ISER_BLE_GEN_IRQn_Pos            (1UL)                     /*!< NVIC ISER: BLE_GEN_IRQn (Bit 1)                             */
#define NVIC_ISER_BLE_GEN_IRQn_Msk            (0x2UL)                   /*!< NVIC ISER: BLE_GEN_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISER_FTDF_WAKEUP_IRQn_Pos        (2UL)                     /*!< NVIC ISER: FTDF_WAKEUP_IRQn (Bit 2)                         */
#define NVIC_ISER_FTDF_WAKEUP_IRQn_Msk        (0x4UL)                   /*!< NVIC ISER: FTDF_WAKEUP_IRQn (Bitfield-Mask: 0x01)           */
#define NVIC_ISER_FTDF_GEN_IRQn_Pos           (3UL)                     /*!< NVIC ISER: FTDF_GEN_IRQn (Bit 3)                            */
#define NVIC_ISER_FTDF_GEN_IRQn_Msk           (0x8UL)                   /*!< NVIC ISER: FTDF_GEN_IRQn (Bitfield-Mask: 0x01)              */
#define NVIC_ISER_RFCAL_IRQn_Pos              (4UL)                     /*!< NVIC ISER: RFCAL_IRQn (Bit 4)                               */
#define NVIC_ISER_RFCAL_IRQn_Msk              (0x10UL)                  /*!< NVIC ISER: RFCAL_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISER_COEX_IRQn_Pos               (5UL)                     /*!< NVIC ISER: COEX_IRQn (Bit 5)                                */
#define NVIC_ISER_COEX_IRQn_Msk               (0x20UL)                  /*!< NVIC ISER: COEX_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_CRYPTO_IRQn_Pos             (6UL)                     /*!< NVIC ISER: CRYPTO_IRQn (Bit 6)                              */
#define NVIC_ISER_CRYPTO_IRQn_Msk             (0x40UL)                  /*!< NVIC ISER: CRYPTO_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_MRM_IRQn_Pos                (7UL)                     /*!< NVIC ISER: MRM_IRQn (Bit 7)                                 */
#define NVIC_ISER_MRM_IRQn_Msk                (0x80UL)                  /*!< NVIC ISER: MRM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_UART_IRQn_Pos               (8UL)                     /*!< NVIC ISER: UART_IRQn (Bit 8)                                */
#define NVIC_ISER_UART_IRQn_Msk               (0x100UL)                 /*!< NVIC ISER: UART_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_UART2_IRQn_Pos              (9UL)                     /*!< NVIC ISER: UART2_IRQn (Bit 9)                               */
#define NVIC_ISER_UART2_IRQn_Msk              (0x200UL)                 /*!< NVIC ISER: UART2_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISER_I2C_IRQn_Pos                (10UL)                    /*!< NVIC ISER: I2C_IRQn (Bit 10)                                */
#define NVIC_ISER_I2C_IRQn_Msk                (0x400UL)                 /*!< NVIC ISER: I2C_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_I2C2_IRQn_Pos               (11UL)                    /*!< NVIC ISER: I2C2_IRQn (Bit 11)                               */
#define NVIC_ISER_I2C2_IRQn_Msk               (0x800UL)                 /*!< NVIC ISER: I2C2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_SPI_IRQn_Pos                (12UL)                    /*!< NVIC ISER: SPI_IRQn (Bit 12)                                */
#define NVIC_ISER_SPI_IRQn_Msk                (0x1000UL)                /*!< NVIC ISER: SPI_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_SPI2_IRQn_Pos               (13UL)                    /*!< NVIC ISER: SPI2_IRQn (Bit 13)                               */
#define NVIC_ISER_SPI2_IRQn_Msk               (0x2000UL)                /*!< NVIC ISER: SPI2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_ADC_IRQn_Pos                (14UL)                    /*!< NVIC ISER: ADC_IRQn (Bit 14)                                */
#define NVIC_ISER_ADC_IRQn_Msk                (0x4000UL)                /*!< NVIC ISER: ADC_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_KEYBRD_IRQn_Pos             (15UL)                    /*!< NVIC ISER: KEYBRD_IRQn (Bit 15)                             */
#define NVIC_ISER_KEYBRD_IRQn_Msk             (0x8000UL)                /*!< NVIC ISER: KEYBRD_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_IRGEN_IRQn_Pos              (16UL)                    /*!< NVIC ISER: IRGEN_IRQn (Bit 16)                              */
#define NVIC_ISER_IRGEN_IRQn_Msk              (0x10000UL)               /*!< NVIC ISER: IRGEN_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISER_WKUP_GPIO_IRQn_Pos          (17UL)                    /*!< NVIC ISER: WKUP_GPIO_IRQn (Bit 17)                          */
#define NVIC_ISER_WKUP_GPIO_IRQn_Msk          (0x20000UL)               /*!< NVIC ISER: WKUP_GPIO_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ISER_SWTIM0_IRQn_Pos             (18UL)                    /*!< NVIC ISER: SWTIM0_IRQn (Bit 18)                             */
#define NVIC_ISER_SWTIM0_IRQn_Msk             (0x40000UL)               /*!< NVIC ISER: SWTIM0_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_SWTIM1_IRQn_Pos             (19UL)                    /*!< NVIC ISER: SWTIM1_IRQn (Bit 19)                             */
#define NVIC_ISER_SWTIM1_IRQn_Msk             (0x80000UL)               /*!< NVIC ISER: SWTIM1_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_QUADEC_IRQn_Pos             (20UL)                    /*!< NVIC ISER: QUADEC_IRQn (Bit 20)                             */
#define NVIC_ISER_QUADEC_IRQn_Msk             (0x100000UL)              /*!< NVIC ISER: QUADEC_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_USB_IRQn_Pos                (21UL)                    /*!< NVIC ISER: USB_IRQn (Bit 21)                                */
#define NVIC_ISER_USB_IRQn_Msk                (0x200000UL)              /*!< NVIC ISER: USB_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_PCM_IRQn_Pos                (22UL)                    /*!< NVIC ISER: PCM_IRQn (Bit 22)                                */
#define NVIC_ISER_PCM_IRQn_Msk                (0x400000UL)              /*!< NVIC ISER: PCM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_SRC_IN_IRQn_Pos             (23UL)                    /*!< NVIC ISER: SRC_IN_IRQn (Bit 23)                             */
#define NVIC_ISER_SRC_IN_IRQn_Msk             (0x800000UL)              /*!< NVIC ISER: SRC_IN_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISER_SRC_OUT_IRQn_Pos            (24UL)                    /*!< NVIC ISER: SRC_OUT_IRQn (Bit 24)                            */
#define NVIC_ISER_SRC_OUT_IRQn_Msk            (0x1000000UL)             /*!< NVIC ISER: SRC_OUT_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISER_VBUS_IRQn_Pos               (25UL)                    /*!< NVIC ISER: VBUS_IRQn (Bit 25)                               */
#define NVIC_ISER_VBUS_IRQn_Msk               (0x2000000UL)             /*!< NVIC ISER: VBUS_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_DMA_IRQn_Pos                (26UL)                    /*!< NVIC ISER: DMA_IRQn (Bit 26)                                */
#define NVIC_ISER_DMA_IRQn_Msk                (0x4000000UL)             /*!< NVIC ISER: DMA_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISER_RF_DIAG_IRQn_Pos            (27UL)                    /*!< NVIC ISER: RF_DIAG_IRQn (Bit 27)                            */
#define NVIC_ISER_RF_DIAG_IRQn_Msk            (0x8000000UL)             /*!< NVIC ISER: RF_DIAG_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISER_TRNG_IRQn_Pos               (28UL)                    /*!< NVIC ISER: TRNG_IRQn (Bit 28)                               */
#define NVIC_ISER_TRNG_IRQn_Msk               (0x10000000UL)            /*!< NVIC ISER: TRNG_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_DCDC_IRQn_Pos               (29UL)                    /*!< NVIC ISER: DCDC_IRQn (Bit 29)                               */
#define NVIC_ISER_DCDC_IRQn_Msk               (0x20000000UL)            /*!< NVIC ISER: DCDC_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISER_XTAL16RDY_IRQn_Pos          (30UL)                    /*!< NVIC ISER: XTAL16RDY_IRQn (Bit 30)                          */
#define NVIC_ISER_XTAL16RDY_IRQn_Msk          (0x40000000UL)            /*!< NVIC ISER: XTAL16RDY_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ISER_Rsvd__irq__n_Pos            (31UL)                    /*!< NVIC ISER: Rsvd__irq__n (Bit 31)                            */
#define NVIC_ISER_Rsvd__irq__n_Msk            (0x80000000UL)            /*!< NVIC ISER: Rsvd__irq__n (Bitfield-Mask: 0x01)               */
/* ----------------------------------  NVIC_ICER  --------------------------------- */
#define NVIC_ICER_BLE_WAKEUP_LP_IRQn_Pos      (0UL)                     /*!< NVIC ICER: BLE_WAKEUP_LP_IRQn (Bit 0)                       */
#define NVIC_ICER_BLE_WAKEUP_LP_IRQn_Msk      (0x1UL)                   /*!< NVIC ICER: BLE_WAKEUP_LP_IRQn (Bitfield-Mask: 0x01)         */
#define NVIC_ICER_BLE_GEN_IRQn_Pos            (1UL)                     /*!< NVIC ICER: BLE_GEN_IRQn (Bit 1)                             */
#define NVIC_ICER_BLE_GEN_IRQn_Msk            (0x2UL)                   /*!< NVIC ICER: BLE_GEN_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICER_FTDF_WAKEUP_IRQn_Pos        (2UL)                     /*!< NVIC ICER: FTDF_WAKEUP_IRQn (Bit 2)                         */
#define NVIC_ICER_FTDF_WAKEUP_IRQn_Msk        (0x4UL)                   /*!< NVIC ICER: FTDF_WAKEUP_IRQn (Bitfield-Mask: 0x01)           */
#define NVIC_ICER_FTDF_GEN_IRQn_Pos           (3UL)                     /*!< NVIC ICER: FTDF_GEN_IRQn (Bit 3)                            */
#define NVIC_ICER_FTDF_GEN_IRQn_Msk           (0x8UL)                   /*!< NVIC ICER: FTDF_GEN_IRQn (Bitfield-Mask: 0x01)              */
#define NVIC_ICER_RFCAL_IRQn_Pos              (4UL)                     /*!< NVIC ICER: RFCAL_IRQn (Bit 4)                               */
#define NVIC_ICER_RFCAL_IRQn_Msk              (0x10UL)                  /*!< NVIC ICER: RFCAL_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICER_COEX_IRQn_Pos               (5UL)                     /*!< NVIC ICER: COEX_IRQn (Bit 5)                                */
#define NVIC_ICER_COEX_IRQn_Msk               (0x20UL)                  /*!< NVIC ICER: COEX_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_CRYPTO_IRQn_Pos             (6UL)                     /*!< NVIC ICER: CRYPTO_IRQn (Bit 6)                              */
#define NVIC_ICER_CRYPTO_IRQn_Msk             (0x40UL)                  /*!< NVIC ICER: CRYPTO_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_MRM_IRQn_Pos                (7UL)                     /*!< NVIC ICER: MRM_IRQn (Bit 7)                                 */
#define NVIC_ICER_MRM_IRQn_Msk                (0x80UL)                  /*!< NVIC ICER: MRM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_UART_IRQn_Pos               (8UL)                     /*!< NVIC ICER: UART_IRQn (Bit 8)                                */
#define NVIC_ICER_UART_IRQn_Msk               (0x100UL)                 /*!< NVIC ICER: UART_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_UART2_IRQn_Pos              (9UL)                     /*!< NVIC ICER: UART2_IRQn (Bit 9)                               */
#define NVIC_ICER_UART2_IRQn_Msk              (0x200UL)                 /*!< NVIC ICER: UART2_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICER_I2C_IRQn_Pos                (10UL)                    /*!< NVIC ICER: I2C_IRQn (Bit 10)                                */
#define NVIC_ICER_I2C_IRQn_Msk                (0x400UL)                 /*!< NVIC ICER: I2C_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_I2C2_IRQn_Pos               (11UL)                    /*!< NVIC ICER: I2C2_IRQn (Bit 11)                               */
#define NVIC_ICER_I2C2_IRQn_Msk               (0x800UL)                 /*!< NVIC ICER: I2C2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_SPI_IRQn_Pos                (12UL)                    /*!< NVIC ICER: SPI_IRQn (Bit 12)                                */
#define NVIC_ICER_SPI_IRQn_Msk                (0x1000UL)                /*!< NVIC ICER: SPI_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_SPI2_IRQn_Pos               (13UL)                    /*!< NVIC ICER: SPI2_IRQn (Bit 13)                               */
#define NVIC_ICER_SPI2_IRQn_Msk               (0x2000UL)                /*!< NVIC ICER: SPI2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_ADC_IRQn_Pos                (14UL)                    /*!< NVIC ICER: ADC_IRQn (Bit 14)                                */
#define NVIC_ICER_ADC_IRQn_Msk                (0x4000UL)                /*!< NVIC ICER: ADC_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_KEYBRD_IRQn_Pos             (15UL)                    /*!< NVIC ICER: KEYBRD_IRQn (Bit 15)                             */
#define NVIC_ICER_KEYBRD_IRQn_Msk             (0x8000UL)                /*!< NVIC ICER: KEYBRD_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_IRGEN_IRQn_Pos              (16UL)                    /*!< NVIC ICER: IRGEN_IRQn (Bit 16)                              */
#define NVIC_ICER_IRGEN_IRQn_Msk              (0x10000UL)               /*!< NVIC ICER: IRGEN_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICER_WKUP_GPIO_IRQn_Pos          (17UL)                    /*!< NVIC ICER: WKUP_GPIO_IRQn (Bit 17)                          */
#define NVIC_ICER_WKUP_GPIO_IRQn_Msk          (0x20000UL)               /*!< NVIC ICER: WKUP_GPIO_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ICER_SWTIM0_IRQn_Pos             (18UL)                    /*!< NVIC ICER: SWTIM0_IRQn (Bit 18)                             */
#define NVIC_ICER_SWTIM0_IRQn_Msk             (0x40000UL)               /*!< NVIC ICER: SWTIM0_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_SWTIM1_IRQn_Pos             (19UL)                    /*!< NVIC ICER: SWTIM1_IRQn (Bit 19)                             */
#define NVIC_ICER_SWTIM1_IRQn_Msk             (0x80000UL)               /*!< NVIC ICER: SWTIM1_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_QUADEC_IRQn_Pos             (20UL)                    /*!< NVIC ICER: QUADEC_IRQn (Bit 20)                             */
#define NVIC_ICER_QUADEC_IRQn_Msk             (0x100000UL)              /*!< NVIC ICER: QUADEC_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_USB_IRQn_Pos                (21UL)                    /*!< NVIC ICER: USB_IRQn (Bit 21)                                */
#define NVIC_ICER_USB_IRQn_Msk                (0x200000UL)              /*!< NVIC ICER: USB_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_PCM_IRQn_Pos                (22UL)                    /*!< NVIC ICER: PCM_IRQn (Bit 22)                                */
#define NVIC_ICER_PCM_IRQn_Msk                (0x400000UL)              /*!< NVIC ICER: PCM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_SRC_IN_IRQn_Pos             (23UL)                    /*!< NVIC ICER: SRC_IN_IRQn (Bit 23)                             */
#define NVIC_ICER_SRC_IN_IRQn_Msk             (0x800000UL)              /*!< NVIC ICER: SRC_IN_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICER_SRC_OUT_IRQn_Pos            (24UL)                    /*!< NVIC ICER: SRC_OUT_IRQn (Bit 24)                            */
#define NVIC_ICER_SRC_OUT_IRQn_Msk            (0x1000000UL)             /*!< NVIC ICER: SRC_OUT_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICER_VBUS_IRQn_Pos               (25UL)                    /*!< NVIC ICER: VBUS_IRQn (Bit 25)                               */
#define NVIC_ICER_VBUS_IRQn_Msk               (0x2000000UL)             /*!< NVIC ICER: VBUS_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_DMA_IRQn_Pos                (26UL)                    /*!< NVIC ICER: DMA_IRQn (Bit 26)                                */
#define NVIC_ICER_DMA_IRQn_Msk                (0x4000000UL)             /*!< NVIC ICER: DMA_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICER_RF_DIAG_IRQn_Pos            (27UL)                    /*!< NVIC ICER: RF_DIAG_IRQn (Bit 27)                            */
#define NVIC_ICER_RF_DIAG_IRQn_Msk            (0x8000000UL)             /*!< NVIC ICER: RF_DIAG_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICER_TRNG_IRQn_Pos               (28UL)                    /*!< NVIC ICER: TRNG_IRQn (Bit 28)                               */
#define NVIC_ICER_TRNG_IRQn_Msk               (0x10000000UL)            /*!< NVIC ICER: TRNG_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_DCDC_IRQn_Pos               (29UL)                    /*!< NVIC ICER: DCDC_IRQn (Bit 29)                               */
#define NVIC_ICER_DCDC_IRQn_Msk               (0x20000000UL)            /*!< NVIC ICER: DCDC_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICER_XTAL16RDY_IRQn_Pos          (30UL)                    /*!< NVIC ICER: XTAL16RDY_IRQn (Bit 30)                          */
#define NVIC_ICER_XTAL16RDY_IRQn_Msk          (0x40000000UL)            /*!< NVIC ICER: XTAL16RDY_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ICER_Rsvd__irq__n_Pos            (31UL)                    /*!< NVIC ICER: Rsvd__irq__n (Bit 31)                            */
#define NVIC_ICER_Rsvd__irq__n_Msk            (0x80000000UL)            /*!< NVIC ICER: Rsvd__irq__n (Bitfield-Mask: 0x01)               */
/* ----------------------------------  NVIC_ISPR  --------------------------------- */
#define NVIC_ISPR_BLE_WAKEUP_LP_IRQn_Pos      (0UL)                     /*!< NVIC ISPR: BLE_WAKEUP_LP_IRQn (Bit 0)                       */
#define NVIC_ISPR_BLE_WAKEUP_LP_IRQn_Msk      (0x1UL)                   /*!< NVIC ISPR: BLE_WAKEUP_LP_IRQn (Bitfield-Mask: 0x01)         */
#define NVIC_ISPR_BLE_GEN_IRQn_Pos            (1UL)                     /*!< NVIC ISPR: BLE_GEN_IRQn (Bit 1)                             */
#define NVIC_ISPR_BLE_GEN_IRQn_Msk            (0x2UL)                   /*!< NVIC ISPR: BLE_GEN_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISPR_FTDF_WAKEUP_IRQn_Pos        (2UL)                     /*!< NVIC ISPR: FTDF_WAKEUP_IRQn (Bit 2)                         */
#define NVIC_ISPR_FTDF_WAKEUP_IRQn_Msk        (0x4UL)                   /*!< NVIC ISPR: FTDF_WAKEUP_IRQn (Bitfield-Mask: 0x01)           */
#define NVIC_ISPR_FTDF_GEN_IRQn_Pos           (3UL)                     /*!< NVIC ISPR: FTDF_GEN_IRQn (Bit 3)                            */
#define NVIC_ISPR_FTDF_GEN_IRQn_Msk           (0x8UL)                   /*!< NVIC ISPR: FTDF_GEN_IRQn (Bitfield-Mask: 0x01)              */
#define NVIC_ISPR_RFCAL_IRQn_Pos              (4UL)                     /*!< NVIC ISPR: RFCAL_IRQn (Bit 4)                               */
#define NVIC_ISPR_RFCAL_IRQn_Msk              (0x10UL)                  /*!< NVIC ISPR: RFCAL_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISPR_COEX_IRQn_Pos               (5UL)                     /*!< NVIC ISPR: COEX_IRQn (Bit 5)                                */
#define NVIC_ISPR_COEX_IRQn_Msk               (0x20UL)                  /*!< NVIC ISPR: COEX_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_CRYPTO_IRQn_Pos             (6UL)                     /*!< NVIC ISPR: CRYPTO_IRQn (Bit 6)                              */
#define NVIC_ISPR_CRYPTO_IRQn_Msk             (0x40UL)                  /*!< NVIC ISPR: CRYPTO_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_MRM_IRQn_Pos                (7UL)                     /*!< NVIC ISPR: MRM_IRQn (Bit 7)                                 */
#define NVIC_ISPR_MRM_IRQn_Msk                (0x80UL)                  /*!< NVIC ISPR: MRM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_UART_IRQn_Pos               (8UL)                     /*!< NVIC ISPR: UART_IRQn (Bit 8)                                */
#define NVIC_ISPR_UART_IRQn_Msk               (0x100UL)                 /*!< NVIC ISPR: UART_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_UART2_IRQn_Pos              (9UL)                     /*!< NVIC ISPR: UART2_IRQn (Bit 9)                               */
#define NVIC_ISPR_UART2_IRQn_Msk              (0x200UL)                 /*!< NVIC ISPR: UART2_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISPR_I2C_IRQn_Pos                (10UL)                    /*!< NVIC ISPR: I2C_IRQn (Bit 10)                                */
#define NVIC_ISPR_I2C_IRQn_Msk                (0x400UL)                 /*!< NVIC ISPR: I2C_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_I2C2_IRQn_Pos               (11UL)                    /*!< NVIC ISPR: I2C2_IRQn (Bit 11)                               */
#define NVIC_ISPR_I2C2_IRQn_Msk               (0x800UL)                 /*!< NVIC ISPR: I2C2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_SPI_IRQn_Pos                (12UL)                    /*!< NVIC ISPR: SPI_IRQn (Bit 12)                                */
#define NVIC_ISPR_SPI_IRQn_Msk                (0x1000UL)                /*!< NVIC ISPR: SPI_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_SPI2_IRQn_Pos               (13UL)                    /*!< NVIC ISPR: SPI2_IRQn (Bit 13)                               */
#define NVIC_ISPR_SPI2_IRQn_Msk               (0x2000UL)                /*!< NVIC ISPR: SPI2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_ADC_IRQn_Pos                (14UL)                    /*!< NVIC ISPR: ADC_IRQn (Bit 14)                                */
#define NVIC_ISPR_ADC_IRQn_Msk                (0x4000UL)                /*!< NVIC ISPR: ADC_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_KEYBRD_IRQn_Pos             (15UL)                    /*!< NVIC ISPR: KEYBRD_IRQn (Bit 15)                             */
#define NVIC_ISPR_KEYBRD_IRQn_Msk             (0x8000UL)                /*!< NVIC ISPR: KEYBRD_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_IRGEN_IRQn_Pos              (16UL)                    /*!< NVIC ISPR: IRGEN_IRQn (Bit 16)                              */
#define NVIC_ISPR_IRGEN_IRQn_Msk              (0x10000UL)               /*!< NVIC ISPR: IRGEN_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ISPR_WKUP_GPIO_IRQn_Pos          (17UL)                    /*!< NVIC ISPR: WKUP_GPIO_IRQn (Bit 17)                          */
#define NVIC_ISPR_WKUP_GPIO_IRQn_Msk          (0x20000UL)               /*!< NVIC ISPR: WKUP_GPIO_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ISPR_SWTIM0_IRQn_Pos             (18UL)                    /*!< NVIC ISPR: SWTIM0_IRQn (Bit 18)                             */
#define NVIC_ISPR_SWTIM0_IRQn_Msk             (0x40000UL)               /*!< NVIC ISPR: SWTIM0_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_SWTIM1_IRQn_Pos             (19UL)                    /*!< NVIC ISPR: SWTIM1_IRQn (Bit 19)                             */
#define NVIC_ISPR_SWTIM1_IRQn_Msk             (0x80000UL)               /*!< NVIC ISPR: SWTIM1_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_QUADEC_IRQn_Pos             (20UL)                    /*!< NVIC ISPR: QUADEC_IRQn (Bit 20)                             */
#define NVIC_ISPR_QUADEC_IRQn_Msk             (0x100000UL)              /*!< NVIC ISPR: QUADEC_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_USB_IRQn_Pos                (21UL)                    /*!< NVIC ISPR: USB_IRQn (Bit 21)                                */
#define NVIC_ISPR_USB_IRQn_Msk                (0x200000UL)              /*!< NVIC ISPR: USB_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_PCM_IRQn_Pos                (22UL)                    /*!< NVIC ISPR: PCM_IRQn (Bit 22)                                */
#define NVIC_ISPR_PCM_IRQn_Msk                (0x400000UL)              /*!< NVIC ISPR: PCM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_SRC_IN_IRQn_Pos             (23UL)                    /*!< NVIC ISPR: SRC_IN_IRQn (Bit 23)                             */
#define NVIC_ISPR_SRC_IN_IRQn_Msk             (0x800000UL)              /*!< NVIC ISPR: SRC_IN_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ISPR_SRC_OUT_IRQn_Pos            (24UL)                    /*!< NVIC ISPR: SRC_OUT_IRQn (Bit 24)                            */
#define NVIC_ISPR_SRC_OUT_IRQn_Msk            (0x1000000UL)             /*!< NVIC ISPR: SRC_OUT_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISPR_VBUS_IRQn_Pos               (25UL)                    /*!< NVIC ISPR: VBUS_IRQn (Bit 25)                               */
#define NVIC_ISPR_VBUS_IRQn_Msk               (0x2000000UL)             /*!< NVIC ISPR: VBUS_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_DMA_IRQn_Pos                (26UL)                    /*!< NVIC ISPR: DMA_IRQn (Bit 26)                                */
#define NVIC_ISPR_DMA_IRQn_Msk                (0x4000000UL)             /*!< NVIC ISPR: DMA_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ISPR_RF_DIAG_IRQn_Pos            (27UL)                    /*!< NVIC ISPR: RF_DIAG_IRQn (Bit 27)                            */
#define NVIC_ISPR_RF_DIAG_IRQn_Msk            (0x8000000UL)             /*!< NVIC ISPR: RF_DIAG_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ISPR_TRNG_IRQn_Pos               (28UL)                    /*!< NVIC ISPR: TRNG_IRQn (Bit 28)                               */
#define NVIC_ISPR_TRNG_IRQn_Msk               (0x10000000UL)            /*!< NVIC ISPR: TRNG_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_DCDC_IRQn_Pos               (29UL)                    /*!< NVIC ISPR: DCDC_IRQn (Bit 29)                               */
#define NVIC_ISPR_DCDC_IRQn_Msk               (0x20000000UL)            /*!< NVIC ISPR: DCDC_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ISPR_XTAL16RDY_IRQn_Pos          (30UL)                    /*!< NVIC ISPR: XTAL16RDY_IRQn (Bit 30)                          */
#define NVIC_ISPR_XTAL16RDY_IRQn_Msk          (0x40000000UL)            /*!< NVIC ISPR: XTAL16RDY_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ISPR_Rsvd__irq__n_Pos            (31UL)                    /*!< NVIC ISPR: Rsvd__irq__n (Bit 31)                            */
#define NVIC_ISPR_Rsvd__irq__n_Msk            (0x80000000UL)            /*!< NVIC ISPR: Rsvd__irq__n (Bitfield-Mask: 0x01)               */
/* ----------------------------------  NVIC_ICPR  --------------------------------- */
#define NVIC_ICPR_BLE_WAKEUP_LP_IRQn_Pos      (0UL)                     /*!< NVIC ICPR: BLE_WAKEUP_LP_IRQn (Bit 0)                       */
#define NVIC_ICPR_BLE_WAKEUP_LP_IRQn_Msk      (0x1UL)                   /*!< NVIC ICPR: BLE_WAKEUP_LP_IRQn (Bitfield-Mask: 0x01)         */
#define NVIC_ICPR_BLE_GEN_IRQn_Pos            (1UL)                     /*!< NVIC ICPR: BLE_GEN_IRQn (Bit 1)                             */
#define NVIC_ICPR_BLE_GEN_IRQn_Msk            (0x2UL)                   /*!< NVIC ICPR: BLE_GEN_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICPR_FTDF_WAKEUP_IRQn_Pos        (2UL)                     /*!< NVIC ICPR: FTDF_WAKEUP_IRQn (Bit 2)                         */
#define NVIC_ICPR_FTDF_WAKEUP_IRQn_Msk        (0x4UL)                   /*!< NVIC ICPR: FTDF_WAKEUP_IRQn (Bitfield-Mask: 0x01)           */
#define NVIC_ICPR_FTDF_GEN_IRQn_Pos           (3UL)                     /*!< NVIC ICPR: FTDF_GEN_IRQn (Bit 3)                            */
#define NVIC_ICPR_FTDF_GEN_IRQn_Msk           (0x8UL)                   /*!< NVIC ICPR: FTDF_GEN_IRQn (Bitfield-Mask: 0x01)              */
#define NVIC_ICPR_RFCAL_IRQn_Pos              (4UL)                     /*!< NVIC ICPR: RFCAL_IRQn (Bit 4)                               */
#define NVIC_ICPR_RFCAL_IRQn_Msk              (0x10UL)                  /*!< NVIC ICPR: RFCAL_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICPR_COEX_IRQn_Pos               (5UL)                     /*!< NVIC ICPR: COEX_IRQn (Bit 5)                                */
#define NVIC_ICPR_COEX_IRQn_Msk               (0x20UL)                  /*!< NVIC ICPR: COEX_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_CRYPTO_IRQn_Pos             (6UL)                     /*!< NVIC ICPR: CRYPTO_IRQn (Bit 6)                              */
#define NVIC_ICPR_CRYPTO_IRQn_Msk             (0x40UL)                  /*!< NVIC ICPR: CRYPTO_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_MRM_IRQn_Pos                (7UL)                     /*!< NVIC ICPR: MRM_IRQn (Bit 7)                                 */
#define NVIC_ICPR_MRM_IRQn_Msk                (0x80UL)                  /*!< NVIC ICPR: MRM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_UART_IRQn_Pos               (8UL)                     /*!< NVIC ICPR: UART_IRQn (Bit 8)                                */
#define NVIC_ICPR_UART_IRQn_Msk               (0x100UL)                 /*!< NVIC ICPR: UART_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_UART2_IRQn_Pos              (9UL)                     /*!< NVIC ICPR: UART2_IRQn (Bit 9)                               */
#define NVIC_ICPR_UART2_IRQn_Msk              (0x200UL)                 /*!< NVIC ICPR: UART2_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICPR_I2C_IRQn_Pos                (10UL)                    /*!< NVIC ICPR: I2C_IRQn (Bit 10)                                */
#define NVIC_ICPR_I2C_IRQn_Msk                (0x400UL)                 /*!< NVIC ICPR: I2C_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_I2C2_IRQn_Pos               (11UL)                    /*!< NVIC ICPR: I2C2_IRQn (Bit 11)                               */
#define NVIC_ICPR_I2C2_IRQn_Msk               (0x800UL)                 /*!< NVIC ICPR: I2C2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_SPI_IRQn_Pos                (12UL)                    /*!< NVIC ICPR: SPI_IRQn (Bit 12)                                */
#define NVIC_ICPR_SPI_IRQn_Msk                (0x1000UL)                /*!< NVIC ICPR: SPI_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_SPI2_IRQn_Pos               (13UL)                    /*!< NVIC ICPR: SPI2_IRQn (Bit 13)                               */
#define NVIC_ICPR_SPI2_IRQn_Msk               (0x2000UL)                /*!< NVIC ICPR: SPI2_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_ADC_IRQn_Pos                (14UL)                    /*!< NVIC ICPR: ADC_IRQn (Bit 14)                                */
#define NVIC_ICPR_ADC_IRQn_Msk                (0x4000UL)                /*!< NVIC ICPR: ADC_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_KEYBRD_IRQn_Pos             (15UL)                    /*!< NVIC ICPR: KEYBRD_IRQn (Bit 15)                             */
#define NVIC_ICPR_KEYBRD_IRQn_Msk             (0x8000UL)                /*!< NVIC ICPR: KEYBRD_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_IRGEN_IRQn_Pos              (16UL)                    /*!< NVIC ICPR: IRGEN_IRQn (Bit 16)                              */
#define NVIC_ICPR_IRGEN_IRQn_Msk              (0x10000UL)               /*!< NVIC ICPR: IRGEN_IRQn (Bitfield-Mask: 0x01)                 */
#define NVIC_ICPR_WKUP_GPIO_IRQn_Pos          (17UL)                    /*!< NVIC ICPR: WKUP_GPIO_IRQn (Bit 17)                          */
#define NVIC_ICPR_WKUP_GPIO_IRQn_Msk          (0x20000UL)               /*!< NVIC ICPR: WKUP_GPIO_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ICPR_SWTIM0_IRQn_Pos             (18UL)                    /*!< NVIC ICPR: SWTIM0_IRQn (Bit 18)                             */
#define NVIC_ICPR_SWTIM0_IRQn_Msk             (0x40000UL)               /*!< NVIC ICPR: SWTIM0_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_SWTIM1_IRQn_Pos             (19UL)                    /*!< NVIC ICPR: SWTIM1_IRQn (Bit 19)                             */
#define NVIC_ICPR_SWTIM1_IRQn_Msk             (0x80000UL)               /*!< NVIC ICPR: SWTIM1_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_QUADEC_IRQn_Pos             (20UL)                    /*!< NVIC ICPR: QUADEC_IRQn (Bit 20)                             */
#define NVIC_ICPR_QUADEC_IRQn_Msk             (0x100000UL)              /*!< NVIC ICPR: QUADEC_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_USB_IRQn_Pos                (21UL)                    /*!< NVIC ICPR: USB_IRQn (Bit 21)                                */
#define NVIC_ICPR_USB_IRQn_Msk                (0x200000UL)              /*!< NVIC ICPR: USB_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_PCM_IRQn_Pos                (22UL)                    /*!< NVIC ICPR: PCM_IRQn (Bit 22)                                */
#define NVIC_ICPR_PCM_IRQn_Msk                (0x400000UL)              /*!< NVIC ICPR: PCM_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_SRC_IN_IRQn_Pos             (23UL)                    /*!< NVIC ICPR: SRC_IN_IRQn (Bit 23)                             */
#define NVIC_ICPR_SRC_IN_IRQn_Msk             (0x800000UL)              /*!< NVIC ICPR: SRC_IN_IRQn (Bitfield-Mask: 0x01)                */
#define NVIC_ICPR_SRC_OUT_IRQn_Pos            (24UL)                    /*!< NVIC ICPR: SRC_OUT_IRQn (Bit 24)                            */
#define NVIC_ICPR_SRC_OUT_IRQn_Msk            (0x1000000UL)             /*!< NVIC ICPR: SRC_OUT_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICPR_VBUS_IRQn_Pos               (25UL)                    /*!< NVIC ICPR: VBUS_IRQn (Bit 25)                               */
#define NVIC_ICPR_VBUS_IRQn_Msk               (0x2000000UL)             /*!< NVIC ICPR: VBUS_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_DMA_IRQn_Pos                (26UL)                    /*!< NVIC ICPR: DMA_IRQn (Bit 26)                                */
#define NVIC_ICPR_DMA_IRQn_Msk                (0x4000000UL)             /*!< NVIC ICPR: DMA_IRQn (Bitfield-Mask: 0x01)                   */
#define NVIC_ICPR_RF_DIAG_IRQn_Pos            (27UL)                    /*!< NVIC ICPR: RF_DIAG_IRQn (Bit 27)                            */
#define NVIC_ICPR_RF_DIAG_IRQn_Msk            (0x8000000UL)             /*!< NVIC ICPR: RF_DIAG_IRQn (Bitfield-Mask: 0x01)               */
#define NVIC_ICPR_TRNG_IRQn_Pos               (28UL)                    /*!< NVIC ICPR: TRNG_IRQn (Bit 28)                               */
#define NVIC_ICPR_TRNG_IRQn_Msk               (0x10000000UL)            /*!< NVIC ICPR: TRNG_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_DCDC_IRQn_Pos               (29UL)                    /*!< NVIC ICPR: DCDC_IRQn (Bit 29)                               */
#define NVIC_ICPR_DCDC_IRQn_Msk               (0x20000000UL)            /*!< NVIC ICPR: DCDC_IRQn (Bitfield-Mask: 0x01)                  */
#define NVIC_ICPR_XTAL16RDY_IRQn_Pos          (30UL)                    /*!< NVIC ICPR: XTAL16RDY_IRQn (Bit 30)                          */
#define NVIC_ICPR_XTAL16RDY_IRQn_Msk          (0x40000000UL)            /*!< NVIC ICPR: XTAL16RDY_IRQn (Bitfield-Mask: 0x01)             */
#define NVIC_ICPR_Rsvd__irq__n_Pos            (31UL)                    /*!< NVIC ICPR: Rsvd__irq__n (Bit 31)                            */
#define NVIC_ICPR_Rsvd__irq__n_Msk            (0x80000000UL)            /*!< NVIC ICPR: Rsvd__irq__n (Bitfield-Mask: 0x01)               */
/* ----------------------------------  NVIC_IPR0  --------------------------------- */
#define NVIC_IPR0_BLE_WAKEUP_LP_IRQn_prio_Pos (0UL)                     /*!< NVIC IPR0: BLE_WAKEUP_LP_IRQn_prio (Bit 0)                  */
#define NVIC_IPR0_BLE_WAKEUP_LP_IRQn_prio_Msk (0xffUL)                  /*!< NVIC IPR0: BLE_WAKEUP_LP_IRQn_prio (Bitfield-Mask: 0xff)    */
#define NVIC_IPR0_BLE_GEN_IRQn_prio_Pos       (8UL)                     /*!< NVIC IPR0: BLE_GEN_IRQn_prio (Bit 8)                        */
#define NVIC_IPR0_BLE_GEN_IRQn_prio_Msk       (0xff00UL)                /*!< NVIC IPR0: BLE_GEN_IRQn_prio (Bitfield-Mask: 0xff)          */
#define NVIC_IPR0_FTDF_WAKEUP_IRQn_prio_Pos   (16UL)                    /*!< NVIC IPR0: FTDF_WAKEUP_IRQn_prio (Bit 16)                   */
#define NVIC_IPR0_FTDF_WAKEUP_IRQn_prio_Msk   (0xff0000UL)              /*!< NVIC IPR0: FTDF_WAKEUP_IRQn_prio (Bitfield-Mask: 0xff)      */
#define NVIC_IPR0_FTDF_GEN_IRQn_prio_Pos      (24UL)                    /*!< NVIC IPR0: FTDF_GEN_IRQn_prio (Bit 24)                      */
#define NVIC_IPR0_FTDF_GEN_IRQn_prio_Msk      (0xff000000UL)            /*!< NVIC IPR0: FTDF_GEN_IRQn_prio (Bitfield-Mask: 0xff)         */
/* ----------------------------------  NVIC_IPR1  --------------------------------- */
#define NVIC_IPR1_RFCAL_IRQn_prio_Pos         (0UL)                     /*!< NVIC IPR1: RFCAL_IRQn_prio (Bit 0)                          */
#define NVIC_IPR1_RFCAL_IRQn_prio_Msk         (0xffUL)                  /*!< NVIC IPR1: RFCAL_IRQn_prio (Bitfield-Mask: 0xff)            */
#define NVIC_IPR1_COEX_IRQn_prio_Pos          (8UL)                     /*!< NVIC IPR1: COEX_IRQn_prio (Bit 8)                           */
#define NVIC_IPR1_COEX_IRQn_prio_Msk          (0xff00UL)                /*!< NVIC IPR1: COEX_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR1_CRYPTO_IRQn_prio_Pos        (16UL)                    /*!< NVIC IPR1: CRYPTO_IRQn_prio (Bit 16)                        */
#define NVIC_IPR1_CRYPTO_IRQn_prio_Msk        (0xff0000UL)              /*!< NVIC IPR1: CRYPTO_IRQn_prio (Bitfield-Mask: 0xff)           */
#define NVIC_IPR1_MRM_IRQn_prio_Pos           (24UL)                    /*!< NVIC IPR1: MRM_IRQn_prio (Bit 24)                           */
#define NVIC_IPR1_MRM_IRQn_prio_Msk           (0xff000000UL)            /*!< NVIC IPR1: MRM_IRQn_prio (Bitfield-Mask: 0xff)              */
/* ----------------------------------  NVIC_IPR2  --------------------------------- */
#define NVIC_IPR2_UART_IRQn_prio_Pos          (0UL)                     /*!< NVIC IPR2: UART_IRQn_prio (Bit 0)                           */
#define NVIC_IPR2_UART_IRQn_prio_Msk          (0xffUL)                  /*!< NVIC IPR2: UART_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR2_UART2_IRQn_prio_Pos         (8UL)                     /*!< NVIC IPR2: UART2_IRQn_prio (Bit 8)                          */
#define NVIC_IPR2_UART2_IRQn_prio_Msk         (0xff00UL)                /*!< NVIC IPR2: UART2_IRQn_prio (Bitfield-Mask: 0xff)            */
#define NVIC_IPR2_I2C_IRQn_prio_Pos           (16UL)                    /*!< NVIC IPR2: I2C_IRQn_prio (Bit 16)                           */
#define NVIC_IPR2_I2C_IRQn_prio_Msk           (0xff0000UL)              /*!< NVIC IPR2: I2C_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR2_I2C2_IRQn_prio_Pos          (24UL)                    /*!< NVIC IPR2: I2C2_IRQn_prio (Bit 24)                          */
#define NVIC_IPR2_I2C2_IRQn_prio_Msk          (0xff000000UL)            /*!< NVIC IPR2: I2C2_IRQn_prio (Bitfield-Mask: 0xff)             */
/* ----------------------------------  NVIC_IPR3  --------------------------------- */
#define NVIC_IPR3_SPI_IRQn_prio_Pos           (0UL)                     /*!< NVIC IPR3: SPI_IRQn_prio (Bit 0)                            */
#define NVIC_IPR3_SPI_IRQn_prio_Msk           (0xffUL)                  /*!< NVIC IPR3: SPI_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR3_SPI2_IRQn_prio_Pos          (8UL)                     /*!< NVIC IPR3: SPI2_IRQn_prio (Bit 8)                           */
#define NVIC_IPR3_SPI2_IRQn_prio_Msk          (0xff00UL)                /*!< NVIC IPR3: SPI2_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR3_ADC_IRQn_prio_Pos           (16UL)                    /*!< NVIC IPR3: ADC_IRQn_prio (Bit 16)                           */
#define NVIC_IPR3_ADC_IRQn_prio_Msk           (0xff0000UL)              /*!< NVIC IPR3: ADC_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR3_KEYBRD_IRQn_prio_Pos        (24UL)                    /*!< NVIC IPR3: KEYBRD_IRQn_prio (Bit 24)                        */
#define NVIC_IPR3_KEYBRD_IRQn_prio_Msk        (0xff000000UL)            /*!< NVIC IPR3: KEYBRD_IRQn_prio (Bitfield-Mask: 0xff)           */
/* ----------------------------------  NVIC_IPR4  --------------------------------- */
#define NVIC_IPR4_IRGEN_IRQn_prio_Pos         (0UL)                     /*!< NVIC IPR4: IRGEN_IRQn_prio (Bit 0)                          */
#define NVIC_IPR4_IRGEN_IRQn_prio_Msk         (0xffUL)                  /*!< NVIC IPR4: IRGEN_IRQn_prio (Bitfield-Mask: 0xff)            */
#define NVIC_IPR4_WKUP_GPIO_IRQn_prio_Pos     (8UL)                     /*!< NVIC IPR4: WKUP_GPIO_IRQn_prio (Bit 8)                      */
#define NVIC_IPR4_WKUP_GPIO_IRQn_prio_Msk     (0xff00UL)                /*!< NVIC IPR4: WKUP_GPIO_IRQn_prio (Bitfield-Mask: 0xff)        */
#define NVIC_IPR4_SWTIM0_IRQn_prio_Pos        (16UL)                    /*!< NVIC IPR4: SWTIM0_IRQn_prio (Bit 16)                        */
#define NVIC_IPR4_SWTIM0_IRQn_prio_Msk        (0xff0000UL)              /*!< NVIC IPR4: SWTIM0_IRQn_prio (Bitfield-Mask: 0xff)           */
#define NVIC_IPR4_SWTIM1_IRQn_prio_Pos        (24UL)                    /*!< NVIC IPR4: SWTIM1_IRQn_prio (Bit 24)                        */
#define NVIC_IPR4_SWTIM1_IRQn_prio_Msk        (0xff000000UL)            /*!< NVIC IPR4: SWTIM1_IRQn_prio (Bitfield-Mask: 0xff)           */
/* ----------------------------------  NVIC_IPR5  --------------------------------- */
#define NVIC_IPR5_QUADEC_IRQn_prio_Pos        (0UL)                     /*!< NVIC IPR5: QUADEC_IRQn_prio (Bit 0)                         */
#define NVIC_IPR5_QUADEC_IRQn_prio_Msk        (0xffUL)                  /*!< NVIC IPR5: QUADEC_IRQn_prio (Bitfield-Mask: 0xff)           */
#define NVIC_IPR5_USB_IRQn_prio_Pos           (8UL)                     /*!< NVIC IPR5: USB_IRQn_prio (Bit 8)                            */
#define NVIC_IPR5_USB_IRQn_prio_Msk           (0xff00UL)                /*!< NVIC IPR5: USB_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR5_PCM_IRQn_prio_Pos           (16UL)                    /*!< NVIC IPR5: PCM_IRQn_prio (Bit 16)                           */
#define NVIC_IPR5_PCM_IRQn_prio_Msk           (0xff0000UL)              /*!< NVIC IPR5: PCM_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR5_SRC_IN_IRQn_prio_Pos        (24UL)                    /*!< NVIC IPR5: SRC_IN_IRQn_prio (Bit 24)                        */
#define NVIC_IPR5_SRC_IN_IRQn_prio_Msk        (0xff000000UL)            /*!< NVIC IPR5: SRC_IN_IRQn_prio (Bitfield-Mask: 0xff)           */
/* ----------------------------------  NVIC_IPR6  --------------------------------- */
#define NVIC_IPR6_SRC_OUT_IRQn_prio_Pos       (0UL)                     /*!< NVIC IPR6: SRC_OUT_IRQn_prio (Bit 0)                        */
#define NVIC_IPR6_SRC_OUT_IRQn_prio_Msk       (0xffUL)                  /*!< NVIC IPR6: SRC_OUT_IRQn_prio (Bitfield-Mask: 0xff)          */
#define NVIC_IPR6_VBUS_IRQn_prio_Pos          (8UL)                     /*!< NVIC IPR6: VBUS_IRQn_prio (Bit 8)                           */
#define NVIC_IPR6_VBUS_IRQn_prio_Msk          (0xff00UL)                /*!< NVIC IPR6: VBUS_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR6_DMA_IRQn_prio_Pos           (16UL)                    /*!< NVIC IPR6: DMA_IRQn_prio (Bit 16)                           */
#define NVIC_IPR6_DMA_IRQn_prio_Msk           (0xff0000UL)              /*!< NVIC IPR6: DMA_IRQn_prio (Bitfield-Mask: 0xff)              */
#define NVIC_IPR6_RF_DIAG_IRQn_prio_Pos       (24UL)                    /*!< NVIC IPR6: RF_DIAG_IRQn_prio (Bit 24)                       */
#define NVIC_IPR6_RF_DIAG_IRQn_prio_Msk       (0xff000000UL)            /*!< NVIC IPR6: RF_DIAG_IRQn_prio (Bitfield-Mask: 0xff)          */
/* ----------------------------------  NVIC_IPR7  --------------------------------- */
#define NVIC_IPR7_TRNG_IRQn_prio_Pos          (0UL)                     /*!< NVIC IPR7: TRNG_IRQn_prio (Bit 0)                           */
#define NVIC_IPR7_TRNG_IRQn_prio_Msk          (0xffUL)                  /*!< NVIC IPR7: TRNG_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR7_DCDC_IRQn_prio_Pos          (8UL)                     /*!< NVIC IPR7: DCDC_IRQn_prio (Bit 8)                           */
#define NVIC_IPR7_DCDC_IRQn_prio_Msk          (0xff00UL)                /*!< NVIC IPR7: DCDC_IRQn_prio (Bitfield-Mask: 0xff)             */
#define NVIC_IPR7_XTAL16RDY_IRQn_prio_Pos     (16UL)                    /*!< NVIC IPR7: XTAL16RDY_IRQn_prio (Bit 16)                     */
#define NVIC_IPR7_XTAL16RDY_IRQn_prio_Msk     (0xff0000UL)              /*!< NVIC IPR7: XTAL16RDY_IRQn_prio (Bitfield-Mask: 0xff)        */
#define NVIC_IPR7_RESERVED31_IRQn_DONT_USE_Pos (24UL)                   /*!< NVIC IPR7: RESERVED31_IRQn_DONT_USE (Bit 24)                */
#define NVIC_IPR7_RESERVED31_IRQn_DONT_USE_Msk (0xff000000UL)           /*!< NVIC IPR7: RESERVED31_IRQn_DONT_USE (Bitfield-Mask: 0xff)   */
/* ================================================================================ */
/* ================          struct 'SCB' Position & Mask          ================ */
/* ================================================================================ */
#if 0
/* ----------------------------------  SCB_CPUID  --------------------------------- */
#define SCB_CPUID_REVISION_Pos                (0UL)                     /*!< SCB CPUID: REVISION (Bit 0)                                 */
#define SCB_CPUID_REVISION_Msk                (0xfUL)                   /*!< SCB CPUID: REVISION (Bitfield-Mask: 0x0f)                   */
#define SCB_CPUID_PARTNO_Pos                  (4UL)                     /*!< SCB CPUID: PARTNO (Bit 4)                                   */
#define SCB_CPUID_PARTNO_Msk                  (0xfff0UL)                /*!< SCB CPUID: PARTNO (Bitfield-Mask: 0xfff)                    */
#define SCB_CPUID_CONSTANT_Pos                (16UL)                    /*!< SCB CPUID: CONSTANT (Bit 16)                                */
#define SCB_CPUID_CONSTANT_Msk                (0xf0000UL)               /*!< SCB CPUID: CONSTANT (Bitfield-Mask: 0x0f)                   */
#define SCB_CPUID_VARIANT_Pos                 (20UL)                    /*!< SCB CPUID: VARIANT (Bit 20)                                 */
#define SCB_CPUID_VARIANT_Msk                 (0xf00000UL)              /*!< SCB CPUID: VARIANT (Bitfield-Mask: 0x0f)                    */
#define SCB_CPUID_IMPLEMENTER_Pos             (24UL)                    /*!< SCB CPUID: IMPLEMENTER (Bit 24)                             */
#define SCB_CPUID_IMPLEMENTER_Msk             (0xff000000UL)            /*!< SCB CPUID: IMPLEMENTER (Bitfield-Mask: 0xff)                */
/* ----------------------------------  SCB_ICSR  ---------------------------------- */
#define SCB_ICSR_VECTACTIVE_Pos               (0UL)                     /*!< SCB ICSR: VECTACTIVE (Bit 0)                                */
#define SCB_ICSR_VECTACTIVE_Msk               (0x3fUL)                  /*!< SCB ICSR: VECTACTIVE (Bitfield-Mask: 0x3f)                  */
#define SCB_ICSR_VECTPENDING_Pos              (12UL)                    /*!< SCB ICSR: VECTPENDING (Bit 12)                              */
#define SCB_ICSR_VECTPENDING_Msk              (0x3f000UL)               /*!< SCB ICSR: VECTPENDING (Bitfield-Mask: 0x3f)                 */
#define SCB_ICSR_ISRPENDING_Pos               (22UL)                    /*!< SCB ICSR: ISRPENDING (Bit 22)                               */
#define SCB_ICSR_ISRPENDING_Msk               (0x400000UL)              /*!< SCB ICSR: ISRPENDING (Bitfield-Mask: 0x01)                  */
#define SCB_ICSR_PENDSTCLR_Pos                (25UL)                    /*!< SCB ICSR: PENDSTCLR (Bit 25)                                */
#define SCB_ICSR_PENDSTCLR_Msk                (0x2000000UL)             /*!< SCB ICSR: PENDSTCLR (Bitfield-Mask: 0x01)                   */
#define SCB_ICSR_PENDSTSET_Pos                (26UL)                    /*!< SCB ICSR: PENDSTSET (Bit 26)                                */
#define SCB_ICSR_PENDSTSET_Msk                (0x4000000UL)             /*!< SCB ICSR: PENDSTSET (Bitfield-Mask: 0x01)                   */
#define SCB_ICSR_PENDSVCLR_Pos                (27UL)                    /*!< SCB ICSR: PENDSVCLR (Bit 27)                                */
#define SCB_ICSR_PENDSVCLR_Msk                (0x8000000UL)             /*!< SCB ICSR: PENDSVCLR (Bitfield-Mask: 0x01)                   */
#define SCB_ICSR_PENDSVSET_Pos                (28UL)                    /*!< SCB ICSR: PENDSVSET (Bit 28)                                */
#define SCB_ICSR_PENDSVSET_Msk                (0x10000000UL)            /*!< SCB ICSR: PENDSVSET (Bitfield-Mask: 0x01)                   */
#define SCB_ICSR_NMIPENDSET_Pos               (31UL)                    /*!< SCB ICSR: NMIPENDSET (Bit 31)                               */
#define SCB_ICSR_NMIPENDSET_Msk               (0x80000000UL)            /*!< SCB ICSR: NMIPENDSET (Bitfield-Mask: 0x01)                  */
/* ----------------------------------  SCB_AIRCR  --------------------------------- */
#define SCB_AIRCR_VECTRESET_Pos               (0UL)                     /*!< SCB AIRCR: VECTRESET (Bit 0)                                */
#define SCB_AIRCR_VECTRESET_Msk               (0x1UL)                   /*!< SCB AIRCR: VECTRESET (Bitfield-Mask: 0x01)                  */
#define SCB_AIRCR_VECTCLRACTIVE_Pos           (1UL)                     /*!< SCB AIRCR: VECTCLRACTIVE (Bit 1)                            */
#define SCB_AIRCR_VECTCLRACTIVE_Msk           (0x2UL)                   /*!< SCB AIRCR: VECTCLRACTIVE (Bitfield-Mask: 0x01)              */
#define SCB_AIRCR_SYSRESETREQ_Pos             (2UL)                     /*!< SCB AIRCR: SYSRESETREQ (Bit 2)                              */
#define SCB_AIRCR_SYSRESETREQ_Msk             (0x4UL)                   /*!< SCB AIRCR: SYSRESETREQ (Bitfield-Mask: 0x01)                */
#define SCB_AIRCR_ENDIANESS_Pos               (15UL)                    /*!< SCB AIRCR: ENDIANESS (Bit 15)                               */
#define SCB_AIRCR_ENDIANESS_Msk               (0x8000UL)                /*!< SCB AIRCR: ENDIANESS (Bitfield-Mask: 0x01)                  */
#define SCB_AIRCR_VECTKEY_Pos                 (16UL)                    /*!< SCB AIRCR: VECTKEY (Bit 16)                                 */
#define SCB_AIRCR_VECTKEY_Msk                 (0xffff0000UL)            /*!< SCB AIRCR: VECTKEY (Bitfield-Mask: 0xffff)                  */
/* -----------------------------------  SCB_SCR  ---------------------------------- */
#define SCB_SCR_SLEEPONEXIT_Pos               (1UL)                     /*!< SCB SCR: SLEEPONEXIT (Bit 1)                                */
#define SCB_SCR_SLEEPONEXIT_Msk               (0x2UL)                   /*!< SCB SCR: SLEEPONEXIT (Bitfield-Mask: 0x01)                  */
#define SCB_SCR_SLEEPDEEP_Pos                 (2UL)                     /*!< SCB SCR: SLEEPDEEP (Bit 2)                                  */
#define SCB_SCR_SLEEPDEEP_Msk                 (0x4UL)                   /*!< SCB SCR: SLEEPDEEP (Bitfield-Mask: 0x01)                    */
#define SCB_SCR_SEVEONPEND_Pos                (4UL)                     /*!< SCB SCR: SEVEONPEND (Bit 4)                                 */
#define SCB_SCR_SEVEONPEND_Msk                (0x10UL)                  /*!< SCB SCR: SEVEONPEND (Bitfield-Mask: 0x01)                   */
/* -----------------------------------  SCB_CCR  ---------------------------------- */
#define SCB_CCR_UNALIGN_TRP_Pos               (3UL)                     /*!< SCB CCR: UNALIGN_TRP (Bit 3)                                */
#define SCB_CCR_UNALIGN_TRP_Msk               (0x8UL)                   /*!< SCB CCR: UNALIGN_TRP (Bitfield-Mask: 0x01)                  */
#define SCB_CCR_STKALIGN_Pos                  (9UL)                     /*!< SCB CCR: STKALIGN (Bit 9)                                   */
#define SCB_CCR_STKALIGN_Msk                  (0x200UL)                 /*!< SCB CCR: STKALIGN (Bitfield-Mask: 0x01)                     */
/* ----------------------------------  SCB_SHPR2  --------------------------------- */
#define SCB_SHPR2_PRI_11_Pos                  (24UL)                    /*!< SCB SHPR2: PRI_11 (Bit 24)                                  */
#define SCB_SHPR2_PRI_11_Msk                  (0xff000000UL)            /*!< SCB SHPR2: PRI_11 (Bitfield-Mask: 0xff)                     */
/* ----------------------------------  SCB_SHPR3  --------------------------------- */
#define SCB_SHPR3_PRI_14_Pos                  (16UL)                    /*!< SCB SHPR3: PRI_14 (Bit 16)                                  */
#define SCB_SHPR3_PRI_14_Msk                  (0xff0000UL)              /*!< SCB SHPR3: PRI_14 (Bitfield-Mask: 0xff)                     */
#define SCB_SHPR3_PRI_15_Pos                  (24UL)                    /*!< SCB SHPR3: PRI_15 (Bit 24)                                  */
#define SCB_SHPR3_PRI_15_Msk                  (0xff000000UL)            /*!< SCB SHPR3: PRI_15 (Bitfield-Mask: 0xff)                     */
/* ================================================================================ */
/* ================        struct 'SysTick' Position & Mask        ================ */
/* ================================================================================ */
/* --------------------------------  SysTick_CTRL  -------------------------------- */
#define SysTick_CTRL_ENABLE_Pos               (0UL)                     /*!< SysTick CTRL: ENABLE (Bit 0)                                */
#define SysTick_CTRL_ENABLE_Msk               (0x1UL)                   /*!< SysTick CTRL: ENABLE (Bitfield-Mask: 0x01)                  */
#define SysTick_CTRL_TICKINT_Pos              (1UL)                     /*!< SysTick CTRL: TICKINT (Bit 1)                               */
#define SysTick_CTRL_TICKINT_Msk              (0x2UL)                   /*!< SysTick CTRL: TICKINT (Bitfield-Mask: 0x01)                 */
#define SysTick_CTRL_CLKSOURCE_Pos            (2UL)                     /*!< SysTick CTRL: CLKSOURCE (Bit 2)                             */
#define SysTick_CTRL_CLKSOURCE_Msk            (0x4UL)                   /*!< SysTick CTRL: CLKSOURCE (Bitfield-Mask: 0x01)               */
#define SysTick_CTRL_COUNTFLAG_Pos            (16UL)                    /*!< SysTick CTRL: COUNTFLAG (Bit 16)                            */
#define SysTick_CTRL_COUNTFLAG_Msk            (0x10000UL)               /*!< SysTick CTRL: COUNTFLAG (Bitfield-Mask: 0x01)               */
/* --------------------------------  SysTick_LOAD  -------------------------------- */
#define SysTick_LOAD_RELOAD_Pos               (0UL)                     /*!< SysTick LOAD: RELOAD (Bit 0)                                */
#define SysTick_LOAD_RELOAD_Msk               (0xffffffUL)              /*!< SysTick LOAD: RELOAD (Bitfield-Mask: 0xffffff)              */
/* ---------------------------------  SysTick_VAL  -------------------------------- */
#define SysTick_VAL_CURRENT_Pos               (0UL)                     /*!< SysTick VAL: CURRENT (Bit 0)                                */
#define SysTick_VAL_CURRENT_Msk               (0xffffffUL)              /*!< SysTick VAL: CURRENT (Bitfield-Mask: 0xffffff)              */
/* --------------------------------  SysTick_CALIB  ------------------------------- */
#define SysTick_CALIB_TENMS_Pos               (0UL)                     /*!< SysTick CALIB: TENMS (Bit 0)                                */
#define SysTick_CALIB_TENMS_Msk               (0xffffffUL)              /*!< SysTick CALIB: TENMS (Bitfield-Mask: 0xffffff)              */
#define SysTick_CALIB_SKEW_Pos                (30UL)                    /*!< SysTick CALIB: SKEW (Bit 30)                                */
#define SysTick_CALIB_SKEW_Msk                (0x40000000UL)            /*!< SysTick CALIB: SKEW (Bitfield-Mask: 0x01)                   */
#define SysTick_CALIB_NOREF_Pos               (31UL)                    /*!< SysTick CALIB: NOREF (Bit 31)                               */
#define SysTick_CALIB_NOREF_Msk               (0x80000000UL)            /*!< SysTick CALIB: NOREF (Bitfield-Mask: 0x01)                  */
#endif
/* ================================================================================ */
/* ================   struct 'adc2522_ds_bif_00' Position & Mask   ================ */
/* ================================================================================ */
/* ----------------------  adc2522_ds_bif_00_SDADC_CTRL_REG  ---------------------- */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_EN_Pos (0UL)             /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_EN (Bit 0)          */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_EN_Msk (0x1UL)           /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_EN (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_START_Pos (1UL)          /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_START (Bit 1)       */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_START_Msk (0x2UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_START (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INP_SEL_Pos (2UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INP_SEL (Bit 2)     */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INP_SEL_Msk (0x3cUL)     /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INP_SEL (Bitfield-Mask: 0x0f) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INN_SEL_Pos (6UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INN_SEL (Bit 6)     */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INN_SEL_Msk (0x1c0UL)    /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INN_SEL (Bitfield-Mask: 0x07) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_SE_Pos (9UL)             /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_SE (Bit 9)          */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_SE_Msk (0x200UL)         /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_SE (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_OSR_Pos (10UL)           /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_OSR (Bit 10)        */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_OSR_Msk (0xc00UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_OSR (Bitfield-Mask: 0x03) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_CONT_Pos (12UL)          /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_CONT (Bit 12)       */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_CONT_Msk (0x1000UL)      /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_CONT (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_VREF_SEL_Pos (13UL)      /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_VREF_SEL (Bit 13)   */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_VREF_SEL_Msk (0x2000UL)  /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_VREF_SEL (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_LDO_OK_Pos (14UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_LDO_OK (Bit 14)     */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_LDO_OK_Msk (0x4000UL)    /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_LDO_OK (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INT_Pos (15UL)           /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INT (Bit 15)        */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_INT_Msk (0x8000UL)       /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_INT (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_MINT_Pos (16UL)          /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_MINT (Bit 16)       */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_MINT_Msk (0x10000UL)     /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_MINT (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_DMA_EN_Pos (17UL)        /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_DMA_EN (Bit 17)     */
#define adc2522_ds_bif_00_SDADC_CTRL_REG_SDADC_DMA_EN_Msk (0x20000UL)   /*!< adc2522_ds_bif_00 SDADC_CTRL_REG: SDADC_DMA_EN (Bitfield-Mask: 0x01) */
/* ----------------------  adc2522_ds_bif_00_SDADC_TEST_REG  ---------------------- */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CHOP_DIS_Pos (0UL)       /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CHOP_DIS (Bit 0)    */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CHOP_DIS_Msk (0x1UL)     /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CHOP_DIS (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_DEM_DIS_Pos (1UL)        /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_DEM_DIS (Bit 1)     */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_DEM_DIS_Msk (0x2UL)      /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_DEM_DIS (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_RST_DIS_Pos (3UL)        /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_RST_DIS (Bit 3)     */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_RST_DIS_Msk (0x8UL)      /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_RST_DIS (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_LDO_SMPL_DIS_Pos (4UL)   /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_LDO_SMPL_DIS (Bit 4) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_LDO_SMPL_DIS_Msk (0x10UL) /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_LDO_SMPL_DIS (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_LDO_TEST_Pos (5UL)       /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_LDO_TEST (Bit 5)    */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_LDO_TEST_Msk (0x20UL)    /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_LDO_TEST (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CLK_FREQ_Pos (6UL)       /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CLK_FREQ (Bit 6)    */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CLK_FREQ_Msk (0xc0UL)    /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CLK_FREQ (Bitfield-Mask: 0x03) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_OTA_BIAS_Pos (8UL)       /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_OTA_BIAS (Bit 8)    */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_OTA_BIAS_Msk (0x300UL)   /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_OTA_BIAS (Bitfield-Mask: 0x03) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CORR_ORDER_Pos (10UL)    /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CORR_ORDER (Bit 10) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_CORR_ORDER_Msk (0x400UL) /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_CORR_ORDER (Bitfield-Mask: 0x01) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_GAIN_SEL_INIT_Pos (11UL) /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_GAIN_SEL_INIT (Bit 11) */
#define adc2522_ds_bif_00_SDADC_TEST_REG_SDADC_GAIN_SEL_INIT_Msk (0xf800UL) /*!< adc2522_ds_bif_00 SDADC_TEST_REG: SDADC_GAIN_SEL_INIT (Bitfield-Mask: 0x1f) */
/* --------------------  adc2522_ds_bif_00_SDADC_GAIN_CORR_REG  ------------------- */
#define adc2522_ds_bif_00_SDADC_GAIN_CORR_REG_SDADC_GAIN_CORR_Pos (0UL) /*!< adc2522_ds_bif_00 SDADC_GAIN_CORR_REG: SDADC_GAIN_CORR (Bit 0) */
#define adc2522_ds_bif_00_SDADC_GAIN_CORR_REG_SDADC_GAIN_CORR_Msk (0x3ffUL) /*!< adc2522_ds_bif_00 SDADC_GAIN_CORR_REG: SDADC_GAIN_CORR (Bitfield-Mask: 0x3ff) */
/* --------------------  adc2522_ds_bif_00_SDADC_OFFS_CORR_REG  ------------------- */
#define adc2522_ds_bif_00_SDADC_OFFS_CORR_REG_SDADC_OFFS_CORR_Pos (0UL) /*!< adc2522_ds_bif_00 SDADC_OFFS_CORR_REG: SDADC_OFFS_CORR (Bit 0) */
#define adc2522_ds_bif_00_SDADC_OFFS_CORR_REG_SDADC_OFFS_CORR_Msk (0x3ffUL) /*!< adc2522_ds_bif_00 SDADC_OFFS_CORR_REG: SDADC_OFFS_CORR (Bitfield-Mask: 0x3ff) */
/* --------------------  adc2522_ds_bif_00_SDADC_CLEAR_INT_REG  ------------------- */
#define adc2522_ds_bif_00_SDADC_CLEAR_INT_REG_SDADC_CLR_INT_Pos (0UL)   /*!< adc2522_ds_bif_00 SDADC_CLEAR_INT_REG: SDADC_CLR_INT (Bit 0) */
#define adc2522_ds_bif_00_SDADC_CLEAR_INT_REG_SDADC_CLR_INT_Msk (0xffffUL) /*!< adc2522_ds_bif_00 SDADC_CLEAR_INT_REG: SDADC_CLR_INT (Bitfield-Mask: 0xffff) */
/* ---------------------  adc2522_ds_bif_00_SDADC_RESULT_REG  --------------------- */
#define adc2522_ds_bif_00_SDADC_RESULT_REG_SDADC_VAL_Pos (0UL)          /*!< adc2522_ds_bif_00 SDADC_RESULT_REG: SDADC_VAL (Bit 0)       */
#define adc2522_ds_bif_00_SDADC_RESULT_REG_SDADC_VAL_Msk (0xffffUL)     /*!< adc2522_ds_bif_00 SDADC_RESULT_REG: SDADC_VAL (Bitfield-Mask: 0xffff) */
/* ================================================================================ */
/* ================         struct 'ADPLL' Position & Mask         ================ */
/* ================================================================================ */
/* --------------------------  ADPLL_ADPLL_ATTR_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_ATTR_CTRL_REG_IF_MODE_RX_Pos (0UL)                  /*!< ADPLL ADPLL_ATTR_CTRL_REG: IF_MODE_RX (Bit 0)               */
#define ADPLL_ADPLL_ATTR_CTRL_REG_IF_MODE_RX_Msk (0x1UL)                /*!< ADPLL ADPLL_ATTR_CTRL_REG: IF_MODE_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ATTR_CTRL_REG_IF_MODE_TX_Pos (1UL)                  /*!< ADPLL ADPLL_ATTR_CTRL_REG: IF_MODE_TX (Bit 1)               */
#define ADPLL_ADPLL_ATTR_CTRL_REG_IF_MODE_TX_Msk (0x2UL)                /*!< ADPLL ADPLL_ATTR_CTRL_REG: IF_MODE_TX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ATTR_CTRL_REG_PWR_MODE_RX_Pos (8UL)                 /*!< ADPLL ADPLL_ATTR_CTRL_REG: PWR_MODE_RX (Bit 8)              */
#define ADPLL_ADPLL_ATTR_CTRL_REG_PWR_MODE_RX_Msk (0x100UL)             /*!< ADPLL ADPLL_ATTR_CTRL_REG: PWR_MODE_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ATTR_CTRL_REG_PWR_MODE_TX_Pos (9UL)                 /*!< ADPLL ADPLL_ATTR_CTRL_REG: PWR_MODE_TX (Bit 9)              */
#define ADPLL_ADPLL_ATTR_CTRL_REG_PWR_MODE_TX_Msk (0x200UL)             /*!< ADPLL ADPLL_ATTR_CTRL_REG: PWR_MODE_TX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ATTR_CTRL_REG_OL_RX_Pos   (10UL)                    /*!< ADPLL ADPLL_ATTR_CTRL_REG: OL_RX (Bit 10)                   */
#define ADPLL_ADPLL_ATTR_CTRL_REG_OL_RX_Msk   (0x400UL)                 /*!< ADPLL ADPLL_ATTR_CTRL_REG: OL_RX (Bitfield-Mask: 0x01)      */
#define ADPLL_ADPLL_ATTR_CTRL_REG_OL_TX_Pos   (11UL)                    /*!< ADPLL ADPLL_ATTR_CTRL_REG: OL_TX (Bit 11)                   */
#define ADPLL_ADPLL_ATTR_CTRL_REG_OL_TX_Msk   (0x800UL)                 /*!< ADPLL ADPLL_ATTR_CTRL_REG: OL_TX (Bitfield-Mask: 0x01)      */
/* ---------------------------  ADPLL_ADPLL_CN_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_CN_CTRL_REG_CN_Pos        (0UL)                     /*!< ADPLL ADPLL_CN_CTRL_REG: CN (Bit 0)                         */
#define ADPLL_ADPLL_CN_CTRL_REG_CN_Msk        (0x7fUL)                  /*!< ADPLL ADPLL_CN_CTRL_REG: CN (Bitfield-Mask: 0x7f)           */
#define ADPLL_ADPLL_CN_CTRL_REG_CS_Pos        (8UL)                     /*!< ADPLL ADPLL_CN_CTRL_REG: CS (Bit 8)                         */
#define ADPLL_ADPLL_CN_CTRL_REG_CS_Msk        (0x100UL)                 /*!< ADPLL ADPLL_CN_CTRL_REG: CS (Bitfield-Mask: 0x01)           */
#define ADPLL_ADPLL_CN_CTRL_REG_SGN_Pos       (15UL)                    /*!< ADPLL ADPLL_CN_CTRL_REG: SGN (Bit 15)                       */
#define ADPLL_ADPLL_CN_CTRL_REG_SGN_Msk       (0x8000UL)                /*!< ADPLL ADPLL_CN_CTRL_REG: SGN (Bitfield-Mask: 0x01)          */
#define ADPLL_ADPLL_CN_CTRL_REG_CH0_Pos       (16UL)                    /*!< ADPLL ADPLL_CN_CTRL_REG: CH0 (Bit 16)                       */
#define ADPLL_ADPLL_CN_CTRL_REG_CH0_Msk       (0x1fff0000UL)            /*!< ADPLL ADPLL_CN_CTRL_REG: CH0 (Bitfield-Mask: 0x1fff)        */
/* --------------------------  ADPLL_ADPLL_FIF_CTRL1_REG  ------------------------- */
#define ADPLL_ADPLL_FIF_CTRL1_REG_FIFRX_1M_Pos (0UL)                    /*!< ADPLL ADPLL_FIF_CTRL1_REG: FIFRX_1M (Bit 0)                 */
#define ADPLL_ADPLL_FIF_CTRL1_REG_FIFRX_1M_Msk (0x3fffUL)               /*!< ADPLL ADPLL_FIF_CTRL1_REG: FIFRX_1M (Bitfield-Mask: 0x3fff) */
#define ADPLL_ADPLL_FIF_CTRL1_REG_FIFRX_2M_Pos (16UL)                   /*!< ADPLL ADPLL_FIF_CTRL1_REG: FIFRX_2M (Bit 16)                */
#define ADPLL_ADPLL_FIF_CTRL1_REG_FIFRX_2M_Msk (0x3fff0000UL)           /*!< ADPLL ADPLL_FIF_CTRL1_REG: FIFRX_2M (Bitfield-Mask: 0x3fff) */
/* --------------------------  ADPLL_ADPLL_FIF_CTRL2_REG  ------------------------- */
#define ADPLL_ADPLL_FIF_CTRL2_REG_FIFRX_OFFSET_Pos (0UL)                /*!< ADPLL ADPLL_FIF_CTRL2_REG: FIFRX_OFFSET (Bit 0)             */
#define ADPLL_ADPLL_FIF_CTRL2_REG_FIFRX_OFFSET_Msk (0x3fffUL)           /*!< ADPLL ADPLL_FIF_CTRL2_REG: FIFRX_OFFSET (Bitfield-Mask: 0x3fff) */
#define ADPLL_ADPLL_FIF_CTRL2_REG_FIFTX_Pos   (16UL)                    /*!< ADPLL ADPLL_FIF_CTRL2_REG: FIFTX (Bit 16)                   */
#define ADPLL_ADPLL_FIF_CTRL2_REG_FIFTX_Msk   (0x3fff0000UL)            /*!< ADPLL ADPLL_FIF_CTRL2_REG: FIFTX (Bitfield-Mask: 0x3fff)    */
/* -----------------------  ADPLL_ADPLL_KDCO_CAL_CTRL1_REG  ----------------------- */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOHFIC_1M_Pos (0UL)            /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOHFIC_1M (Bit 0)         */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOHFIC_1M_Msk (0xffUL)         /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOHFIC_1M (Bitfield-Mask: 0xff) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOHFIC_2M_Pos (8UL)            /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOHFIC_2M (Bit 8)         */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOHFIC_2M_Msk (0xff00UL)       /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOHFIC_2M (Bitfield-Mask: 0xff) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOLF_IN_1M_Pos (16UL)          /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOLF_IN_1M (Bit 16)       */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOLF_IN_1M_Msk (0xff0000UL)    /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOLF_IN_1M (Bitfield-Mask: 0xff) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOLF_IN_2M_Pos (24UL)          /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOLF_IN_2M (Bit 24)       */
#define ADPLL_ADPLL_KDCO_CAL_CTRL1_REG_KDCOLF_IN_2M_Msk (0xff000000UL)  /*!< ADPLL ADPLL_KDCO_CAL_CTRL1_REG: KDCOLF_IN_2M (Bitfield-Mask: 0xff) */
/* -----------------------  ADPLL_ADPLL_KDCO_CAL_CTRL2_REG  ----------------------- */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KMOD_ALPHA_1M_Pos (0UL)          /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KMOD_ALPHA_1M (Bit 0)       */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KMOD_ALPHA_1M_Msk (0x1fUL)       /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KMOD_ALPHA_1M (Bitfield-Mask: 0x1f) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KMOD_ALPHA_2M_Pos (8UL)          /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KMOD_ALPHA_2M (Bit 8)       */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KMOD_ALPHA_2M_Msk (0x1f00UL)     /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KMOD_ALPHA_2M (Bitfield-Mask: 0x1f) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCN_IC_Pos (16UL)             /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCN_IC (Bit 16)          */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCN_IC_Msk (0x7f0000UL)       /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCN_IC (Bitfield-Mask: 0x7f) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_TKDCOCAL_Pos (24UL)              /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: TKDCOCAL (Bit 24)           */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_TKDCOCAL_Msk (0x7000000UL)       /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: TKDCOCAL (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOLFCALEN_Pos (27UL)           /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOLFCALEN (Bit 27)        */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOLFCALEN_Msk (0x8000000UL)    /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOLFCALEN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCALRX_Pos (28UL)             /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCALRX (Bit 28)          */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCALRX_Msk (0x10000000UL)     /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCALRX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCALTX_Pos (29UL)             /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCALTX (Bit 29)          */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOCALTX_Msk (0x20000000UL)     /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOCALTX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOESTDEV_Pos (30UL)            /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOESTDEV (Bit 30)         */
#define ADPLL_ADPLL_KDCO_CAL_CTRL2_REG_KDCOESTDEV_Msk (0xc0000000UL)    /*!< ADPLL ADPLL_KDCO_CAL_CTRL2_REG: KDCOESTDEV (Bitfield-Mask: 0x03) */
/* ----------------------  ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG  --------------------- */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTC_ALPHA_Pos (0UL)          /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTC_ALPHA (Bit 0)       */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTC_ALPHA_Msk (0x3fUL)       /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTC_ALPHA (Bitfield-Mask: 0x3f) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KTDC_IN_Pos (6UL)             /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KTDC_IN (Bit 6)          */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KTDC_IN_Msk (0x7fc0UL)        /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KTDC_IN (Bitfield-Mask: 0x1ff) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTC_PIPELINE_BYPASS_Pos (15UL) /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTC_PIPELINE_BYPASS (Bit 15) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTC_PIPELINE_BYPASS_Msk (0x8000UL) /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTC_PIPELINE_BYPASS (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTCCN_IC_Pos (16UL)          /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTCCN_IC (Bit 16)       */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTCCN_IC_Msk (0x7f0000UL)    /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTCCN_IC (Bitfield-Mask: 0x7f) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTCIC_Pos (23UL)             /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTCIC (Bit 23)          */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL1_REG_KDTCIC_Msk (0xff800000UL)     /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL1_REG: KDTCIC (Bitfield-Mask: 0x1ff) */
/* ----------------------  ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG  --------------------- */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALEN_Pos (0UL)           /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALEN (Bit 0)        */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALEN_Msk (0x1UL)         /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALEN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALMOD_Pos (1UL)          /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALMOD (Bit 1)       */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALMOD_Msk (0x2UL)        /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALMOD (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALMOD1P_Pos (2UL)        /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALMOD1P (Bit 2)     */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALMOD1P_Msk (0x4UL)      /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALMOD1P (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCAL_INV_Pos (3UL)         /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCAL_INV (Bit 3)      */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCAL_INV_Msk (0x8UL)       /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCAL_INV (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALLG_Pos (4UL)           /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALLG (Bit 4)        */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KDTCCALLG_Msk (0x70UL)        /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KDTCCALLG (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KTDCCALEN_Pos (8UL)           /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KTDCCALEN (Bit 8)        */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_KTDCCALEN_Msk (0x100UL)       /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: KTDCCALEN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_PHRDLY_Pos (9UL)              /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: PHRDLY (Bit 9)           */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_PHRDLY_Msk (0x600UL)          /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: PHRDLY (Bitfield-Mask: 0x03) */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_TKDTCCAL_Pos (11UL)           /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: TKDTCCAL (Bit 11)        */
#define ADPLL_ADPLL_KDTCTDC_CAL_CTRL2_REG_TKDTCCAL_Msk (0x7800UL)       /*!< ADPLL ADPLL_KDTCTDC_CAL_CTRL2_REG: TKDTCCAL (Bitfield-Mask: 0x0f) */
/* -----------------------  ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG  ---------------------- */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_KCOARSE_Pos (0UL)               /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: KCOARSE (Bit 0)            */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_KCOARSE_Msk (0x7UL)             /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: KCOARSE (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_KMEDIUM_Pos (3UL)               /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: KMEDIUM (Bit 3)            */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_KMEDIUM_Msk (0x38UL)            /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: KMEDIUM (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_AMPCALEN_Pos (6UL)              /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: AMPCALEN (Bit 6)           */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_AMPCALEN_Msk (0x40UL)           /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: AMPCALEN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPTM_Pos (7UL)              /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPTM (Bit 7)           */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPTM_Msk (0x80UL)           /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPTM (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_HP_RX_Pos (16UL)       /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_HP_RX (Bit 16)    */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_HP_RX_Msk (0xf0000UL)  /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_HP_RX (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_HP_TX_Pos (20UL)       /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_HP_TX (Bit 20)    */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_HP_TX_Msk (0xf00000UL) /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_HP_TX (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_LP_RX_Pos (24UL)       /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_LP_RX (Bit 24)    */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_LP_RX_Msk (0xf000000UL) /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_LP_RX (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_LP_TX_Pos (28UL)       /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_LP_TX (Bit 28)    */
#define ADPLL_ADPLL_DCOAMP_CAL_CTRL_REG_DCOAMPIC_LP_TX_Msk (0xf0000000UL) /*!< ADPLL ADPLL_DCOAMP_CAL_CTRL_REG: DCOAMPIC_LP_TX (Bitfield-Mask: 0x0f) */
/* -------------------------  ADPLL_ADPLL_TXMOD_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_BT_SEL_Pos (0UL)                     /*!< ADPLL ADPLL_TXMOD_CTRL_REG: BT_SEL (Bit 0)                  */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_BT_SEL_Msk (0x1UL)                   /*!< ADPLL ADPLL_TXMOD_CTRL_REG: BT_SEL (Bitfield-Mask: 0x01)    */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_TX_DATA_INV_Pos (1UL)                /*!< ADPLL ADPLL_TXMOD_CTRL_REG: TX_DATA_INV (Bit 1)             */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_TX_DATA_INV_Msk (0x2UL)              /*!< ADPLL ADPLL_TXMOD_CTRL_REG: TX_DATA_INV (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_MOD_INDEX_Pos (2UL)                  /*!< ADPLL ADPLL_TXMOD_CTRL_REG: MOD_INDEX (Bit 2)               */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_MOD_INDEX_Msk (0xcUL)                /*!< ADPLL ADPLL_TXMOD_CTRL_REG: MOD_INDEX (Bitfield-Mask: 0x03) */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_EO_PACKET_DIS_Pos (4UL)              /*!< ADPLL ADPLL_TXMOD_CTRL_REG: EO_PACKET_DIS (Bit 4)           */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_EO_PACKET_DIS_Msk (0x10UL)           /*!< ADPLL ADPLL_TXMOD_CTRL_REG: EO_PACKET_DIS (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_MOD_EXT_SEL_Pos (5UL)                /*!< ADPLL ADPLL_TXMOD_CTRL_REG: MOD_EXT_SEL (Bit 5)             */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_MOD_EXT_SEL_Msk (0x20UL)             /*!< ADPLL ADPLL_TXMOD_CTRL_REG: MOD_EXT_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_TX_MODE_Pos (6UL)                    /*!< ADPLL ADPLL_TXMOD_CTRL_REG: TX_MODE (Bit 6)                 */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_TX_MODE_Msk (0xc0UL)                 /*!< ADPLL ADPLL_TXMOD_CTRL_REG: TX_MODE (Bitfield-Mask: 0x03)   */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_INV_CKMODEXT_Pos (8UL)               /*!< ADPLL ADPLL_TXMOD_CTRL_REG: INV_CKMODEXT (Bit 8)            */
#define ADPLL_ADPLL_TXMOD_CTRL_REG_INV_CKMODEXT_Msk (0x100UL)           /*!< ADPLL ADPLL_TXMOD_CTRL_REG: INV_CKMODEXT (Bitfield-Mask: 0x01) */
/* -------------------------  ADPLL_ADPLL_SDMOD_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODERX_Pos (0UL)                  /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODERX (Bit 0)               */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODERX_Msk (0x7UL)                /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODERX (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODETX_Pos (3UL)                  /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODETX (Bit 3)               */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODETX_Msk (0x38UL)               /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODETX (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODERX_OL_Pos (8UL)               /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODERX_OL (Bit 8)            */
#define ADPLL_ADPLL_SDMOD_CTRL_REG_SDMMODERX_OL_Msk (0x700UL)           /*!< ADPLL ADPLL_SDMOD_CTRL_REG: SDMMODERX_OL (Bitfield-Mask: 0x07) */
/* --------------------------  ADPLL_ADPLL_LF_CTRL1_REG  -------------------------- */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINETAU_Pos  (0UL)                     /*!< ADPLL ADPLL_LF_CTRL1_REG: FINETAU (Bit 0)                   */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINETAU_Msk  (0x1fUL)                  /*!< ADPLL ADPLL_LF_CTRL1_REG: FINETAU (Bitfield-Mask: 0x1f)     */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINEK_Pos    (5UL)                     /*!< ADPLL ADPLL_LF_CTRL1_REG: FINEK (Bit 5)                     */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINEK_Msk    (0x3e0UL)                 /*!< ADPLL ADPLL_LF_CTRL1_REG: FINEK (Bitfield-Mask: 0x1f)       */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINEKZ_Pos   (10UL)                    /*!< ADPLL ADPLL_LF_CTRL1_REG: FINEKZ (Bit 10)                   */
#define ADPLL_ADPLL_LF_CTRL1_REG_FINEKZ_Msk   (0xfc00UL)                /*!< ADPLL ADPLL_LF_CTRL1_REG: FINEKZ (Bitfield-Mask: 0x3f)      */
/* --------------------------  ADPLL_ADPLL_LF_CTRL2_REG  -------------------------- */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODTAU_TUNE_Pos (0UL)                  /*!< ADPLL ADPLL_LF_CTRL2_REG: MODTAU_TUNE (Bit 0)               */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODTAU_TUNE_Msk (0x3fUL)               /*!< ADPLL ADPLL_LF_CTRL2_REG: MODTAU_TUNE (Bitfield-Mask: 0x3f) */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODK_TUNE_Pos (6UL)                    /*!< ADPLL ADPLL_LF_CTRL2_REG: MODK_TUNE (Bit 6)                 */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODK_TUNE_Msk (0xfc0UL)                /*!< ADPLL ADPLL_LF_CTRL2_REG: MODK_TUNE (Bitfield-Mask: 0x3f)   */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODTAU_Pos   (12UL)                    /*!< ADPLL ADPLL_LF_CTRL2_REG: MODTAU (Bit 12)                   */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODTAU_Msk   (0x3f000UL)               /*!< ADPLL ADPLL_LF_CTRL2_REG: MODTAU (Bitfield-Mask: 0x3f)      */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODK_Pos     (18UL)                    /*!< ADPLL ADPLL_LF_CTRL2_REG: MODK (Bit 18)                     */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODK_Msk     (0xfc0000UL)              /*!< ADPLL ADPLL_LF_CTRL2_REG: MODK (Bitfield-Mask: 0x3f)        */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODKZ_Pos    (24UL)                    /*!< ADPLL ADPLL_LF_CTRL2_REG: MODKZ (Bit 24)                    */
#define ADPLL_ADPLL_LF_CTRL2_REG_MODKZ_Msk    (0x3f000000UL)            /*!< ADPLL ADPLL_LF_CTRL2_REG: MODKZ (Bitfield-Mask: 0x3f)       */
#define ADPLL_ADPLL_LF_CTRL2_REG_RST_TAU_EN_Pos (30UL)                  /*!< ADPLL ADPLL_LF_CTRL2_REG: RST_TAU_EN (Bit 30)               */
#define ADPLL_ADPLL_LF_CTRL2_REG_RST_TAU_EN_Msk (0x40000000UL)          /*!< ADPLL ADPLL_LF_CTRL2_REG: RST_TAU_EN (Bitfield-Mask: 0x01)  */
/* --------------------------  ADPLL_ADPLL_ANA_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_DTCIN_EN_Pos (0UL)                 /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_DTCIN_EN (Bit 0)              */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_DTCIN_EN_Msk (0x1UL)               /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_DTCIN_EN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_CKVIN_EN_Pos (1UL)                 /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_CKVIN_EN (Bit 1)              */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_CKVIN_EN_Msk (0x2UL)               /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_CKVIN_EN (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_INV_Pos  (2UL)                     /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_INV (Bit 2)                   */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_INV_Msk  (0x4UL)                   /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_INV (Bitfield-Mask: 0x01)     */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKTDC_Pos (3UL)                    /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKTDC (Bit 3)                 */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKTDC_Msk (0x8UL)                  /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKTDC (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKPHV_Pos (4UL)                    /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKPHV (Bit 4)                 */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKPHV_Msk (0x10UL)                 /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKPHV (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKDCOMOD_Pos (5UL)                 /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKDCOMOD (Bit 5)              */
#define ADPLL_ADPLL_ANA_CTRL_REG_INV_CKDCOMOD_Msk (0x20UL)              /*!< ADPLL ADPLL_ANA_CTRL_REG: INV_CKDCOMOD (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ANA_CTRL_REG_EN_CKDCOMOD_Pos (6UL)                  /*!< ADPLL ADPLL_ANA_CTRL_REG: EN_CKDCOMOD (Bit 6)               */
#define ADPLL_ADPLL_ANA_CTRL_REG_EN_CKDCOMOD_Msk (0x40UL)               /*!< ADPLL ADPLL_ANA_CTRL_REG: EN_CKDCOMOD (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_ANA_CTRL_REG_TGLDETEN_Pos (7UL)                     /*!< ADPLL ADPLL_ANA_CTRL_REG: TGLDETEN (Bit 7)                  */
#define ADPLL_ADPLL_ANA_CTRL_REG_TGLDETEN_Msk (0x80UL)                  /*!< ADPLL ADPLL_ANA_CTRL_REG: TGLDETEN (Bitfield-Mask: 0x01)    */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTCOFFSET_Pos (8UL)                    /*!< ADPLL ADPLL_ANA_CTRL_REG: DTCOFFSET (Bit 8)                 */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTCOFFSET_Msk (0x7f00UL)               /*!< ADPLL ADPLL_ANA_CTRL_REG: DTCOFFSET (Bitfield-Mask: 0x7f)   */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTC_EN_Pos   (15UL)                    /*!< ADPLL ADPLL_ANA_CTRL_REG: DTC_EN (Bit 15)                   */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTC_EN_Msk   (0x8000UL)                /*!< ADPLL ADPLL_ANA_CTRL_REG: DTC_EN (Bitfield-Mask: 0x01)      */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_OFFSET_Pos (16UL)                  /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_OFFSET (Bit 16)               */
#define ADPLL_ADPLL_ANA_CTRL_REG_TDC_OFFSET_Msk (0x3f0000UL)            /*!< ADPLL ADPLL_ANA_CTRL_REG: TDC_OFFSET (Bitfield-Mask: 0x3f)  */
#define ADPLL_ADPLL_ANA_CTRL_REG_VPASETTLE_Pos (24UL)                   /*!< ADPLL ADPLL_ANA_CTRL_REG: VPASETTLE (Bit 24)                */
#define ADPLL_ADPLL_ANA_CTRL_REG_VPASETTLE_Msk (0x3000000UL)            /*!< ADPLL ADPLL_ANA_CTRL_REG: VPASETTLE (Bitfield-Mask: 0x03)   */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTC_LDO_DMY_Pos (27UL)                 /*!< ADPLL ADPLL_ANA_CTRL_REG: DTC_LDO_DMY (Bit 27)              */
#define ADPLL_ADPLL_ANA_CTRL_REG_DTC_LDO_DMY_Msk (0x18000000UL)         /*!< ADPLL ADPLL_ANA_CTRL_REG: DTC_LDO_DMY (Bitfield-Mask: 0x03) */
/* --------------------------  ADPLL_ADPLL_DIV_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_DIV_CTRL_REG_FBDIV_EN_Pos (0UL)                     /*!< ADPLL ADPLL_DIV_CTRL_REG: FBDIV_EN (Bit 0)                  */
#define ADPLL_ADPLL_DIV_CTRL_REG_FBDIV_EN_Msk (0x1UL)                   /*!< ADPLL ADPLL_DIV_CTRL_REG: FBDIV_EN (Bitfield-Mask: 0x01)    */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_FB_EN_RX_Pos (1UL)               /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_FB_EN_RX (Bit 1)            */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_FB_EN_RX_Msk (0x2UL)             /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_FB_EN_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_FB_EN_TX_Pos (2UL)               /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_FB_EN_TX (Bit 2)            */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_FB_EN_TX_Msk (0x4UL)             /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_FB_EN_TX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_TRIM_Pos (8UL)                   /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_TRIM (Bit 8)                */
#define ADPLL_ADPLL_DIV_CTRL_REG_RXDIV_TRIM_Msk (0x1ff00UL)             /*!< ADPLL ADPLL_DIV_CTRL_REG: RXDIV_TRIM (Bitfield-Mask: 0x1ff) */
#define ADPLL_ADPLL_DIV_CTRL_REG_TXDIV_TRIM_Pos (17UL)                  /*!< ADPLL ADPLL_DIV_CTRL_REG: TXDIV_TRIM (Bit 17)               */
#define ADPLL_ADPLL_DIV_CTRL_REG_TXDIV_TRIM_Msk (0x3fe0000UL)           /*!< ADPLL ADPLL_DIV_CTRL_REG: TXDIV_TRIM (Bitfield-Mask: 0x1ff) */
/* --------------------------  ADPLL_ADPLL_INIT_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOCOARSEIC_Pos (0UL)                 /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOCOARSEIC (Bit 0)              */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOCOARSEIC_Msk (0xfUL)               /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOCOARSEIC (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOMEDIUMIC_Pos (4UL)                 /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOMEDIUMIC (Bit 4)              */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOMEDIUMIC_Msk (0x70UL)              /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOMEDIUMIC (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOFINEIC_Pos (8UL)                   /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOFINEIC (Bit 8)                */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOFINEIC_Msk (0x3f00UL)              /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOFINEIC (Bitfield-Mask: 0x3f)  */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOMODIC_Pos (16UL)                   /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOMODIC (Bit 16)                */
#define ADPLL_ADPLL_INIT_CTRL_REG_DCOMODIC_Msk (0x1fff0000UL)           /*!< ADPLL ADPLL_INIT_CTRL_REG: DCOMODIC (Bitfield-Mask: 0x1fff) */
/* --------------------------  ADPLL_ADPLL_FSM_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_FSM_CTRL_REG_TCOARSE_Pos  (0UL)                     /*!< ADPLL ADPLL_FSM_CTRL_REG: TCOARSE (Bit 0)                   */
#define ADPLL_ADPLL_FSM_CTRL_REG_TCOARSE_Msk  (0xfUL)                   /*!< ADPLL ADPLL_FSM_CTRL_REG: TCOARSE (Bitfield-Mask: 0x0f)     */
#define ADPLL_ADPLL_FSM_CTRL_REG_TMEDIUM_Pos  (4UL)                     /*!< ADPLL ADPLL_FSM_CTRL_REG: TMEDIUM (Bit 4)                   */
#define ADPLL_ADPLL_FSM_CTRL_REG_TMEDIUM_Msk  (0xf0UL)                  /*!< ADPLL ADPLL_FSM_CTRL_REG: TMEDIUM (Bitfield-Mask: 0x0f)     */
#define ADPLL_ADPLL_FSM_CTRL_REG_TFINE_Pos    (8UL)                     /*!< ADPLL ADPLL_FSM_CTRL_REG: TFINE (Bit 8)                     */
#define ADPLL_ADPLL_FSM_CTRL_REG_TFINE_Msk    (0xf00UL)                 /*!< ADPLL ADPLL_FSM_CTRL_REG: TFINE (Bitfield-Mask: 0x0f)       */
#define ADPLL_ADPLL_FSM_CTRL_REG_TMOD_Pos     (12UL)                    /*!< ADPLL ADPLL_FSM_CTRL_REG: TMOD (Bit 12)                     */
#define ADPLL_ADPLL_FSM_CTRL_REG_TMOD_Msk     (0xf000UL)                /*!< ADPLL ADPLL_FSM_CTRL_REG: TMOD (Bitfield-Mask: 0x0f)        */
#define ADPLL_ADPLL_FSM_CTRL_REG_TPASETTLE_Pos (16UL)                   /*!< ADPLL ADPLL_FSM_CTRL_REG: TPASETTLE (Bit 16)                */
#define ADPLL_ADPLL_FSM_CTRL_REG_TPASETTLE_Msk (0xf0000UL)              /*!< ADPLL ADPLL_FSM_CTRL_REG: TPASETTLE (Bitfield-Mask: 0x0f)   */
#define ADPLL_ADPLL_FSM_CTRL_REG_TSETTLE_Pos  (20UL)                    /*!< ADPLL ADPLL_FSM_CTRL_REG: TSETTLE (Bit 20)                  */
#define ADPLL_ADPLL_FSM_CTRL_REG_TSETTLE_Msk  (0xf00000UL)              /*!< ADPLL ADPLL_FSM_CTRL_REG: TSETTLE (Bitfield-Mask: 0x0f)     */
#define ADPLL_ADPLL_FSM_CTRL_REG_TVPASETTLE_Pos (24UL)                  /*!< ADPLL ADPLL_FSM_CTRL_REG: TVPASETTLE (Bit 24)               */
#define ADPLL_ADPLL_FSM_CTRL_REG_TVPASETTLE_Msk (0x3f000000UL)          /*!< ADPLL ADPLL_FSM_CTRL_REG: TVPASETTLE (Bitfield-Mask: 0x3f)  */
/* --------------------------  ADPLL_ADPLL_MON_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_MON_CTRL_REG_TFREQMEAS_Pos (0UL)                    /*!< ADPLL ADPLL_MON_CTRL_REG: TFREQMEAS (Bit 0)                 */
#define ADPLL_ADPLL_MON_CTRL_REG_TFREQMEAS_Msk (0x1fUL)                 /*!< ADPLL ADPLL_MON_CTRL_REG: TFREQMEAS (Bitfield-Mask: 0x1f)   */
#define ADPLL_ADPLL_MON_CTRL_REG_TMREN_Pos    (5UL)                     /*!< ADPLL ADPLL_MON_CTRL_REG: TMREN (Bit 5)                     */
#define ADPLL_ADPLL_MON_CTRL_REG_TMREN_Msk    (0x20UL)                  /*!< ADPLL ADPLL_MON_CTRL_REG: TMREN (Bitfield-Mask: 0x01)       */
#define ADPLL_ADPLL_MON_CTRL_REG_ENRFMEAS_Pos (6UL)                     /*!< ADPLL ADPLL_MON_CTRL_REG: ENRFMEAS (Bit 6)                  */
#define ADPLL_ADPLL_MON_CTRL_REG_ENRFMEAS_Msk (0x40UL)                  /*!< ADPLL ADPLL_MON_CTRL_REG: ENRFMEAS (Bitfield-Mask: 0x01)    */
#define ADPLL_ADPLL_MON_CTRL_REG_RFMEAS_MODE_Pos (7UL)                  /*!< ADPLL ADPLL_MON_CTRL_REG: RFMEAS_MODE (Bit 7)               */
#define ADPLL_ADPLL_MON_CTRL_REG_RFMEAS_MODE_Msk (0x80UL)               /*!< ADPLL ADPLL_MON_CTRL_REG: RFMEAS_MODE (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_MON_CTRL_REG_HOLD_STATE_Pos (8UL)                   /*!< ADPLL ADPLL_MON_CTRL_REG: HOLD_STATE (Bit 8)                */
#define ADPLL_ADPLL_MON_CTRL_REG_HOLD_STATE_Msk (0xf00UL)               /*!< ADPLL ADPLL_MON_CTRL_REG: HOLD_STATE (Bitfield-Mask: 0x0f)  */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONMOD_Pos (16UL)                  /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONMOD (Bit 16)               */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONMOD_Msk (0x30000UL)             /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONMOD (Bitfield-Mask: 0x03)  */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONWND_Pos (18UL)                  /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONWND (Bit 18)               */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONWND_Msk (0xfc0000UL)            /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONWND (Bitfield-Mask: 0x3f)  */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONTRHLD_Pos (24UL)                /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONTRHLD (Bit 24)             */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONTRHLD_Msk (0x3f000000UL)        /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONTRHLD (Bitfield-Mask: 0x3f) */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONFRCEN_Pos (30UL)                /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONFRCEN (Bit 30)             */
#define ADPLL_ADPLL_MON_CTRL_REG_QUALMONFRCEN_Msk (0x40000000UL)        /*!< ADPLL ADPLL_MON_CTRL_REG: QUALMONFRCEN (Bitfield-Mask: 0x01) */
/* --------------------------  ADPLL_ADPLL_MISC_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_MISC_CTRL_REG_DLYFCWDT_Pos (0UL)                    /*!< ADPLL ADPLL_MISC_CTRL_REG: DLYFCWDT (Bit 0)                 */
#define ADPLL_ADPLL_MISC_CTRL_REG_DLYFCWDT_Msk (0x3UL)                  /*!< ADPLL ADPLL_MISC_CTRL_REG: DLYFCWDT (Bitfield-Mask: 0x03)   */
#define ADPLL_ADPLL_MISC_CTRL_REG_RESDLY_Pos  (2UL)                     /*!< ADPLL ADPLL_MISC_CTRL_REG: RESDLY (Bit 2)                   */
#define ADPLL_ADPLL_MISC_CTRL_REG_RESDLY_Msk  (0xcUL)                   /*!< ADPLL ADPLL_MISC_CTRL_REG: RESDLY (Bitfield-Mask: 0x03)     */
#define ADPLL_ADPLL_MISC_CTRL_REG_MODDLY_Pos  (4UL)                     /*!< ADPLL ADPLL_MISC_CTRL_REG: MODDLY (Bit 4)                   */
#define ADPLL_ADPLL_MISC_CTRL_REG_MODDLY_Msk  (0x30UL)                  /*!< ADPLL ADPLL_MISC_CTRL_REG: MODDLY (Bitfield-Mask: 0x03)     */
#define ADPLL_ADPLL_MISC_CTRL_REG_ENRESIDUE_Pos (6UL)                   /*!< ADPLL ADPLL_MISC_CTRL_REG: ENRESIDUE (Bit 6)                */
#define ADPLL_ADPLL_MISC_CTRL_REG_ENRESIDUE_Msk (0x40UL)                /*!< ADPLL ADPLL_MISC_CTRL_REG: ENRESIDUE (Bitfield-Mask: 0x01)  */
#define ADPLL_ADPLL_MISC_CTRL_REG_ENFCWMOD_Pos (7UL)                    /*!< ADPLL ADPLL_MISC_CTRL_REG: ENFCWMOD (Bit 7)                 */
#define ADPLL_ADPLL_MISC_CTRL_REG_ENFCWMOD_Msk (0x80UL)                 /*!< ADPLL ADPLL_MISC_CTRL_REG: ENFCWMOD (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_MISC_CTRL_REG_PHR_FRAC_PRESET_VAL_Pos (8UL)         /*!< ADPLL ADPLL_MISC_CTRL_REG: PHR_FRAC_PRESET_VAL (Bit 8)      */
#define ADPLL_ADPLL_MISC_CTRL_REG_PHR_FRAC_PRESET_VAL_Msk (0x1ffff00UL) /*!< ADPLL ADPLL_MISC_CTRL_REG: PHR_FRAC_PRESET_VAL (Bitfield-Mask: 0x1ffff) */
/* ---------------------------  ADPLL_ADPLL_OL_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_OL_CTRL_REG_RXDIV_FB_EN_OL_RX_Pos (0UL)             /*!< ADPLL ADPLL_OL_CTRL_REG: RXDIV_FB_EN_OL_RX (Bit 0)          */
#define ADPLL_ADPLL_OL_CTRL_REG_RXDIV_FB_EN_OL_RX_Msk (0x1UL)           /*!< ADPLL ADPLL_OL_CTRL_REG: RXDIV_FB_EN_OL_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OL_CTRL_REG_FBDIV_EN_OL_RX_Pos (1UL)                /*!< ADPLL ADPLL_OL_CTRL_REG: FBDIV_EN_OL_RX (Bit 1)             */
#define ADPLL_ADPLL_OL_CTRL_REG_FBDIV_EN_OL_RX_Msk (0x2UL)              /*!< ADPLL ADPLL_OL_CTRL_REG: FBDIV_EN_OL_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OL_CTRL_REG_TXDIV_EN_OL_RX_Pos (2UL)                /*!< ADPLL ADPLL_OL_CTRL_REG: TXDIV_EN_OL_RX (Bit 2)             */
#define ADPLL_ADPLL_OL_CTRL_REG_TXDIV_EN_OL_RX_Msk (0x4UL)              /*!< ADPLL ADPLL_OL_CTRL_REG: TXDIV_EN_OL_RX (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OL_CTRL_REG_TSETTLE_OL_Pos (8UL)                    /*!< ADPLL ADPLL_OL_CTRL_REG: TSETTLE_OL (Bit 8)                 */
#define ADPLL_ADPLL_OL_CTRL_REG_TSETTLE_OL_Msk (0x3ff00UL)              /*!< ADPLL ADPLL_OL_CTRL_REG: TSETTLE_OL (Bitfield-Mask: 0x3ff)  */
#define ADPLL_ADPLL_OL_CTRL_REG_TAVG_OL_Pos   (18UL)                    /*!< ADPLL ADPLL_OL_CTRL_REG: TAVG_OL (Bit 18)                   */
#define ADPLL_ADPLL_OL_CTRL_REG_TAVG_OL_Msk   (0x7fc0000UL)             /*!< ADPLL ADPLL_OL_CTRL_REG: TAVG_OL (Bitfield-Mask: 0x1ff)     */
#define ADPLL_ADPLL_OL_CTRL_REG_NAVG_OL_Pos   (27UL)                    /*!< ADPLL ADPLL_OL_CTRL_REG: NAVG_OL (Bit 27)                   */
#define ADPLL_ADPLL_OL_CTRL_REG_NAVG_OL_Msk   (0x78000000UL)            /*!< ADPLL ADPLL_OL_CTRL_REG: NAVG_OL (Bitfield-Mask: 0x0f)      */
#define ADPLL_ADPLL_OL_CTRL_REG_OL_RDY_Pos    (31UL)                    /*!< ADPLL ADPLL_OL_CTRL_REG: OL_RDY (Bit 31)                    */
#define ADPLL_ADPLL_OL_CTRL_REG_OL_RDY_Msk    (0x80000000UL)            /*!< ADPLL ADPLL_OL_CTRL_REG: OL_RDY (Bitfield-Mask: 0x01)       */
/* -----------------------  ADPLL_ADPLL_OVERRULE_CTRL1_REG  ----------------------- */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ACTIVE_SEL_Pos (0UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ACTIVE_SEL (Bit 0)      */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ACTIVE_SEL_Msk (0x1UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ACTIVE_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ACTIVE_WR_Pos (1UL)          /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ACTIVE_WR (Bit 1)       */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ACTIVE_WR_Msk (0x2UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ACTIVE_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RXBIT_SEL_Pos (2UL)          /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RXBIT_SEL (Bit 2)       */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RXBIT_SEL_Msk (0x4UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RXBIT_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RXBIT_WR_Pos (3UL)           /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RXBIT_WR (Bit 3)        */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RXBIT_WR_Msk (0x8UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RXBIT_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ENPAIN_SEL_Pos (4UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ENPAIN_SEL (Bit 4)      */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ENPAIN_SEL_Msk (0x10UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ENPAIN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ENPAIN_WR_Pos (5UL)          /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ENPAIN_WR (Bit 5)       */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_ENPAIN_WR_Msk (0x20UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_ENPAIN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_SRESETN_SEL_Pos (6UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_SRESETN_SEL (Bit 6)     */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_SRESETN_SEL_Msk (0x40UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_SRESETN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_SRESETN_WR_Pos (7UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_SRESETN_WR (Bit 7)      */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_SRESETN_WR_Msk (0x80UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_SRESETN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_VPAEN_SEL_Pos (8UL)          /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_VPAEN_SEL (Bit 8)       */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_VPAEN_SEL_Msk (0x100UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_VPAEN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_VPAEN_WR_Pos (9UL)           /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_VPAEN_WR (Bit 9)        */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_VPAEN_WR_Msk (0x200UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_VPAEN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RDYFORDIV_SEL_Pos (10UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RDYFORDIV_SEL (Bit 10)  */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RDYFORDIV_SEL_Msk (0x400UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RDYFORDIV_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RDYFORDIV_WR_Pos (11UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RDYFORDIV_WR (Bit 11)   */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_RDYFORDIV_WR_Msk (0x800UL)   /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_RDYFORDIV_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMPHOLD_SEL_Pos (12UL)    /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMPHOLD_SEL (Bit 12) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMPHOLD_SEL_Msk (0x1000UL) /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMPHOLD_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMPHOLD_WR_Pos (13UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMPHOLD_WR (Bit 13)  */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMPHOLD_WR_Msk (0x2000UL) /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMPHOLD_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMP_SEL_Pos (16UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMP_SEL (Bit 16)     */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMP_SEL_Msk (0x10000UL)   /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMP_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMP_WR_Pos (17UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMP_WR (Bit 17)      */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DCOAMP_WR_Msk (0x1e0000UL)   /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DCOAMP_WR (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DTC_OH_SEL_Pos (24UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DTC_OH_SEL (Bit 24)     */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DTC_OH_SEL_Msk (0x1000000UL) /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DTC_OH_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DTC_OH_WR_Pos (25UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DTC_OH_WR (Bit 25)      */
#define ADPLL_ADPLL_OVERRULE_CTRL1_REG_OVR_DTC_OH_WR_Msk (0xfe000000UL) /*!< ADPLL ADPLL_OVERRULE_CTRL1_REG: OVR_DTC_OH_WR (Bitfield-Mask: 0x7f) */
/* -----------------------  ADPLL_ADPLL_OVERRULE_CTRL2_REG  ----------------------- */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOCOARSE_SEL_Pos (0UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOCOARSE_SEL (Bit 0)   */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOCOARSE_SEL_Msk (0x1UL)    /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOCOARSE_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOCOARSE_WR_Pos (1UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOCOARSE_WR (Bit 1)    */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOCOARSE_WR_Msk (0x1eUL)    /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOCOARSE_WR (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMEDIUM_SEL_Pos (8UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMEDIUM_SEL (Bit 8)   */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMEDIUM_SEL_Msk (0x100UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMEDIUM_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMEDIUM_WR_Pos (9UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMEDIUM_WR (Bit 9)    */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMEDIUM_WR_Msk (0xe00UL)   /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMEDIUM_WR (Bitfield-Mask: 0x07) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOFINE_SEL_Pos (16UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOFINE_SEL (Bit 16)    */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOFINE_SEL_Msk (0x10000UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOFINE_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOFINE_WR_Pos (17UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOFINE_WR (Bit 17)     */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOFINE_WR_Msk (0x7e0000UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOFINE_WR (Bitfield-Mask: 0x3f) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMOD_SEL_Pos (23UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMOD_SEL (Bit 23)     */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMOD_SEL_Msk (0x800000UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMOD_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMOD_WR_Pos (24UL)         /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMOD_WR (Bit 24)      */
#define ADPLL_ADPLL_OVERRULE_CTRL2_REG_OVR_DCOMOD_WR_Msk (0xff000000UL) /*!< ADPLL ADPLL_OVERRULE_CTRL2_REG: OVR_DCOMOD_WR (Bitfield-Mask: 0xff) */
/* -----------------------  ADPLL_ADPLL_OVERRULE_CTRL3_REG  ----------------------- */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_EN_SEL_Pos (0UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_EN_SEL (Bit 0)    */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_EN_SEL_Msk (0x1UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_EN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_EN_WR_Pos (1UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_EN_WR (Bit 1)     */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_EN_WR_Msk (0x2UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_EN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_TXDIV_EN_SEL_Pos (2UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_TXDIV_EN_SEL (Bit 2)    */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_TXDIV_EN_SEL_Msk (0x4UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_TXDIV_EN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_TXDIV_EN_WR_Pos (3UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_TXDIV_EN_WR (Bit 3)     */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_TXDIV_EN_WR_Msk (0x8UL)      /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_TXDIV_EN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_FBDIV_EN_SEL_Pos (4UL)       /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_FBDIV_EN_SEL (Bit 4)    */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_FBDIV_EN_SEL_Msk (0x10UL)    /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_FBDIV_EN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_FBDIV_EN_WR_Pos (5UL)        /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_FBDIV_EN_WR (Bit 5)     */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_FBDIV_EN_WR_Msk (0x20UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_FBDIV_EN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_FB_EN_SEL_Pos (6UL)    /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_FB_EN_SEL (Bit 6) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_FB_EN_SEL_Msk (0x40UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_FB_EN_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_FB_EN_WR_Pos (7UL)     /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_FB_EN_WR (Bit 7)  */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_RXDIV_FB_EN_WR_Msk (0x80UL)  /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_RXDIV_FB_EN_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_SEL_Pos (8UL)   /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_SEL (Bit 8) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_SEL_Msk (0x100UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_WR_Pos (9UL)    /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_WR (Bit 9) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_WR_Msk (0x200UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_WR (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_INT_SEL_Pos (10UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_INT_SEL (Bit 10) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_INT_SEL_Msk (0x400UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_INT_SEL (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_INT_WR_Pos (11UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_INT_WR (Bit 11) */
#define ADPLL_ADPLL_OVERRULE_CTRL3_REG_OVR_OPENLOOP_RDY_INT_WR_Msk (0x800UL) /*!< ADPLL ADPLL_OVERRULE_CTRL3_REG: OVR_OPENLOOP_RDY_INT_WR (Bitfield-Mask: 0x01) */
/* --------------------------  ADPLL_ADPLL_RFPT_CTRL_REG  ------------------------- */
#define ADPLL_ADPLL_RFPT_CTRL_REG_RFPT_MUX_Pos (0UL)                    /*!< ADPLL ADPLL_RFPT_CTRL_REG: RFPT_MUX (Bit 0)                 */
#define ADPLL_ADPLL_RFPT_CTRL_REG_RFPT_MUX_Msk (0xfUL)                  /*!< ADPLL ADPLL_RFPT_CTRL_REG: RFPT_MUX (Bitfield-Mask: 0x0f)   */
#define ADPLL_ADPLL_RFPT_CTRL_REG_INV_CKRFPT_Pos (4UL)                  /*!< ADPLL ADPLL_RFPT_CTRL_REG: INV_CKRFPT (Bit 4)               */
#define ADPLL_ADPLL_RFPT_CTRL_REG_INV_CKRFPT_Msk (0x10UL)               /*!< ADPLL ADPLL_RFPT_CTRL_REG: INV_CKRFPT (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_RFPT_CTRL_REG_RFPT_RATE_Pos (5UL)                   /*!< ADPLL ADPLL_RFPT_CTRL_REG: RFPT_RATE (Bit 5)                */
#define ADPLL_ADPLL_RFPT_CTRL_REG_RFPT_RATE_Msk (0x60UL)                /*!< ADPLL ADPLL_RFPT_CTRL_REG: RFPT_RATE (Bitfield-Mask: 0x03)  */
/* -------------------------  ADPLL_ADPLL_ANATST_CTRL_REG  ------------------------ */
#define ADPLL_ADPLL_ANATST_CTRL_REG_ANATSTEN_Pos (0UL)                  /*!< ADPLL ADPLL_ANATST_CTRL_REG: ANATSTEN (Bit 0)               */
#define ADPLL_ADPLL_ANATST_CTRL_REG_ANATSTEN_Msk (0xffffUL)             /*!< ADPLL ADPLL_ANATST_CTRL_REG: ANATSTEN (Bitfield-Mask: 0xffff) */
#define ADPLL_ADPLL_ANATST_CTRL_REG_ANATSTSPARE_Pos (16UL)              /*!< ADPLL ADPLL_ANATST_CTRL_REG: ANATSTSPARE (Bit 16)           */
#define ADPLL_ADPLL_ANATST_CTRL_REG_ANATSTSPARE_Msk (0xffff0000UL)      /*!< ADPLL ADPLL_ANATST_CTRL_REG: ANATSTSPARE (Bitfield-Mask: 0xffff) */
/* --------------------------  ADPLL_ADPLL_ACC_CTRL_REG  -------------------------- */
#define ADPLL_ADPLL_ACC_CTRL_REG_CLIP_MOD_TUNE_0_RX_Pos (0UL)           /*!< ADPLL ADPLL_ACC_CTRL_REG: CLIP_MOD_TUNE_0_RX (Bit 0)        */
#define ADPLL_ADPLL_ACC_CTRL_REG_CLIP_MOD_TUNE_0_RX_Msk (0x1fffUL)      /*!< ADPLL ADPLL_ACC_CTRL_REG: CLIP_MOD_TUNE_0_RX (Bitfield-Mask: 0x1fff) */
#define ADPLL_ADPLL_ACC_CTRL_REG_CLIP_MOD_TUNE_0_TX_Pos (16UL)          /*!< ADPLL ADPLL_ACC_CTRL_REG: CLIP_MOD_TUNE_0_TX (Bit 16)       */
#define ADPLL_ADPLL_ACC_CTRL_REG_CLIP_MOD_TUNE_0_TX_Msk (0x1fff0000UL)  /*!< ADPLL ADPLL_ACC_CTRL_REG: CLIP_MOD_TUNE_0_TX (Bitfield-Mask: 0x1fff) */
#define ADPLL_ADPLL_ACC_CTRL_REG_EN_CMF_AVG_Pos (31UL)                  /*!< ADPLL ADPLL_ACC_CTRL_REG: EN_CMF_AVG (Bit 31)               */
#define ADPLL_ADPLL_ACC_CTRL_REG_EN_CMF_AVG_Msk (0x80000000UL)          /*!< ADPLL ADPLL_ACC_CTRL_REG: EN_CMF_AVG (Bitfield-Mask: 0x01)  */
/* -------------------------  ADPLL_ADPLL_FREQMEAS_RD_REG  ------------------------ */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_FREQDIFF_Pos (0UL)                  /*!< ADPLL ADPLL_FREQMEAS_RD_REG: FREQDIFF (Bit 0)               */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_FREQDIFF_Msk (0x7fffffUL)           /*!< ADPLL ADPLL_FREQMEAS_RD_REG: FREQDIFF (Bitfield-Mask: 0x7fffff) */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_PHVSA1_Pos (23UL)                   /*!< ADPLL ADPLL_FREQMEAS_RD_REG: PHVSA1 (Bit 23)                */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_PHVSA1_Msk (0x800000UL)             /*!< ADPLL ADPLL_FREQMEAS_RD_REG: PHVSA1 (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_PHVSA0_Pos (24UL)                   /*!< ADPLL ADPLL_FREQMEAS_RD_REG: PHVSA0 (Bit 24)                */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_PHVSA0_Msk (0x1000000UL)            /*!< ADPLL ADPLL_FREQMEAS_RD_REG: PHVSA0 (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_TDCBUB_Pos (25UL)                   /*!< ADPLL ADPLL_FREQMEAS_RD_REG: TDCBUB (Bit 25)                */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_TDCBUB_Msk (0x2000000UL)            /*!< ADPLL ADPLL_FREQMEAS_RD_REG: TDCBUB (Bitfield-Mask: 0x01)   */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_QUALMONDET_Pos (26UL)               /*!< ADPLL ADPLL_FREQMEAS_RD_REG: QUALMONDET (Bit 26)            */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_QUALMONDET_Msk (0x4000000UL)        /*!< ADPLL ADPLL_FREQMEAS_RD_REG: QUALMONDET (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_MEASDONE_OUT_Pos (29UL)             /*!< ADPLL ADPLL_FREQMEAS_RD_REG: MEASDONE_OUT (Bit 29)          */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_MEASDONE_OUT_Msk (0x20000000UL)     /*!< ADPLL ADPLL_FREQMEAS_RD_REG: MEASDONE_OUT (Bitfield-Mask: 0x01) */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_DCOAMPDET_ASYNC_Pos (30UL)          /*!< ADPLL ADPLL_FREQMEAS_RD_REG: DCOAMPDET_ASYNC (Bit 30)       */
#define ADPLL_ADPLL_FREQMEAS_RD_REG_DCOAMPDET_ASYNC_Msk (0x40000000UL)  /*!< ADPLL ADPLL_FREQMEAS_RD_REG: DCOAMPDET_ASYNC (Bitfield-Mask: 0x01) */
/* ---------------------------  ADPLL_ADPLL_DCO_RD_REG  --------------------------- */
#define ADPLL_ADPLL_DCO_RD_REG_DCOCOARSE_Pos  (0UL)                     /*!< ADPLL ADPLL_DCO_RD_REG: DCOCOARSE (Bit 0)                   */
#define ADPLL_ADPLL_DCO_RD_REG_DCOCOARSE_Msk  (0xfUL)                   /*!< ADPLL ADPLL_DCO_RD_REG: DCOCOARSE (Bitfield-Mask: 0x0f)     */
#define ADPLL_ADPLL_DCO_RD_REG_DCOMEDIUM_Pos  (4UL)                     /*!< ADPLL ADPLL_DCO_RD_REG: DCOMEDIUM (Bit 4)                   */
#define ADPLL_ADPLL_DCO_RD_REG_DCOMEDIUM_Msk  (0x70UL)                  /*!< ADPLL ADPLL_DCO_RD_REG: DCOMEDIUM (Bitfield-Mask: 0x07)     */
#define ADPLL_ADPLL_DCO_RD_REG_DCOFINE_Pos    (7UL)                     /*!< ADPLL ADPLL_DCO_RD_REG: DCOFINE (Bit 7)                     */
#define ADPLL_ADPLL_DCO_RD_REG_DCOFINE_Msk    (0x1f80UL)                /*!< ADPLL ADPLL_DCO_RD_REG: DCOFINE (Bitfield-Mask: 0x3f)       */
#define ADPLL_ADPLL_DCO_RD_REG_DCOMOD_Pos     (13UL)                    /*!< ADPLL ADPLL_DCO_RD_REG: DCOMOD (Bit 13)                     */
#define ADPLL_ADPLL_DCO_RD_REG_DCOMOD_Msk     (0x3ffe000UL)             /*!< ADPLL ADPLL_DCO_RD_REG: DCOMOD (Bitfield-Mask: 0x1fff)      */
#define ADPLL_ADPLL_DCO_RD_REG_DCOAMP_Pos     (26UL)                    /*!< ADPLL ADPLL_DCO_RD_REG: DCOAMP (Bit 26)                     */
#define ADPLL_ADPLL_DCO_RD_REG_DCOAMP_Msk     (0x3c000000UL)            /*!< ADPLL ADPLL_DCO_RD_REG: DCOAMP (Bitfield-Mask: 0x0f)        */
/* ---------------------------  ADPLL_ADPLL_KDCO_RD_REG  -------------------------- */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCO_HF_INT_Pos (0UL)                   /*!< ADPLL ADPLL_KDCO_RD_REG: KDCO_HF_INT (Bit 0)                */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCO_HF_INT_Msk (0xffUL)                /*!< ADPLL ADPLL_KDCO_RD_REG: KDCO_HF_INT (Bitfield-Mask: 0xff)  */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCO_HF_OUT_Pos (8UL)                   /*!< ADPLL ADPLL_KDCO_RD_REG: KDCO_HF_OUT (Bit 8)                */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCO_HF_OUT_Msk (0xff00UL)              /*!< ADPLL ADPLL_KDCO_RD_REG: KDCO_HF_OUT (Bitfield-Mask: 0xff)  */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCOCN_Pos    (16UL)                    /*!< ADPLL ADPLL_KDCO_RD_REG: KDCOCN (Bit 16)                    */
#define ADPLL_ADPLL_KDCO_RD_REG_KDCOCN_Msk    (0x7f0000UL)              /*!< ADPLL ADPLL_KDCO_RD_REG: KDCOCN (Bitfield-Mask: 0x7f)       */
#define ADPLL_ADPLL_KDCO_RD_REG_CAL_KDCOCAL_Pos (23UL)                  /*!< ADPLL ADPLL_KDCO_RD_REG: CAL_KDCOCAL (Bit 23)               */
#define ADPLL_ADPLL_KDCO_RD_REG_CAL_KDCOCAL_Msk (0x800000UL)            /*!< ADPLL ADPLL_KDCO_RD_REG: CAL_KDCOCAL (Bitfield-Mask: 0x01)  */
/* ---------------------------  ADPLL_ADPLL_KDTC_RD_REG  -------------------------- */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTC_OUT_Pos  (0UL)                     /*!< ADPLL ADPLL_KDTC_RD_REG: KDTC_OUT (Bit 0)                   */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTC_OUT_Msk  (0x1ffUL)                 /*!< ADPLL ADPLL_KDTC_RD_REG: KDTC_OUT (Bitfield-Mask: 0x1ff)    */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTCCN_Pos    (9UL)                     /*!< ADPLL ADPLL_KDTC_RD_REG: KDTCCN (Bit 9)                     */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTCCN_Msk    (0xfe00UL)                /*!< ADPLL ADPLL_KDTC_RD_REG: KDTCCN (Bitfield-Mask: 0x7f)       */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTC_ALPHA_COMP_Pos (16UL)              /*!< ADPLL ADPLL_KDTC_RD_REG: KDTC_ALPHA_COMP (Bit 16)           */
#define ADPLL_ADPLL_KDTC_RD_REG_KDTC_ALPHA_COMP_Msk (0x1ff0000UL)       /*!< ADPLL ADPLL_KDTC_RD_REG: KDTC_ALPHA_COMP (Bitfield-Mask: 0x1ff) */
#define ADPLL_ADPLL_KDTC_RD_REG_CAL_KDTCCAL_Pos (25UL)                  /*!< ADPLL ADPLL_KDTC_RD_REG: CAL_KDTCCAL (Bit 25)               */
#define ADPLL_ADPLL_KDTC_RD_REG_CAL_KDTCCAL_Msk (0x2000000UL)           /*!< ADPLL ADPLL_KDTC_RD_REG: CAL_KDTCCAL (Bitfield-Mask: 0x01)  */
/* ------------------------  ADPLL_ADPLL_TUNESTATE_RD_REG  ------------------------ */
#define ADPLL_ADPLL_TUNESTATE_RD_REG_TUNE_STATE_Pos (0UL)               /*!< ADPLL ADPLL_TUNESTATE_RD_REG: TUNE_STATE (Bit 0)            */
#define ADPLL_ADPLL_TUNESTATE_RD_REG_TUNE_STATE_Msk (0xfUL)             /*!< ADPLL ADPLL_TUNESTATE_RD_REG: TUNE_STATE (Bitfield-Mask: 0x0f) */
#define ADPLL_ADPLL_TUNESTATE_RD_REG_TMRVAL_Pos (4UL)                   /*!< ADPLL ADPLL_TUNESTATE_RD_REG: TMRVAL (Bit 4)                */
#define ADPLL_ADPLL_TUNESTATE_RD_REG_TMRVAL_Msk (0x3ff0UL)              /*!< ADPLL ADPLL_TUNESTATE_RD_REG: TMRVAL (Bitfield-Mask: 0x3ff) */
/* -------------------------  ADPLL_ADPLL_PLLFCWDT_RD_REG  ------------------------ */
#define ADPLL_ADPLL_PLLFCWDT_RD_REG_PLLFCWDT_Pos (0UL)                  /*!< ADPLL ADPLL_PLLFCWDT_RD_REG: PLLFCWDT (Bit 0)               */
#define ADPLL_ADPLL_PLLFCWDT_RD_REG_PLLFCWDT_Msk (0x7fffffUL)           /*!< ADPLL ADPLL_PLLFCWDT_RD_REG: PLLFCWDT (Bitfield-Mask: 0x7fffff) */
/* --------------------------  ADPLL_ADPLL_ANATST_RD_REG  ------------------------- */
#define ADPLL_ADPLL_ANATST_RD_REG_ANATSTSPARE_IN_Pos (0UL)              /*!< ADPLL ADPLL_ANATST_RD_REG: ANATSTSPARE_IN (Bit 0)           */
#define ADPLL_ADPLL_ANATST_RD_REG_ANATSTSPARE_IN_Msk (0xffffUL)         /*!< ADPLL ADPLL_ANATST_RD_REG: ANATSTSPARE_IN (Bitfield-Mask: 0xffff) */
/* ================================================================================ */
/* ================        struct 'AES_HASH' Position & Mask       ================ */
/* ================================================================================ */
/* --------------------------  AES_HASH_CRYPTO_CTRL_REG  -------------------------- */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_Pos (0UL)                   /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ALG (Bit 0)                */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_Msk (0x3UL)                 /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ALG (Bitfield-Mask: 0x03)  */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_MD_Pos (2UL)                /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ALG_MD (Bit 2)             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ALG_MD_Msk (0xcUL)              /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ALG_MD (Bitfield-Mask: 0x03) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_OUT_MD_Pos (4UL)                /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_OUT_MD (Bit 4)             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_OUT_MD_Msk (0x10UL)             /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_OUT_MD (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEY_SZ_Pos (5UL)            /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_AES_KEY_SZ (Bit 5)         */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEY_SZ_Msk (0x60UL)         /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_AES_KEY_SZ (Bitfield-Mask: 0x03) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ENCDEC_Pos (7UL)                /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ENCDEC (Bit 7)             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_ENCDEC_Msk (0x80UL)             /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_ENCDEC (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_IRQ_EN_Pos (8UL)                /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_IRQ_EN (Bit 8)             */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_IRQ_EN_Msk (0x100UL)            /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_IRQ_EN (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_SEL_Pos (9UL)              /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_HASH_SEL (Bit 9)           */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_SEL_Msk (0x200UL)          /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_HASH_SEL (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_OUT_LEN_Pos (10UL)         /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_HASH_OUT_LEN (Bit 10)      */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_HASH_OUT_LEN_Msk (0xfc00UL)     /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_HASH_OUT_LEN (Bitfield-Mask: 0x3f) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_MORE_IN_Pos (16UL)              /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_MORE_IN (Bit 16)           */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_MORE_IN_Msk (0x10000UL)         /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_MORE_IN (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEXP_Pos (17UL)             /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_AES_KEXP (Bit 17)          */
#define AES_HASH_CRYPTO_CTRL_REG_CRYPTO_AES_KEXP_Msk (0x20000UL)        /*!< AES_HASH CRYPTO_CTRL_REG: CRYPTO_AES_KEXP (Bitfield-Mask: 0x01) */
/* --------------------------  AES_HASH_CRYPTO_START_REG  ------------------------- */
#define AES_HASH_CRYPTO_START_REG_CRYPTO_START_Pos (0UL)                /*!< AES_HASH CRYPTO_START_REG: CRYPTO_START (Bit 0)             */
#define AES_HASH_CRYPTO_START_REG_CRYPTO_START_Msk (0x1UL)              /*!< AES_HASH CRYPTO_START_REG: CRYPTO_START (Bitfield-Mask: 0x01) */
/* -----------------------  AES_HASH_CRYPTO_FETCH_ADDR_REG  ----------------------- */
#define AES_HASH_CRYPTO_FETCH_ADDR_REG_CRYPTO_FETCH_ADDR_Pos (0UL)      /*!< AES_HASH CRYPTO_FETCH_ADDR_REG: CRYPTO_FETCH_ADDR (Bit 0)   */
#define AES_HASH_CRYPTO_FETCH_ADDR_REG_CRYPTO_FETCH_ADDR_Msk (0xffffffffUL) /*!< AES_HASH CRYPTO_FETCH_ADDR_REG: CRYPTO_FETCH_ADDR (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  AES_HASH_CRYPTO_LEN_REG  -------------------------- */
#define AES_HASH_CRYPTO_LEN_REG_CRYPTO_LEN_Pos (0UL)                    /*!< AES_HASH CRYPTO_LEN_REG: CRYPTO_LEN (Bit 0)                 */
#define AES_HASH_CRYPTO_LEN_REG_CRYPTO_LEN_Msk (0xffffffUL)             /*!< AES_HASH CRYPTO_LEN_REG: CRYPTO_LEN (Bitfield-Mask: 0xffffff) */
/* ------------------------  AES_HASH_CRYPTO_DEST_ADDR_REG  ----------------------- */
#define AES_HASH_CRYPTO_DEST_ADDR_REG_CRYPTO_DEST_ADDR_Pos (0UL)        /*!< AES_HASH CRYPTO_DEST_ADDR_REG: CRYPTO_DEST_ADDR (Bit 0)     */
#define AES_HASH_CRYPTO_DEST_ADDR_REG_CRYPTO_DEST_ADDR_Msk (0xffffffffUL) /*!< AES_HASH CRYPTO_DEST_ADDR_REG: CRYPTO_DEST_ADDR (Bitfield-Mask: 0xffffffff) */
/* -------------------------  AES_HASH_CRYPTO_STATUS_REG  ------------------------- */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_INACTIVE_Pos (0UL)            /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_INACTIVE (Bit 0)         */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_INACTIVE_Msk (0x1UL)          /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_INACTIVE (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_WAIT_FOR_IN_Pos (1UL)         /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_WAIT_FOR_IN (Bit 1)      */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_WAIT_FOR_IN_Msk (0x2UL)       /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_WAIT_FOR_IN (Bitfield-Mask: 0x01) */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_IRQ_ST_Pos (2UL)              /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_IRQ_ST (Bit 2)           */
#define AES_HASH_CRYPTO_STATUS_REG_CRYPTO_IRQ_ST_Msk (0x4UL)            /*!< AES_HASH CRYPTO_STATUS_REG: CRYPTO_IRQ_ST (Bitfield-Mask: 0x01) */
/* -------------------------  AES_HASH_CRYPTO_CLRIRQ_REG  ------------------------- */
#define AES_HASH_CRYPTO_CLRIRQ_REG_CRYPTO_CLRIRQ_Pos (0UL)              /*!< AES_HASH CRYPTO_CLRIRQ_REG: CRYPTO_CLRIRQ (Bit 0)           */
#define AES_HASH_CRYPTO_CLRIRQ_REG_CRYPTO_CLRIRQ_Msk (0x1UL)            /*!< AES_HASH CRYPTO_CLRIRQ_REG: CRYPTO_CLRIRQ (Bitfield-Mask: 0x01) */
/* --------------------------  AES_HASH_CRYPTO_MREG0_REG  ------------------------- */
#define AES_HASH_CRYPTO_MREG0_REG_CRYPTO_MREG0_Pos (0UL)                /*!< AES_HASH CRYPTO_MREG0_REG: CRYPTO_MREG0 (Bit 0)             */
#define AES_HASH_CRYPTO_MREG0_REG_CRYPTO_MREG0_Msk (0xffffffffUL)       /*!< AES_HASH CRYPTO_MREG0_REG: CRYPTO_MREG0 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  AES_HASH_CRYPTO_MREG1_REG  ------------------------- */
#define AES_HASH_CRYPTO_MREG1_REG_CRYPTO_MREG1_Pos (0UL)                /*!< AES_HASH CRYPTO_MREG1_REG: CRYPTO_MREG1 (Bit 0)             */
#define AES_HASH_CRYPTO_MREG1_REG_CRYPTO_MREG1_Msk (0xffffffffUL)       /*!< AES_HASH CRYPTO_MREG1_REG: CRYPTO_MREG1 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  AES_HASH_CRYPTO_MREG2_REG  ------------------------- */
#define AES_HASH_CRYPTO_MREG2_REG_CRYPTO_MREG2_Pos (0UL)                /*!< AES_HASH CRYPTO_MREG2_REG: CRYPTO_MREG2 (Bit 0)             */
#define AES_HASH_CRYPTO_MREG2_REG_CRYPTO_MREG2_Msk (0xffffffffUL)       /*!< AES_HASH CRYPTO_MREG2_REG: CRYPTO_MREG2 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  AES_HASH_CRYPTO_MREG3_REG  ------------------------- */
#define AES_HASH_CRYPTO_MREG3_REG_CRYPTO_MREG3_Pos (0UL)                /*!< AES_HASH CRYPTO_MREG3_REG: CRYPTO_MREG3 (Bit 0)             */
#define AES_HASH_CRYPTO_MREG3_REG_CRYPTO_MREG3_Msk (0xffffffffUL)       /*!< AES_HASH CRYPTO_MREG3_REG: CRYPTO_MREG3 (Bitfield-Mask: 0xffffffff) */
/* -------------------------  AES_HASH_CRYPTO_KEYS_START  ------------------------- */
#define AES_HASH_CRYPTO_KEYS_START_CRYPTO_KEY_X_Pos (0UL)               /*!< AES_HASH CRYPTO_KEYS_START: CRYPTO_KEY_X (Bit 0)            */
#define AES_HASH_CRYPTO_KEYS_START_CRYPTO_KEY_X_Msk (0xffffffffUL)      /*!< AES_HASH CRYPTO_KEYS_START: CRYPTO_KEY_X (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================        struct 'ANAMISC' Position & Mask        ================ */
/* ================================================================================ */
/* ----------------------------  ANAMISC_ANA_TEST_REG  ---------------------------- */
#define ANAMISC_ANA_TEST_REG_TEST_STRUCTURE_Pos (0UL)                   /*!< ANAMISC ANA_TEST_REG: TEST_STRUCTURE (Bit 0)                */
#define ANAMISC_ANA_TEST_REG_TEST_STRUCTURE_Msk (0xfUL)                 /*!< ANAMISC ANA_TEST_REG: TEST_STRUCTURE (Bitfield-Mask: 0x0f)  */
#define ANAMISC_ANA_TEST_REG_ACORE_TESTBUS_EN_Pos (4UL)                 /*!< ANAMISC ANA_TEST_REG: ACORE_TESTBUS_EN (Bit 4)              */
#define ANAMISC_ANA_TEST_REG_ACORE_TESTBUS_EN_Msk (0x10UL)              /*!< ANAMISC ANA_TEST_REG: ACORE_TESTBUS_EN (Bitfield-Mask: 0x01) */
/* ---------------------------  ANAMISC_CLK_REF_SEL_REG  -------------------------- */
#define ANAMISC_CLK_REF_SEL_REG_REF_CLK_SEL_Pos (0UL)                   /*!< ANAMISC CLK_REF_SEL_REG: REF_CLK_SEL (Bit 0)                */
#define ANAMISC_CLK_REF_SEL_REG_REF_CLK_SEL_Msk (0x7UL)                 /*!< ANAMISC CLK_REF_SEL_REG: REF_CLK_SEL (Bitfield-Mask: 0x07)  */
#define ANAMISC_CLK_REF_SEL_REG_REF_CAL_START_Pos (3UL)                 /*!< ANAMISC CLK_REF_SEL_REG: REF_CAL_START (Bit 3)              */
#define ANAMISC_CLK_REF_SEL_REG_REF_CAL_START_Msk (0x8UL)               /*!< ANAMISC CLK_REF_SEL_REG: REF_CAL_START (Bitfield-Mask: 0x01) */
#define ANAMISC_CLK_REF_SEL_REG_EXT_CNT_EN_SEL_Pos (4UL)                /*!< ANAMISC CLK_REF_SEL_REG: EXT_CNT_EN_SEL (Bit 4)             */
#define ANAMISC_CLK_REF_SEL_REG_EXT_CNT_EN_SEL_Msk (0x10UL)             /*!< ANAMISC CLK_REF_SEL_REG: EXT_CNT_EN_SEL (Bitfield-Mask: 0x01) */
#define ANAMISC_CLK_REF_SEL_REG_CAL_CLK_SEL_Pos (5UL)                   /*!< ANAMISC CLK_REF_SEL_REG: CAL_CLK_SEL (Bit 5)                */
#define ANAMISC_CLK_REF_SEL_REG_CAL_CLK_SEL_Msk (0xe0UL)                /*!< ANAMISC CLK_REF_SEL_REG: CAL_CLK_SEL (Bitfield-Mask: 0x07)  */
/* ---------------------------  ANAMISC_CLK_REF_CNT_REG  -------------------------- */
#define ANAMISC_CLK_REF_CNT_REG_REF_CNT_VAL_Pos (0UL)                   /*!< ANAMISC CLK_REF_CNT_REG: REF_CNT_VAL (Bit 0)                */
#define ANAMISC_CLK_REF_CNT_REG_REF_CNT_VAL_Msk (0xffffUL)              /*!< ANAMISC CLK_REF_CNT_REG: REF_CNT_VAL (Bitfield-Mask: 0xffff) */
/* ---------------------------  ANAMISC_CLK_REF_VAL_REG  -------------------------- */
#define ANAMISC_CLK_REF_VAL_REG_XTAL_CNT_VAL_Pos (0UL)                  /*!< ANAMISC CLK_REF_VAL_REG: XTAL_CNT_VAL (Bit 0)               */
#define ANAMISC_CLK_REF_VAL_REG_XTAL_CNT_VAL_Msk (0xffffffffUL)         /*!< ANAMISC CLK_REF_VAL_REG: XTAL_CNT_VAL (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'APU' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  APU_SRC1_CTRL_REG  ----------------------------- */
#define APU_SRC1_CTRL_REG_SRC_EN_Pos          (0UL)                     /*!< APU SRC1_CTRL_REG: SRC_EN (Bit 0)                           */
#define APU_SRC1_CTRL_REG_SRC_EN_Msk          (0x1UL)                   /*!< APU SRC1_CTRL_REG: SRC_EN (Bitfield-Mask: 0x01)             */
#define APU_SRC1_CTRL_REG_SRC_IN_AMODE_Pos    (1UL)                     /*!< APU SRC1_CTRL_REG: SRC_IN_AMODE (Bit 1)                     */
#define APU_SRC1_CTRL_REG_SRC_IN_AMODE_Msk    (0x2UL)                   /*!< APU SRC1_CTRL_REG: SRC_IN_AMODE (Bitfield-Mask: 0x01)       */
#define APU_SRC1_CTRL_REG_SRC_IN_CAL_BYPASS_Pos (2UL)                   /*!< APU SRC1_CTRL_REG: SRC_IN_CAL_BYPASS (Bit 2)                */
#define APU_SRC1_CTRL_REG_SRC_IN_CAL_BYPASS_Msk (0x4UL)                 /*!< APU SRC1_CTRL_REG: SRC_IN_CAL_BYPASS (Bitfield-Mask: 0x01)  */
#define APU_SRC1_CTRL_REG_SRC_PDM_IN_INV_Pos  (3UL)                     /*!< APU SRC1_CTRL_REG: SRC_PDM_IN_INV (Bit 3)                   */
#define APU_SRC1_CTRL_REG_SRC_PDM_IN_INV_Msk  (0x8UL)                   /*!< APU SRC1_CTRL_REG: SRC_PDM_IN_INV (Bitfield-Mask: 0x01)     */
#define APU_SRC1_CTRL_REG_SRC_IN_DS_Pos       (4UL)                     /*!< APU SRC1_CTRL_REG: SRC_IN_DS (Bit 4)                        */
#define APU_SRC1_CTRL_REG_SRC_IN_DS_Msk       (0x30UL)                  /*!< APU SRC1_CTRL_REG: SRC_IN_DS (Bitfield-Mask: 0x03)          */
#define APU_SRC1_CTRL_REG_SRC_IN_OK_Pos       (6UL)                     /*!< APU SRC1_CTRL_REG: SRC_IN_OK (Bit 6)                        */
#define APU_SRC1_CTRL_REG_SRC_IN_OK_Msk       (0x40UL)                  /*!< APU SRC1_CTRL_REG: SRC_IN_OK (Bitfield-Mask: 0x01)          */
#define APU_SRC1_CTRL_REG_SRC_DITHER_DISABLE_Pos (7UL)                  /*!< APU SRC1_CTRL_REG: SRC_DITHER_DISABLE (Bit 7)               */
#define APU_SRC1_CTRL_REG_SRC_DITHER_DISABLE_Msk (0x80UL)               /*!< APU SRC1_CTRL_REG: SRC_DITHER_DISABLE (Bitfield-Mask: 0x01) */
#define APU_SRC1_CTRL_REG_SRC_IN_DSD_MODE_Pos (8UL)                     /*!< APU SRC1_CTRL_REG: SRC_IN_DSD_MODE (Bit 8)                  */
#define APU_SRC1_CTRL_REG_SRC_IN_DSD_MODE_Msk (0x100UL)                 /*!< APU SRC1_CTRL_REG: SRC_IN_DSD_MODE (Bitfield-Mask: 0x01)    */
#define APU_SRC1_CTRL_REG_SRC_OUT_DSD_MODE_Pos (9UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_DSD_MODE (Bit 9)                 */
#define APU_SRC1_CTRL_REG_SRC_OUT_DSD_MODE_Msk (0x200UL)                /*!< APU SRC1_CTRL_REG: SRC_OUT_DSD_MODE (Bitfield-Mask: 0x01)   */
#define APU_SRC1_CTRL_REG_SRC_FIFO_ENABLE_Pos (10UL)                    /*!< APU SRC1_CTRL_REG: SRC_FIFO_ENABLE (Bit 10)                 */
#define APU_SRC1_CTRL_REG_SRC_FIFO_ENABLE_Msk (0x400UL)                 /*!< APU SRC1_CTRL_REG: SRC_FIFO_ENABLE (Bitfield-Mask: 0x01)    */
#define APU_SRC1_CTRL_REG_SRC_FIFO_DIRECTION_Pos (11UL)                 /*!< APU SRC1_CTRL_REG: SRC_FIFO_DIRECTION (Bit 11)              */
#define APU_SRC1_CTRL_REG_SRC_FIFO_DIRECTION_Msk (0x800UL)              /*!< APU SRC1_CTRL_REG: SRC_FIFO_DIRECTION (Bitfield-Mask: 0x01) */
#define APU_SRC1_CTRL_REG_SRC_PDM_OUT_INV_Pos (12UL)                    /*!< APU SRC1_CTRL_REG: SRC_PDM_OUT_INV (Bit 12)                 */
#define APU_SRC1_CTRL_REG_SRC_PDM_OUT_INV_Msk (0x1000UL)                /*!< APU SRC1_CTRL_REG: SRC_PDM_OUT_INV (Bitfield-Mask: 0x01)    */
#define APU_SRC1_CTRL_REG_SRC_OUT_AMODE_Pos   (13UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_AMODE (Bit 13)                   */
#define APU_SRC1_CTRL_REG_SRC_OUT_AMODE_Msk   (0x2000UL)                /*!< APU SRC1_CTRL_REG: SRC_OUT_AMODE (Bitfield-Mask: 0x01)      */
#define APU_SRC1_CTRL_REG_SRC_OUT_CAL_BYPASS_Pos (14UL)                 /*!< APU SRC1_CTRL_REG: SRC_OUT_CAL_BYPASS (Bit 14)              */
#define APU_SRC1_CTRL_REG_SRC_OUT_CAL_BYPASS_Msk (0x4000UL)             /*!< APU SRC1_CTRL_REG: SRC_OUT_CAL_BYPASS (Bitfield-Mask: 0x01) */
#define APU_SRC1_CTRL_REG_SRC_OUT_US_Pos      (16UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_US (Bit 16)                      */
#define APU_SRC1_CTRL_REG_SRC_OUT_US_Msk      (0x30000UL)               /*!< APU SRC1_CTRL_REG: SRC_OUT_US (Bitfield-Mask: 0x03)         */
#define APU_SRC1_CTRL_REG_SRC_OUT_OK_Pos      (18UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_OK (Bit 18)                      */
#define APU_SRC1_CTRL_REG_SRC_OUT_OK_Msk      (0x40000UL)               /*!< APU SRC1_CTRL_REG: SRC_OUT_OK (Bitfield-Mask: 0x01)         */
#define APU_SRC1_CTRL_REG_SRC_RESYNC_Pos      (19UL)                    /*!< APU SRC1_CTRL_REG: SRC_RESYNC (Bit 19)                      */
#define APU_SRC1_CTRL_REG_SRC_RESYNC_Msk      (0x80000UL)               /*!< APU SRC1_CTRL_REG: SRC_RESYNC (Bitfield-Mask: 0x01)         */
#define APU_SRC1_CTRL_REG_SRC_IN_OVFLOW_Pos   (20UL)                    /*!< APU SRC1_CTRL_REG: SRC_IN_OVFLOW (Bit 20)                   */
#define APU_SRC1_CTRL_REG_SRC_IN_OVFLOW_Msk   (0x100000UL)              /*!< APU SRC1_CTRL_REG: SRC_IN_OVFLOW (Bitfield-Mask: 0x01)      */
#define APU_SRC1_CTRL_REG_SRC_IN_UNFLOW_Pos   (21UL)                    /*!< APU SRC1_CTRL_REG: SRC_IN_UNFLOW (Bit 21)                   */
#define APU_SRC1_CTRL_REG_SRC_IN_UNFLOW_Msk   (0x200000UL)              /*!< APU SRC1_CTRL_REG: SRC_IN_UNFLOW (Bitfield-Mask: 0x01)      */
#define APU_SRC1_CTRL_REG_SRC_OUT_OVFLOW_Pos  (22UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_OVFLOW (Bit 22)                  */
#define APU_SRC1_CTRL_REG_SRC_OUT_OVFLOW_Msk  (0x400000UL)              /*!< APU SRC1_CTRL_REG: SRC_OUT_OVFLOW (Bitfield-Mask: 0x01)     */
#define APU_SRC1_CTRL_REG_SRC_OUT_UNFLOW_Pos  (23UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_UNFLOW (Bit 23)                  */
#define APU_SRC1_CTRL_REG_SRC_OUT_UNFLOW_Msk  (0x800000UL)              /*!< APU SRC1_CTRL_REG: SRC_OUT_UNFLOW (Bitfield-Mask: 0x01)     */
#define APU_SRC1_CTRL_REG_SRC_IN_FLOWCLR_Pos  (24UL)                    /*!< APU SRC1_CTRL_REG: SRC_IN_FLOWCLR (Bit 24)                  */
#define APU_SRC1_CTRL_REG_SRC_IN_FLOWCLR_Msk  (0x1000000UL)             /*!< APU SRC1_CTRL_REG: SRC_IN_FLOWCLR (Bitfield-Mask: 0x01)     */
#define APU_SRC1_CTRL_REG_SRC_OUT_FLOWCLR_Pos (25UL)                    /*!< APU SRC1_CTRL_REG: SRC_OUT_FLOWCLR (Bit 25)                 */
#define APU_SRC1_CTRL_REG_SRC_OUT_FLOWCLR_Msk (0x2000000UL)             /*!< APU SRC1_CTRL_REG: SRC_OUT_FLOWCLR (Bitfield-Mask: 0x01)    */
#define APU_SRC1_CTRL_REG_SRC_PDM_DI_DEL_Pos  (26UL)                    /*!< APU SRC1_CTRL_REG: SRC_PDM_DI_DEL (Bit 26)                  */
#define APU_SRC1_CTRL_REG_SRC_PDM_DI_DEL_Msk  (0xc000000UL)             /*!< APU SRC1_CTRL_REG: SRC_PDM_DI_DEL (Bitfield-Mask: 0x03)     */
#define APU_SRC1_CTRL_REG_SRC_PDM_MODE_Pos    (28UL)                    /*!< APU SRC1_CTRL_REG: SRC_PDM_MODE (Bit 28)                    */
#define APU_SRC1_CTRL_REG_SRC_PDM_MODE_Msk    (0x30000000UL)            /*!< APU SRC1_CTRL_REG: SRC_PDM_MODE (Bitfield-Mask: 0x03)       */
#define APU_SRC1_CTRL_REG_SRC_PDM_DO_DEL_Pos  (30UL)                    /*!< APU SRC1_CTRL_REG: SRC_PDM_DO_DEL (Bit 30)                  */
#define APU_SRC1_CTRL_REG_SRC_PDM_DO_DEL_Msk  (0xc0000000UL)            /*!< APU SRC1_CTRL_REG: SRC_PDM_DO_DEL (Bitfield-Mask: 0x03)     */
/* -----------------------------  APU_SRC1_IN_FS_REG  ----------------------------- */
#define APU_SRC1_IN_FS_REG_SRC_IN_FS_Pos      (0UL)                     /*!< APU SRC1_IN_FS_REG: SRC_IN_FS (Bit 0)                       */
#define APU_SRC1_IN_FS_REG_SRC_IN_FS_Msk      (0xffffffUL)              /*!< APU SRC1_IN_FS_REG: SRC_IN_FS (Bitfield-Mask: 0xffffff)     */
/* -----------------------------  APU_SRC1_OUT_FS_REG  ---------------------------- */
#define APU_SRC1_OUT_FS_REG_SRC_OUT_FS_Pos    (0UL)                     /*!< APU SRC1_OUT_FS_REG: SRC_OUT_FS (Bit 0)                     */
#define APU_SRC1_OUT_FS_REG_SRC_OUT_FS_Msk    (0xffffffUL)              /*!< APU SRC1_OUT_FS_REG: SRC_OUT_FS (Bitfield-Mask: 0xffffff)   */
/* ------------------------------  APU_SRC1_IN1_REG  ------------------------------ */
#define APU_SRC1_IN1_REG_SRC_IN_Pos           (0UL)                     /*!< APU SRC1_IN1_REG: SRC_IN (Bit 0)                            */
#define APU_SRC1_IN1_REG_SRC_IN_Msk           (0xffffffffUL)            /*!< APU SRC1_IN1_REG: SRC_IN (Bitfield-Mask: 0xffffffff)        */
/* ------------------------------  APU_SRC1_IN2_REG  ------------------------------ */
#define APU_SRC1_IN2_REG_SRC_IN_Pos           (0UL)                     /*!< APU SRC1_IN2_REG: SRC_IN (Bit 0)                            */
#define APU_SRC1_IN2_REG_SRC_IN_Msk           (0xffffffffUL)            /*!< APU SRC1_IN2_REG: SRC_IN (Bitfield-Mask: 0xffffffff)        */
/* ------------------------------  APU_SRC1_OUT1_REG  ----------------------------- */
#define APU_SRC1_OUT1_REG_SRC_OUT_Pos         (0UL)                     /*!< APU SRC1_OUT1_REG: SRC_OUT (Bit 0)                          */
#define APU_SRC1_OUT1_REG_SRC_OUT_Msk         (0xffffffffUL)            /*!< APU SRC1_OUT1_REG: SRC_OUT (Bitfield-Mask: 0xffffffff)      */
/* ------------------------------  APU_SRC1_OUT2_REG  ----------------------------- */
#define APU_SRC1_OUT2_REG_SRC_OUT_Pos         (0UL)                     /*!< APU SRC1_OUT2_REG: SRC_OUT (Bit 0)                          */
#define APU_SRC1_OUT2_REG_SRC_OUT_Msk         (0xffffffffUL)            /*!< APU SRC1_OUT2_REG: SRC_OUT (Bitfield-Mask: 0xffffffff)      */
/* -------------------------------  APU_APU_MUX_REG  ------------------------------ */
#define APU_APU_MUX_REG_SRC1_MUX_IN_Pos       (0UL)                     /*!< APU APU_MUX_REG: SRC1_MUX_IN (Bit 0)                        */
#define APU_APU_MUX_REG_SRC1_MUX_IN_Msk       (0x7UL)                   /*!< APU APU_MUX_REG: SRC1_MUX_IN (Bitfield-Mask: 0x07)          */
#define APU_APU_MUX_REG_PCM1_MUX_IN_Pos       (3UL)                     /*!< APU APU_MUX_REG: PCM1_MUX_IN (Bit 3)                        */
#define APU_APU_MUX_REG_PCM1_MUX_IN_Msk       (0x38UL)                  /*!< APU APU_MUX_REG: PCM1_MUX_IN (Bitfield-Mask: 0x07)          */
#define APU_APU_MUX_REG_PDM1_MUX_IN_Pos       (6UL)                     /*!< APU APU_MUX_REG: PDM1_MUX_IN (Bit 6)                        */
#define APU_APU_MUX_REG_PDM1_MUX_IN_Msk       (0x40UL)                  /*!< APU APU_MUX_REG: PDM1_MUX_IN (Bitfield-Mask: 0x01)          */
/* -----------------------------  APU_COEF10_SET1_REG  ---------------------------- */
#define APU_COEF10_SET1_REG_SRC_COEF0_Pos     (0UL)                     /*!< APU COEF10_SET1_REG: SRC_COEF0 (Bit 0)                      */
#define APU_COEF10_SET1_REG_SRC_COEF0_Msk     (0xffffUL)                /*!< APU COEF10_SET1_REG: SRC_COEF0 (Bitfield-Mask: 0xffff)      */
#define APU_COEF10_SET1_REG_SRC_COEF1_Pos     (16UL)                    /*!< APU COEF10_SET1_REG: SRC_COEF1 (Bit 16)                     */
#define APU_COEF10_SET1_REG_SRC_COEF1_Msk     (0xffff0000UL)            /*!< APU COEF10_SET1_REG: SRC_COEF1 (Bitfield-Mask: 0xffff)      */
/* -----------------------------  APU_COEF32_SET1_REG  ---------------------------- */
#define APU_COEF32_SET1_REG_SRC_COEF2_Pos     (0UL)                     /*!< APU COEF32_SET1_REG: SRC_COEF2 (Bit 0)                      */
#define APU_COEF32_SET1_REG_SRC_COEF2_Msk     (0xffffUL)                /*!< APU COEF32_SET1_REG: SRC_COEF2 (Bitfield-Mask: 0xffff)      */
#define APU_COEF32_SET1_REG_SRC_COEF3_Pos     (16UL)                    /*!< APU COEF32_SET1_REG: SRC_COEF3 (Bit 16)                     */
#define APU_COEF32_SET1_REG_SRC_COEF3_Msk     (0xffff0000UL)            /*!< APU COEF32_SET1_REG: SRC_COEF3 (Bitfield-Mask: 0xffff)      */
/* -----------------------------  APU_COEF54_SET1_REG  ---------------------------- */
#define APU_COEF54_SET1_REG_SRC_COEF4_Pos     (0UL)                     /*!< APU COEF54_SET1_REG: SRC_COEF4 (Bit 0)                      */
#define APU_COEF54_SET1_REG_SRC_COEF4_Msk     (0xffffUL)                /*!< APU COEF54_SET1_REG: SRC_COEF4 (Bitfield-Mask: 0xffff)      */
#define APU_COEF54_SET1_REG_SRC_COEF5_Pos     (16UL)                    /*!< APU COEF54_SET1_REG: SRC_COEF5 (Bit 16)                     */
#define APU_COEF54_SET1_REG_SRC_COEF5_Msk     (0xffff0000UL)            /*!< APU COEF54_SET1_REG: SRC_COEF5 (Bitfield-Mask: 0xffff)      */
/* -----------------------------  APU_COEF76_SET1_REG  ---------------------------- */
#define APU_COEF76_SET1_REG_SRC_COEF6_Pos     (0UL)                     /*!< APU COEF76_SET1_REG: SRC_COEF6 (Bit 0)                      */
#define APU_COEF76_SET1_REG_SRC_COEF6_Msk     (0xffffUL)                /*!< APU COEF76_SET1_REG: SRC_COEF6 (Bitfield-Mask: 0xffff)      */
#define APU_COEF76_SET1_REG_SRC_COEF7_Pos     (16UL)                    /*!< APU COEF76_SET1_REG: SRC_COEF7 (Bit 16)                     */
#define APU_COEF76_SET1_REG_SRC_COEF7_Msk     (0xffff0000UL)            /*!< APU COEF76_SET1_REG: SRC_COEF7 (Bitfield-Mask: 0xffff)      */
/* -----------------------------  APU_COEF98_SET1_REG  ---------------------------- */
#define APU_COEF98_SET1_REG_SRC_COEF8_Pos     (0UL)                     /*!< APU COEF98_SET1_REG: SRC_COEF8 (Bit 0)                      */
#define APU_COEF98_SET1_REG_SRC_COEF8_Msk     (0xffffUL)                /*!< APU COEF98_SET1_REG: SRC_COEF8 (Bitfield-Mask: 0xffff)      */
#define APU_COEF98_SET1_REG_SRC_COEF9_Pos     (16UL)                    /*!< APU COEF98_SET1_REG: SRC_COEF9 (Bit 16)                     */
#define APU_COEF98_SET1_REG_SRC_COEF9_Msk     (0xffff0000UL)            /*!< APU COEF98_SET1_REG: SRC_COEF9 (Bitfield-Mask: 0xffff)      */
/* -----------------------------  APU_COEF0A_SET1_REG  ---------------------------- */
#define APU_COEF0A_SET1_REG_SRC_COEF10_Pos    (0UL)                     /*!< APU COEF0A_SET1_REG: SRC_COEF10 (Bit 0)                     */
#define APU_COEF0A_SET1_REG_SRC_COEF10_Msk    (0xffffUL)                /*!< APU COEF0A_SET1_REG: SRC_COEF10 (Bitfield-Mask: 0xffff)     */
/* ------------------------------  APU_PCM1_CTRL_REG  ----------------------------- */
#define APU_PCM1_CTRL_REG_PCM_EN_Pos          (0UL)                     /*!< APU PCM1_CTRL_REG: PCM_EN (Bit 0)                           */
#define APU_PCM1_CTRL_REG_PCM_EN_Msk          (0x1UL)                   /*!< APU PCM1_CTRL_REG: PCM_EN (Bitfield-Mask: 0x01)             */
#define APU_PCM1_CTRL_REG_PCM_MASTER_Pos      (1UL)                     /*!< APU PCM1_CTRL_REG: PCM_MASTER (Bit 1)                       */
#define APU_PCM1_CTRL_REG_PCM_MASTER_Msk      (0x2UL)                   /*!< APU PCM1_CTRL_REG: PCM_MASTER (Bitfield-Mask: 0x01)         */
#define APU_PCM1_CTRL_REG_PCM_FSCLEN_Pos      (2UL)                     /*!< APU PCM1_CTRL_REG: PCM_FSCLEN (Bit 2)                       */
#define APU_PCM1_CTRL_REG_PCM_FSCLEN_Msk      (0x3cUL)                  /*!< APU PCM1_CTRL_REG: PCM_FSCLEN (Bitfield-Mask: 0x0f)         */
#define APU_PCM1_CTRL_REG_PCM_FSCDEL_Pos      (6UL)                     /*!< APU PCM1_CTRL_REG: PCM_FSCDEL (Bit 6)                       */
#define APU_PCM1_CTRL_REG_PCM_FSCDEL_Msk      (0x40UL)                  /*!< APU PCM1_CTRL_REG: PCM_FSCDEL (Bitfield-Mask: 0x01)         */
#define APU_PCM1_CTRL_REG_PCM_PPOD_Pos        (7UL)                     /*!< APU PCM1_CTRL_REG: PCM_PPOD (Bit 7)                         */
#define APU_PCM1_CTRL_REG_PCM_PPOD_Msk        (0x80UL)                  /*!< APU PCM1_CTRL_REG: PCM_PPOD (Bitfield-Mask: 0x01)           */
#define APU_PCM1_CTRL_REG_PCM_CLKINV_Pos      (8UL)                     /*!< APU PCM1_CTRL_REG: PCM_CLKINV (Bit 8)                       */
#define APU_PCM1_CTRL_REG_PCM_CLKINV_Msk      (0x100UL)                 /*!< APU PCM1_CTRL_REG: PCM_CLKINV (Bitfield-Mask: 0x01)         */
#define APU_PCM1_CTRL_REG_PCM_FSCINV_Pos      (9UL)                     /*!< APU PCM1_CTRL_REG: PCM_FSCINV (Bit 9)                       */
#define APU_PCM1_CTRL_REG_PCM_FSCINV_Msk      (0x200UL)                 /*!< APU PCM1_CTRL_REG: PCM_FSCINV (Bitfield-Mask: 0x01)         */
#define APU_PCM1_CTRL_REG_PCM_CLK_BIT_Pos     (10UL)                    /*!< APU PCM1_CTRL_REG: PCM_CLK_BIT (Bit 10)                     */
#define APU_PCM1_CTRL_REG_PCM_CLK_BIT_Msk     (0x400UL)                 /*!< APU PCM1_CTRL_REG: PCM_CLK_BIT (Bitfield-Mask: 0x01)        */
#define APU_PCM1_CTRL_REG_PCM_CH_DEL_Pos      (11UL)                    /*!< APU PCM1_CTRL_REG: PCM_CH_DEL (Bit 11)                      */
#define APU_PCM1_CTRL_REG_PCM_CH_DEL_Msk      (0xf800UL)                /*!< APU PCM1_CTRL_REG: PCM_CH_DEL (Bitfield-Mask: 0x1f)         */
#define APU_PCM1_CTRL_REG_PCM_FSC_EDGE_Pos    (16UL)                    /*!< APU PCM1_CTRL_REG: PCM_FSC_EDGE (Bit 16)                    */
#define APU_PCM1_CTRL_REG_PCM_FSC_EDGE_Msk    (0x10000UL)               /*!< APU PCM1_CTRL_REG: PCM_FSC_EDGE (Bitfield-Mask: 0x01)       */
#define APU_PCM1_CTRL_REG_PCM_FSC_DIV_Pos     (20UL)                    /*!< APU PCM1_CTRL_REG: PCM_FSC_DIV (Bit 20)                     */
#define APU_PCM1_CTRL_REG_PCM_FSC_DIV_Msk     (0xfff00000UL)            /*!< APU PCM1_CTRL_REG: PCM_FSC_DIV (Bitfield-Mask: 0xfff)       */
/* ------------------------------  APU_PCM1_IN1_REG  ------------------------------ */
#define APU_PCM1_IN1_REG_PCM_IN_Pos           (0UL)                     /*!< APU PCM1_IN1_REG: PCM_IN (Bit 0)                            */
#define APU_PCM1_IN1_REG_PCM_IN_Msk           (0xffffffffUL)            /*!< APU PCM1_IN1_REG: PCM_IN (Bitfield-Mask: 0xffffffff)        */
/* ------------------------------  APU_PCM1_IN2_REG  ------------------------------ */
#define APU_PCM1_IN2_REG_PCM_IN_Pos           (0UL)                     /*!< APU PCM1_IN2_REG: PCM_IN (Bit 0)                            */
#define APU_PCM1_IN2_REG_PCM_IN_Msk           (0xffffffffUL)            /*!< APU PCM1_IN2_REG: PCM_IN (Bitfield-Mask: 0xffffffff)        */
/* ------------------------------  APU_PCM1_OUT1_REG  ----------------------------- */
#define APU_PCM1_OUT1_REG_PCM_OUT_Pos         (0UL)                     /*!< APU PCM1_OUT1_REG: PCM_OUT (Bit 0)                          */
#define APU_PCM1_OUT1_REG_PCM_OUT_Msk         (0xffffffffUL)            /*!< APU PCM1_OUT1_REG: PCM_OUT (Bitfield-Mask: 0xffffffff)      */
/* ------------------------------  APU_PCM1_OUT2_REG  ----------------------------- */
#define APU_PCM1_OUT2_REG_PCM_OUT_Pos         (0UL)                     /*!< APU PCM1_OUT2_REG: PCM_OUT (Bit 0)                          */
#define APU_PCM1_OUT2_REG_PCM_OUT_Msk         (0xffffffffUL)            /*!< APU PCM1_OUT2_REG: PCM_OUT (Bitfield-Mask: 0xffffffff)      */
/* ================================================================================ */
/* ================         struct 'CACHE' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  CACHE_CACHE_CTRL1_REG  --------------------------- */
#define CACHE_CACHE_CTRL1_REG_CACHE_FLUSH_Pos (0UL)                     /*!< CACHE CACHE_CTRL1_REG: CACHE_FLUSH (Bit 0)                  */
#define CACHE_CACHE_CTRL1_REG_CACHE_FLUSH_Msk (0x1UL)                   /*!< CACHE CACHE_CTRL1_REG: CACHE_FLUSH (Bitfield-Mask: 0x01)    */
#define CACHE_CACHE_CTRL1_REG_CACHE_RES1_Pos  (1UL)                     /*!< CACHE CACHE_CTRL1_REG: CACHE_RES1 (Bit 1)                   */
#define CACHE_CACHE_CTRL1_REG_CACHE_RES1_Msk  (0x2UL)                   /*!< CACHE CACHE_CTRL1_REG: CACHE_RES1 (Bitfield-Mask: 0x01)     */
/* --------------------------  CACHE_CACHE_LNSIZECFG_REG  ------------------------- */
#define CACHE_CACHE_LNSIZECFG_REG_CACHE_LINE_Pos (0UL)                  /*!< CACHE CACHE_LNSIZECFG_REG: CACHE_LINE (Bit 0)               */
#define CACHE_CACHE_LNSIZECFG_REG_CACHE_LINE_Msk (0x3UL)                /*!< CACHE CACHE_LNSIZECFG_REG: CACHE_LINE (Bitfield-Mask: 0x03) */
/* --------------------------  CACHE_CACHE_ASSOCCFG_REG  -------------------------- */
#define CACHE_CACHE_ASSOCCFG_REG_CACHE_ASSOC_Pos (0UL)                  /*!< CACHE CACHE_ASSOCCFG_REG: CACHE_ASSOC (Bit 0)               */
#define CACHE_CACHE_ASSOCCFG_REG_CACHE_ASSOC_Msk (0x3UL)                /*!< CACHE CACHE_ASSOCCFG_REG: CACHE_ASSOC (Bitfield-Mask: 0x03) */
/* ----------------------------  CACHE_CACHE_CTRL2_REG  --------------------------- */
#define CACHE_CACHE_CTRL2_REG_CACHE_LEN_Pos   (0UL)                     /*!< CACHE CACHE_CTRL2_REG: CACHE_LEN (Bit 0)                    */
#define CACHE_CACHE_CTRL2_REG_CACHE_LEN_Msk   (0x1ffUL)                 /*!< CACHE CACHE_CTRL2_REG: CACHE_LEN (Bitfield-Mask: 0x1ff)     */
#define CACHE_CACHE_CTRL2_REG_CACHE_WEN_Pos   (9UL)                     /*!< CACHE CACHE_CTRL2_REG: CACHE_WEN (Bit 9)                    */
#define CACHE_CACHE_CTRL2_REG_CACHE_WEN_Msk   (0x200UL)                 /*!< CACHE CACHE_CTRL2_REG: CACHE_WEN (Bitfield-Mask: 0x01)      */
#define CACHE_CACHE_CTRL2_REG_CACHE_CGEN_Pos  (10UL)                    /*!< CACHE CACHE_CTRL2_REG: CACHE_CGEN (Bit 10)                  */
#define CACHE_CACHE_CTRL2_REG_CACHE_CGEN_Msk  (0x400UL)                 /*!< CACHE CACHE_CTRL2_REG: CACHE_CGEN (Bitfield-Mask: 0x01)     */
/* ----------------------------  CACHE_CACHE_CTRL3_REG  --------------------------- */
#define CACHE_CACHE_CTRL3_REG_CACHE_ASSOCIATIVITY_RESET_VALUE_Pos (0UL) /*!< CACHE CACHE_CTRL3_REG: CACHE_ASSOCIATIVITY_RESET_VALUE (Bit 0) */
#define CACHE_CACHE_CTRL3_REG_CACHE_ASSOCIATIVITY_RESET_VALUE_Msk (0x3UL) /*!< CACHE CACHE_CTRL3_REG: CACHE_ASSOCIATIVITY_RESET_VALUE (Bitfield-Mask: 0x03) */
#define CACHE_CACHE_CTRL3_REG_CACHE_LINE_SIZE_RESET_VALUE_Pos (2UL)     /*!< CACHE CACHE_CTRL3_REG: CACHE_LINE_SIZE_RESET_VALUE (Bit 2)  */
#define CACHE_CACHE_CTRL3_REG_CACHE_LINE_SIZE_RESET_VALUE_Msk (0xcUL)   /*!< CACHE CACHE_CTRL3_REG: CACHE_LINE_SIZE_RESET_VALUE (Bitfield-Mask: 0x03) */
#define CACHE_CACHE_CTRL3_REG_CACHE_RAM_SIZE_RESET_VALUE_Pos (4UL)      /*!< CACHE CACHE_CTRL3_REG: CACHE_RAM_SIZE_RESET_VALUE (Bit 4)   */
#define CACHE_CACHE_CTRL3_REG_CACHE_RAM_SIZE_RESET_VALUE_Msk (0x70UL)   /*!< CACHE CACHE_CTRL3_REG: CACHE_RAM_SIZE_RESET_VALUE (Bitfield-Mask: 0x07) */
#define CACHE_CACHE_CTRL3_REG_CACHE_CONTROLLER_RESET_Pos (7UL)          /*!< CACHE CACHE_CTRL3_REG: CACHE_CONTROLLER_RESET (Bit 7)       */
#define CACHE_CACHE_CTRL3_REG_CACHE_CONTROLLER_RESET_Msk (0x80UL)       /*!< CACHE CACHE_CTRL3_REG: CACHE_CONTROLLER_RESET (Bitfield-Mask: 0x01) */
/* --------------------------  CACHE_CACHE_MRM_HITS_REG  -------------------------- */
#define CACHE_CACHE_MRM_HITS_REG_MRM_HITS_Pos (0UL)                     /*!< CACHE CACHE_MRM_HITS_REG: MRM_HITS (Bit 0)                  */
#define CACHE_CACHE_MRM_HITS_REG_MRM_HITS_Msk (0xffffffffUL)            /*!< CACHE CACHE_MRM_HITS_REG: MRM_HITS (Bitfield-Mask: 0xffffffff) */
/* -------------------------  CACHE_CACHE_MRM_MISSES_REG  ------------------------- */
#define CACHE_CACHE_MRM_MISSES_REG_MRM_MISSES_Pos (0UL)                 /*!< CACHE CACHE_MRM_MISSES_REG: MRM_MISSES (Bit 0)              */
#define CACHE_CACHE_MRM_MISSES_REG_MRM_MISSES_Msk (0xffffffffUL)        /*!< CACHE CACHE_MRM_MISSES_REG: MRM_MISSES (Bitfield-Mask: 0xffffffff) */
/* --------------------------  CACHE_CACHE_MRM_CTRL_REG  -------------------------- */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_START_Pos (0UL)                    /*!< CACHE CACHE_MRM_CTRL_REG: MRM_START (Bit 0)                 */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_START_Msk (0x1UL)                  /*!< CACHE CACHE_MRM_CTRL_REG: MRM_START (Bitfield-Mask: 0x01)   */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Pos (1UL)                 /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_MASK (Bit 1)              */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MASK_Msk (0x2UL)               /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_MASK (Bitfield-Mask: 0x01) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Pos (2UL)          /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_TINT_STATUS (Bit 2)       */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_TINT_STATUS_Msk (0x4UL)        /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_TINT_STATUS (Bitfield-Mask: 0x01) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Pos (3UL)  /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_MISSES_THRES_STATUS (Bit 3) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_MISSES_THRES_STATUS_Msk (0x8UL) /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_MISSES_THRES_STATUS (Bitfield-Mask: 0x01) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Pos (4UL)    /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_HITS_THRES_STATUS (Bit 4) */
#define CACHE_CACHE_MRM_CTRL_REG_MRM_IRQ_HITS_THRES_STATUS_Msk (0x10UL) /*!< CACHE CACHE_MRM_CTRL_REG: MRM_IRQ_HITS_THRES_STATUS (Bitfield-Mask: 0x01) */
/* --------------------------  CACHE_CACHE_MRM_TINT_REG  -------------------------- */
#define CACHE_CACHE_MRM_TINT_REG_MRM_TINT_Pos (0UL)                     /*!< CACHE CACHE_MRM_TINT_REG: MRM_TINT (Bit 0)                  */
#define CACHE_CACHE_MRM_TINT_REG_MRM_TINT_Msk (0x7ffffUL)               /*!< CACHE CACHE_MRM_TINT_REG: MRM_TINT (Bitfield-Mask: 0x7ffff) */
/* ----------------------  CACHE_CACHE_MRM_MISSES_THRES_REG  ---------------------- */
#define CACHE_CACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Pos (0UL)     /*!< CACHE CACHE_MRM_MISSES_THRES_REG: MRM_MISSES_THRES (Bit 0)  */
#define CACHE_CACHE_MRM_MISSES_THRES_REG_MRM_MISSES_THRES_Msk (0xffffffffUL) /*!< CACHE CACHE_MRM_MISSES_THRES_REG: MRM_MISSES_THRES (Bitfield-Mask: 0xffffffff) */
/* -----------------------  CACHE_CACHE_MRM_HITS_THRES_REG  ----------------------- */
#define CACHE_CACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Pos (0UL)         /*!< CACHE CACHE_MRM_HITS_THRES_REG: MRM_HITS_THRES (Bit 0)      */
#define CACHE_CACHE_MRM_HITS_THRES_REG_MRM_HITS_THRES_Msk (0xffffffffUL) /*!< CACHE CACHE_MRM_HITS_THRES_REG: MRM_HITS_THRES (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  CACHE_CACHE_FLASH_REG  --------------------------- */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_SIZE_Pos (0UL)               /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_SIZE (Bit 0)            */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_SIZE_Msk (0x7UL)             /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_SIZE (Bitfield-Mask: 0x07) */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_OFFSET_Pos (4UL)             /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_OFFSET (Bit 4)          */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_OFFSET_Msk (0xfff0UL)        /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_OFFSET (Bitfield-Mask: 0xfff) */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_BASE_Pos (16UL)              /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_BASE (Bit 16)           */
#define CACHE_CACHE_FLASH_REG_FLASH_REGION_BASE_Msk (0xffff0000UL)      /*!< CACHE CACHE_FLASH_REG: FLASH_REGION_BASE (Bitfield-Mask: 0xffff) */
/* -----------------------------  CACHE_SWD_RESET_REG  ---------------------------- */
#define CACHE_SWD_RESET_REG_SWD_HW_RESET_REQ_Pos (0UL)                  /*!< CACHE SWD_RESET_REG: SWD_HW_RESET_REQ (Bit 0)               */
#define CACHE_SWD_RESET_REG_SWD_HW_RESET_REQ_Msk (0x1UL)                /*!< CACHE SWD_RESET_REG: SWD_HW_RESET_REQ (Bitfield-Mask: 0x01) */
/* -------------------------  CACHE_CACHE_CPU_M_HADDR_REG  ------------------------ */
#define CACHE_CACHE_CPU_M_HADDR_REG_CACHE_CPU_M_HADDR_Pos (0UL)         /*!< CACHE CACHE_CPU_M_HADDR_REG: CACHE_CPU_M_HADDR (Bit 0)      */
#define CACHE_CACHE_CPU_M_HADDR_REG_CACHE_CPU_M_HADDR_Msk (0xffffffffUL) /*!< CACHE CACHE_CPU_M_HADDR_REG: CACHE_CPU_M_HADDR (Bitfield-Mask: 0xffffffff) */
/* ------------------------  CACHE_CACHE_M_HADDR_MAP0_REG  ------------------------ */
#define CACHE_CACHE_M_HADDR_MAP0_REG_CACHE_M_HADDR_MAP0_Pos (0UL)       /*!< CACHE CACHE_M_HADDR_MAP0_REG: CACHE_M_HADDR_MAP0 (Bit 0)    */
#define CACHE_CACHE_M_HADDR_MAP0_REG_CACHE_M_HADDR_MAP0_Msk (0xffffffffUL) /*!< CACHE CACHE_M_HADDR_MAP0_REG: CACHE_M_HADDR_MAP0 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  CACHE_CACHE_CTRLR_M_HADDR_REG  ----------------------- */
#define CACHE_CACHE_CTRLR_M_HADDR_REG_CACHE_CTRLR_M_HADDR_Pos (0UL)     /*!< CACHE CACHE_CTRLR_M_HADDR_REG: CACHE_CTRLR_M_HADDR (Bit 0)  */
#define CACHE_CACHE_CTRLR_M_HADDR_REG_CACHE_CTRLR_M_HADDR_Msk (0xffffffffUL) /*!< CACHE CACHE_CTRLR_M_HADDR_REG: CACHE_CTRLR_M_HADDR (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================        struct 'CHARGER' Position & Mask        ================ */
/* ================================================================================ */
/* --------------------------  CHARGER_CHARGER_CTRL_REG  -------------------------- */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_ENABLE_Pos (0UL)               /*!< CHARGER CHARGER_CTRL_REG: CHARGER_ENABLE (Bit 0)            */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_ENABLE_Msk (0x1UL)             /*!< CHARGER CHARGER_CTRL_REG: CHARGER_ENABLE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_START_Pos (1UL)                 /*!< CHARGER CHARGER_CTRL_REG: CHARGE_START (Bit 1)              */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_START_Msk (0x2UL)               /*!< CHARGER CHARGER_CTRL_REG: CHARGE_START (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_BYPASS_Pos (2UL)               /*!< CHARGER CHARGER_CTRL_REG: CHARGER_BYPASS (Bit 2)            */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_BYPASS_Msk (0x4UL)             /*!< CHARGER CHARGER_CTRL_REG: CHARGER_BYPASS (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_RESUME_Pos (3UL)               /*!< CHARGER CHARGER_CTRL_REG: CHARGER_RESUME (Bit 3)            */
#define CHARGER_CHARGER_CTRL_REG_CHARGER_RESUME_Msk (0x8UL)             /*!< CHARGER CHARGER_CTRL_REG: CHARGER_RESUME (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_TDIE_PROT_ENABLE_Pos (4UL)             /*!< CHARGER CHARGER_CTRL_REG: TDIE_PROT_ENABLE (Bit 4)          */
#define CHARGER_CHARGER_CTRL_REG_TDIE_PROT_ENABLE_Msk (0x10UL)          /*!< CHARGER CHARGER_CTRL_REG: TDIE_PROT_ENABLE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_TDIE_ERROR_RESUME_Pos (5UL)            /*!< CHARGER CHARGER_CTRL_REG: TDIE_ERROR_RESUME (Bit 5)         */
#define CHARGER_CHARGER_CTRL_REG_TDIE_ERROR_RESUME_Msk (0x20UL)         /*!< CHARGER CHARGER_CTRL_REG: TDIE_ERROR_RESUME (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_TBAT_PROT_ENABLE_Pos (6UL)             /*!< CHARGER CHARGER_CTRL_REG: TBAT_PROT_ENABLE (Bit 6)          */
#define CHARGER_CHARGER_CTRL_REG_TBAT_PROT_ENABLE_Msk (0x40UL)          /*!< CHARGER CHARGER_CTRL_REG: TBAT_PROT_ENABLE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_NTC_LOW_DISABLE_Pos (7UL)              /*!< CHARGER CHARGER_CTRL_REG: NTC_LOW_DISABLE (Bit 7)           */
#define CHARGER_CHARGER_CTRL_REG_NTC_LOW_DISABLE_Msk (0x80UL)           /*!< CHARGER CHARGER_CTRL_REG: NTC_LOW_DISABLE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_TIMERS_HALT_ENABLE_Pos (9UL)    /*!< CHARGER CHARGER_CTRL_REG: CHARGE_TIMERS_HALT_ENABLE (Bit 9) */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_TIMERS_HALT_ENABLE_Msk (0x200UL) /*!< CHARGER CHARGER_CTRL_REG: CHARGE_TIMERS_HALT_ENABLE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_TBAT_MONITOR_MODE_Pos (10UL)           /*!< CHARGER CHARGER_CTRL_REG: TBAT_MONITOR_MODE (Bit 10)        */
#define CHARGER_CHARGER_CTRL_REG_TBAT_MONITOR_MODE_Msk (0xc00UL)        /*!< CHARGER CHARGER_CTRL_REG: TBAT_MONITOR_MODE (Bitfield-Mask: 0x03) */
#define CHARGER_CHARGER_CTRL_REG_JEITA_SUPPORT_DISABLED_Pos (12UL)      /*!< CHARGER CHARGER_CTRL_REG: JEITA_SUPPORT_DISABLED (Bit 12)   */
#define CHARGER_CHARGER_CTRL_REG_JEITA_SUPPORT_DISABLED_Msk (0x1000UL)  /*!< CHARGER CHARGER_CTRL_REG: JEITA_SUPPORT_DISABLED (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_LOOP_HOLD_Pos (13UL)            /*!< CHARGER CHARGER_CTRL_REG: CHARGE_LOOP_HOLD (Bit 13)         */
#define CHARGER_CHARGER_CTRL_REG_CHARGE_LOOP_HOLD_Msk (0x2000UL)        /*!< CHARGER CHARGER_CTRL_REG: CHARGE_LOOP_HOLD (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_PRE_CHARGE_MODE_Pos (14UL)             /*!< CHARGER CHARGER_CTRL_REG: PRE_CHARGE_MODE (Bit 14)          */
#define CHARGER_CHARGER_CTRL_REG_PRE_CHARGE_MODE_Msk (0x4000UL)         /*!< CHARGER CHARGER_CTRL_REG: PRE_CHARGE_MODE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_REPLENISH_MODE_Pos (15UL)              /*!< CHARGER CHARGER_CTRL_REG: REPLENISH_MODE (Bit 15)           */
#define CHARGER_CHARGER_CTRL_REG_REPLENISH_MODE_Msk (0x8000UL)          /*!< CHARGER CHARGER_CTRL_REG: REPLENISH_MODE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_THRES_Pos (16UL)    /*!< CHARGER CHARGER_CTRL_REG: EOC_INTERVAL_CHECK_THRES (Bit 16) */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_THRES_Msk (0x3f0000UL) /*!< CHARGER CHARGER_CTRL_REG: EOC_INTERVAL_CHECK_THRES (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_TIMER_Pos (22UL)    /*!< CHARGER CHARGER_CTRL_REG: EOC_INTERVAL_CHECK_TIMER (Bit 22) */
#define CHARGER_CHARGER_CTRL_REG_EOC_INTERVAL_CHECK_TIMER_Msk (0xfc00000UL) /*!< CHARGER CHARGER_CTRL_REG: EOC_INTERVAL_CHECK_TIMER (Bitfield-Mask: 0x3f) */
/* ------------------------  CHARGER_CHARGER_TEST_CTRL_REG  ----------------------- */
#define CHARGER_CHARGER_TEST_CTRL_REG_V_CHARGE_TRIM_Pos (0UL)           /*!< CHARGER CHARGER_TEST_CTRL_REG: V_CHARGE_TRIM (Bit 0)        */
#define CHARGER_CHARGER_TEST_CTRL_REG_V_CHARGE_TRIM_Msk (0xfUL)         /*!< CHARGER CHARGER_TEST_CTRL_REG: V_CHARGE_TRIM (Bitfield-Mask: 0x0f) */
#define CHARGER_CHARGER_TEST_CTRL_REG_I_CHARGE_TRIM_Pos (4UL)           /*!< CHARGER CHARGER_TEST_CTRL_REG: I_CHARGE_TRIM (Bit 4)        */
#define CHARGER_CHARGER_TEST_CTRL_REG_I_CHARGE_TRIM_Msk (0x1f0UL)       /*!< CHARGER CHARGER_TEST_CTRL_REG: I_CHARGE_TRIM (Bitfield-Mask: 0x1f) */
#define CHARGER_CHARGER_TEST_CTRL_REG_CHARGER_IOTRIM_Pos (9UL)          /*!< CHARGER CHARGER_TEST_CTRL_REG: CHARGER_IOTRIM (Bit 9)       */
#define CHARGER_CHARGER_TEST_CTRL_REG_CHARGER_IOTRIM_Msk (0x3e00UL)     /*!< CHARGER CHARGER_TEST_CTRL_REG: CHARGER_IOTRIM (Bitfield-Mask: 0x1f) */
#define CHARGER_CHARGER_TEST_CTRL_REG_CHARGER_TEST_Pos (14UL)           /*!< CHARGER CHARGER_TEST_CTRL_REG: CHARGER_TEST (Bit 14)        */
#define CHARGER_CHARGER_TEST_CTRL_REG_CHARGER_TEST_Msk (0x1c000UL)      /*!< CHARGER CHARGER_TEST_CTRL_REG: CHARGER_TEST (Bitfield-Mask: 0x07) */
/* -------------------------  CHARGER_CHARGER_STATUS_REG  ------------------------- */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_IS_POWERED_UP_Pos (0UL)      /*!< CHARGER CHARGER_STATUS_REG: CHARGER_IS_POWERED_UP (Bit 0)   */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_IS_POWERED_UP_Msk (0x1UL)    /*!< CHARGER CHARGER_STATUS_REG: CHARGER_IS_POWERED_UP (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CC_MODE_Pos (1UL)            /*!< CHARGER CHARGER_STATUS_REG: CHARGER_CC_MODE (Bit 1)         */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CC_MODE_Msk (0x2UL)          /*!< CHARGER CHARGER_STATUS_REG: CHARGER_CC_MODE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CV_MODE_Pos (2UL)            /*!< CHARGER CHARGER_STATUS_REG: CHARGER_CV_MODE (Bit 2)         */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_CV_MODE_Msk (0x4UL)          /*!< CHARGER CHARGER_STATUS_REG: CHARGER_CV_MODE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_END_OF_CHARGE_Pos (3UL)              /*!< CHARGER CHARGER_STATUS_REG: END_OF_CHARGE (Bit 3)           */
#define CHARGER_CHARGER_STATUS_REG_END_OF_CHARGE_Msk (0x8UL)            /*!< CHARGER CHARGER_STATUS_REG: END_OF_CHARGE (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_MAIN_VBAT_COMP_OUT_Pos (4UL)         /*!< CHARGER CHARGER_STATUS_REG: MAIN_VBAT_COMP_OUT (Bit 4)      */
#define CHARGER_CHARGER_STATUS_REG_MAIN_VBAT_COMP_OUT_Msk (0x10UL)      /*!< CHARGER CHARGER_STATUS_REG: MAIN_VBAT_COMP_OUT (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_VBAT_OVP_COMP_OUT_Pos (5UL)          /*!< CHARGER CHARGER_STATUS_REG: VBAT_OVP_COMP_OUT (Bit 5)       */
#define CHARGER_CHARGER_STATUS_REG_VBAT_OVP_COMP_OUT_Msk (0x20UL)       /*!< CHARGER CHARGER_STATUS_REG: VBAT_OVP_COMP_OUT (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_TDIE_COMP_OUT_Pos (6UL)              /*!< CHARGER CHARGER_STATUS_REG: TDIE_COMP_OUT (Bit 6)           */
#define CHARGER_CHARGER_STATUS_REG_TDIE_COMP_OUT_Msk (0x40UL)           /*!< CHARGER CHARGER_STATUS_REG: TDIE_COMP_OUT (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_TBAT_HOT_COMP_OUT_Pos (7UL)          /*!< CHARGER CHARGER_STATUS_REG: TBAT_HOT_COMP_OUT (Bit 7)       */
#define CHARGER_CHARGER_STATUS_REG_TBAT_HOT_COMP_OUT_Msk (0x80UL)       /*!< CHARGER CHARGER_STATUS_REG: TBAT_HOT_COMP_OUT (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_MAIN_TBAT_COMP_OUT_Pos (8UL)         /*!< CHARGER CHARGER_STATUS_REG: MAIN_TBAT_COMP_OUT (Bit 8)      */
#define CHARGER_CHARGER_STATUS_REG_MAIN_TBAT_COMP_OUT_Msk (0x100UL)     /*!< CHARGER CHARGER_STATUS_REG: MAIN_TBAT_COMP_OUT (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATUS_REG_TBAT_STATUS_Pos (9UL)                /*!< CHARGER CHARGER_STATUS_REG: TBAT_STATUS (Bit 9)             */
#define CHARGER_CHARGER_STATUS_REG_TBAT_STATUS_Msk (0x3e00UL)           /*!< CHARGER CHARGER_STATUS_REG: TBAT_STATUS (Bitfield-Mask: 0x1f) */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_STATE_Pos (14UL)             /*!< CHARGER CHARGER_STATUS_REG: CHARGER_STATE (Bit 14)          */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_STATE_Msk (0x3c000UL)        /*!< CHARGER CHARGER_STATUS_REG: CHARGER_STATE (Bitfield-Mask: 0x0f) */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_JEITA_STATE_Pos (18UL)       /*!< CHARGER CHARGER_STATUS_REG: CHARGER_JEITA_STATE (Bit 18)    */
#define CHARGER_CHARGER_STATUS_REG_CHARGER_JEITA_STATE_Msk (0x1c0000UL) /*!< CHARGER CHARGER_STATUS_REG: CHARGER_JEITA_STATE (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_TDIE_ERROR_DEBOUNCE_CNT_Pos (21UL)   /*!< CHARGER CHARGER_STATUS_REG: TDIE_ERROR_DEBOUNCE_CNT (Bit 21) */
#define CHARGER_CHARGER_STATUS_REG_TDIE_ERROR_DEBOUNCE_CNT_Msk (0xe00000UL) /*!< CHARGER CHARGER_STATUS_REG: TDIE_ERROR_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_EOC_EVENTS_DEBOUNCE_CNT_Pos (24UL)   /*!< CHARGER CHARGER_STATUS_REG: EOC_EVENTS_DEBOUNCE_CNT (Bit 24) */
#define CHARGER_CHARGER_STATUS_REG_EOC_EVENTS_DEBOUNCE_CNT_Msk (0x7000000UL) /*!< CHARGER CHARGER_STATUS_REG: EOC_EVENTS_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_STATUS_REG_OVP_EVENTS_DEBOUNCE_CNT_Pos (27UL)   /*!< CHARGER CHARGER_STATUS_REG: OVP_EVENTS_DEBOUNCE_CNT (Bit 27) */
#define CHARGER_CHARGER_STATUS_REG_OVP_EVENTS_DEBOUNCE_CNT_Msk (0x38000000UL) /*!< CHARGER CHARGER_STATUS_REG: OVP_EVENTS_DEBOUNCE_CNT (Bitfield-Mask: 0x07) */
/* ----------------------  CHARGER_CHARGER_VOLTAGE_PARAM_REG  --------------------- */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_CHARGE_Pos (0UL)            /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_CHARGE (Bit 0)         */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_CHARGE_Msk (0x3fUL)         /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_CHARGE (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_PRECHARGE_Pos (6UL)         /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_PRECHARGE (Bit 6)      */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_PRECHARGE_Msk (0xfc0UL)     /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_PRECHARGE (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_REPLENISH_Pos (12UL)        /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_REPLENISH (Bit 12)     */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_REPLENISH_Msk (0x3f000UL)   /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_REPLENISH (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_OVP_Pos (18UL)              /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_OVP (Bit 18)           */
#define CHARGER_CHARGER_VOLTAGE_PARAM_REG_V_OVP_Msk (0xfc0000UL)        /*!< CHARGER CHARGER_VOLTAGE_PARAM_REG: V_OVP (Bitfield-Mask: 0x3f) */
/* ----------------------  CHARGER_CHARGER_CURRENT_PARAM_REG  --------------------- */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_CHARGE_Pos (0UL)            /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_CHARGE (Bit 0)         */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_CHARGE_Msk (0x3fUL)         /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_CHARGE (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_PRECHARGE_Pos (6UL)         /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_PRECHARGE (Bit 6)      */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_PRECHARGE_Msk (0xfc0UL)     /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_PRECHARGE (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_END_OF_CHARGE_Pos (12UL)    /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_END_OF_CHARGE (Bit 12) */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_END_OF_CHARGE_Msk (0x7000UL) /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_END_OF_CHARGE (Bitfield-Mask: 0x07) */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_EOC_DOUBLE_RANGE_Pos (15UL) /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_EOC_DOUBLE_RANGE (Bit 15) */
#define CHARGER_CHARGER_CURRENT_PARAM_REG_I_EOC_DOUBLE_RANGE_Msk (0x8000UL) /*!< CHARGER CHARGER_CURRENT_PARAM_REG: I_EOC_DOUBLE_RANGE (Bitfield-Mask: 0x01) */
/* ----------------------  CHARGER_CHARGER_TEMPSET_PARAM_REG  --------------------- */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COLD_Pos (0UL)           /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_COLD (Bit 0)        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COLD_Msk (0x3fUL)        /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_COLD (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COOL_Pos (6UL)           /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_COOL (Bit 6)        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_COOL_Msk (0xfc0UL)       /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_COOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_WARM_Pos (12UL)          /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_WARM (Bit 12)       */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_WARM_Msk (0x3f000UL)     /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_WARM (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_HOT_Pos (18UL)           /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_HOT (Bit 18)        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TBAT_HOT_Msk (0xfc0000UL)     /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TBAT_HOT (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TDIE_MAX_Pos (24UL)           /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TDIE_MAX (Bit 24)        */
#define CHARGER_CHARGER_TEMPSET_PARAM_REG_TDIE_MAX_Msk (0x7000000UL)    /*!< CHARGER CHARGER_TEMPSET_PARAM_REG: TDIE_MAX (Bitfield-Mask: 0x07) */
/* --------------------  CHARGER_CHARGER_PRE_CHARGE_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_MAX_PRE_CHARGE_TIME_Pos (0UL) /*!< CHARGER CHARGER_PRE_CHARGE_TIMER_REG: MAX_PRE_CHARGE_TIME (Bit 0) */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_MAX_PRE_CHARGE_TIME_Msk (0x7fffUL) /*!< CHARGER CHARGER_PRE_CHARGE_TIMER_REG: MAX_PRE_CHARGE_TIME (Bitfield-Mask: 0x7fff) */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_PRE_CHARGE_TIMER_Pos (16UL) /*!< CHARGER CHARGER_PRE_CHARGE_TIMER_REG: PRE_CHARGE_TIMER (Bit 16) */
#define CHARGER_CHARGER_PRE_CHARGE_TIMER_REG_PRE_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< CHARGER CHARGER_PRE_CHARGE_TIMER_REG: PRE_CHARGE_TIMER (Bitfield-Mask: 0x7fff) */
/* ---------------------  CHARGER_CHARGER_CC_CHARGE_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_MAX_CC_CHARGE_TIME_Pos (0UL) /*!< CHARGER CHARGER_CC_CHARGE_TIMER_REG: MAX_CC_CHARGE_TIME (Bit 0) */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_MAX_CC_CHARGE_TIME_Msk (0x7fffUL) /*!< CHARGER CHARGER_CC_CHARGE_TIMER_REG: MAX_CC_CHARGE_TIME (Bitfield-Mask: 0x7fff) */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_CC_CHARGE_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_CC_CHARGE_TIMER_REG: CC_CHARGE_TIMER (Bit 16) */
#define CHARGER_CHARGER_CC_CHARGE_TIMER_REG_CC_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< CHARGER CHARGER_CC_CHARGE_TIMER_REG: CC_CHARGE_TIMER (Bitfield-Mask: 0x7fff) */
/* ---------------------  CHARGER_CHARGER_CV_CHARGE_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_MAX_CV_CHARGE_TIME_Pos (0UL) /*!< CHARGER CHARGER_CV_CHARGE_TIMER_REG: MAX_CV_CHARGE_TIME (Bit 0) */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_MAX_CV_CHARGE_TIME_Msk (0x7fffUL) /*!< CHARGER CHARGER_CV_CHARGE_TIMER_REG: MAX_CV_CHARGE_TIME (Bitfield-Mask: 0x7fff) */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_CV_CHARGE_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_CV_CHARGE_TIMER_REG: CV_CHARGE_TIMER (Bit 16) */
#define CHARGER_CHARGER_CV_CHARGE_TIMER_REG_CV_CHARGE_TIMER_Msk (0x7fff0000UL) /*!< CHARGER CHARGER_CV_CHARGE_TIMER_REG: CV_CHARGE_TIMER (Bitfield-Mask: 0x7fff) */
/* -------------------  CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG  ------------------- */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_MAX_TOTAL_CHARGE_TIME_Pos (0UL) /*!< CHARGER CHARGER_TOTAL_CHARGE_TIMER_REG: MAX_TOTAL_CHARGE_TIME (Bit 0) */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_MAX_TOTAL_CHARGE_TIME_Msk (0xffffUL) /*!< CHARGER CHARGER_TOTAL_CHARGE_TIMER_REG: MAX_TOTAL_CHARGE_TIME (Bitfield-Mask: 0xffff) */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_TOTAL_CHARGE_TIMER_Pos (16UL) /*!< CHARGER CHARGER_TOTAL_CHARGE_TIMER_REG: TOTAL_CHARGE_TIMER (Bit 16) */
#define CHARGER_CHARGER_TOTAL_CHARGE_TIMER_REG_TOTAL_CHARGE_TIMER_Msk (0xffff0000UL) /*!< CHARGER CHARGER_TOTAL_CHARGE_TIMER_REG: TOTAL_CHARGE_TIMER (Bitfield-Mask: 0xffff) */
/* ---------------------  CHARGER_CHARGER_JEITA_V_CHARGE_REG  --------------------- */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOL_Pos (0UL)     /*!< CHARGER CHARGER_JEITA_V_CHARGE_REG: V_CHARGE_TCOOL (Bit 0)  */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TCOOL_Msk (0x3fUL)  /*!< CHARGER CHARGER_JEITA_V_CHARGE_REG: V_CHARGE_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARM_Pos (6UL)     /*!< CHARGER CHARGER_JEITA_V_CHARGE_REG: V_CHARGE_TWARM (Bit 6)  */
#define CHARGER_CHARGER_JEITA_V_CHARGE_REG_V_CHARGE_TWARM_Msk (0xfc0UL) /*!< CHARGER CHARGER_JEITA_V_CHARGE_REG: V_CHARGE_TWARM (Bitfield-Mask: 0x3f) */
/* --------------------  CHARGER_CHARGER_JEITA_V_PRECHARGE_REG  ------------------- */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOL_Pos (0UL) /*!< CHARGER CHARGER_JEITA_V_PRECHARGE_REG: V_PRECHARGE_TCOOL (Bit 0) */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TCOOL_Msk (0x3fUL) /*!< CHARGER CHARGER_JEITA_V_PRECHARGE_REG: V_PRECHARGE_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARM_Pos (6UL) /*!< CHARGER CHARGER_JEITA_V_PRECHARGE_REG: V_PRECHARGE_TWARM (Bit 6) */
#define CHARGER_CHARGER_JEITA_V_PRECHARGE_REG_V_PRECHARGE_TWARM_Msk (0xfc0UL) /*!< CHARGER CHARGER_JEITA_V_PRECHARGE_REG: V_PRECHARGE_TWARM (Bitfield-Mask: 0x3f) */
/* --------------------  CHARGER_CHARGER_JEITA_V_REPLENISH_REG  ------------------- */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOL_Pos (0UL) /*!< CHARGER CHARGER_JEITA_V_REPLENISH_REG: V_REPLENISH_TCOOL (Bit 0) */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TCOOL_Msk (0x3fUL) /*!< CHARGER CHARGER_JEITA_V_REPLENISH_REG: V_REPLENISH_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARM_Pos (6UL) /*!< CHARGER CHARGER_JEITA_V_REPLENISH_REG: V_REPLENISH_TWARM (Bit 6) */
#define CHARGER_CHARGER_JEITA_V_REPLENISH_REG_V_REPLENISH_TWARM_Msk (0xfc0UL) /*!< CHARGER CHARGER_JEITA_V_REPLENISH_REG: V_REPLENISH_TWARM (Bitfield-Mask: 0x3f) */
/* -----------------------  CHARGER_CHARGER_JEITA_V_OVP_REG  ---------------------- */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOL_Pos (0UL)           /*!< CHARGER CHARGER_JEITA_V_OVP_REG: V_OVP_TCOOL (Bit 0)        */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TCOOL_Msk (0x3fUL)        /*!< CHARGER CHARGER_JEITA_V_OVP_REG: V_OVP_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARM_Pos (6UL)           /*!< CHARGER CHARGER_JEITA_V_OVP_REG: V_OVP_TWARM (Bit 6)        */
#define CHARGER_CHARGER_JEITA_V_OVP_REG_V_OVP_TWARM_Msk (0xfc0UL)       /*!< CHARGER CHARGER_JEITA_V_OVP_REG: V_OVP_TWARM (Bitfield-Mask: 0x3f) */
/* ----------------------  CHARGER_CHARGER_JEITA_CURRENT_REG  --------------------- */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TCOOL_Pos (0UL)      /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_CHARGE_TCOOL (Bit 0)   */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TCOOL_Msk (0x3fUL)   /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_CHARGE_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TWARM_Pos (6UL)      /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_CHARGE_TWARM (Bit 6)   */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_CHARGE_TWARM_Msk (0xfc0UL)  /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_CHARGE_TWARM (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TCOOL_Pos (12UL)  /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_PRECHARGE_TCOOL (Bit 12) */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TCOOL_Msk (0x3f000UL) /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_PRECHARGE_TCOOL (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TWARM_Pos (18UL)  /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_PRECHARGE_TWARM (Bit 18) */
#define CHARGER_CHARGER_JEITA_CURRENT_REG_I_PRECHARGE_TWARM_Msk (0xfc0000UL) /*!< CHARGER CHARGER_JEITA_CURRENT_REG: I_PRECHARGE_TWARM (Bitfield-Mask: 0x3f) */
/* ---------------------  CHARGER_CHARGER_VBAT_COMP_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_VBAT_COMP_TIMER_REG: VBAT_COMP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_VBAT_COMP_TIMER_REG: VBAT_COMP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_VBAT_COMP_TIMER_REG: VBAT_COMP_TIMER (Bit 16) */
#define CHARGER_CHARGER_VBAT_COMP_TIMER_REG_VBAT_COMP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_VBAT_COMP_TIMER_REG: VBAT_COMP_TIMER (Bitfield-Mask: 0x3ff) */
/* ---------------------  CHARGER_CHARGER_VOVP_COMP_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: VBAT_OVP_COMP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: VBAT_OVP_COMP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_THRES_Pos (10UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: OVP_INTERVAL_CHECK_THRES (Bit 10) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_THRES_Msk (0xfc00UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: OVP_INTERVAL_CHECK_THRES (Bitfield-Mask: 0x3f) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_TIMER_Pos (16UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: VBAT_OVP_COMP_TIMER (Bit 16) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_VBAT_OVP_COMP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: VBAT_OVP_COMP_TIMER (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_TIMER_Pos (26UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: OVP_INTERVAL_CHECK_TIMER (Bit 26) */
#define CHARGER_CHARGER_VOVP_COMP_TIMER_REG_OVP_INTERVAL_CHECK_TIMER_Msk (0xfc000000UL) /*!< CHARGER CHARGER_VOVP_COMP_TIMER_REG: OVP_INTERVAL_CHECK_TIMER (Bitfield-Mask: 0x3f) */
/* ---------------------  CHARGER_CHARGER_TDIE_COMP_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_TDIE_COMP_TIMER_REG: TDIE_COMP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_TDIE_COMP_TIMER_REG: TDIE_COMP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_TDIE_COMP_TIMER_REG: TDIE_COMP_TIMER (Bit 16) */
#define CHARGER_CHARGER_TDIE_COMP_TIMER_REG_TDIE_COMP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_TDIE_COMP_TIMER_REG: TDIE_COMP_TIMER (Bitfield-Mask: 0x3ff) */
/* ---------------------  CHARGER_CHARGER_TBAT_MON_TIMER_REG  --------------------- */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_INTERVAL_Pos (0UL)  /*!< CHARGER CHARGER_TBAT_MON_TIMER_REG: TBAT_MON_INTERVAL (Bit 0) */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_INTERVAL_Msk (0x3ffUL) /*!< CHARGER CHARGER_TBAT_MON_TIMER_REG: TBAT_MON_INTERVAL (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_TIMER_Pos (16UL)    /*!< CHARGER CHARGER_TBAT_MON_TIMER_REG: TBAT_MON_TIMER (Bit 16) */
#define CHARGER_CHARGER_TBAT_MON_TIMER_REG_TBAT_MON_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_TBAT_MON_TIMER_REG: TBAT_MON_TIMER (Bitfield-Mask: 0x3ff) */
/* ---------------------  CHARGER_CHARGER_TBAT_COMP_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_TBAT_COMP_TIMER_REG: TBAT_COMP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_TBAT_COMP_TIMER_REG: TBAT_COMP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_TBAT_COMP_TIMER_REG: TBAT_COMP_TIMER (Bit 16) */
#define CHARGER_CHARGER_TBAT_COMP_TIMER_REG_TBAT_COMP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_TBAT_COMP_TIMER_REG: TBAT_COMP_TIMER (Bitfield-Mask: 0x3ff) */
/* ---------------------  CHARGER_CHARGER_THOT_COMP_TIMER_REG  -------------------- */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_THOT_COMP_TIMER_REG: THOT_COMP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_THOT_COMP_TIMER_REG: THOT_COMP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_TIMER_Pos (16UL)  /*!< CHARGER CHARGER_THOT_COMP_TIMER_REG: THOT_COMP_TIMER (Bit 16) */
#define CHARGER_CHARGER_THOT_COMP_TIMER_REG_THOT_COMP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_THOT_COMP_TIMER_REG: THOT_COMP_TIMER (Bitfield-Mask: 0x3ff) */
/* ----------------------  CHARGER_CHARGER_PWR_UP_TIMER_REG  ---------------------- */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_SETTLING_Pos (0UL) /*!< CHARGER CHARGER_PWR_UP_TIMER_REG: CHARGER_PWR_UP_SETTLING (Bit 0) */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_SETTLING_Msk (0x3ffUL) /*!< CHARGER CHARGER_PWR_UP_TIMER_REG: CHARGER_PWR_UP_SETTLING (Bitfield-Mask: 0x3ff) */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_TIMER_Pos (16UL) /*!< CHARGER CHARGER_PWR_UP_TIMER_REG: CHARGER_PWR_UP_TIMER (Bit 16) */
#define CHARGER_CHARGER_PWR_UP_TIMER_REG_CHARGER_PWR_UP_TIMER_Msk (0x3ff0000UL) /*!< CHARGER CHARGER_PWR_UP_TIMER_REG: CHARGER_PWR_UP_TIMER (Bitfield-Mask: 0x3ff) */
/* ---------------------  CHARGER_CHARGER_STATE_IRQ_MASK_REG  --------------------- */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_DISABLED_TO_PRECHARGE_IRQ_EN_Pos (0UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: DISABLED_TO_PRECHARGE_IRQ_EN (Bit 0) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_DISABLED_TO_PRECHARGE_IRQ_EN_Msk (0x1UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: DISABLED_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_PRECHARGE_TO_CC_IRQ_EN_Pos (1UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: PRECHARGE_TO_CC_IRQ_EN (Bit 1) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_PRECHARGE_TO_CC_IRQ_EN_Msk (0x2UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: PRECHARGE_TO_CC_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_CV_IRQ_EN_Pos (2UL)    /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_CV_IRQ_EN (Bit 2) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_CV_IRQ_EN_Msk (0x4UL)  /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_CV_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_EOC_IRQ_EN_Pos (3UL)   /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_EOC_IRQ_EN (Bit 3) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_EOC_IRQ_EN_Msk (0x8UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_EOC_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_EOC_IRQ_EN_Pos (4UL)   /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_EOC_IRQ_EN (Bit 4) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_EOC_IRQ_EN_Msk (0x10UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_EOC_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_EOC_TO_PRECHARGE_IRQ_EN_Pos (5UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: EOC_TO_PRECHARGE_IRQ_EN (Bit 5) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_EOC_TO_PRECHARGE_IRQ_EN_Msk (0x20UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: EOC_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TDIE_PROT_TO_PRECHARGE_IRQ_EN_Pos (6UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TDIE_PROT_TO_PRECHARGE_IRQ_EN (Bit 6) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TDIE_PROT_TO_PRECHARGE_IRQ_EN_Msk (0x40UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TDIE_PROT_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_PROT_TO_PRECHARGE_IRQ_EN_Pos (7UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TBAT_PROT_TO_PRECHARGE_IRQ_EN (Bit 7) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_PROT_TO_PRECHARGE_IRQ_EN_Msk (0x80UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TBAT_PROT_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_STATUS_UPDATE_IRQ_EN_Pos (8UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TBAT_STATUS_UPDATE_IRQ_EN (Bit 8) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_TBAT_STATUS_UPDATE_IRQ_EN_Msk (0x100UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: TBAT_STATUS_UPDATE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_CC_IRQ_EN_Pos (9UL)    /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_CC_IRQ_EN (Bit 9) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_CC_IRQ_EN_Msk (0x200UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_CC_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_PRECHARGE_IRQ_EN_Pos (10UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_PRECHARGE_IRQ_EN (Bit 10) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CC_TO_PRECHARGE_IRQ_EN_Msk (0x400UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CC_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_PRECHARGE_IRQ_EN_Pos (11UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_PRECHARGE_IRQ_EN (Bit 11) */
#define CHARGER_CHARGER_STATE_IRQ_MASK_REG_CV_TO_PRECHARGE_IRQ_EN_Msk (0x800UL) /*!< CHARGER CHARGER_STATE_IRQ_MASK_REG: CV_TO_PRECHARGE_IRQ_EN (Bitfield-Mask: 0x01) */
/* ---------------------  CHARGER_CHARGER_ERROR_IRQ_MASK_REG  --------------------- */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_PRECHARGE_TIMEOUT_IRQ_EN_Pos (0UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: PRECHARGE_TIMEOUT_IRQ_EN (Bit 0) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_PRECHARGE_TIMEOUT_IRQ_EN_Msk (0x1UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: PRECHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CC_CHARGE_TIMEOUT_IRQ_EN_Pos (1UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: CC_CHARGE_TIMEOUT_IRQ_EN (Bit 1) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CC_CHARGE_TIMEOUT_IRQ_EN_Msk (0x2UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: CC_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CV_CHARGE_TIMEOUT_IRQ_EN_Pos (2UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: CV_CHARGE_TIMEOUT_IRQ_EN (Bit 2) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_CV_CHARGE_TIMEOUT_IRQ_EN_Msk (0x4UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: CV_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TOTAL_CHARGE_TIMEOUT_IRQ_EN_Pos (3UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TOTAL_CHARGE_TIMEOUT_IRQ_EN (Bit 3) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TOTAL_CHARGE_TIMEOUT_IRQ_EN_Msk (0x8UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TOTAL_CHARGE_TIMEOUT_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_VBAT_OVP_ERROR_IRQ_EN_Pos (4UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: VBAT_OVP_ERROR_IRQ_EN (Bit 4) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_VBAT_OVP_ERROR_IRQ_EN_Msk (0x10UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: VBAT_OVP_ERROR_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TDIE_ERROR_IRQ_EN_Pos (5UL)  /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TDIE_ERROR_IRQ_EN (Bit 5) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TDIE_ERROR_IRQ_EN_Msk (0x20UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TDIE_ERROR_IRQ_EN (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TBAT_ERROR_IRQ_EN_Pos (6UL)  /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TBAT_ERROR_IRQ_EN (Bit 6) */
#define CHARGER_CHARGER_ERROR_IRQ_MASK_REG_TBAT_ERROR_IRQ_EN_Msk (0x40UL) /*!< CHARGER CHARGER_ERROR_IRQ_MASK_REG: TBAT_ERROR_IRQ_EN (Bitfield-Mask: 0x01) */
/* --------------------  CHARGER_CHARGER_STATE_IRQ_STATUS_REG  -------------------- */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_DISABLED_TO_PRECHARGE_IRQ_Pos (0UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: DISABLED_TO_PRECHARGE_IRQ (Bit 0) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_DISABLED_TO_PRECHARGE_IRQ_Msk (0x1UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: DISABLED_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_PRECHARGE_TO_CC_IRQ_Pos (1UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: PRECHARGE_TO_CC_IRQ (Bit 1) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_PRECHARGE_TO_CC_IRQ_Msk (0x2UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: PRECHARGE_TO_CC_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_CV_IRQ_Pos (2UL)     /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_CV_IRQ (Bit 2)  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_CV_IRQ_Msk (0x4UL)   /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_CV_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_EOC_IRQ_Pos (3UL)    /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_EOC_IRQ (Bit 3) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_EOC_IRQ_Msk (0x8UL)  /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_EOC_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_EOC_IRQ_Pos (4UL)    /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_EOC_IRQ (Bit 4) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_EOC_IRQ_Msk (0x10UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_EOC_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_EOC_TO_PRECHARGE_IRQ_Pos (5UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: EOC_TO_PRECHARGE_IRQ (Bit 5) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_EOC_TO_PRECHARGE_IRQ_Msk (0x20UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: EOC_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TDIE_PROT_TO_PRECHARGE_IRQ_Pos (6UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TDIE_PROT_TO_PRECHARGE_IRQ (Bit 6) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TDIE_PROT_TO_PRECHARGE_IRQ_Msk (0x40UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TDIE_PROT_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_PROT_TO_PRECHARGE_IRQ_Pos (7UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TBAT_PROT_TO_PRECHARGE_IRQ (Bit 7) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_PROT_TO_PRECHARGE_IRQ_Msk (0x80UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TBAT_PROT_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_STATUS_UPDATE_IRQ_Pos (8UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TBAT_STATUS_UPDATE_IRQ (Bit 8) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_TBAT_STATUS_UPDATE_IRQ_Msk (0x100UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: TBAT_STATUS_UPDATE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_CC_IRQ_Pos (9UL)     /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_CC_IRQ (Bit 9)  */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_CC_IRQ_Msk (0x200UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_CC_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_PRECHARGE_IRQ_Pos (10UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_PRECHARGE_IRQ (Bit 10) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CC_TO_PRECHARGE_IRQ_Msk (0x400UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CC_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_PRECHARGE_IRQ_Pos (11UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_PRECHARGE_IRQ (Bit 11) */
#define CHARGER_CHARGER_STATE_IRQ_STATUS_REG_CV_TO_PRECHARGE_IRQ_Msk (0x800UL) /*!< CHARGER CHARGER_STATE_IRQ_STATUS_REG: CV_TO_PRECHARGE_IRQ (Bitfield-Mask: 0x01) */
/* --------------------  CHARGER_CHARGER_ERROR_IRQ_STATUS_REG  -------------------- */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_PRECHARGE_TIMEOUT_IRQ_Pos (0UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: PRECHARGE_TIMEOUT_IRQ (Bit 0) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_PRECHARGE_TIMEOUT_IRQ_Msk (0x1UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: PRECHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CC_CHARGE_TIMEOUT_IRQ_Pos (1UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: CC_CHARGE_TIMEOUT_IRQ (Bit 1) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CC_CHARGE_TIMEOUT_IRQ_Msk (0x2UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: CC_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CV_CHARGE_TIMEOUT_IRQ_Pos (2UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: CV_CHARGE_TIMEOUT_IRQ (Bit 2) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_CV_CHARGE_TIMEOUT_IRQ_Msk (0x4UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: CV_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TOTAL_CHARGE_TIMEOUT_IRQ_Pos (3UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TOTAL_CHARGE_TIMEOUT_IRQ (Bit 3) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TOTAL_CHARGE_TIMEOUT_IRQ_Msk (0x8UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TOTAL_CHARGE_TIMEOUT_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_VBAT_OVP_ERROR_IRQ_Pos (4UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: VBAT_OVP_ERROR_IRQ (Bit 4) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_VBAT_OVP_ERROR_IRQ_Msk (0x10UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: VBAT_OVP_ERROR_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TDIE_ERROR_IRQ_Pos (5UL)   /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TDIE_ERROR_IRQ (Bit 5) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TDIE_ERROR_IRQ_Msk (0x20UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TDIE_ERROR_IRQ (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TBAT_ERROR_IRQ_Pos (6UL)   /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TBAT_ERROR_IRQ (Bit 6) */
#define CHARGER_CHARGER_ERROR_IRQ_STATUS_REG_TBAT_ERROR_IRQ_Msk (0x40UL) /*!< CHARGER CHARGER_ERROR_IRQ_STATUS_REG: TBAT_ERROR_IRQ (Bitfield-Mask: 0x01) */
/* ----------------------  CHARGER_CHARGER_STATE_IRQ_CLR_REG  --------------------- */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_DISABLED_TO_PRECHARGE_IRQ_CLR_Pos (0UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: DISABLED_TO_PRECHARGE_IRQ_CLR (Bit 0) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_DISABLED_TO_PRECHARGE_IRQ_CLR_Msk (0x1UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: DISABLED_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_PRECHARGE_TO_CC_IRQ_CLR_Pos (1UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: PRECHARGE_TO_CC_IRQ_CLR (Bit 1) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_PRECHARGE_TO_CC_IRQ_CLR_Msk (0x2UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: PRECHARGE_TO_CC_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_CV_IRQ_CLR_Pos (2UL)    /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_CV_IRQ_CLR (Bit 2) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_CV_IRQ_CLR_Msk (0x4UL)  /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_CV_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_EOC_IRQ_CLR_Pos (3UL)   /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_EOC_IRQ_CLR (Bit 3) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_EOC_IRQ_CLR_Msk (0x8UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_EOC_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_EOC_IRQ_CLR_Pos (4UL)   /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_EOC_IRQ_CLR (Bit 4) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_EOC_IRQ_CLR_Msk (0x10UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_EOC_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_EOC_TO_PRECHARGE_IRQ_CLR_Pos (5UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: EOC_TO_PRECHARGE_IRQ_CLR (Bit 5) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_EOC_TO_PRECHARGE_IRQ_CLR_Msk (0x20UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: EOC_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TDIE_PROT_TO_PRECHARGE_IRQ_CLR_Pos (6UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TDIE_PROT_TO_PRECHARGE_IRQ_CLR (Bit 6) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TDIE_PROT_TO_PRECHARGE_IRQ_CLR_Msk (0x40UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TDIE_PROT_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_PROT_TO_PRECHARGE_IRQ_CLR_Pos (7UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TBAT_PROT_TO_PRECHARGE_IRQ_CLR (Bit 7) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_PROT_TO_PRECHARGE_IRQ_CLR_Msk (0x80UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TBAT_PROT_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_STATUS_UPDATE_IRQ_CLR_Pos (8UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TBAT_STATUS_UPDATE_IRQ_CLR (Bit 8) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_TBAT_STATUS_UPDATE_IRQ_CLR_Msk (0x100UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: TBAT_STATUS_UPDATE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_CC_IRQ_CLR_Pos (9UL)    /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_CC_IRQ_CLR (Bit 9) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_CC_IRQ_CLR_Msk (0x200UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_CC_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_PRECHARGE_IRQ_CLR_Pos (10UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_PRECHARGE_IRQ_CLR (Bit 10) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CC_TO_PRECHARGE_IRQ_CLR_Msk (0x400UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CC_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_PRECHARGE_IRQ_CLR_Pos (11UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_PRECHARGE_IRQ_CLR (Bit 11) */
#define CHARGER_CHARGER_STATE_IRQ_CLR_REG_CV_TO_PRECHARGE_IRQ_CLR_Msk (0x800UL) /*!< CHARGER CHARGER_STATE_IRQ_CLR_REG: CV_TO_PRECHARGE_IRQ_CLR (Bitfield-Mask: 0x01) */
/* ----------------------  CHARGER_CHARGER_ERROR_IRQ_CLR_REG  --------------------- */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_PRECHARGE_TIMEOUT_IRQ_CLR_Pos (0UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: PRECHARGE_TIMEOUT_IRQ_CLR (Bit 0) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_PRECHARGE_TIMEOUT_IRQ_CLR_Msk (0x1UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: PRECHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CC_CHARGE_TIMEOUT_IRQ_CLR_Pos (1UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: CC_CHARGE_TIMEOUT_IRQ_CLR (Bit 1) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CC_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x2UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: CC_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CV_CHARGE_TIMEOUT_IRQ_CLR_Pos (2UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: CV_CHARGE_TIMEOUT_IRQ_CLR (Bit 2) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_CV_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x4UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: CV_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TOTAL_CHARGE_TIMEOUT_IRQ_CLR_Pos (3UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TOTAL_CHARGE_TIMEOUT_IRQ_CLR (Bit 3) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TOTAL_CHARGE_TIMEOUT_IRQ_CLR_Msk (0x8UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TOTAL_CHARGE_TIMEOUT_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_VBAT_OVP_ERROR_IRQ_CLR_Pos (4UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: VBAT_OVP_ERROR_IRQ_CLR (Bit 4) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_VBAT_OVP_ERROR_IRQ_CLR_Msk (0x10UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: VBAT_OVP_ERROR_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TDIE_ERROR_IRQ_CLR_Pos (5UL)  /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TDIE_ERROR_IRQ_CLR (Bit 5) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TDIE_ERROR_IRQ_CLR_Msk (0x20UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TDIE_ERROR_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TBAT_ERROR_IRQ_CLR_Pos (6UL)  /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TBAT_ERROR_IRQ_CLR (Bit 6) */
#define CHARGER_CHARGER_ERROR_IRQ_CLR_REG_TBAT_ERROR_IRQ_CLR_Msk (0x40UL) /*!< CHARGER CHARGER_ERROR_IRQ_CLR_REG: TBAT_ERROR_IRQ_CLR (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================      struct 'CHIP_VERSION' Position & Mask     ================ */
/* ================================================================================ */
/* --------------------------  CHIP_VERSION_CHIP_ID1_REG  ------------------------- */
#define CHIP_VERSION_CHIP_ID1_REG_CHIP_ID1_Pos (0UL)                    /*!< CHIP_VERSION CHIP_ID1_REG: CHIP_ID1 (Bit 0)                 */
#define CHIP_VERSION_CHIP_ID1_REG_CHIP_ID1_Msk (0xffUL)                 /*!< CHIP_VERSION CHIP_ID1_REG: CHIP_ID1 (Bitfield-Mask: 0xff)   */
/* --------------------------  CHIP_VERSION_CHIP_ID2_REG  ------------------------- */
#define CHIP_VERSION_CHIP_ID2_REG_CHIP_ID2_Pos (0UL)                    /*!< CHIP_VERSION CHIP_ID2_REG: CHIP_ID2 (Bit 0)                 */
#define CHIP_VERSION_CHIP_ID2_REG_CHIP_ID2_Msk (0xffUL)                 /*!< CHIP_VERSION CHIP_ID2_REG: CHIP_ID2 (Bitfield-Mask: 0xff)   */
/* --------------------------  CHIP_VERSION_CHIP_ID3_REG  ------------------------- */
#define CHIP_VERSION_CHIP_ID3_REG_CHIP_ID3_Pos (0UL)                    /*!< CHIP_VERSION CHIP_ID3_REG: CHIP_ID3 (Bit 0)                 */
#define CHIP_VERSION_CHIP_ID3_REG_CHIP_ID3_Msk (0xffUL)                 /*!< CHIP_VERSION CHIP_ID3_REG: CHIP_ID3 (Bitfield-Mask: 0xff)   */
/* --------------------------  CHIP_VERSION_CHIP_ID4_REG  ------------------------- */
#define CHIP_VERSION_CHIP_ID4_REG_CHIP_ID4_Pos (0UL)                    /*!< CHIP_VERSION CHIP_ID4_REG: CHIP_ID4 (Bit 0)                 */
#define CHIP_VERSION_CHIP_ID4_REG_CHIP_ID4_Msk (0xffUL)                 /*!< CHIP_VERSION CHIP_ID4_REG: CHIP_ID4 (Bitfield-Mask: 0xff)   */
/* --------------------------  CHIP_VERSION_CHIP_SWC_REG  ------------------------- */
#define CHIP_VERSION_CHIP_SWC_REG_CHIP_SWC_Pos (0UL)                    /*!< CHIP_VERSION CHIP_SWC_REG: CHIP_SWC (Bit 0)                 */
#define CHIP_VERSION_CHIP_SWC_REG_CHIP_SWC_Msk (0xfUL)                  /*!< CHIP_VERSION CHIP_SWC_REG: CHIP_SWC (Bitfield-Mask: 0x0f)   */
/* -----------------------  CHIP_VERSION_CHIP_REVISION_REG  ----------------------- */
#define CHIP_VERSION_CHIP_REVISION_REG_CHIP_REVISION_Pos (0UL)          /*!< CHIP_VERSION CHIP_REVISION_REG: CHIP_REVISION (Bit 0)       */
#define CHIP_VERSION_CHIP_REVISION_REG_CHIP_REVISION_Msk (0xffUL)       /*!< CHIP_VERSION CHIP_REVISION_REG: CHIP_REVISION (Bitfield-Mask: 0xff) */
/* -------------------------  CHIP_VERSION_CHIP_TEST1_REG  ------------------------ */
#define CHIP_VERSION_CHIP_TEST1_REG_CHIP_LAYOUT_REVISION_Pos (0UL)      /*!< CHIP_VERSION CHIP_TEST1_REG: CHIP_LAYOUT_REVISION (Bit 0)   */
#define CHIP_VERSION_CHIP_TEST1_REG_CHIP_LAYOUT_REVISION_Msk (0xffUL)   /*!< CHIP_VERSION CHIP_TEST1_REG: CHIP_LAYOUT_REVISION (Bitfield-Mask: 0xff) */
/* -------------------------  CHIP_VERSION_CHIP_TEST2_REG  ------------------------ */
#define CHIP_VERSION_CHIP_TEST2_REG_CHIP_METAL_OPTION_Pos (0UL)         /*!< CHIP_VERSION CHIP_TEST2_REG: CHIP_METAL_OPTION (Bit 0)      */
#define CHIP_VERSION_CHIP_TEST2_REG_CHIP_METAL_OPTION_Msk (0xfUL)       /*!< CHIP_VERSION CHIP_TEST2_REG: CHIP_METAL_OPTION (Bitfield-Mask: 0x0f) */
/* ================================================================================ */
/* ================          struct 'CMAC' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  CMAC_CM_CTRL_SYS_REG  ---------------------------- */
#define CMAC_CM_CTRL_SYS_REG_CMAC2SYS_IRQ_STATE_Pos (0UL)               /*!< CMAC CM_CTRL_SYS_REG: CMAC2SYS_IRQ_STATE (Bit 0)            */
#define CMAC_CM_CTRL_SYS_REG_CMAC2SYS_IRQ_STATE_Msk (0x1UL)             /*!< CMAC CM_CTRL_SYS_REG: CMAC2SYS_IRQ_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC2SYS_IRQ_CLR_Pos (1UL)                 /*!< CMAC CM_CTRL_SYS_REG: CMAC2SYS_IRQ_CLR (Bit 1)              */
#define CMAC_CM_CTRL_SYS_REG_CMAC2SYS_IRQ_CLR_Msk (0x2UL)               /*!< CMAC CM_CTRL_SYS_REG: CMAC2SYS_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_RST_BS_STATE_Pos (7UL)                /*!< CMAC CM_CTRL_SYS_REG: CMAC_RST_BS_STATE (Bit 7)             */
#define CMAC_CM_CTRL_SYS_REG_CMAC_RST_BS_STATE_Msk (0x80UL)             /*!< CMAC CM_CTRL_SYS_REG: CMAC_RST_BS_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_RST_MCPU_STATE_Pos (8UL)              /*!< CMAC CM_CTRL_SYS_REG: CMAC_RST_MCPU_STATE (Bit 8)           */
#define CMAC_CM_CTRL_SYS_REG_CMAC_RST_MCPU_STATE_Msk (0x100UL)          /*!< CMAC CM_CTRL_SYS_REG: CMAC_RST_MCPU_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_MCPU_SLEEPING_STATE_Pos (9UL)              /*!< CMAC CM_CTRL_SYS_REG: MCPU_SLEEPING_STATE (Bit 9)           */
#define CMAC_CM_CTRL_SYS_REG_MCPU_SLEEPING_STATE_Msk (0x200UL)          /*!< CMAC CM_CTRL_SYS_REG: MCPU_SLEEPING_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_FW_ERROR_STATE_Pos (10UL)             /*!< CMAC CM_CTRL_SYS_REG: CMAC_FW_ERROR_STATE (Bit 10)          */
#define CMAC_CM_CTRL_SYS_REG_CMAC_FW_ERROR_STATE_Msk (0x400UL)          /*!< CMAC CM_CTRL_SYS_REG: CMAC_FW_ERROR_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_BS_ERROR_STATE_Pos (11UL)             /*!< CMAC CM_CTRL_SYS_REG: CMAC_BS_ERROR_STATE (Bit 11)          */
#define CMAC_CM_CTRL_SYS_REG_CMAC_BS_ERROR_STATE_Msk (0x800UL)          /*!< CMAC CM_CTRL_SYS_REG: CMAC_BS_ERROR_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_CPU_ERROR_STATE_Pos (12UL)            /*!< CMAC CM_CTRL_SYS_REG: CMAC_CPU_ERROR_STATE (Bit 12)         */
#define CMAC_CM_CTRL_SYS_REG_CMAC_CPU_ERROR_STATE_Msk (0x1000UL)        /*!< CMAC CM_CTRL_SYS_REG: CMAC_CPU_ERROR_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_SYSMEMCTRL_ERROR_STATE_Pos (13UL)     /*!< CMAC CM_CTRL_SYS_REG: CMAC_SYSMEMCTRL_ERROR_STATE (Bit 13)  */
#define CMAC_CM_CTRL_SYS_REG_CMAC_SYSMEMCTRL_ERROR_STATE_Msk (0x2000UL) /*!< CMAC CM_CTRL_SYS_REG: CMAC_SYSMEMCTRL_ERROR_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_WDOG_EXPIRE_STATE_Pos (14UL)          /*!< CMAC CM_CTRL_SYS_REG: CMAC_WDOG_EXPIRE_STATE (Bit 14)       */
#define CMAC_CM_CTRL_SYS_REG_CMAC_WDOG_EXPIRE_STATE_Msk (0x4000UL)      /*!< CMAC CM_CTRL_SYS_REG: CMAC_WDOG_EXPIRE_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_LOCKUP_STATE_Pos (15UL)               /*!< CMAC CM_CTRL_SYS_REG: CMAC_LOCKUP_STATE (Bit 15)            */
#define CMAC_CM_CTRL_SYS_REG_CMAC_LOCKUP_STATE_Msk (0x8000UL)           /*!< CMAC CM_CTRL_SYS_REG: CMAC_LOCKUP_STATE (Bitfield-Mask: 0x01) */
#define CMAC_CM_CTRL_SYS_REG_CMAC_CONST_1_Pos (31UL)                    /*!< CMAC CM_CTRL_SYS_REG: CMAC_CONST_1 (Bit 31)                 */
#define CMAC_CM_CTRL_SYS_REG_CMAC_CONST_1_Msk (0x80000000UL)            /*!< CMAC CM_CTRL_SYS_REG: CMAC_CONST_1 (Bitfield-Mask: 0x01)    */
/* ------------------------------  CMAC_CM_WDOG_REG  ------------------------------ */
#define CMAC_CM_WDOG_REG_CM_WDOG_CNT_Pos      (0UL)                     /*!< CMAC CM_WDOG_REG: CM_WDOG_CNT (Bit 0)                       */
#define CMAC_CM_WDOG_REG_CM_WDOG_CNT_Msk      (0x1fffUL)                /*!< CMAC CM_WDOG_REG: CM_WDOG_CNT (Bitfield-Mask: 0x1fff)       */
#define CMAC_CM_WDOG_REG_CM_WDOG_WRITE_VALID_Pos (17UL)                 /*!< CMAC CM_WDOG_REG: CM_WDOG_WRITE_VALID (Bit 17)              */
#define CMAC_CM_WDOG_REG_CM_WDOG_WRITE_VALID_Msk (0x60000UL)            /*!< CMAC CM_WDOG_REG: CM_WDOG_WRITE_VALID (Bitfield-Mask: 0x03) */
#define CMAC_CM_WDOG_REG_CM_WDOG_SYS_RST_REQ_Pos (28UL)                 /*!< CMAC CM_WDOG_REG: CM_WDOG_SYS_RST_REQ (Bit 28)              */
#define CMAC_CM_WDOG_REG_CM_WDOG_SYS_RST_REQ_Msk (0x10000000UL)         /*!< CMAC CM_WDOG_REG: CM_WDOG_SYS_RST_REQ (Bitfield-Mask: 0x01) */
#define CMAC_CM_WDOG_REG_CM_WDOG_EXPIRE_Pos   (29UL)                    /*!< CMAC CM_WDOG_REG: CM_WDOG_EXPIRE (Bit 29)                   */
#define CMAC_CM_WDOG_REG_CM_WDOG_EXPIRE_Msk   (0x20000000UL)            /*!< CMAC CM_WDOG_REG: CM_WDOG_EXPIRE (Bitfield-Mask: 0x01)      */
#define CMAC_CM_WDOG_REG_SYS2CMAC_WDOG_FREEZE_DIS_Pos (30UL)            /*!< CMAC CM_WDOG_REG: SYS2CMAC_WDOG_FREEZE_DIS (Bit 30)         */
#define CMAC_CM_WDOG_REG_SYS2CMAC_WDOG_FREEZE_DIS_Msk (0x40000000UL)    /*!< CMAC CM_WDOG_REG: SYS2CMAC_WDOG_FREEZE_DIS (Bitfield-Mask: 0x01) */
#define CMAC_CM_WDOG_REG_SYS2CMAC_WDOG_FREEZE_Pos (31UL)                /*!< CMAC CM_WDOG_REG: SYS2CMAC_WDOG_FREEZE (Bit 31)             */
#define CMAC_CM_WDOG_REG_SYS2CMAC_WDOG_FREEZE_Msk (0x80000000UL)        /*!< CMAC CM_WDOG_REG: SYS2CMAC_WDOG_FREEZE (Bitfield-Mask: 0x01) */
/* -------------------------  CMAC_CM_DIAG_IRQ1_EDGE_REG  ------------------------- */
#define CMAC_CM_DIAG_IRQ1_EDGE_REG_DIAG_IRQ1_EDGE_Pos (0UL)             /*!< CMAC CM_DIAG_IRQ1_EDGE_REG: DIAG_IRQ1_EDGE (Bit 0)          */
#define CMAC_CM_DIAG_IRQ1_EDGE_REG_DIAG_IRQ1_EDGE_Msk (0xffUL)          /*!< CMAC CM_DIAG_IRQ1_EDGE_REG: DIAG_IRQ1_EDGE (Bitfield-Mask: 0xff) */
/* -------------------------  CMAC_CM_DIAG_IRQ1_MASK_REG  ------------------------- */
#define CMAC_CM_DIAG_IRQ1_MASK_REG_DIAG_IRQ1_MSK_Pos (0UL)              /*!< CMAC CM_DIAG_IRQ1_MASK_REG: DIAG_IRQ1_MSK (Bit 0)           */
#define CMAC_CM_DIAG_IRQ1_MASK_REG_DIAG_IRQ1_MSK_Msk (0x7fffUL)         /*!< CMAC CM_DIAG_IRQ1_MASK_REG: DIAG_IRQ1_MSK (Bitfield-Mask: 0x7fff) */
/* ================================================================================ */
/* ================     struct 'CMAC_TIMER_SLP' Position & Mask    ================ */
/* ================================================================================ */
/* -----------------------  CMAC_TIMER_SLP_CM_SLP_CTRL_REG  ----------------------- */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_SW_Pos (0UL)           /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_SW (Bit 0)        */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_SW_Msk (0x1UL)         /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_SW (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_CNT_SIGN_Pos (5UL)     /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_CNT_SIGN (Bit 5)  */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_CNT_SIGN_Msk (0x20UL)  /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_CNT_SIGN (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_LP_CLK_STATE_Pos (6UL)           /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: LP_CLK_STATE (Bit 6)        */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_LP_CLK_STATE_Msk (0x40UL)        /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: LP_CLK_STATE (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_ACTIVE_Pos (7UL)       /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_ACTIVE (Bit 7)    */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_SLP_TIMER_ACTIVE_Msk (0x80UL)    /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: SLP_TIMER_ACTIVE (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_TCLK_FROM_PCLK_Pos (8UL)         /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: TCLK_FROM_PCLK (Bit 8)      */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_TCLK_FROM_PCLK_Msk (0x100UL)     /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: TCLK_FROM_PCLK (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_TCLK_FROM_LPCLK_Pos (9UL)        /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: TCLK_FROM_LPCLK (Bit 9)     */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_TCLK_FROM_LPCLK_Msk (0x200UL)    /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: TCLK_FROM_LPCLK (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_CMAC_WAKEUP_ON_SWD_EN_Pos (24UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: CMAC_WAKEUP_ON_SWD_EN (Bit 24) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL_REG_CMAC_WAKEUP_ON_SWD_EN_Msk (0x1000000UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL_REG: CMAC_WAKEUP_ON_SWD_EN (Bitfield-Mask: 0x01) */
/* -----------------------  CMAC_TIMER_SLP_CM_SLP_CTRL2_REG  ---------------------- */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_STATE_Pos (0UL)   /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_STATE (Bit 0) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_STATE_Msk (0x1UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_STATE (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_CLR_Pos (1UL)     /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_CLR (Bit 1)  */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_CLR_Msk (0x2UL)   /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_CLR (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_SET_Pos (2UL)     /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_SET (Bit 2)  */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_IRQ_SET_Msk (0x4UL)   /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_IRQ_SET (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_CNT_SIGN_Pos (5UL)    /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_CNT_SIGN (Bit 5) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_CNT_SIGN_Msk (0x20UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_CNT_SIGN (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_LP_CLK_STATE_Pos (6UL)          /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: LP_CLK_STATE (Bit 6)       */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_LP_CLK_STATE_Msk (0x40UL)       /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: LP_CLK_STATE (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_ACTIVE_Pos (7UL)      /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_ACTIVE (Bit 7)   */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_SLP_TIMER_ACTIVE_Msk (0x80UL)   /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: SLP_TIMER_ACTIVE (Bitfield-Mask: 0x01) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_CMAC_WAKEUP_ON_SWD_STATE_Pos (8UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: CMAC_WAKEUP_ON_SWD_STATE (Bit 8) */
#define CMAC_TIMER_SLP_CM_SLP_CTRL2_REG_CMAC_WAKEUP_ON_SWD_STATE_Msk (0x100UL) /*!< CMAC_TIMER_SLP CM_SLP_CTRL2_REG: CMAC_WAKEUP_ON_SWD_STATE (Bitfield-Mask: 0x01) */
/* -----------------------  CMAC_TIMER_SLP_CM_SLP_TIMER_REG  ---------------------- */
#define CMAC_TIMER_SLP_CM_SLP_TIMER_REG_CM_SLP_TIMER_VALUE_Pos (0UL)    /*!< CMAC_TIMER_SLP CM_SLP_TIMER_REG: CM_SLP_TIMER_VALUE (Bit 0) */
#define CMAC_TIMER_SLP_CM_SLP_TIMER_REG_CM_SLP_TIMER_VALUE_Msk (0xffffffffUL) /*!< CMAC_TIMER_SLP CM_SLP_TIMER_REG: CM_SLP_TIMER_VALUE (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================        struct 'CRG_COM' Position & Mask        ================ */
/* ================================================================================ */
/* -----------------------------  CRG_COM_CLK_COM_REG  ---------------------------- */
#define CRG_COM_CLK_COM_REG_UART_ENABLE_Pos   (0UL)                     /*!< CRG_COM CLK_COM_REG: UART_ENABLE (Bit 0)                    */
#define CRG_COM_CLK_COM_REG_UART_ENABLE_Msk   (0x1UL)                   /*!< CRG_COM CLK_COM_REG: UART_ENABLE (Bitfield-Mask: 0x01)      */
#define CRG_COM_CLK_COM_REG_UART2_ENABLE_Pos  (1UL)                     /*!< CRG_COM CLK_COM_REG: UART2_ENABLE (Bit 1)                   */
#define CRG_COM_CLK_COM_REG_UART2_ENABLE_Msk  (0x2UL)                   /*!< CRG_COM CLK_COM_REG: UART2_ENABLE (Bitfield-Mask: 0x01)     */
#define CRG_COM_CLK_COM_REG_UART2_CLK_SEL_Pos (2UL)                     /*!< CRG_COM CLK_COM_REG: UART2_CLK_SEL (Bit 2)                  */
#define CRG_COM_CLK_COM_REG_UART2_CLK_SEL_Msk (0x4UL)                   /*!< CRG_COM CLK_COM_REG: UART2_CLK_SEL (Bitfield-Mask: 0x01)    */
#define CRG_COM_CLK_COM_REG_UART3_ENABLE_Pos  (3UL)                     /*!< CRG_COM CLK_COM_REG: UART3_ENABLE (Bit 3)                   */
#define CRG_COM_CLK_COM_REG_UART3_ENABLE_Msk  (0x8UL)                   /*!< CRG_COM CLK_COM_REG: UART3_ENABLE (Bitfield-Mask: 0x01)     */
#define CRG_COM_CLK_COM_REG_UART3_CLK_SEL_Pos (4UL)                     /*!< CRG_COM CLK_COM_REG: UART3_CLK_SEL (Bit 4)                  */
#define CRG_COM_CLK_COM_REG_UART3_CLK_SEL_Msk (0x10UL)                  /*!< CRG_COM CLK_COM_REG: UART3_CLK_SEL (Bitfield-Mask: 0x01)    */
#define CRG_COM_CLK_COM_REG_SPI_ENABLE_Pos    (5UL)                     /*!< CRG_COM CLK_COM_REG: SPI_ENABLE (Bit 5)                     */
#define CRG_COM_CLK_COM_REG_SPI_ENABLE_Msk    (0x20UL)                  /*!< CRG_COM CLK_COM_REG: SPI_ENABLE (Bitfield-Mask: 0x01)       */
#define CRG_COM_CLK_COM_REG_SPI_CLK_SEL_Pos   (6UL)                     /*!< CRG_COM CLK_COM_REG: SPI_CLK_SEL (Bit 6)                    */
#define CRG_COM_CLK_COM_REG_SPI_CLK_SEL_Msk   (0x40UL)                  /*!< CRG_COM CLK_COM_REG: SPI_CLK_SEL (Bitfield-Mask: 0x01)      */
#define CRG_COM_CLK_COM_REG_SPI2_ENABLE_Pos   (7UL)                     /*!< CRG_COM CLK_COM_REG: SPI2_ENABLE (Bit 7)                    */
#define CRG_COM_CLK_COM_REG_SPI2_ENABLE_Msk   (0x80UL)                  /*!< CRG_COM CLK_COM_REG: SPI2_ENABLE (Bitfield-Mask: 0x01)      */
#define CRG_COM_CLK_COM_REG_SPI2_CLK_SEL_Pos  (8UL)                     /*!< CRG_COM CLK_COM_REG: SPI2_CLK_SEL (Bit 8)                   */
#define CRG_COM_CLK_COM_REG_SPI2_CLK_SEL_Msk  (0x100UL)                 /*!< CRG_COM CLK_COM_REG: SPI2_CLK_SEL (Bitfield-Mask: 0x01)     */
#define CRG_COM_CLK_COM_REG_I2C_ENABLE_Pos    (9UL)                     /*!< CRG_COM CLK_COM_REG: I2C_ENABLE (Bit 9)                     */
#define CRG_COM_CLK_COM_REG_I2C_ENABLE_Msk    (0x200UL)                 /*!< CRG_COM CLK_COM_REG: I2C_ENABLE (Bitfield-Mask: 0x01)       */
#define CRG_COM_CLK_COM_REG_I2C_CLK_SEL_Pos   (10UL)                    /*!< CRG_COM CLK_COM_REG: I2C_CLK_SEL (Bit 10)                   */
#define CRG_COM_CLK_COM_REG_I2C_CLK_SEL_Msk   (0x400UL)                 /*!< CRG_COM CLK_COM_REG: I2C_CLK_SEL (Bitfield-Mask: 0x01)      */
#define CRG_COM_CLK_COM_REG_I2C2_ENABLE_Pos   (11UL)                    /*!< CRG_COM CLK_COM_REG: I2C2_ENABLE (Bit 11)                   */
#define CRG_COM_CLK_COM_REG_I2C2_ENABLE_Msk   (0x800UL)                 /*!< CRG_COM CLK_COM_REG: I2C2_ENABLE (Bitfield-Mask: 0x01)      */
#define CRG_COM_CLK_COM_REG_I2C2_CLK_SEL_Pos  (12UL)                    /*!< CRG_COM CLK_COM_REG: I2C2_CLK_SEL (Bit 12)                  */
#define CRG_COM_CLK_COM_REG_I2C2_CLK_SEL_Msk  (0x1000UL)                /*!< CRG_COM CLK_COM_REG: I2C2_CLK_SEL (Bitfield-Mask: 0x01)     */
#define CRG_COM_CLK_COM_REG_SDADC_CLK_SEL_Pos (13UL)                    /*!< CRG_COM CLK_COM_REG: SDADC_CLK_SEL (Bit 13)                 */
#define CRG_COM_CLK_COM_REG_SDADC_CLK_SEL_Msk (0x2000UL)                /*!< CRG_COM CLK_COM_REG: SDADC_CLK_SEL (Bitfield-Mask: 0x01)    */
#define CRG_COM_CLK_COM_REG_SNC_DIV_Pos       (14UL)                    /*!< CRG_COM CLK_COM_REG: SNC_DIV (Bit 14)                       */
#define CRG_COM_CLK_COM_REG_SNC_DIV_Msk       (0xc000UL)                /*!< CRG_COM CLK_COM_REG: SNC_DIV (Bitfield-Mask: 0x03)          */
#define CRG_COM_CLK_COM_REG_LCD_EXT_CLK_SEL_Pos (16UL)                  /*!< CRG_COM CLK_COM_REG: LCD_EXT_CLK_SEL (Bit 16)               */
#define CRG_COM_CLK_COM_REG_LCD_EXT_CLK_SEL_Msk (0x30000UL)             /*!< CRG_COM CLK_COM_REG: LCD_EXT_CLK_SEL (Bitfield-Mask: 0x03)  */
/* ================================================================================ */
/* ================        struct 'CRG_PER' Position & Mask        ================ */
/* ================================================================================ */
/* -----------------------------  CRG_PER_CLK_PER_REG  ---------------------------- */
#define CRG_PER_CLK_PER_REG_GPADC_CLK_SEL_Pos (0UL)                     /*!< CRG_PER CLK_PER_REG: GPADC_CLK_SEL (Bit 0)                  */
#define CRG_PER_CLK_PER_REG_GPADC_CLK_SEL_Msk (0x1UL)                   /*!< CRG_PER CLK_PER_REG: GPADC_CLK_SEL (Bitfield-Mask: 0x01)    */
#define CRG_PER_CLK_PER_REG_LRA_CLK_EN_Pos    (1UL)                     /*!< CRG_PER CLK_PER_REG: LRA_CLK_EN (Bit 1)                     */
#define CRG_PER_CLK_PER_REG_LRA_CLK_EN_Msk    (0x2UL)                   /*!< CRG_PER CLK_PER_REG: LRA_CLK_EN (Bitfield-Mask: 0x01)       */
#define CRG_PER_CLK_PER_REG_MC_CLK_EN_Pos     (2UL)                     /*!< CRG_PER CLK_PER_REG: MC_CLK_EN (Bit 2)                      */
#define CRG_PER_CLK_PER_REG_MC_CLK_EN_Msk     (0x4UL)                   /*!< CRG_PER CLK_PER_REG: MC_CLK_EN (Bitfield-Mask: 0x01)        */
#define CRG_PER_CLK_PER_REG_MC_CLK_DIV_Pos    (3UL)                     /*!< CRG_PER CLK_PER_REG: MC_CLK_DIV (Bit 3)                     */
#define CRG_PER_CLK_PER_REG_MC_CLK_DIV_Msk    (0xf8UL)                  /*!< CRG_PER CLK_PER_REG: MC_CLK_DIV (Bitfield-Mask: 0x1f)       */
#define CRG_PER_CLK_PER_REG_MC_TRIG_DIV_Pos   (8UL)                     /*!< CRG_PER CLK_PER_REG: MC_TRIG_DIV (Bit 8)                    */
#define CRG_PER_CLK_PER_REG_MC_TRIG_DIV_Msk   (0x1f00UL)                /*!< CRG_PER CLK_PER_REG: MC_TRIG_DIV (Bitfield-Mask: 0x1f)      */
/* -----------------------------  CRG_PER_PCM_DIV_REG  ---------------------------- */
#define CRG_PER_PCM_DIV_REG_PCM_DIV_Pos       (0UL)                     /*!< CRG_PER PCM_DIV_REG: PCM_DIV (Bit 0)                        */
#define CRG_PER_PCM_DIV_REG_PCM_DIV_Msk       (0xfffUL)                 /*!< CRG_PER PCM_DIV_REG: PCM_DIV (Bitfield-Mask: 0xfff)         */
#define CRG_PER_PCM_DIV_REG_CLK_PCM_EN_Pos    (12UL)                    /*!< CRG_PER PCM_DIV_REG: CLK_PCM_EN (Bit 12)                    */
#define CRG_PER_PCM_DIV_REG_CLK_PCM_EN_Msk    (0x1000UL)                /*!< CRG_PER PCM_DIV_REG: CLK_PCM_EN (Bitfield-Mask: 0x01)       */
#define CRG_PER_PCM_DIV_REG_PCM_SRC_SEL_Pos   (13UL)                    /*!< CRG_PER PCM_DIV_REG: PCM_SRC_SEL (Bit 13)                   */
#define CRG_PER_PCM_DIV_REG_PCM_SRC_SEL_Msk   (0x2000UL)                /*!< CRG_PER PCM_DIV_REG: PCM_SRC_SEL (Bitfield-Mask: 0x01)      */
/* ----------------------------  CRG_PER_PCM_FDIV_REG  ---------------------------- */
#define CRG_PER_PCM_FDIV_REG_PCM_FDIV_Pos     (0UL)                     /*!< CRG_PER PCM_FDIV_REG: PCM_FDIV (Bit 0)                      */
#define CRG_PER_PCM_FDIV_REG_PCM_FDIV_Msk     (0xffffUL)                /*!< CRG_PER PCM_FDIV_REG: PCM_FDIV (Bitfield-Mask: 0xffff)      */
/* -----------------------------  CRG_PER_PDM_DIV_REG  ---------------------------- */
#define CRG_PER_PDM_DIV_REG_PDM_DIV_Pos       (0UL)                     /*!< CRG_PER PDM_DIV_REG: PDM_DIV (Bit 0)                        */
#define CRG_PER_PDM_DIV_REG_PDM_DIV_Msk       (0xffUL)                  /*!< CRG_PER PDM_DIV_REG: PDM_DIV (Bitfield-Mask: 0xff)          */
#define CRG_PER_PDM_DIV_REG_CLK_PDM_EN_Pos    (8UL)                     /*!< CRG_PER PDM_DIV_REG: CLK_PDM_EN (Bit 8)                     */
#define CRG_PER_PDM_DIV_REG_CLK_PDM_EN_Msk    (0x100UL)                 /*!< CRG_PER PDM_DIV_REG: CLK_PDM_EN (Bitfield-Mask: 0x01)       */
#define CRG_PER_PDM_DIV_REG_PDM_MASTER_MODE_Pos (9UL)                   /*!< CRG_PER PDM_DIV_REG: PDM_MASTER_MODE (Bit 9)                */
#define CRG_PER_PDM_DIV_REG_PDM_MASTER_MODE_Msk (0x200UL)               /*!< CRG_PER PDM_DIV_REG: PDM_MASTER_MODE (Bitfield-Mask: 0x01)  */
/* -----------------------------  CRG_PER_SRC_DIV_REG  ---------------------------- */
#define CRG_PER_SRC_DIV_REG_SRC_DIV_Pos       (0UL)                     /*!< CRG_PER SRC_DIV_REG: SRC_DIV (Bit 0)                        */
#define CRG_PER_SRC_DIV_REG_SRC_DIV_Msk       (0xffUL)                  /*!< CRG_PER SRC_DIV_REG: SRC_DIV (Bitfield-Mask: 0xff)          */
#define CRG_PER_SRC_DIV_REG_CLK_SRC_EN_Pos    (8UL)                     /*!< CRG_PER SRC_DIV_REG: CLK_SRC_EN (Bit 8)                     */
#define CRG_PER_SRC_DIV_REG_CLK_SRC_EN_Msk    (0x100UL)                 /*!< CRG_PER SRC_DIV_REG: CLK_SRC_EN (Bitfield-Mask: 0x01)       */
/* --------------------------  CRG_PER_PERRAM_CONFIG_REG  ------------------------- */
#define CRG_PER_PERRAM_CONFIG_REG_MC_RAM_MS_Pos (0UL)                   /*!< CRG_PER PERRAM_CONFIG_REG: MC_RAM_MS (Bit 0)                */
#define CRG_PER_PERRAM_CONFIG_REG_MC_RAM_MS_Msk (0xfUL)                 /*!< CRG_PER PERRAM_CONFIG_REG: MC_RAM_MS (Bitfield-Mask: 0x0f)  */
#define CRG_PER_PERRAM_CONFIG_REG_MC_RAM_MSE_Pos (4UL)                  /*!< CRG_PER PERRAM_CONFIG_REG: MC_RAM_MSE (Bit 4)               */
#define CRG_PER_PERRAM_CONFIG_REG_MC_RAM_MSE_Msk (0x10UL)               /*!< CRG_PER PERRAM_CONFIG_REG: MC_RAM_MSE (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================        struct 'CRG_SYS' Position & Mask        ================ */
/* ================================================================================ */
/* -----------------------------  CRG_SYS_CLK_SYS_REG  ---------------------------- */
#define CRG_SYS_CLK_SYS_REG_LCD_ENABLE_Pos    (0UL)                     /*!< CRG_SYS CLK_SYS_REG: LCD_ENABLE (Bit 0)                     */
#define CRG_SYS_CLK_SYS_REG_LCD_ENABLE_Msk    (0x1UL)                   /*!< CRG_SYS CLK_SYS_REG: LCD_ENABLE (Bitfield-Mask: 0x01)       */
#define CRG_SYS_CLK_SYS_REG_LCD_CLK_SEL_Pos   (1UL)                     /*!< CRG_SYS CLK_SYS_REG: LCD_CLK_SEL (Bit 1)                    */
#define CRG_SYS_CLK_SYS_REG_LCD_CLK_SEL_Msk   (0x2UL)                   /*!< CRG_SYS CLK_SYS_REG: LCD_CLK_SEL (Bitfield-Mask: 0x01)      */
#define CRG_SYS_CLK_SYS_REG_LCD_RESET_REQ_Pos (4UL)                     /*!< CRG_SYS CLK_SYS_REG: LCD_RESET_REQ (Bit 4)                  */
#define CRG_SYS_CLK_SYS_REG_LCD_RESET_REQ_Msk (0x10UL)                  /*!< CRG_SYS CLK_SYS_REG: LCD_RESET_REQ (Bitfield-Mask: 0x01)    */
#define CRG_SYS_CLK_SYS_REG_CLK_CHG_EN_Pos    (5UL)                     /*!< CRG_SYS CLK_SYS_REG: CLK_CHG_EN (Bit 5)                     */
#define CRG_SYS_CLK_SYS_REG_CLK_CHG_EN_Msk    (0x20UL)                  /*!< CRG_SYS CLK_SYS_REG: CLK_CHG_EN (Bitfield-Mask: 0x01)       */
/* ----------------------------  CRG_SYS_BATCHECK_REG  ---------------------------- */
#define CRG_SYS_BATCHECK_REG_BATCHECK_TRIM_Pos (0UL)                    /*!< CRG_SYS BATCHECK_REG: BATCHECK_TRIM (Bit 0)                 */
#define CRG_SYS_BATCHECK_REG_BATCHECK_TRIM_Msk (0xfUL)                  /*!< CRG_SYS BATCHECK_REG: BATCHECK_TRIM (Bitfield-Mask: 0x0f)   */
#define CRG_SYS_BATCHECK_REG_BATCHECK_ILOAD_Pos (4UL)                   /*!< CRG_SYS BATCHECK_REG: BATCHECK_ILOAD (Bit 4)                */
#define CRG_SYS_BATCHECK_REG_BATCHECK_ILOAD_Msk (0x70UL)                /*!< CRG_SYS BATCHECK_REG: BATCHECK_ILOAD (Bitfield-Mask: 0x07)  */
#define CRG_SYS_BATCHECK_REG_BATCHECK_LOAD_ENABLE_Pos (7UL)             /*!< CRG_SYS BATCHECK_REG: BATCHECK_LOAD_ENABLE (Bit 7)          */
#define CRG_SYS_BATCHECK_REG_BATCHECK_LOAD_ENABLE_Msk (0x80UL)          /*!< CRG_SYS BATCHECK_REG: BATCHECK_LOAD_ENABLE (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_SYS_SYSRAM_CONFIG_REG  ------------------------- */
#define CRG_SYS_SYSRAM_CONFIG_REG_M31RAM_MS_Pos (0UL)                   /*!< CRG_SYS SYSRAM_CONFIG_REG: M31RAM_MS (Bit 0)                */
#define CRG_SYS_SYSRAM_CONFIG_REG_M31RAM_MS_Msk (0xfUL)                 /*!< CRG_SYS SYSRAM_CONFIG_REG: M31RAM_MS (Bitfield-Mask: 0x0f)  */
#define CRG_SYS_SYSRAM_CONFIG_REG_M31RAM_MSE_Pos (4UL)                  /*!< CRG_SYS SYSRAM_CONFIG_REG: M31RAM_MSE (Bit 4)               */
#define CRG_SYS_SYSRAM_CONFIG_REG_M31RAM_MSE_Msk (0x10UL)               /*!< CRG_SYS SYSRAM_CONFIG_REG: M31RAM_MSE (Bitfield-Mask: 0x01) */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_DST_Pos (5UL)                /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_DST (Bit 5)             */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_DST_Msk (0x20UL)             /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_DST (Bitfield-Mask: 0x01) */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_MARGIN_Pos (6UL)             /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_MARGIN (Bit 6)          */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_MARGIN_Msk (0xc0UL)          /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_MARGIN (Bitfield-Mask: 0x03) */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_LPMX_Pos (8UL)               /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_LPMX (Bit 8)            */
#define CRG_SYS_SYSRAM_CONFIG_REG_CACHERAM_LPMX_Msk (0x100UL)           /*!< CRG_SYS SYSRAM_CONFIG_REG: CACHERAM_LPMX (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================        struct 'CRG_TOP' Position & Mask        ================ */
/* ================================================================================ */
/* ----------------------------  CRG_TOP_CLK_AMBA_REG  ---------------------------- */
#define CRG_TOP_CLK_AMBA_REG_HCLK_DIV_Pos     (0UL)                     /*!< CRG_TOP CLK_AMBA_REG: HCLK_DIV (Bit 0)                      */
#define CRG_TOP_CLK_AMBA_REG_HCLK_DIV_Msk     (0x7UL)                   /*!< CRG_TOP CLK_AMBA_REG: HCLK_DIV (Bitfield-Mask: 0x07)        */
#define CRG_TOP_CLK_AMBA_REG_PCLK_DIV_Pos     (4UL)                     /*!< CRG_TOP CLK_AMBA_REG: PCLK_DIV (Bit 4)                      */
#define CRG_TOP_CLK_AMBA_REG_PCLK_DIV_Msk     (0x30UL)                  /*!< CRG_TOP CLK_AMBA_REG: PCLK_DIV (Bitfield-Mask: 0x03)        */
#define CRG_TOP_CLK_AMBA_REG_AES_CLK_ENABLE_Pos (6UL)                   /*!< CRG_TOP CLK_AMBA_REG: AES_CLK_ENABLE (Bit 6)                */
#define CRG_TOP_CLK_AMBA_REG_AES_CLK_ENABLE_Msk (0x40UL)                /*!< CRG_TOP CLK_AMBA_REG: AES_CLK_ENABLE (Bitfield-Mask: 0x01)  */
#define CRG_TOP_CLK_AMBA_REG_ECC_CLK_ENABLE_Pos (7UL)                   /*!< CRG_TOP CLK_AMBA_REG: ECC_CLK_ENABLE (Bit 7)                */
#define CRG_TOP_CLK_AMBA_REG_ECC_CLK_ENABLE_Msk (0x80UL)                /*!< CRG_TOP CLK_AMBA_REG: ECC_CLK_ENABLE (Bitfield-Mask: 0x01)  */
#define CRG_TOP_CLK_AMBA_REG_TRNG_CLK_ENABLE_Pos (8UL)                  /*!< CRG_TOP CLK_AMBA_REG: TRNG_CLK_ENABLE (Bit 8)               */
#define CRG_TOP_CLK_AMBA_REG_TRNG_CLK_ENABLE_Msk (0x100UL)              /*!< CRG_TOP CLK_AMBA_REG: TRNG_CLK_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_AMBA_REG_OTP_ENABLE_Pos   (9UL)                     /*!< CRG_TOP CLK_AMBA_REG: OTP_ENABLE (Bit 9)                    */
#define CRG_TOP_CLK_AMBA_REG_OTP_ENABLE_Msk   (0x200UL)                 /*!< CRG_TOP CLK_AMBA_REG: OTP_ENABLE (Bitfield-Mask: 0x01)      */
#define CRG_TOP_CLK_AMBA_REG_QSPI_DIV_Pos     (10UL)                    /*!< CRG_TOP CLK_AMBA_REG: QSPI_DIV (Bit 10)                     */
#define CRG_TOP_CLK_AMBA_REG_QSPI_DIV_Msk     (0xc00UL)                 /*!< CRG_TOP CLK_AMBA_REG: QSPI_DIV (Bitfield-Mask: 0x03)        */
#define CRG_TOP_CLK_AMBA_REG_QSPI_ENABLE_Pos  (12UL)                    /*!< CRG_TOP CLK_AMBA_REG: QSPI_ENABLE (Bit 12)                  */
#define CRG_TOP_CLK_AMBA_REG_QSPI_ENABLE_Msk  (0x1000UL)                /*!< CRG_TOP CLK_AMBA_REG: QSPI_ENABLE (Bitfield-Mask: 0x01)     */
#define CRG_TOP_CLK_AMBA_REG_QSPI2_DIV_Pos    (13UL)                    /*!< CRG_TOP CLK_AMBA_REG: QSPI2_DIV (Bit 13)                    */
#define CRG_TOP_CLK_AMBA_REG_QSPI2_DIV_Msk    (0x6000UL)                /*!< CRG_TOP CLK_AMBA_REG: QSPI2_DIV (Bitfield-Mask: 0x03)       */
#define CRG_TOP_CLK_AMBA_REG_QSPI2_ENABLE_Pos (15UL)                    /*!< CRG_TOP CLK_AMBA_REG: QSPI2_ENABLE (Bit 15)                 */
#define CRG_TOP_CLK_AMBA_REG_QSPI2_ENABLE_Msk (0x8000UL)                /*!< CRG_TOP CLK_AMBA_REG: QSPI2_ENABLE (Bitfield-Mask: 0x01)    */
/* ----------------------------  CRG_TOP_CLK_RADIO_REG  --------------------------- */
#define CRG_TOP_CLK_RADIO_REG_CMAC_DIV_Pos    (0UL)                     /*!< CRG_TOP CLK_RADIO_REG: CMAC_DIV (Bit 0)                     */
#define CRG_TOP_CLK_RADIO_REG_CMAC_DIV_Msk    (0x3UL)                   /*!< CRG_TOP CLK_RADIO_REG: CMAC_DIV (Bitfield-Mask: 0x03)       */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_ENABLE_Pos (2UL)                 /*!< CRG_TOP CLK_RADIO_REG: CMAC_CLK_ENABLE (Bit 2)              */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_ENABLE_Msk (0x4UL)               /*!< CRG_TOP CLK_RADIO_REG: CMAC_CLK_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_SEL_Pos (3UL)                    /*!< CRG_TOP CLK_RADIO_REG: CMAC_CLK_SEL (Bit 3)                 */
#define CRG_TOP_CLK_RADIO_REG_CMAC_CLK_SEL_Msk (0x8UL)                  /*!< CRG_TOP CLK_RADIO_REG: CMAC_CLK_SEL (Bitfield-Mask: 0x01)   */
#define CRG_TOP_CLK_RADIO_REG_CMAC_SYNCH_RESET_Pos (4UL)                /*!< CRG_TOP CLK_RADIO_REG: CMAC_SYNCH_RESET (Bit 4)             */
#define CRG_TOP_CLK_RADIO_REG_CMAC_SYNCH_RESET_Msk (0x10UL)             /*!< CRG_TOP CLK_RADIO_REG: CMAC_SYNCH_RESET (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_RADIO_REG_RFCU_ENABLE_Pos (5UL)                     /*!< CRG_TOP CLK_RADIO_REG: RFCU_ENABLE (Bit 5)                  */
#define CRG_TOP_CLK_RADIO_REG_RFCU_ENABLE_Msk (0x20UL)                  /*!< CRG_TOP CLK_RADIO_REG: RFCU_ENABLE (Bitfield-Mask: 0x01)    */
/* ----------------------------  CRG_TOP_CLK_CTRL_REG  ---------------------------- */
#define CRG_TOP_CLK_CTRL_REG_SYS_CLK_SEL_Pos  (0UL)                     /*!< CRG_TOP CLK_CTRL_REG: SYS_CLK_SEL (Bit 0)                   */
#define CRG_TOP_CLK_CTRL_REG_SYS_CLK_SEL_Msk  (0x3UL)                   /*!< CRG_TOP CLK_CTRL_REG: SYS_CLK_SEL (Bitfield-Mask: 0x03)     */
#define CRG_TOP_CLK_CTRL_REG_LP_CLK_SEL_Pos   (2UL)                     /*!< CRG_TOP CLK_CTRL_REG: LP_CLK_SEL (Bit 2)                    */
#define CRG_TOP_CLK_CTRL_REG_LP_CLK_SEL_Msk   (0xcUL)                   /*!< CRG_TOP CLK_CTRL_REG: LP_CLK_SEL (Bitfield-Mask: 0x03)      */
#define CRG_TOP_CLK_CTRL_REG_USB_CLK_SRC_Pos  (4UL)                     /*!< CRG_TOP CLK_CTRL_REG: USB_CLK_SRC (Bit 4)                   */
#define CRG_TOP_CLK_CTRL_REG_USB_CLK_SRC_Msk  (0x10UL)                  /*!< CRG_TOP CLK_CTRL_REG: USB_CLK_SRC (Bitfield-Mask: 0x01)     */
#define CRG_TOP_CLK_CTRL_REG_PLL_DIV2_Pos     (5UL)                     /*!< CRG_TOP CLK_CTRL_REG: PLL_DIV2 (Bit 5)                      */
#define CRG_TOP_CLK_CTRL_REG_PLL_DIV2_Msk     (0x20UL)                  /*!< CRG_TOP CLK_CTRL_REG: PLL_DIV2 (Bitfield-Mask: 0x01)        */
#define CRG_TOP_CLK_CTRL_REG_CLK_WDOG_ENABLE_Pos (6UL)                  /*!< CRG_TOP CLK_CTRL_REG: CLK_WDOG_ENABLE (Bit 6)               */
#define CRG_TOP_CLK_CTRL_REG_CLK_WDOG_ENABLE_Msk (0x40UL)               /*!< CRG_TOP CLK_CTRL_REG: CLK_WDOG_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_LP_CLK_Pos (12UL)               /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_LP_CLK (Bit 12)            */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_LP_CLK_Msk (0x1000UL)           /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_LP_CLK (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RC32M_Pos (13UL)                /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_RC32M (Bit 13)             */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_RC32M_Msk (0x2000UL)            /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_RC32M (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_XTAL32M_Pos (14UL)              /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_XTAL32M (Bit 14)           */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_XTAL32M_Msk (0x4000UL)          /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_XTAL32M (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_PLL96M_Pos (15UL)               /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_PLL96M (Bit 15)            */
#define CRG_TOP_CLK_CTRL_REG_RUNNING_AT_PLL96M_Msk (0x8000UL)           /*!< CRG_TOP CLK_CTRL_REG: RUNNING_AT_PLL96M (Bitfield-Mask: 0x01) */
/* -----------------------------  CRG_TOP_CLK_TMR_REG  ---------------------------- */
#define CRG_TOP_CLK_TMR_REG_WAKEUPCT_ENABLE_Pos (0UL)                   /*!< CRG_TOP CLK_TMR_REG: WAKEUPCT_ENABLE (Bit 0)                */
#define CRG_TOP_CLK_TMR_REG_WAKEUPCT_ENABLE_Msk (0x1UL)                 /*!< CRG_TOP CLK_TMR_REG: WAKEUPCT_ENABLE (Bitfield-Mask: 0x01)  */
#define CRG_TOP_CLK_TMR_REG_TMR_PWM_AON_MODE_Pos (1UL)                  /*!< CRG_TOP CLK_TMR_REG: TMR_PWM_AON_MODE (Bit 1)               */
#define CRG_TOP_CLK_TMR_REG_TMR_PWM_AON_MODE_Msk (0x2UL)                /*!< CRG_TOP CLK_TMR_REG: TMR_PWM_AON_MODE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_TMR_REG_TMR2_PWM_AON_MODE_Pos (2UL)                 /*!< CRG_TOP CLK_TMR_REG: TMR2_PWM_AON_MODE (Bit 2)              */
#define CRG_TOP_CLK_TMR_REG_TMR2_PWM_AON_MODE_Msk (0x4UL)               /*!< CRG_TOP CLK_TMR_REG: TMR2_PWM_AON_MODE (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_TOP_CLK_SWITCH2XTAL_REG  ------------------------ */
#define CRG_TOP_CLK_SWITCH2XTAL_REG_SWITCH2XTAL_Pos (0UL)               /*!< CRG_TOP CLK_SWITCH2XTAL_REG: SWITCH2XTAL (Bit 0)            */
#define CRG_TOP_CLK_SWITCH2XTAL_REG_SWITCH2XTAL_Msk (0x1UL)             /*!< CRG_TOP CLK_SWITCH2XTAL_REG: SWITCH2XTAL (Bitfield-Mask: 0x01) */
/* ----------------------------  CRG_TOP_PMU_CTRL_REG  ---------------------------- */
#define CRG_TOP_PMU_CTRL_REG_PERIPH_SLEEP_Pos (0UL)                     /*!< CRG_TOP PMU_CTRL_REG: PERIPH_SLEEP (Bit 0)                  */
#define CRG_TOP_PMU_CTRL_REG_PERIPH_SLEEP_Msk (0x1UL)                   /*!< CRG_TOP PMU_CTRL_REG: PERIPH_SLEEP (Bitfield-Mask: 0x01)    */
#define CRG_TOP_PMU_CTRL_REG_RADIO_SLEEP_Pos  (1UL)                     /*!< CRG_TOP PMU_CTRL_REG: RADIO_SLEEP (Bit 1)                   */
#define CRG_TOP_PMU_CTRL_REG_RADIO_SLEEP_Msk  (0x2UL)                   /*!< CRG_TOP PMU_CTRL_REG: RADIO_SLEEP (Bitfield-Mask: 0x01)     */
#define CRG_TOP_PMU_CTRL_REG_TIM_SLEEP_Pos    (2UL)                     /*!< CRG_TOP PMU_CTRL_REG: TIM_SLEEP (Bit 2)                     */
#define CRG_TOP_PMU_CTRL_REG_TIM_SLEEP_Msk    (0x4UL)                   /*!< CRG_TOP PMU_CTRL_REG: TIM_SLEEP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_PMU_CTRL_REG_COM_SLEEP_Pos    (3UL)                     /*!< CRG_TOP PMU_CTRL_REG: COM_SLEEP (Bit 3)                     */
#define CRG_TOP_PMU_CTRL_REG_COM_SLEEP_Msk    (0x8UL)                   /*!< CRG_TOP PMU_CTRL_REG: COM_SLEEP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_PMU_CTRL_REG_MAP_BANDGAP_EN_Pos (4UL)                   /*!< CRG_TOP PMU_CTRL_REG: MAP_BANDGAP_EN (Bit 4)                */
#define CRG_TOP_PMU_CTRL_REG_MAP_BANDGAP_EN_Msk (0x10UL)                /*!< CRG_TOP PMU_CTRL_REG: MAP_BANDGAP_EN (Bitfield-Mask: 0x01)  */
#define CRG_TOP_PMU_CTRL_REG_RESET_ON_WAKEUP_Pos (5UL)                  /*!< CRG_TOP PMU_CTRL_REG: RESET_ON_WAKEUP (Bit 5)               */
#define CRG_TOP_PMU_CTRL_REG_RESET_ON_WAKEUP_Msk (0x20UL)               /*!< CRG_TOP PMU_CTRL_REG: RESET_ON_WAKEUP (Bitfield-Mask: 0x01) */
#define CRG_TOP_PMU_CTRL_REG_SYS_SLEEP_Pos    (6UL)                     /*!< CRG_TOP PMU_CTRL_REG: SYS_SLEEP (Bit 6)                     */
#define CRG_TOP_PMU_CTRL_REG_SYS_SLEEP_Msk    (0x40UL)                  /*!< CRG_TOP PMU_CTRL_REG: SYS_SLEEP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_CACHE_Pos (7UL)                     /*!< CRG_TOP PMU_CTRL_REG: RETAIN_CACHE (Bit 7)                  */
#define CRG_TOP_PMU_CTRL_REG_RETAIN_CACHE_Msk (0x80UL)                  /*!< CRG_TOP PMU_CTRL_REG: RETAIN_CACHE (Bitfield-Mask: 0x01)    */
#define CRG_TOP_PMU_CTRL_REG_ENABLE_CLKLESS_Pos (8UL)                   /*!< CRG_TOP PMU_CTRL_REG: ENABLE_CLKLESS (Bit 8)                */
#define CRG_TOP_PMU_CTRL_REG_ENABLE_CLKLESS_Msk (0x100UL)               /*!< CRG_TOP PMU_CTRL_REG: ENABLE_CLKLESS (Bitfield-Mask: 0x01)  */
/* ----------------------------  CRG_TOP_SYS_CTRL_REG  ---------------------------- */
#define CRG_TOP_SYS_CTRL_REG_REMAP_ADR0_Pos   (0UL)                     /*!< CRG_TOP SYS_CTRL_REG: REMAP_ADR0 (Bit 0)                    */
#define CRG_TOP_SYS_CTRL_REG_REMAP_ADR0_Msk   (0x7UL)                   /*!< CRG_TOP SYS_CTRL_REG: REMAP_ADR0 (Bitfield-Mask: 0x07)      */
#define CRG_TOP_SYS_CTRL_REG_REMAP_INTVECT_Pos (3UL)                    /*!< CRG_TOP SYS_CTRL_REG: REMAP_INTVECT (Bit 3)                 */
#define CRG_TOP_SYS_CTRL_REG_REMAP_INTVECT_Msk (0x8UL)                  /*!< CRG_TOP SYS_CTRL_REG: REMAP_INTVECT (Bitfield-Mask: 0x01)   */
#define CRG_TOP_SYS_CTRL_REG_QSPI_INIT_Pos    (4UL)                     /*!< CRG_TOP SYS_CTRL_REG: QSPI_INIT (Bit 4)                     */
#define CRG_TOP_SYS_CTRL_REG_QSPI_INIT_Msk    (0x10UL)                  /*!< CRG_TOP SYS_CTRL_REG: QSPI_INIT (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_CTRL_REG_CMAC_DEBUGGER_ENABLE_Pos (6UL)             /*!< CRG_TOP SYS_CTRL_REG: CMAC_DEBUGGER_ENABLE (Bit 6)          */
#define CRG_TOP_SYS_CTRL_REG_CMAC_DEBUGGER_ENABLE_Msk (0x40UL)          /*!< CRG_TOP SYS_CTRL_REG: CMAC_DEBUGGER_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SYS_CTRL_REG_DEBUGGER_ENABLE_Pos (7UL)                  /*!< CRG_TOP SYS_CTRL_REG: DEBUGGER_ENABLE (Bit 7)               */
#define CRG_TOP_SYS_CTRL_REG_DEBUGGER_ENABLE_Msk (0x80UL)               /*!< CRG_TOP SYS_CTRL_REG: DEBUGGER_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SYS_CTRL_REG_DRA_OFF_Pos      (8UL)                     /*!< CRG_TOP SYS_CTRL_REG: DRA_OFF (Bit 8)                       */
#define CRG_TOP_SYS_CTRL_REG_DRA_OFF_Msk      (0x100UL)                 /*!< CRG_TOP SYS_CTRL_REG: DRA_OFF (Bitfield-Mask: 0x01)         */
#define CRG_TOP_SYS_CTRL_REG_TIMEOUT_DISABLE_Pos (9UL)                  /*!< CRG_TOP SYS_CTRL_REG: TIMEOUT_DISABLE (Bit 9)               */
#define CRG_TOP_SYS_CTRL_REG_TIMEOUT_DISABLE_Msk (0x200UL)              /*!< CRG_TOP SYS_CTRL_REG: TIMEOUT_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SYS_CTRL_REG_CACHERAM_MUX_Pos (10UL)                    /*!< CRG_TOP SYS_CTRL_REG: CACHERAM_MUX (Bit 10)                 */
#define CRG_TOP_SYS_CTRL_REG_CACHERAM_MUX_Msk (0x400UL)                 /*!< CRG_TOP SYS_CTRL_REG: CACHERAM_MUX (Bitfield-Mask: 0x01)    */
#define CRG_TOP_SYS_CTRL_REG_SW_RESET_Pos     (15UL)                    /*!< CRG_TOP SYS_CTRL_REG: SW_RESET (Bit 15)                     */
#define CRG_TOP_SYS_CTRL_REG_SW_RESET_Msk     (0x8000UL)                /*!< CRG_TOP SYS_CTRL_REG: SW_RESET (Bitfield-Mask: 0x01)        */
/* ----------------------------  CRG_TOP_SYS_STAT_REG  ---------------------------- */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_DOWN_Pos  (0UL)                     /*!< CRG_TOP SYS_STAT_REG: RAD_IS_DOWN (Bit 0)                   */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_DOWN_Msk  (0x1UL)                   /*!< CRG_TOP SYS_STAT_REG: RAD_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_UP_Pos    (1UL)                     /*!< CRG_TOP SYS_STAT_REG: RAD_IS_UP (Bit 1)                     */
#define CRG_TOP_SYS_STAT_REG_RAD_IS_UP_Msk    (0x2UL)                   /*!< CRG_TOP SYS_STAT_REG: RAD_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_PER_IS_DOWN_Pos  (2UL)                     /*!< CRG_TOP SYS_STAT_REG: PER_IS_DOWN (Bit 2)                   */
#define CRG_TOP_SYS_STAT_REG_PER_IS_DOWN_Msk  (0x4UL)                   /*!< CRG_TOP SYS_STAT_REG: PER_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_PER_IS_UP_Pos    (3UL)                     /*!< CRG_TOP SYS_STAT_REG: PER_IS_UP (Bit 3)                     */
#define CRG_TOP_SYS_STAT_REG_PER_IS_UP_Msk    (0x8UL)                   /*!< CRG_TOP SYS_STAT_REG: PER_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_DOWN_Pos  (4UL)                     /*!< CRG_TOP SYS_STAT_REG: SYS_IS_DOWN (Bit 4)                   */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_DOWN_Msk  (0x10UL)                  /*!< CRG_TOP SYS_STAT_REG: SYS_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_UP_Pos    (5UL)                     /*!< CRG_TOP SYS_STAT_REG: SYS_IS_UP (Bit 5)                     */
#define CRG_TOP_SYS_STAT_REG_SYS_IS_UP_Msk    (0x20UL)                  /*!< CRG_TOP SYS_STAT_REG: SYS_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_DOWN_Pos  (6UL)                     /*!< CRG_TOP SYS_STAT_REG: MEM_IS_DOWN (Bit 6)                   */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_DOWN_Msk  (0x40UL)                  /*!< CRG_TOP SYS_STAT_REG: MEM_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_UP_Pos    (7UL)                     /*!< CRG_TOP SYS_STAT_REG: MEM_IS_UP (Bit 7)                     */
#define CRG_TOP_SYS_STAT_REG_MEM_IS_UP_Msk    (0x80UL)                  /*!< CRG_TOP SYS_STAT_REG: MEM_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_DOWN_Pos  (8UL)                     /*!< CRG_TOP SYS_STAT_REG: TIM_IS_DOWN (Bit 8)                   */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_DOWN_Msk  (0x100UL)                 /*!< CRG_TOP SYS_STAT_REG: TIM_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_UP_Pos    (9UL)                     /*!< CRG_TOP SYS_STAT_REG: TIM_IS_UP (Bit 9)                     */
#define CRG_TOP_SYS_STAT_REG_TIM_IS_UP_Msk    (0x200UL)                 /*!< CRG_TOP SYS_STAT_REG: TIM_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_COM_IS_DOWN_Pos  (10UL)                    /*!< CRG_TOP SYS_STAT_REG: COM_IS_DOWN (Bit 10)                  */
#define CRG_TOP_SYS_STAT_REG_COM_IS_DOWN_Msk  (0x400UL)                 /*!< CRG_TOP SYS_STAT_REG: COM_IS_DOWN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_SYS_STAT_REG_COM_IS_UP_Pos    (11UL)                    /*!< CRG_TOP SYS_STAT_REG: COM_IS_UP (Bit 11)                    */
#define CRG_TOP_SYS_STAT_REG_COM_IS_UP_Msk    (0x800UL)                 /*!< CRG_TOP SYS_STAT_REG: COM_IS_UP (Bitfield-Mask: 0x01)       */
#define CRG_TOP_SYS_STAT_REG_DBG_IS_ACTIVE_Pos (12UL)                   /*!< CRG_TOP SYS_STAT_REG: DBG_IS_ACTIVE (Bit 12)                */
#define CRG_TOP_SYS_STAT_REG_DBG_IS_ACTIVE_Msk (0x1000UL)               /*!< CRG_TOP SYS_STAT_REG: DBG_IS_ACTIVE (Bitfield-Mask: 0x01)   */
#define CRG_TOP_SYS_STAT_REG_POWER_IS_UP_Pos  (13UL)                    /*!< CRG_TOP SYS_STAT_REG: POWER_IS_UP (Bit 13)                  */
#define CRG_TOP_SYS_STAT_REG_POWER_IS_UP_Msk  (0x2000UL)                /*!< CRG_TOP SYS_STAT_REG: POWER_IS_UP (Bitfield-Mask: 0x01)     */
/* ----------------------------  CRG_TOP_CLK_RC32K_REG  --------------------------- */
#define CRG_TOP_CLK_RC32K_REG_RC32K_ENABLE_Pos (0UL)                    /*!< CRG_TOP CLK_RC32K_REG: RC32K_ENABLE (Bit 0)                 */
#define CRG_TOP_CLK_RC32K_REG_RC32K_ENABLE_Msk (0x1UL)                  /*!< CRG_TOP CLK_RC32K_REG: RC32K_ENABLE (Bitfield-Mask: 0x01)   */
#define CRG_TOP_CLK_RC32K_REG_RC32K_TRIM_Pos  (1UL)                     /*!< CRG_TOP CLK_RC32K_REG: RC32K_TRIM (Bit 1)                   */
#define CRG_TOP_CLK_RC32K_REG_RC32K_TRIM_Msk  (0x1eUL)                  /*!< CRG_TOP CLK_RC32K_REG: RC32K_TRIM (Bitfield-Mask: 0x0f)     */
/* ---------------------------  CRG_TOP_CLK_XTAL32K_REG  -------------------------- */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_ENABLE_Pos (0UL)                /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_ENABLE (Bit 0)             */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_ENABLE_Msk (0x1UL)              /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_RBIAS_Pos (1UL)                 /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_RBIAS (Bit 1)              */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_RBIAS_Msk (0x6UL)               /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_RBIAS (Bitfield-Mask: 0x03) */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_CUR_Pos (3UL)                   /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_CUR (Bit 3)                */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_CUR_Msk (0x78UL)                /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_CUR (Bitfield-Mask: 0x0f)  */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_AMPREG_Pos (7UL)        /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_DISABLE_AMPREG (Bit 7)     */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_AMPREG_Msk (0x80UL)     /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_DISABLE_AMPREG (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_XTAL1_BIAS_DISABLE_Pos (8UL)    /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_XTAL1_BIAS_DISABLE (Bit 8) */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_XTAL1_BIAS_DISABLE_Msk (0x100UL) /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_XTAL1_BIAS_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_OUTPUT_Pos (9UL)        /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_DISABLE_OUTPUT (Bit 9)     */
#define CRG_TOP_CLK_XTAL32K_REG_XTAL32K_DISABLE_OUTPUT_Msk (0x200UL)    /*!< CRG_TOP CLK_XTAL32K_REG: XTAL32K_DISABLE_OUTPUT (Bitfield-Mask: 0x01) */
/* ----------------------------  CRG_TOP_CLK_RC32M_REG  --------------------------- */
#define CRG_TOP_CLK_RC32M_REG_RC32M_ENABLE_Pos (0UL)                    /*!< CRG_TOP CLK_RC32M_REG: RC32M_ENABLE (Bit 0)                 */
#define CRG_TOP_CLK_RC32M_REG_RC32M_ENABLE_Msk (0x1UL)                  /*!< CRG_TOP CLK_RC32M_REG: RC32M_ENABLE (Bitfield-Mask: 0x01)   */
#define CRG_TOP_CLK_RC32M_REG_RC32M_BIAS_Pos  (1UL)                     /*!< CRG_TOP CLK_RC32M_REG: RC32M_BIAS (Bit 1)                   */
#define CRG_TOP_CLK_RC32M_REG_RC32M_BIAS_Msk  (0x1eUL)                  /*!< CRG_TOP CLK_RC32M_REG: RC32M_BIAS (Bitfield-Mask: 0x0f)     */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DTC_Pos (5UL)                  /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DTC (Bit 5)               */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DTC_Msk (0x1e0UL)              /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DTC (Bitfield-Mask: 0x0f) */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DTCF_Pos (9UL)                 /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DTCF (Bit 9)              */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DTCF_Msk (0xe00UL)             /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DTCF (Bitfield-Mask: 0x07) */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DEL_Pos (12UL)                 /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DEL (Bit 12)              */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_DEL_Msk (0xff000UL)            /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_DEL (Bitfield-Mask: 0xff) */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_RANGE_Pos (20UL)               /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_RANGE (Bit 20)            */
#define CRG_TOP_CLK_RC32M_REG_RC32M_INIT_RANGE_Msk (0x300000UL)         /*!< CRG_TOP CLK_RC32M_REG: RC32M_INIT_RANGE (Bitfield-Mask: 0x03) */
#define CRG_TOP_CLK_RC32M_REG_RC32M_STARTUP_DISABLE_Pos (25UL)          /*!< CRG_TOP CLK_RC32M_REG: RC32M_STARTUP_DISABLE (Bit 25)       */
#define CRG_TOP_CLK_RC32M_REG_RC32M_STARTUP_DISABLE_Msk (0x2000000UL)   /*!< CRG_TOP CLK_RC32M_REG: RC32M_STARTUP_DISABLE (Bitfield-Mask: 0x01) */
/* -----------------------------  CRG_TOP_CLK_RCX_REG  ---------------------------- */
#define CRG_TOP_CLK_RCX_REG_RCX_ENABLE_Pos    (0UL)                     /*!< CRG_TOP CLK_RCX_REG: RCX_ENABLE (Bit 0)                     */
#define CRG_TOP_CLK_RCX_REG_RCX_ENABLE_Msk    (0x1UL)                   /*!< CRG_TOP CLK_RCX_REG: RCX_ENABLE (Bitfield-Mask: 0x01)       */
#define CRG_TOP_CLK_RCX_REG_RCX_RADJUST_Pos   (1UL)                     /*!< CRG_TOP CLK_RCX_REG: RCX_RADJUST (Bit 1)                    */
#define CRG_TOP_CLK_RCX_REG_RCX_RADJUST_Msk   (0x2UL)                   /*!< CRG_TOP CLK_RCX_REG: RCX_RADJUST (Bitfield-Mask: 0x01)      */
#define CRG_TOP_CLK_RCX_REG_RCX_CADJUST_Pos   (2UL)                     /*!< CRG_TOP CLK_RCX_REG: RCX_CADJUST (Bit 2)                    */
#define CRG_TOP_CLK_RCX_REG_RCX_CADJUST_Msk   (0x7cUL)                  /*!< CRG_TOP CLK_RCX_REG: RCX_CADJUST (Bitfield-Mask: 0x1f)      */
#define CRG_TOP_CLK_RCX_REG_RCX_C0_Pos        (7UL)                     /*!< CRG_TOP CLK_RCX_REG: RCX_C0 (Bit 7)                         */
#define CRG_TOP_CLK_RCX_REG_RCX_C0_Msk        (0x80UL)                  /*!< CRG_TOP CLK_RCX_REG: RCX_C0 (Bitfield-Mask: 0x01)           */
#define CRG_TOP_CLK_RCX_REG_RCX_BIAS_Pos      (8UL)                     /*!< CRG_TOP CLK_RCX_REG: RCX_BIAS (Bit 8)                       */
#define CRG_TOP_CLK_RCX_REG_RCX_BIAS_Msk      (0xf00UL)                 /*!< CRG_TOP CLK_RCX_REG: RCX_BIAS (Bitfield-Mask: 0x0f)         */
/* ---------------------------  CRG_TOP_CLK_RTCDIV_REG  --------------------------- */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_FRAC_Pos (0UL)                   /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_FRAC (Bit 0)                */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_FRAC_Msk (0x3ffUL)               /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_FRAC (Bitfield-Mask: 0x3ff) */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_INT_Pos (10UL)                   /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_INT (Bit 10)                */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_INT_Msk (0x7fc00UL)              /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_INT (Bitfield-Mask: 0x1ff)  */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_DENOM_Pos (19UL)                 /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_DENOM (Bit 19)              */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_DENOM_Msk (0x80000UL)            /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_DENOM (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_ENABLE_Pos (20UL)                /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_ENABLE (Bit 20)             */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_DIV_ENABLE_Msk (0x100000UL)          /*!< CRG_TOP CLK_RTCDIV_REG: RTC_DIV_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_RESET_REQ_Pos (21UL)                 /*!< CRG_TOP CLK_RTCDIV_REG: RTC_RESET_REQ (Bit 21)              */
#define CRG_TOP_CLK_RTCDIV_REG_RTC_RESET_REQ_Msk (0x200000UL)           /*!< CRG_TOP CLK_RTCDIV_REG: RTC_RESET_REQ (Bitfield-Mask: 0x01) */
/* -----------------------------  CRG_TOP_BANDGAP_REG  ---------------------------- */
#define CRG_TOP_BANDGAP_REG_BGR_TRIM_Pos      (0UL)                     /*!< CRG_TOP BANDGAP_REG: BGR_TRIM (Bit 0)                       */
#define CRG_TOP_BANDGAP_REG_BGR_TRIM_Msk      (0x3fUL)                  /*!< CRG_TOP BANDGAP_REG: BGR_TRIM (Bitfield-Mask: 0x3f)         */
#define CRG_TOP_BANDGAP_REG_BGR_ITRIM_Pos     (6UL)                     /*!< CRG_TOP BANDGAP_REG: BGR_ITRIM (Bit 6)                      */
#define CRG_TOP_BANDGAP_REG_BGR_ITRIM_Msk     (0xfc0UL)                 /*!< CRG_TOP BANDGAP_REG: BGR_ITRIM (Bitfield-Mask: 0x3f)        */
#define CRG_TOP_BANDGAP_REG_BANDGAP_ENABLE_CLAMP_Pos (12UL)             /*!< CRG_TOP BANDGAP_REG: BANDGAP_ENABLE_CLAMP (Bit 12)          */
#define CRG_TOP_BANDGAP_REG_BANDGAP_ENABLE_CLAMP_Msk (0x1000UL)         /*!< CRG_TOP BANDGAP_REG: BANDGAP_ENABLE_CLAMP (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_TOP_VBUS_IRQ_MASK_REG  ------------------------- */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_FALL_Pos (0UL)            /*!< CRG_TOP VBUS_IRQ_MASK_REG: VBUS_IRQ_EN_FALL (Bit 0)         */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_FALL_Msk (0x1UL)          /*!< CRG_TOP VBUS_IRQ_MASK_REG: VBUS_IRQ_EN_FALL (Bitfield-Mask: 0x01) */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_RISE_Pos (1UL)            /*!< CRG_TOP VBUS_IRQ_MASK_REG: VBUS_IRQ_EN_RISE (Bit 1)         */
#define CRG_TOP_VBUS_IRQ_MASK_REG_VBUS_IRQ_EN_RISE_Msk (0x2UL)          /*!< CRG_TOP VBUS_IRQ_MASK_REG: VBUS_IRQ_EN_RISE (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_TOP_VBUS_IRQ_CLEAR_REG  ------------------------- */
#define CRG_TOP_VBUS_IRQ_CLEAR_REG_VBUS_IRQ_CLEAR_Pos (0UL)             /*!< CRG_TOP VBUS_IRQ_CLEAR_REG: VBUS_IRQ_CLEAR (Bit 0)          */
#define CRG_TOP_VBUS_IRQ_CLEAR_REG_VBUS_IRQ_CLEAR_Msk (0xffffUL)        /*!< CRG_TOP VBUS_IRQ_CLEAR_REG: VBUS_IRQ_CLEAR (Bitfield-Mask: 0xffff) */
/* ----------------------------  CRG_TOP_BOD_CTRL_REG  ---------------------------- */
#define CRG_TOP_BOD_CTRL_REG_BOD_CLK_DIV_Pos  (0UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_CLK_DIV (Bit 0)                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_CLK_DIV_Msk  (0x3UL)                   /*!< CRG_TOP BOD_CTRL_REG: BOD_CLK_DIV (Bitfield-Mask: 0x03)     */
#define CRG_TOP_BOD_CTRL_REG_BOD_STATUS_CLEAR_Pos (2UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_STATUS_CLEAR (Bit 2)              */
#define CRG_TOP_BOD_CTRL_REG_BOD_STATUS_CLEAR_Msk (0x4UL)               /*!< CRG_TOP BOD_CTRL_REG: BOD_STATUS_CLEAR (Bitfield-Mask: 0x01) */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_EN_Pos  (3UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_VBAT_EN (Bit 3)                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_EN_Msk  (0x8UL)                   /*!< CRG_TOP BOD_CTRL_REG: BOD_VBAT_EN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_BOD_CTRL_REG_BOD_V30_EN_Pos   (4UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_V30_EN (Bit 4)                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V30_EN_Msk   (0x10UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V30_EN (Bitfield-Mask: 0x01)      */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_EN_Pos   (5UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_V18_EN (Bit 5)                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_EN_Msk   (0x20UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V18_EN (Bitfield-Mask: 0x01)      */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_EN_Pos  (6UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_V18P_EN (Bit 6)                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_EN_Msk  (0x40UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V18P_EN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_BOD_CTRL_REG_BOD_VDD_EN_Pos   (7UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_VDD_EN (Bit 7)                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_VDD_EN_Msk   (0x80UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_VDD_EN (Bitfield-Mask: 0x01)      */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_EN_Pos  (8UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_V18F_EN (Bit 8)                   */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_EN_Msk  (0x100UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_V18F_EN (Bitfield-Mask: 0x01)     */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_EN_Pos   (9UL)                     /*!< CRG_TOP BOD_CTRL_REG: BOD_V14_EN (Bit 9)                    */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_EN_Msk   (0x200UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_V14_EN (Bitfield-Mask: 0x01)      */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_RST_EN_Pos (10UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_VBAT_RST_EN (Bit 10)              */
#define CRG_TOP_BOD_CTRL_REG_BOD_VBAT_RST_EN_Msk (0x400UL)              /*!< CRG_TOP BOD_CTRL_REG: BOD_VBAT_RST_EN (Bitfield-Mask: 0x01) */
#define CRG_TOP_BOD_CTRL_REG_BOD_V30_RST_EN_Pos (11UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V30_RST_EN (Bit 11)               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V30_RST_EN_Msk (0x800UL)               /*!< CRG_TOP BOD_CTRL_REG: BOD_V30_RST_EN (Bitfield-Mask: 0x01)  */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_RST_EN_Pos (12UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V18_RST_EN (Bit 12)               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18_RST_EN_Msk (0x1000UL)              /*!< CRG_TOP BOD_CTRL_REG: BOD_V18_RST_EN (Bitfield-Mask: 0x01)  */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_RST_EN_Pos (13UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_V18P_RST_EN (Bit 13)              */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18P_RST_EN_Msk (0x2000UL)             /*!< CRG_TOP BOD_CTRL_REG: BOD_V18P_RST_EN (Bitfield-Mask: 0x01) */
#define CRG_TOP_BOD_CTRL_REG_BOD_VDD_RST_EN_Pos (14UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_VDD_RST_EN (Bit 14)               */
#define CRG_TOP_BOD_CTRL_REG_BOD_VDD_RST_EN_Msk (0x4000UL)              /*!< CRG_TOP BOD_CTRL_REG: BOD_VDD_RST_EN (Bitfield-Mask: 0x01)  */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_RST_EN_Pos (15UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_V18F_RST_EN (Bit 15)              */
#define CRG_TOP_BOD_CTRL_REG_BOD_V18F_RST_EN_Msk (0x8000UL)             /*!< CRG_TOP BOD_CTRL_REG: BOD_V18F_RST_EN (Bitfield-Mask: 0x01) */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_RST_EN_Pos (16UL)                  /*!< CRG_TOP BOD_CTRL_REG: BOD_V14_RST_EN (Bit 16)               */
#define CRG_TOP_BOD_CTRL_REG_BOD_V14_RST_EN_Msk (0x10000UL)             /*!< CRG_TOP BOD_CTRL_REG: BOD_V14_RST_EN (Bitfield-Mask: 0x01)  */
#define CRG_TOP_BOD_CTRL_REG_BOD_TEST_ENABLE_Pos (17UL)                 /*!< CRG_TOP BOD_CTRL_REG: BOD_TEST_ENABLE (Bit 17)              */
#define CRG_TOP_BOD_CTRL_REG_BOD_TEST_ENABLE_Msk (0x20000UL)            /*!< CRG_TOP BOD_CTRL_REG: BOD_TEST_ENABLE (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_TOP_BOD_LVL_CTRL0_REG  ------------------------- */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_VBAT_Pos (0UL)                /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_VBAT (Bit 0)             */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_VBAT_Msk (0x1ffUL)            /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_VBAT (Bitfield-Mask: 0x1ff) */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_V30_Pos (9UL)                 /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_V30 (Bit 9)              */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_V30_Msk (0x3fe00UL)           /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_V30 (Bitfield-Mask: 0x1ff) */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_V18_Pos (18UL)                /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_V18 (Bit 18)             */
#define CRG_TOP_BOD_LVL_CTRL0_REG_BOD_LVL_V18_Msk (0x7fc0000UL)         /*!< CRG_TOP BOD_LVL_CTRL0_REG: BOD_LVL_V18 (Bitfield-Mask: 0x1ff) */
/* --------------------------  CRG_TOP_BOD_LVL_CTRL1_REG  ------------------------- */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_V18P_Pos (0UL)                /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_V18P (Bit 0)             */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_V18P_Msk (0x1ffUL)            /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_V18P (Bitfield-Mask: 0x1ff) */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_VDD_ON_Pos (9UL)              /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_VDD_ON (Bit 9)           */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_VDD_ON_Msk (0x1fe00UL)        /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_VDD_ON (Bitfield-Mask: 0xff) */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_VDD_REG_Pos (17UL)            /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_VDD_REG (Bit 17)         */
#define CRG_TOP_BOD_LVL_CTRL1_REG_BOD_LVL_VDD_REG_Msk (0x1fe0000UL)     /*!< CRG_TOP BOD_LVL_CTRL1_REG: BOD_LVL_VDD_REG (Bitfield-Mask: 0xff) */
/* --------------------------  CRG_TOP_BOD_LVL_CTRL2_REG  ------------------------- */
#define CRG_TOP_BOD_LVL_CTRL2_REG_BOD_LVL_V18F_Pos (0UL)                /*!< CRG_TOP BOD_LVL_CTRL2_REG: BOD_LVL_V18F (Bit 0)             */
#define CRG_TOP_BOD_LVL_CTRL2_REG_BOD_LVL_V18F_Msk (0x1ffUL)            /*!< CRG_TOP BOD_LVL_CTRL2_REG: BOD_LVL_V18F (Bitfield-Mask: 0x1ff) */
#define CRG_TOP_BOD_LVL_CTRL2_REG_BOD_LVL_V14_Pos (9UL)                 /*!< CRG_TOP BOD_LVL_CTRL2_REG: BOD_LVL_V14 (Bit 9)              */
#define CRG_TOP_BOD_LVL_CTRL2_REG_BOD_LVL_V14_Msk (0x3fe00UL)           /*!< CRG_TOP BOD_LVL_CTRL2_REG: BOD_LVL_V14 (Bitfield-Mask: 0x1ff) */
/* --------------------------  CRG_TOP_P0_PAD_LATCH_REG  -------------------------- */
#define CRG_TOP_P0_PAD_LATCH_REG_P0_LATCH_EN_Pos (0UL)                  /*!< CRG_TOP P0_PAD_LATCH_REG: P0_LATCH_EN (Bit 0)               */
#define CRG_TOP_P0_PAD_LATCH_REG_P0_LATCH_EN_Msk (0xffffffffUL)         /*!< CRG_TOP P0_PAD_LATCH_REG: P0_LATCH_EN (Bitfield-Mask: 0xffffffff) */
/* ------------------------  CRG_TOP_P0_SET_PAD_LATCH_REG  ------------------------ */
#define CRG_TOP_P0_SET_PAD_LATCH_REG_P0_SET_LATCH_EN_Pos (0UL)          /*!< CRG_TOP P0_SET_PAD_LATCH_REG: P0_SET_LATCH_EN (Bit 0)       */
#define CRG_TOP_P0_SET_PAD_LATCH_REG_P0_SET_LATCH_EN_Msk (0xffffffffUL) /*!< CRG_TOP P0_SET_PAD_LATCH_REG: P0_SET_LATCH_EN (Bitfield-Mask: 0xffffffff) */
/* -----------------------  CRG_TOP_P0_RESET_PAD_LATCH_REG  ----------------------- */
#define CRG_TOP_P0_RESET_PAD_LATCH_REG_P0_RESET_LATCH_EN_Pos (0UL)      /*!< CRG_TOP P0_RESET_PAD_LATCH_REG: P0_RESET_LATCH_EN (Bit 0)   */
#define CRG_TOP_P0_RESET_PAD_LATCH_REG_P0_RESET_LATCH_EN_Msk (0xffffffffUL) /*!< CRG_TOP P0_RESET_PAD_LATCH_REG: P0_RESET_LATCH_EN (Bitfield-Mask: 0xffffffff) */
/* --------------------------  CRG_TOP_P1_PAD_LATCH_REG  -------------------------- */
#define CRG_TOP_P1_PAD_LATCH_REG_P1_LATCH_EN_Pos (0UL)                  /*!< CRG_TOP P1_PAD_LATCH_REG: P1_LATCH_EN (Bit 0)               */
#define CRG_TOP_P1_PAD_LATCH_REG_P1_LATCH_EN_Msk (0x7fffffUL)           /*!< CRG_TOP P1_PAD_LATCH_REG: P1_LATCH_EN (Bitfield-Mask: 0x7fffff) */
/* ------------------------  CRG_TOP_P1_SET_PAD_LATCH_REG  ------------------------ */
#define CRG_TOP_P1_SET_PAD_LATCH_REG_P1_SET_LATCH_EN_Pos (0UL)          /*!< CRG_TOP P1_SET_PAD_LATCH_REG: P1_SET_LATCH_EN (Bit 0)       */
#define CRG_TOP_P1_SET_PAD_LATCH_REG_P1_SET_LATCH_EN_Msk (0x7fffffUL)   /*!< CRG_TOP P1_SET_PAD_LATCH_REG: P1_SET_LATCH_EN (Bitfield-Mask: 0x7fffff) */
/* -----------------------  CRG_TOP_P1_RESET_PAD_LATCH_REG  ----------------------- */
#define CRG_TOP_P1_RESET_PAD_LATCH_REG_P1_RESET_LATCH_EN_Pos (0UL)      /*!< CRG_TOP P1_RESET_PAD_LATCH_REG: P1_RESET_LATCH_EN (Bit 0)   */
#define CRG_TOP_P1_RESET_PAD_LATCH_REG_P1_RESET_LATCH_EN_Msk (0x7fffffUL) /*!< CRG_TOP P1_RESET_PAD_LATCH_REG: P1_RESET_LATCH_EN (Bitfield-Mask: 0x7fffff) */
/* --------------------------  CRG_TOP_POR_VBAT_CTRL_REG  ------------------------- */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_THRES_LOW_Pos (0UL)          /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_THRES_LOW (Bit 0)       */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_THRES_LOW_Msk (0xfUL)        /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_THRES_LOW (Bitfield-Mask: 0x0f) */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_THRES_HIGH_Pos (4UL)         /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_THRES_HIGH (Bit 4)      */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_THRES_HIGH_Msk (0xf0UL)      /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_THRES_HIGH (Bitfield-Mask: 0x0f) */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_HYST_LOW_Pos (8UL)           /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_HYST_LOW (Bit 8)        */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_HYST_LOW_Msk (0xf00UL)       /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_HYST_LOW (Bitfield-Mask: 0x0f) */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_ENABLE_Pos (12UL)            /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_ENABLE (Bit 12)         */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_ENABLE_Msk (0x1000UL)        /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_MASK_N_Pos (13UL)            /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_MASK_N (Bit 13)         */
#define CRG_TOP_POR_VBAT_CTRL_REG_POR_VBAT_MASK_N_Msk (0x2000UL)        /*!< CRG_TOP POR_VBAT_CTRL_REG: POR_VBAT_MASK_N (Bitfield-Mask: 0x01) */
/* -----------------------------  CRG_TOP_POR_PIN_REG  ---------------------------- */
#define CRG_TOP_POR_PIN_REG_POR_PIN_SELECT_Pos (0UL)                    /*!< CRG_TOP POR_PIN_REG: POR_PIN_SELECT (Bit 0)                 */
#define CRG_TOP_POR_PIN_REG_POR_PIN_SELECT_Msk (0x3fUL)                 /*!< CRG_TOP POR_PIN_REG: POR_PIN_SELECT (Bitfield-Mask: 0x3f)   */
#define CRG_TOP_POR_PIN_REG_POR_PIN_POLARITY_Pos (7UL)                  /*!< CRG_TOP POR_PIN_REG: POR_PIN_POLARITY (Bit 7)               */
#define CRG_TOP_POR_PIN_REG_POR_PIN_POLARITY_Msk (0x80UL)               /*!< CRG_TOP POR_PIN_REG: POR_PIN_POLARITY (Bitfield-Mask: 0x01) */
/* ----------------------------  CRG_TOP_POR_TIMER_REG  --------------------------- */
#define CRG_TOP_POR_TIMER_REG_POR_TIME_Pos    (0UL)                     /*!< CRG_TOP POR_TIMER_REG: POR_TIME (Bit 0)                     */
#define CRG_TOP_POR_TIMER_REG_POR_TIME_Msk    (0x7fUL)                  /*!< CRG_TOP POR_TIMER_REG: POR_TIME (Bitfield-Mask: 0x7f)       */
/* -----------------------  CRG_TOP_LDO_VDDD_HIGH_CTRL_REG  ----------------------- */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_VREF_HOLD_Pos (0UL) /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_VREF_HOLD (Bit 0) */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_VREF_HOLD_Msk (0x1UL) /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_VREF_HOLD (Bitfield-Mask: 0x01) */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_ENABLE_Pos (1UL)   /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_ENABLE (Bit 1) */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_ENABLE_Msk (0x2UL) /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_BYPASS_Pos (2UL)   /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_BYPASS (Bit 2) */
#define CRG_TOP_LDO_VDDD_HIGH_CTRL_REG_LDO_VDDD_HIGH_BYPASS_Msk (0x4UL) /*!< CRG_TOP LDO_VDDD_HIGH_CTRL_REG: LDO_VDDD_HIGH_BYPASS (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_TOP_BIAS_VREF_SEL_REG  ------------------------- */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF1_SEL_Pos (0UL)           /*!< CRG_TOP BIAS_VREF_SEL_REG: BIAS_VREF_RF1_SEL (Bit 0)        */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF1_SEL_Msk (0xfUL)         /*!< CRG_TOP BIAS_VREF_SEL_REG: BIAS_VREF_RF1_SEL (Bitfield-Mask: 0x0f) */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF2_SEL_Pos (4UL)           /*!< CRG_TOP BIAS_VREF_SEL_REG: BIAS_VREF_RF2_SEL (Bit 4)        */
#define CRG_TOP_BIAS_VREF_SEL_REG_BIAS_VREF_RF2_SEL_Msk (0xf0UL)        /*!< CRG_TOP BIAS_VREF_SEL_REG: BIAS_VREF_RF2_SEL (Bitfield-Mask: 0x0f) */
/* ----------------------------  CRG_TOP_HW_CONFIG_REG  --------------------------- */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_USB_Pos (0UL)                     /*!< CRG_TOP HW_CONFIG_REG: DISABLE_USB (Bit 0)                  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_USB_Msk (0x1UL)                   /*!< CRG_TOP HW_CONFIG_REG: DISABLE_USB (Bitfield-Mask: 0x01)    */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_CHARGER_Pos (1UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_CHARGER (Bit 1)              */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_CHARGER_Msk (0x2UL)               /*!< CRG_TOP HW_CONFIG_REG: DISABLE_CHARGER (Bitfield-Mask: 0x01) */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_GPADC_Pos (2UL)                   /*!< CRG_TOP HW_CONFIG_REG: DISABLE_GPADC (Bit 2)                */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_GPADC_Msk (0x4UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_GPADC (Bitfield-Mask: 0x01)  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_SDADC_Pos (3UL)                   /*!< CRG_TOP HW_CONFIG_REG: DISABLE_SDADC (Bit 3)                */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_SDADC_Msk (0x8UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_SDADC (Bitfield-Mask: 0x01)  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_UART3_Pos (4UL)                   /*!< CRG_TOP HW_CONFIG_REG: DISABLE_UART3 (Bit 4)                */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_UART3_Msk (0x10UL)                /*!< CRG_TOP HW_CONFIG_REG: DISABLE_UART3 (Bitfield-Mask: 0x01)  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_LCD_Pos (5UL)                     /*!< CRG_TOP HW_CONFIG_REG: DISABLE_LCD (Bit 5)                  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_LCD_Msk (0x20UL)                  /*!< CRG_TOP HW_CONFIG_REG: DISABLE_LCD (Bitfield-Mask: 0x01)    */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_APU_Pos (6UL)                     /*!< CRG_TOP HW_CONFIG_REG: DISABLE_APU (Bit 6)                  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_APU_Msk (0x40UL)                  /*!< CRG_TOP HW_CONFIG_REG: DISABLE_APU (Bitfield-Mask: 0x01)    */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_LRA_Pos (7UL)                     /*!< CRG_TOP HW_CONFIG_REG: DISABLE_LRA (Bit 7)                  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_LRA_Msk (0x80UL)                  /*!< CRG_TOP HW_CONFIG_REG: DISABLE_LRA (Bitfield-Mask: 0x01)    */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_PWM_Pos (8UL)                     /*!< CRG_TOP HW_CONFIG_REG: DISABLE_PWM (Bit 8)                  */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_PWM_Msk (0x100UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_PWM (Bitfield-Mask: 0x01)    */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_QSPIRAM_Pos (9UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_QSPIRAM (Bit 9)              */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_QSPIRAM_Msk (0x200UL)             /*!< CRG_TOP HW_CONFIG_REG: DISABLE_QSPIRAM (Bitfield-Mask: 0x01) */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_MOTORC_Pos (10UL)                 /*!< CRG_TOP HW_CONFIG_REG: DISABLE_MOTORC (Bit 10)              */
#define CRG_TOP_HW_CONFIG_REG_DISABLE_MOTORC_Msk (0x400UL)              /*!< CRG_TOP HW_CONFIG_REG: DISABLE_MOTORC (Bitfield-Mask: 0x01) */
#define CRG_TOP_HW_CONFIG_REG_REDUCE_RAM_SIZE_Pos (11UL)                /*!< CRG_TOP HW_CONFIG_REG: REDUCE_RAM_SIZE (Bit 11)             */
#define CRG_TOP_HW_CONFIG_REG_REDUCE_RAM_SIZE_Msk (0x1800UL)            /*!< CRG_TOP HW_CONFIG_REG: REDUCE_RAM_SIZE (Bitfield-Mask: 0x03) */
/* ---------------------------  CRG_TOP_RESET_STAT_REG  --------------------------- */
#define CRG_TOP_RESET_STAT_REG_PORESET_STAT_Pos (0UL)                   /*!< CRG_TOP RESET_STAT_REG: PORESET_STAT (Bit 0)                */
#define CRG_TOP_RESET_STAT_REG_PORESET_STAT_Msk (0x1UL)                 /*!< CRG_TOP RESET_STAT_REG: PORESET_STAT (Bitfield-Mask: 0x01)  */
#define CRG_TOP_RESET_STAT_REG_HWRESET_STAT_Pos (1UL)                   /*!< CRG_TOP RESET_STAT_REG: HWRESET_STAT (Bit 1)                */
#define CRG_TOP_RESET_STAT_REG_HWRESET_STAT_Msk (0x2UL)                 /*!< CRG_TOP RESET_STAT_REG: HWRESET_STAT (Bitfield-Mask: 0x01)  */
#define CRG_TOP_RESET_STAT_REG_SWRESET_STAT_Pos (2UL)                   /*!< CRG_TOP RESET_STAT_REG: SWRESET_STAT (Bit 2)                */
#define CRG_TOP_RESET_STAT_REG_SWRESET_STAT_Msk (0x4UL)                 /*!< CRG_TOP RESET_STAT_REG: SWRESET_STAT (Bitfield-Mask: 0x01)  */
#define CRG_TOP_RESET_STAT_REG_WDOGRESET_STAT_Pos (3UL)                 /*!< CRG_TOP RESET_STAT_REG: WDOGRESET_STAT (Bit 3)              */
#define CRG_TOP_RESET_STAT_REG_WDOGRESET_STAT_Msk (0x8UL)               /*!< CRG_TOP RESET_STAT_REG: WDOGRESET_STAT (Bitfield-Mask: 0x01) */
#define CRG_TOP_RESET_STAT_REG_SWD_HWRESET_STAT_Pos (4UL)               /*!< CRG_TOP RESET_STAT_REG: SWD_HWRESET_STAT (Bit 4)            */
#define CRG_TOP_RESET_STAT_REG_SWD_HWRESET_STAT_Msk (0x10UL)            /*!< CRG_TOP RESET_STAT_REG: SWD_HWRESET_STAT (Bitfield-Mask: 0x01) */
#define CRG_TOP_RESET_STAT_REG_CMAC_WDOGRESET_STAT_Pos (5UL)            /*!< CRG_TOP RESET_STAT_REG: CMAC_WDOGRESET_STAT (Bit 5)         */
#define CRG_TOP_RESET_STAT_REG_CMAC_WDOGRESET_STAT_Msk (0x20UL)         /*!< CRG_TOP RESET_STAT_REG: CMAC_WDOGRESET_STAT (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_TOP_RAM_PWR_CTRL_REG  -------------------------- */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM1_PWR_CTRL_Pos (0UL)                /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM1_PWR_CTRL (Bit 0)             */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM1_PWR_CTRL_Msk (0x3UL)              /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM1_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM2_PWR_CTRL_Pos (2UL)                /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM2_PWR_CTRL (Bit 2)             */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM2_PWR_CTRL_Msk (0xcUL)              /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM2_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM3_PWR_CTRL_Pos (4UL)                /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM3_PWR_CTRL (Bit 4)             */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM3_PWR_CTRL_Msk (0x30UL)             /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM3_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM4_PWR_CTRL_Pos (6UL)                /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM4_PWR_CTRL (Bit 6)             */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM4_PWR_CTRL_Msk (0xc0UL)             /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM4_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM5_PWR_CTRL_Pos (8UL)                /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM5_PWR_CTRL (Bit 8)             */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM5_PWR_CTRL_Msk (0x300UL)            /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM5_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM6_PWR_CTRL_Pos (10UL)               /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM6_PWR_CTRL (Bit 10)            */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM6_PWR_CTRL_Msk (0xc00UL)            /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM6_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM7_PWR_CTRL_Pos (12UL)               /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM7_PWR_CTRL (Bit 12)            */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM7_PWR_CTRL_Msk (0x3000UL)           /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM7_PWR_CTRL (Bitfield-Mask: 0x03) */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM8_PWR_CTRL_Pos (14UL)               /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM8_PWR_CTRL (Bit 14)            */
#define CRG_TOP_RAM_PWR_CTRL_REG_RAM8_PWR_CTRL_Msk (0xc000UL)           /*!< CRG_TOP RAM_PWR_CTRL_REG: RAM8_PWR_CTRL (Bitfield-Mask: 0x03) */
/* --------------------------  CRG_TOP_LDOS_DISABLE_REG  -------------------------- */
#define CRG_TOP_LDOS_DISABLE_REG_LDOS_DISABLE_Pos (0UL)                 /*!< CRG_TOP LDOS_DISABLE_REG: LDOS_DISABLE (Bit 0)              */
#define CRG_TOP_LDOS_DISABLE_REG_LDOS_DISABLE_Msk (0x1UL)               /*!< CRG_TOP LDOS_DISABLE_REG: LDOS_DISABLE (Bitfield-Mask: 0x01) */
/* ----------------------------  CRG_TOP_AON_SPARE_REG  --------------------------- */
#define CRG_TOP_AON_SPARE_REG_POR_TST_DET_DISABLE_Pos (0UL)             /*!< CRG_TOP AON_SPARE_REG: POR_TST_DET_DISABLE (Bit 0)          */
#define CRG_TOP_AON_SPARE_REG_POR_TST_DET_DISABLE_Msk (0x1UL)           /*!< CRG_TOP AON_SPARE_REG: POR_TST_DET_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_AON_SPARE_REG_KEEP_VDDNOTSLEEP_ON_Pos (1UL)             /*!< CRG_TOP AON_SPARE_REG: KEEP_VDDNOTSLEEP_ON (Bit 1)          */
#define CRG_TOP_AON_SPARE_REG_KEEP_VDDNOTSLEEP_ON_Msk (0x2UL)           /*!< CRG_TOP AON_SPARE_REG: KEEP_VDDNOTSLEEP_ON (Bitfield-Mask: 0x01) */
/* ---------------------------  CRG_TOP_SECURE_BOOT_REG  -------------------------- */
#define CRG_TOP_SECURE_BOOT_REG_SECURE_BOOT_Pos (0UL)                   /*!< CRG_TOP SECURE_BOOT_REG: SECURE_BOOT (Bit 0)                */
#define CRG_TOP_SECURE_BOOT_REG_SECURE_BOOT_Msk (0x1UL)                 /*!< CRG_TOP SECURE_BOOT_REG: SECURE_BOOT (Bitfield-Mask: 0x01)  */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_DEBUGGER_OFF_Pos (1UL)            /*!< CRG_TOP SECURE_BOOT_REG: FORCE_DEBUGGER_OFF (Bit 1)         */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_DEBUGGER_OFF_Msk (0x2UL)          /*!< CRG_TOP SECURE_BOOT_REG: FORCE_DEBUGGER_OFF (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_CMAC_DEBUGGER_OFF_Pos (2UL)       /*!< CRG_TOP SECURE_BOOT_REG: FORCE_CMAC_DEBUGGER_OFF (Bit 2)    */
#define CRG_TOP_SECURE_BOOT_REG_FORCE_CMAC_DEBUGGER_OFF_Msk (0x4UL)     /*!< CRG_TOP SECURE_BOOT_REG: FORCE_CMAC_DEBUGGER_OFF (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_PROT_SIG_KEY_WRITE_Pos (3UL)            /*!< CRG_TOP SECURE_BOOT_REG: PROT_SIG_KEY_WRITE (Bit 3)         */
#define CRG_TOP_SECURE_BOOT_REG_PROT_SIG_KEY_WRITE_Msk (0x8UL)          /*!< CRG_TOP SECURE_BOOT_REG: PROT_SIG_KEY_WRITE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_WRITE_Pos (4UL)            /*!< CRG_TOP SECURE_BOOT_REG: PROT_AES_KEY_WRITE (Bit 4)         */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_WRITE_Msk (0x10UL)         /*!< CRG_TOP SECURE_BOOT_REG: PROT_AES_KEY_WRITE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_READ_Pos (5UL)             /*!< CRG_TOP SECURE_BOOT_REG: PROT_AES_KEY_READ (Bit 5)          */
#define CRG_TOP_SECURE_BOOT_REG_PROT_AES_KEY_READ_Msk (0x20UL)          /*!< CRG_TOP SECURE_BOOT_REG: PROT_AES_KEY_READ (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_PROT_QSPI_KEY_WRITE_Pos (6UL)           /*!< CRG_TOP SECURE_BOOT_REG: PROT_QSPI_KEY_WRITE (Bit 6)        */
#define CRG_TOP_SECURE_BOOT_REG_PROT_QSPI_KEY_WRITE_Msk (0x40UL)        /*!< CRG_TOP SECURE_BOOT_REG: PROT_QSPI_KEY_WRITE (Bitfield-Mask: 0x01) */
#define CRG_TOP_SECURE_BOOT_REG_PROT_QSPI_KEY_READ_Pos (7UL)            /*!< CRG_TOP SECURE_BOOT_REG: PROT_QSPI_KEY_READ (Bit 7)         */
#define CRG_TOP_SECURE_BOOT_REG_PROT_QSPI_KEY_READ_Msk (0x80UL)         /*!< CRG_TOP SECURE_BOOT_REG: PROT_QSPI_KEY_READ (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_TOP_DISCHARGE_RAIL_REG  ------------------------- */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V14_Pos (0UL)                  /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V14 (Bit 0)               */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V14_Msk (0x1UL)                /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V14 (Bitfield-Mask: 0x01) */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18_Pos (1UL)                  /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V18 (Bit 1)               */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18_Msk (0x2UL)                /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V18 (Bitfield-Mask: 0x01) */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18P_Pos (2UL)                 /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V18P (Bit 2)              */
#define CRG_TOP_DISCHARGE_RAIL_REG_RESET_V18P_Msk (0x4UL)               /*!< CRG_TOP DISCHARGE_RAIL_REG: RESET_V18P (Bitfield-Mask: 0x01) */
/* ---------------------------  CRG_TOP_ANA_STATUS_REG  --------------------------- */
#define CRG_TOP_ANA_STATUS_REG_BOD_VIN_NOK_Pos (0UL)                    /*!< CRG_TOP ANA_STATUS_REG: BOD_VIN_NOK (Bit 0)                 */
#define CRG_TOP_ANA_STATUS_REG_BOD_VIN_NOK_Msk (0x1UL)                  /*!< CRG_TOP ANA_STATUS_REG: BOD_VIN_NOK (Bitfield-Mask: 0x01)   */
#define CRG_TOP_ANA_STATUS_REG_LDO_VDD_HIGH_OK_Pos (1UL)                /*!< CRG_TOP ANA_STATUS_REG: LDO_VDD_HIGH_OK (Bit 1)             */
#define CRG_TOP_ANA_STATUS_REG_LDO_VDD_HIGH_OK_Msk (0x2UL)              /*!< CRG_TOP ANA_STATUS_REG: LDO_VDD_HIGH_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_LDO_CORE_OK_Pos (2UL)                    /*!< CRG_TOP ANA_STATUS_REG: LDO_CORE_OK (Bit 2)                 */
#define CRG_TOP_ANA_STATUS_REG_LDO_CORE_OK_Msk (0x4UL)                  /*!< CRG_TOP ANA_STATUS_REG: LDO_CORE_OK (Bitfield-Mask: 0x01)   */
#define CRG_TOP_ANA_STATUS_REG_LDO_RADIO_OK_Pos (3UL)                   /*!< CRG_TOP ANA_STATUS_REG: LDO_RADIO_OK (Bit 3)                */
#define CRG_TOP_ANA_STATUS_REG_LDO_RADIO_OK_Msk (0x8UL)                 /*!< CRG_TOP ANA_STATUS_REG: LDO_RADIO_OK (Bitfield-Mask: 0x01)  */
#define CRG_TOP_ANA_STATUS_REG_LDO_1V8_OK_Pos (4UL)                     /*!< CRG_TOP ANA_STATUS_REG: LDO_1V8_OK (Bit 4)                  */
#define CRG_TOP_ANA_STATUS_REG_LDO_1V8_OK_Msk (0x10UL)                  /*!< CRG_TOP ANA_STATUS_REG: LDO_1V8_OK (Bitfield-Mask: 0x01)    */
#define CRG_TOP_ANA_STATUS_REG_LDO_1V8P_OK_Pos (5UL)                    /*!< CRG_TOP ANA_STATUS_REG: LDO_1V8P_OK (Bit 5)                 */
#define CRG_TOP_ANA_STATUS_REG_LDO_1V8P_OK_Msk (0x20UL)                 /*!< CRG_TOP ANA_STATUS_REG: LDO_1V8P_OK (Bitfield-Mask: 0x01)   */
#define CRG_TOP_ANA_STATUS_REG_LDO_3V0_VBUS_OK_Pos (6UL)                /*!< CRG_TOP ANA_STATUS_REG: LDO_3V0_VBUS_OK (Bit 6)             */
#define CRG_TOP_ANA_STATUS_REG_LDO_3V0_VBUS_OK_Msk (0x40UL)             /*!< CRG_TOP ANA_STATUS_REG: LDO_3V0_VBUS_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_LDO_3V0_VBAT_OK_Pos (7UL)                /*!< CRG_TOP ANA_STATUS_REG: LDO_3V0_VBAT_OK (Bit 7)             */
#define CRG_TOP_ANA_STATUS_REG_LDO_3V0_VBAT_OK_Msk (0x80UL)             /*!< CRG_TOP ANA_STATUS_REG: LDO_3V0_VBAT_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_BANDGAP_OK_Pos (8UL)                     /*!< CRG_TOP ANA_STATUS_REG: BANDGAP_OK (Bit 8)                  */
#define CRG_TOP_ANA_STATUS_REG_BANDGAP_OK_Msk (0x100UL)                 /*!< CRG_TOP ANA_STATUS_REG: BANDGAP_OK (Bitfield-Mask: 0x01)    */
#define CRG_TOP_ANA_STATUS_REG_VBUS_AVAILABLE_Pos (9UL)                 /*!< CRG_TOP ANA_STATUS_REG: VBUS_AVAILABLE (Bit 9)              */
#define CRG_TOP_ANA_STATUS_REG_VBUS_AVAILABLE_Msk (0x200UL)             /*!< CRG_TOP ANA_STATUS_REG: VBUS_AVAILABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_COMP_VDD_OK_Pos (10UL)                   /*!< CRG_TOP ANA_STATUS_REG: COMP_VDD_OK (Bit 10)                */
#define CRG_TOP_ANA_STATUS_REG_COMP_VDD_OK_Msk (0x400UL)                /*!< CRG_TOP ANA_STATUS_REG: COMP_VDD_OK (Bitfield-Mask: 0x01)   */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_LOW_Pos (11UL)                 /*!< CRG_TOP ANA_STATUS_REG: COMP_VBAT_LOW (Bit 11)              */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_LOW_Msk (0x800UL)              /*!< CRG_TOP ANA_STATUS_REG: COMP_VBAT_LOW (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_HIGH_Pos (12UL)                /*!< CRG_TOP ANA_STATUS_REG: COMP_VBAT_HIGH (Bit 12)             */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBAT_HIGH_Msk (0x1000UL)            /*!< CRG_TOP ANA_STATUS_REG: COMP_VBAT_HIGH (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_LOW_Pos (13UL)                 /*!< CRG_TOP ANA_STATUS_REG: COMP_VBUS_LOW (Bit 13)              */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_LOW_Msk (0x2000UL)             /*!< CRG_TOP ANA_STATUS_REG: COMP_VBUS_LOW (Bitfield-Mask: 0x01) */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_HIGH_Pos (14UL)                /*!< CRG_TOP ANA_STATUS_REG: COMP_VBUS_HIGH (Bit 14)             */
#define CRG_TOP_ANA_STATUS_REG_COMP_VBUS_HIGH_Msk (0x4000UL)            /*!< CRG_TOP ANA_STATUS_REG: COMP_VBUS_HIGH (Bitfield-Mask: 0x01) */
/* ---------------------------  CRG_TOP_POWER_CTRL_REG  --------------------------- */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_ENABLE_Pos (0UL)                /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_ENABLE (Bit 0)             */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_ENABLE_Msk (0x1UL)              /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_RET_ENABLE_ACTIVE_Pos (1UL)     /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_RET_ENABLE_ACTIVE (Bit 1)  */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_RET_ENABLE_ACTIVE_Msk (0x2UL)   /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_RET_ENABLE_ACTIVE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_RET_ENABLE_SLEEP_Pos (2UL)      /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_RET_ENABLE_SLEEP (Bit 2)   */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8P_RET_ENABLE_SLEEP_Msk (0x4UL)    /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8P_RET_ENABLE_SLEEP (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_SW_1V8F_ENABLE_FORCE_Pos (3UL)           /*!< CRG_TOP POWER_CTRL_REG: SW_1V8F_ENABLE_FORCE (Bit 3)        */
#define CRG_TOP_POWER_CTRL_REG_SW_1V8F_ENABLE_FORCE_Msk (0x8UL)         /*!< CRG_TOP POWER_CTRL_REG: SW_1V8F_ENABLE_FORCE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_ENABLE_Pos (4UL)                 /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_ENABLE (Bit 4)              */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_ENABLE_Msk (0x10UL)              /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_RET_ENABLE_ACTIVE_Pos (5UL)      /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_RET_ENABLE_ACTIVE (Bit 5)   */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_RET_ENABLE_ACTIVE_Msk (0x20UL)   /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_RET_ENABLE_ACTIVE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_RET_ENABLE_SLEEP_Pos (6UL)       /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_RET_ENABLE_SLEEP (Bit 6)    */
#define CRG_TOP_POWER_CTRL_REG_LDO_1V8_RET_ENABLE_SLEEP_Msk (0x40UL)    /*!< CRG_TOP POWER_CTRL_REG: LDO_1V8_RET_ENABLE_SLEEP (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_RADIO_ENABLE_Pos (7UL)               /*!< CRG_TOP POWER_CTRL_REG: LDO_RADIO_ENABLE (Bit 7)            */
#define CRG_TOP_POWER_CTRL_REG_LDO_RADIO_ENABLE_Msk (0x80UL)            /*!< CRG_TOP POWER_CTRL_REG: LDO_RADIO_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_MODE_Pos (8UL)                   /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_MODE (Bit 8)                */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_MODE_Msk (0x300UL)               /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_MODE (Bitfield-Mask: 0x03)  */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_RET_ENABLE_ACTIVE_Pos (10UL)     /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_RET_ENABLE_ACTIVE (Bit 10)  */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_RET_ENABLE_ACTIVE_Msk (0x400UL)  /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_RET_ENABLE_ACTIVE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_RET_ENABLE_SLEEP_Pos (11UL)      /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_RET_ENABLE_SLEEP (Bit 11)   */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_RET_ENABLE_SLEEP_Msk (0x800UL)   /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_RET_ENABLE_SLEEP (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_ENABLE_Pos (12UL)               /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_ENABLE (Bit 12)            */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_ENABLE_Msk (0x1000UL)           /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_RET_ENABLE_ACTIVE_Pos (13UL)    /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_RET_ENABLE_ACTIVE (Bit 13) */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_RET_ENABLE_ACTIVE_Msk (0x2000UL) /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_RET_ENABLE_ACTIVE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_RET_ENABLE_SLEEP_Pos (14UL)     /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_RET_ENABLE_SLEEP (Bit 14)  */
#define CRG_TOP_POWER_CTRL_REG_LDO_CORE_RET_ENABLE_SLEEP_Msk (0x4000UL) /*!< CRG_TOP POWER_CTRL_REG: LDO_CORE_RET_ENABLE_SLEEP (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_REF_Pos (15UL)                   /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_REF (Bit 15)                */
#define CRG_TOP_POWER_CTRL_REG_LDO_3V0_REF_Msk (0x8000UL)               /*!< CRG_TOP POWER_CTRL_REG: LDO_3V0_REF (Bitfield-Mask: 0x01)   */
#define CRG_TOP_POWER_CTRL_REG_VDD_LEVEL_Pos  (16UL)                    /*!< CRG_TOP POWER_CTRL_REG: VDD_LEVEL (Bit 16)                  */
#define CRG_TOP_POWER_CTRL_REG_VDD_LEVEL_Msk  (0x30000UL)               /*!< CRG_TOP POWER_CTRL_REG: VDD_LEVEL (Bitfield-Mask: 0x03)     */
#define CRG_TOP_POWER_CTRL_REG_V30_LEVEL_Pos  (18UL)                    /*!< CRG_TOP POWER_CTRL_REG: V30_LEVEL (Bit 18)                  */
#define CRG_TOP_POWER_CTRL_REG_V30_LEVEL_Msk  (0xc0000UL)               /*!< CRG_TOP POWER_CTRL_REG: V30_LEVEL (Bitfield-Mask: 0x03)     */
#define CRG_TOP_POWER_CTRL_REG_V14_LEVEL_Pos  (20UL)                    /*!< CRG_TOP POWER_CTRL_REG: V14_LEVEL (Bit 20)                  */
#define CRG_TOP_POWER_CTRL_REG_V14_LEVEL_Msk  (0x700000UL)              /*!< CRG_TOP POWER_CTRL_REG: V14_LEVEL (Bitfield-Mask: 0x07)     */
#define CRG_TOP_POWER_CTRL_REG_V18_LEVEL_Pos  (23UL)                    /*!< CRG_TOP POWER_CTRL_REG: V18_LEVEL (Bit 23)                  */
#define CRG_TOP_POWER_CTRL_REG_V18_LEVEL_Msk  (0x800000UL)              /*!< CRG_TOP POWER_CTRL_REG: V18_LEVEL (Bitfield-Mask: 0x01)     */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_3V0_VBAT_ENABLE_Pos (24UL)         /*!< CRG_TOP POWER_CTRL_REG: CLAMP_3V0_VBAT_ENABLE (Bit 24)      */
#define CRG_TOP_POWER_CTRL_REG_CLAMP_3V0_VBAT_ENABLE_Msk (0x1000000UL)  /*!< CRG_TOP POWER_CTRL_REG: CLAMP_3V0_VBAT_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_POWER_CTRL_REG_VDD_CLAMP_LEVEL_Pos (25UL)               /*!< CRG_TOP POWER_CTRL_REG: VDD_CLAMP_LEVEL (Bit 25)            */
#define CRG_TOP_POWER_CTRL_REG_VDD_CLAMP_LEVEL_Msk (0x1e000000UL)       /*!< CRG_TOP POWER_CTRL_REG: VDD_CLAMP_LEVEL (Bitfield-Mask: 0x0f) */
#define CRG_TOP_POWER_CTRL_REG_VDD_SLEEP_LEVEL_Pos (29UL)               /*!< CRG_TOP POWER_CTRL_REG: VDD_SLEEP_LEVEL (Bit 29)            */
#define CRG_TOP_POWER_CTRL_REG_VDD_SLEEP_LEVEL_Msk (0xe0000000UL)       /*!< CRG_TOP POWER_CTRL_REG: VDD_SLEEP_LEVEL (Bitfield-Mask: 0x07) */
/* ----------------------------  CRG_TOP_PMU_SLEEP_REG  --------------------------- */
#define CRG_TOP_PMU_SLEEP_REG_BG_REFRESH_INTERVAL_Pos (0UL)             /*!< CRG_TOP PMU_SLEEP_REG: BG_REFRESH_INTERVAL (Bit 0)          */
#define CRG_TOP_PMU_SLEEP_REG_BG_REFRESH_INTERVAL_Msk (0xfffUL)         /*!< CRG_TOP PMU_SLEEP_REG: BG_REFRESH_INTERVAL (Bitfield-Mask: 0xfff) */
#define CRG_TOP_PMU_SLEEP_REG_BOD_SLEEP_INTERVAL_Pos (12UL)             /*!< CRG_TOP PMU_SLEEP_REG: BOD_SLEEP_INTERVAL (Bit 12)          */
#define CRG_TOP_PMU_SLEEP_REG_BOD_SLEEP_INTERVAL_Msk (0xf000UL)         /*!< CRG_TOP PMU_SLEEP_REG: BOD_SLEEP_INTERVAL (Bitfield-Mask: 0x0f) */
#define CRG_TOP_PMU_SLEEP_REG_FAST_WAKEUP_Pos (16UL)                    /*!< CRG_TOP PMU_SLEEP_REG: FAST_WAKEUP (Bit 16)                 */
#define CRG_TOP_PMU_SLEEP_REG_FAST_WAKEUP_Msk (0x10000UL)               /*!< CRG_TOP PMU_SLEEP_REG: FAST_WAKEUP (Bitfield-Mask: 0x01)    */
#define CRG_TOP_PMU_SLEEP_REG_ULTRA_FAST_WAKEUP_Pos (17UL)              /*!< CRG_TOP PMU_SLEEP_REG: ULTRA_FAST_WAKEUP (Bit 17)           */
#define CRG_TOP_PMU_SLEEP_REG_ULTRA_FAST_WAKEUP_Msk (0x20000UL)         /*!< CRG_TOP PMU_SLEEP_REG: ULTRA_FAST_WAKEUP (Bitfield-Mask: 0x01) */
#define CRG_TOP_PMU_SLEEP_REG_CLAMP_VDD_WKUP_MAX_Pos (18UL)             /*!< CRG_TOP PMU_SLEEP_REG: CLAMP_VDD_WKUP_MAX (Bit 18)          */
#define CRG_TOP_PMU_SLEEP_REG_CLAMP_VDD_WKUP_MAX_Msk (0x40000UL)        /*!< CRG_TOP PMU_SLEEP_REG: CLAMP_VDD_WKUP_MAX (Bitfield-Mask: 0x01) */
#define CRG_TOP_PMU_SLEEP_REG_LDO_CORE_RET_ADAPBIAS_ENABLE_Pos (19UL)   /*!< CRG_TOP PMU_SLEEP_REG: LDO_CORE_RET_ADAPBIAS_ENABLE (Bit 19) */
#define CRG_TOP_PMU_SLEEP_REG_LDO_CORE_RET_ADAPBIAS_ENABLE_Msk (0x80000UL) /*!< CRG_TOP PMU_SLEEP_REG: LDO_CORE_RET_ADAPBIAS_ENABLE (Bitfield-Mask: 0x01) */
/* ----------------------------  CRG_TOP_PMU_TRIM_REG  ---------------------------- */
#define CRG_TOP_PMU_TRIM_REG_LDO_SUPPLY_VBUS_TRIM_Pos (0UL)             /*!< CRG_TOP PMU_TRIM_REG: LDO_SUPPLY_VBUS_TRIM (Bit 0)          */
#define CRG_TOP_PMU_TRIM_REG_LDO_SUPPLY_VBUS_TRIM_Msk (0xfUL)           /*!< CRG_TOP PMU_TRIM_REG: LDO_SUPPLY_VBUS_TRIM (Bitfield-Mask: 0x0f) */
#define CRG_TOP_PMU_TRIM_REG_LDO_SUPPLY_VBAT_TRIM_Pos (4UL)             /*!< CRG_TOP PMU_TRIM_REG: LDO_SUPPLY_VBAT_TRIM (Bit 4)          */
#define CRG_TOP_PMU_TRIM_REG_LDO_SUPPLY_VBAT_TRIM_Msk (0xf0UL)          /*!< CRG_TOP PMU_TRIM_REG: LDO_SUPPLY_VBAT_TRIM (Bitfield-Mask: 0x0f) */
#define CRG_TOP_PMU_TRIM_REG_LDO_1V8P_TRIM_Pos (8UL)                    /*!< CRG_TOP PMU_TRIM_REG: LDO_1V8P_TRIM (Bit 8)                 */
#define CRG_TOP_PMU_TRIM_REG_LDO_1V8P_TRIM_Msk (0xf00UL)                /*!< CRG_TOP PMU_TRIM_REG: LDO_1V8P_TRIM (Bitfield-Mask: 0x0f)   */
#define CRG_TOP_PMU_TRIM_REG_LDO_1V8_TRIM_Pos (12UL)                    /*!< CRG_TOP PMU_TRIM_REG: LDO_1V8_TRIM (Bit 12)                 */
#define CRG_TOP_PMU_TRIM_REG_LDO_1V8_TRIM_Msk (0xf000UL)                /*!< CRG_TOP PMU_TRIM_REG: LDO_1V8_TRIM (Bitfield-Mask: 0x0f)    */
/* -------------------------  CRG_TOP_STARTUP_STATUS_REG  ------------------------- */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_TIMEOUT_Pos (0UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_TIMEOUT (Bit 0)     */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_TIMEOUT_Msk (0x1UL)      /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_TIMEOUT (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8P_TIMEOUT_Pos (1UL)       /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8P_TIMEOUT (Bit 1)    */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8P_TIMEOUT_Msk (0x2UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8P_TIMEOUT (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8_TIMEOUT_Pos (2UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8_TIMEOUT (Bit 2)     */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8_TIMEOUT_Msk (0x4UL)      /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8_TIMEOUT (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_RAILS_OK_TIMEOUT_Pos (3UL)       /*!< CRG_TOP STARTUP_STATUS_REG: WUP_RAILS_OK_TIMEOUT (Bit 3)    */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_RAILS_OK_TIMEOUT_Msk (0x8UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_RAILS_OK_TIMEOUT (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_VBAT_OK_Pos (4UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_VBAT_OK (Bit 4)     */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_VBAT_OK_Msk (0x10UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_VBAT_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_VBUS_OK_Pos (5UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_VBUS_OK (Bit 5)     */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_3V0_VBUS_OK_Msk (0x20UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_3V0_VBUS_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8P_OK_Pos (6UL)            /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8P_OK (Bit 6)         */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8P_OK_Msk (0x40UL)         /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8P_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8_OK_Pos (7UL)             /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8_OK (Bit 7)          */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_1V8_OK_Msk (0x80UL)          /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_1V8_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_CORE_OK_Pos (8UL)            /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_CORE_OK (Bit 8)         */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_CORE_OK_Msk (0x100UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_CORE_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_VBUS_AVAILABLE_Pos (9UL)         /*!< CRG_TOP STARTUP_STATUS_REG: WUP_VBUS_AVAILABLE (Bit 9)      */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_VBUS_AVAILABLE_Msk (0x200UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_VBUS_AVAILABLE (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBUS_LOW_Pos (10UL)         /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBUS_LOW (Bit 10)      */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBUS_LOW_Msk (0x400UL)      /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBUS_LOW (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBUS_HIGH_Pos (11UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBUS_HIGH (Bit 11)     */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBUS_HIGH_Msk (0x800UL)     /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBUS_HIGH (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBAT_OK_Pos (12UL)          /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBAT_OK (Bit 12)       */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VBAT_OK_Msk (0x1000UL)      /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VBAT_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VDD_OK_Pos (13UL)           /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VDD_OK (Bit 13)        */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_COMP_VDD_OK_Msk (0x2000UL)       /*!< CRG_TOP STARTUP_STATUS_REG: WUP_COMP_VDD_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_BANDGAP_OK_Pos (14UL)            /*!< CRG_TOP STARTUP_STATUS_REG: WUP_BANDGAP_OK (Bit 14)         */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_BANDGAP_OK_Msk (0x4000UL)        /*!< CRG_TOP STARTUP_STATUS_REG: WUP_BANDGAP_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_RADIO_OK_Pos (15UL)          /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_RADIO_OK (Bit 15)       */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_LDO_RADIO_OK_Msk (0x8000UL)      /*!< CRG_TOP STARTUP_STATUS_REG: WUP_LDO_RADIO_OK (Bitfield-Mask: 0x01) */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_FAIL_STATE_Pos (16UL)            /*!< CRG_TOP STARTUP_STATUS_REG: WUP_FAIL_STATE (Bit 16)         */
#define CRG_TOP_STARTUP_STATUS_REG_WUP_FAIL_STATE_Msk (0xf0000UL)       /*!< CRG_TOP STARTUP_STATUS_REG: WUP_FAIL_STATE (Bitfield-Mask: 0x0f) */
/* ================================================================================ */
/* ================        struct 'CRG_XTAL' Position & Mask       ================ */
/* ================================================================================ */
/* -------------------------  CRG_XTAL_CLK_FREQ_TRIM_REG  ------------------------- */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_TRIM_Pos (0UL)               /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_TRIM (Bit 0)            */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_TRIM_Msk (0x3ffUL)           /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_TRIM (Bitfield-Mask: 0x3ff) */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_RAMP_Pos (10UL)              /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_RAMP (Bit 10)           */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_RAMP_Msk (0xffc00UL)         /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_RAMP (Bitfield-Mask: 0x3ff) */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_START_Pos (20UL)             /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_START (Bit 20)          */
#define CRG_XTAL_CLK_FREQ_TRIM_REG_XTAL32M_START_Msk (0x3ff00000UL)     /*!< CRG_XTAL CLK_FREQ_TRIM_REG: XTAL32M_START (Bitfield-Mask: 0x3ff) */
/* -------------------------  CRG_XTAL_XTAL32M_TRSTAT_REG  ------------------------ */
#define CRG_XTAL_XTAL32M_TRSTAT_REG_XTAL32M_TRSTAT_Pos (0UL)            /*!< CRG_XTAL XTAL32M_TRSTAT_REG: XTAL32M_TRSTAT (Bit 0)         */
#define CRG_XTAL_XTAL32M_TRSTAT_REG_XTAL32M_TRSTAT_Msk (0x7fffUL)       /*!< CRG_XTAL XTAL32M_TRSTAT_REG: XTAL32M_TRSTAT (Bitfield-Mask: 0x7fff) */
/* ---------------------------  CRG_XTAL_TRIM_CTRL_REG  --------------------------- */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_COUNT_N_Pos (0UL)                   /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_COUNT_N (Bit 0)                */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_COUNT_N_Msk (0x3fUL)                /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_COUNT_N (Bitfield-Mask: 0x3f)  */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_TRIM_SELECT_Pos (6UL)               /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_TRIM_SELECT (Bit 6)            */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_TRIM_SELECT_Msk (0xc0UL)            /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_TRIM_SELECT (Bitfield-Mask: 0x03) */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_SETTLE_N_Pos (8UL)                  /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_SETTLE_N (Bit 8)               */
#define CRG_XTAL_TRIM_CTRL_REG_XTAL_SETTLE_N_Msk (0x3f00UL)             /*!< CRG_XTAL TRIM_CTRL_REG: XTAL_SETTLE_N (Bitfield-Mask: 0x3f) */
/* --------------------------  CRG_XTAL_XTALRDY_CTRL_REG  ------------------------- */
#define CRG_XTAL_XTALRDY_CTRL_REG_XTALRDY_CNT_Pos (0UL)                 /*!< CRG_XTAL XTALRDY_CTRL_REG: XTALRDY_CNT (Bit 0)              */
#define CRG_XTAL_XTALRDY_CTRL_REG_XTALRDY_CNT_Msk (0xffUL)              /*!< CRG_XTAL XTALRDY_CTRL_REG: XTALRDY_CNT (Bitfield-Mask: 0xff) */
#define CRG_XTAL_XTALRDY_CTRL_REG_XTALRDY_CLK_SEL_Pos (8UL)             /*!< CRG_XTAL XTALRDY_CTRL_REG: XTALRDY_CLK_SEL (Bit 8)          */
#define CRG_XTAL_XTALRDY_CTRL_REG_XTALRDY_CLK_SEL_Msk (0x100UL)         /*!< CRG_XTAL XTALRDY_CTRL_REG: XTALRDY_CLK_SEL (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_XTAL_XTALRDY_STAT_REG  ------------------------- */
#define CRG_XTAL_XTALRDY_STAT_REG_XTALRDY_STAT_Pos (0UL)                /*!< CRG_XTAL XTALRDY_STAT_REG: XTALRDY_STAT (Bit 0)             */
#define CRG_XTAL_XTALRDY_STAT_REG_XTALRDY_STAT_Msk (0xffUL)             /*!< CRG_XTAL XTALRDY_STAT_REG: XTALRDY_STAT (Bitfield-Mask: 0xff) */
#define CRG_XTAL_XTALRDY_STAT_REG_XTALRDY_COUNT_Pos (8UL)               /*!< CRG_XTAL XTALRDY_STAT_REG: XTALRDY_COUNT (Bit 8)            */
#define CRG_XTAL_XTALRDY_STAT_REG_XTALRDY_COUNT_Msk (0xff00UL)          /*!< CRG_XTAL XTALRDY_STAT_REG: XTALRDY_COUNT (Bitfield-Mask: 0xff) */
/* -------------------------  CRG_XTAL_XTAL32M_CTRL0_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CXCOMP_ENABLE_Pos (0UL)      /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CXCOMP_ENABLE (Bit 0)   */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CXCOMP_ENABLE_Msk (0x1UL)    /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CXCOMP_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_XTAL_DRIVE_Pos (1UL)   /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_XTAL_DRIVE (Bit 1) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_XTAL_DRIVE_Msk (0x2UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_XTAL_DRIVE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DXTAL_ENABLE_Pos (2UL)       /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DXTAL_ENABLE (Bit 2)    */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DXTAL_ENABLE_Msk (0x4UL)     /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DXTAL_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_CALIBRATE_Pos (3UL)    /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_CALIBRATE (Bit 3) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_CALIBRATE_Msk (0x8UL)  /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_CALIBRATE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DCBLOCK_ENABLE_Pos (4UL)     /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DCBLOCK_ENABLE (Bit 4)  */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DCBLOCK_ENABLE_Msk (0x10UL)  /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DCBLOCK_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_LDO_VREF_HOLD_Pos (5UL)      /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_LDO_VREF_HOLD (Bit 5)   */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_LDO_VREF_HOLD_Msk (0x20UL)   /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_LDO_VREF_HOLD (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_BIAS_SAH_HOLD_Pos (6UL)      /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_BIAS_SAH_HOLD (Bit 6)   */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_BIAS_SAH_HOLD_Msk (0x40UL)   /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_BIAS_SAH_HOLD (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_BIAS_SAH_RADIO_GATE_Pos (7UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_BIAS_SAH_RADIO_GATE (Bit 7) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_BIAS_SAH_RADIO_GATE_Msk (0x80UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_BIAS_SAH_RADIO_GATE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DIFFBUF_BYPASS_Pos (8UL)     /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DIFFBUF_BYPASS (Bit 8)  */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DIFFBUF_BYPASS_Msk (0x100UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DIFFBUF_BYPASS (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_HOLD_AMPREG_RADIO_GATE_Pos (9UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_HOLD_AMPREG_RADIO_GATE (Bit 9) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_HOLD_AMPREG_RADIO_GATE_Msk (0x200UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_HOLD_AMPREG_RADIO_GATE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RFCLK_ENABLE_Pos (10UL)      /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RFCLK_ENABLE (Bit 10)   */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RFCLK_ENABLE_Msk (0x400UL)   /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RFCLK_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_SPIKE_FLT_DISABLE_Pos (11UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_SPIKE_FLT_DISABLE (Bit 11) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_SPIKE_FLT_DISABLE_Msk (0x800UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_SPIKE_FLT_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_HOLD_AMPREG_Pos (12UL)  /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_HOLD_AMPREG (Bit 12) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_HOLD_AMPREG_Msk (0x1000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_HOLD_AMPREG (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_SYNC_MODE_ENABLE_Pos (13UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_SYNC_MODE_ENABLE (Bit 13) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_RCOSC_SYNC_MODE_ENABLE_Msk (0x2000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_RCOSC_SYNC_MODE_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_GM_CURRENT_Pos (14UL)   /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_GM_CURRENT (Bit 14) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_GM_CURRENT_Msk (0x4000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_GM_CURRENT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_CUR_SET_Pos (15UL)      /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_CUR_SET (Bit 15)   */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_CUR_SET_Msk (0x38000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_CUR_SET (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPL_TRIM_Pos (18UL)    /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPL_TRIM (Bit 18) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPL_TRIM_Msk (0x1c0000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPL_TRIM (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPL_CTRL_DISABLE_Pos (21UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPL_CTRL_DISABLE (Bit 21) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPL_CTRL_DISABLE_Msk (0x200000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPL_CTRL_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_FREQ_TRIM_SW2_AMP_Pos (22UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_FREQ_TRIM_SW2_AMP (Bit 22) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_FREQ_TRIM_SW2_AMP_Msk (0x1c00000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_FREQ_TRIM_SW2_AMP (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPREG_SIG_SELECT_Pos (25UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPREG_SIG_SELECT (Bit 25) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_AMPREG_SIG_SELECT_Msk (0x2000000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_AMPREG_SIG_SELECT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_SW_DELAY_Pos (26UL)          /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_SW_DELAY (Bit 26)       */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_SW_DELAY_Msk (0x1c000000UL)  /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_SW_DELAY (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_MAX_CURRENT_Pos (29UL)  /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_MAX_CURRENT (Bit 29) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_CORE_MAX_CURRENT_Msk (0x20000000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_CORE_MAX_CURRENT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DXTAL_SYSPLL_ENABLE_Pos (30UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DXTAL_SYSPLL_ENABLE (Bit 30) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_DXTAL_SYSPLL_ENABLE_Msk (0x40000000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_DXTAL_SYSPLL_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_VARICAP_CX_ENABLE_Pos (31UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_VARICAP_CX_ENABLE (Bit 31) */
#define CRG_XTAL_XTAL32M_CTRL0_REG_XTAL32M_VARICAP_CX_ENABLE_Msk (0x80000000UL) /*!< CRG_XTAL XTAL32M_CTRL0_REG: XTAL32M_VARICAP_CX_ENABLE (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_XTAL32M_CTRL1_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_RCOSC_SYNC_DELAY_TRIM_Pos (0UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_RCOSC_SYNC_DELAY_TRIM (Bit 0) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_RCOSC_SYNC_DELAY_TRIM_Msk (0x1fUL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_RCOSC_SYNC_DELAY_TRIM (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDRIVE_Pos (5UL)     /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDRIVE (Bit 5)  */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDRIVE_Msk (0xe0UL)  /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDRIVE (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_DRIVE_CYCLES_Pos (8UL)       /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_DRIVE_CYCLES (Bit 8)    */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_DRIVE_CYCLES_Msk (0x1f00UL)  /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_DRIVE_CYCLES (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDRIVE_LSB_Pos (13UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDRIVE_LSB (Bit 13) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDRIVE_LSB_Msk (0x7fe000UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDRIVE_LSB (Bitfield-Mask: 0x3ff) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_XTAL_ENABLE_Pos (23UL)       /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_XTAL_ENABLE (Bit 23)    */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_XTAL_ENABLE_Msk (0x800000UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_XTAL_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TSETTLE_Pos (24UL)   /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TSETTLE (Bit 24) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TSETTLE_Msk (0x7000000UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TSETTLE (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_CORE_XTAL_DISCHARGE_Pos (27UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_CORE_XTAL_DISCHARGE (Bit 27) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_CORE_XTAL_DISCHARGE_Msk (0x8000000UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_CORE_XTAL_DISCHARGE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDISCHARGE_Pos (28UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDISCHARGE (Bit 28) */
#define CRG_XTAL_XTAL32M_CTRL1_REG_XTAL32M_STARTUP_TDISCHARGE_Msk (0x70000000UL) /*!< CRG_XTAL XTAL32M_CTRL1_REG: XTAL32M_STARTUP_TDISCHARGE (Bitfield-Mask: 0x07) */
/* -------------------------  CRG_XTAL_XTAL32M_CTRL2_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_BIAS_TRIM_Pos (0UL)   /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_BIAS_TRIM (Bit 0) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_BIAS_TRIM_Msk (0x7UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_BIAS_TRIM (Bitfield-Mask: 0x07) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_TRIM_CAP_Pos (3UL)    /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_TRIM_CAP (Bit 3) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_TRIM_CAP_Msk (0xff8UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_TRIM_CAP (Bitfield-Mask: 0x1ff) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_PHI_TRIM_Pos (12UL)   /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_PHI_TRIM (Bit 12) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_CXCOMP_PHI_TRIM_Msk (0x3000UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_CXCOMP_PHI_TRIM (Bitfield-Mask: 0x03) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_RCOSC_TRIM_SNS_Pos (14UL)    /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_RCOSC_TRIM_SNS (Bit 14) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_RCOSC_TRIM_SNS_Msk (0x3fc000UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_RCOSC_TRIM_SNS (Bitfield-Mask: 0xff) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_FREQ_DET_LEN_Pos (22UL)      /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_FREQ_DET_LEN (Bit 22)   */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_FREQ_DET_LEN_Msk (0xc00000UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_FREQ_DET_LEN (Bitfield-Mask: 0x03) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_FREQ_DET_OFFSET_Pos (24UL)   /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_FREQ_DET_OFFSET (Bit 24) */
#define CRG_XTAL_XTAL32M_CTRL2_REG_XTAL32M_FREQ_DET_OFFSET_Msk (0xff000000UL) /*!< CRG_XTAL XTAL32M_CTRL2_REG: XTAL32M_FREQ_DET_OFFSET (Bitfield-Mask: 0xff) */
/* -------------------------  CRG_XTAL_XTAL32M_CTRL3_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_AMPREG_SIG_ENABLE_Pos (0UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_AMPREG_SIG_ENABLE (Bit 0) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_AMPREG_SIG_ENABLE_Msk (0x1UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_AMPREG_SIG_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_SAMPLE_AMPL_CTRL_Pos (1UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_SAMPLE_AMPL_CTRL (Bit 1) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_SAMPLE_AMPL_CTRL_Msk (0x2UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_SAMPLE_AMPL_CTRL (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_FB_ENABLE_Pos (2UL)     /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_FB_ENABLE (Bit 2)  */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_FB_ENABLE_Msk (0x4UL)   /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_FB_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_AMPREG_NULLBIAS_Pos (3UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_AMPREG_NULLBIAS (Bit 3) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_AMPREG_NULLBIAS_Msk (0x8UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_AMPREG_NULLBIAS (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_TRIM_Pos (4UL)         /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_TRIM (Bit 4)      */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_TRIM_Msk (0x3ff0UL)    /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_TRIM (Bitfield-Mask: 0x3ff) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_BAND_SELECT_Pos (14UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_BAND_SELECT (Bit 14) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_BAND_SELECT_Msk (0x3c000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_BAND_SELECT (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_SW_CTRL_MODE_Pos (18UL)      /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_SW_CTRL_MODE (Bit 18)   */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_SW_CTRL_MODE_Msk (0x40000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_SW_CTRL_MODE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_SYNC_GATE_Pos (19UL)   /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_SYNC_GATE (Bit 19) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_SYNC_GATE_Msk (0x80000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_SYNC_GATE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_SYNC_FORCE_Pos (20UL)  /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_SYNC_FORCE (Bit 20) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_SYNC_FORCE_Msk (0x100000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_SYNC_FORCE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_ENABLE_Pos (21UL)      /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_ENABLE (Bit 21)   */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_ENABLE_Msk (0x200000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_FREQ_DET_START_Pos (22UL)    /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_FREQ_DET_START (Bit 22) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_FREQ_DET_START_Msk (0x400000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_FREQ_DET_START (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_OSC_TRIM_OPEN_DISABLE_Pos (23UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_OSC_TRIM_OPEN_DISABLE (Bit 23) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_OSC_TRIM_OPEN_DISABLE_Msk (0x800000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_OSC_TRIM_OPEN_DISABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_I2V_TO_TESTBUS_Pos (24UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_I2V_TO_TESTBUS (Bit 24) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_I2V_TO_TESTBUS_Msk (0x1000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_I2V_TO_TESTBUS (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_I2V_TO_TESTBUS_10X_Pos (25UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_I2V_TO_TESTBUS_10X (Bit 25) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_CORE_I2V_TO_TESTBUS_10X_Msk (0x2000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_CORE_I2V_TO_TESTBUS_10X (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC2DXTAL_Pos (26UL)       /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC2DXTAL (Bit 26)    */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC2DXTAL_Msk (0x4000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC2DXTAL (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_DCBLOCK_LV_MODE_Pos (27UL)   /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_DCBLOCK_LV_MODE (Bit 27) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_DCBLOCK_LV_MODE_Msk (0x8000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_DCBLOCK_LV_MODE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_SW1_OUT_Pos (28UL)           /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_SW1_OUT (Bit 28)        */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_SW1_OUT_Msk (0x10000000UL)   /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_SW1_OUT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_OSC_TRIM_CAP_BIAS_Pos (29UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_OSC_TRIM_CAP_BIAS (Bit 29) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_OSC_TRIM_CAP_BIAS_Msk (0x20000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_OSC_TRIM_CAP_BIAS (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_TRIM_STROBE_Pos (30UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_TRIM_STROBE (Bit 30) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_RCOSC_TRIM_STROBE_Msk (0x40000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_RCOSC_TRIM_STROBE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_LDO_ENABLE_Pos (31UL)        /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_LDO_ENABLE (Bit 31)     */
#define CRG_XTAL_XTAL32M_CTRL3_REG_XTAL32M_LDO_ENABLE_Msk (0x80000000UL) /*!< CRG_XTAL XTAL32M_CTRL3_REG: XTAL32M_LDO_ENABLE (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_XTAL32M_CTRL4_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_SYNC_DELAY_TEST_Pos (0UL)    /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_SYNC_DELAY_TEST (Bit 0) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_SYNC_DELAY_TEST_Msk (0x1UL)  /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_SYNC_DELAY_TEST (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_LDO_TEST_Pos (1UL)           /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_LDO_TEST (Bit 1)        */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_LDO_TEST_Msk (0x2UL)         /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_LDO_TEST (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_Pos (2UL)        /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST (Bit 2)     */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_Msk (0x4UL)      /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_VARICAP_TEST_ENABLE_Pos (3UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_VARICAP_TEST_ENABLE (Bit 3) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_VARICAP_TEST_ENABLE_Msk (0x8UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_VARICAP_TEST_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_SW2_MASK_Pos (4UL)           /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_SW2_MASK (Bit 4)        */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_SW2_MASK_Msk (0x10UL)        /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_SW2_MASK (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_CTRL_Pos (5UL)   /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_CTRL (Bit 5) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_CTRL_Msk (0x1e0UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_CTRL (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_N_TO_TB_Pos (9UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_N_TO_TB (Bit 9) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_N_TO_TB_Msk (0x200UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_N_TO_TB (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_P_TO_TB_Pos (10UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_P_TO_TB (Bit 10) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_TEST_P_TO_TB_Msk (0x400UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_TEST_P_TO_TB (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RFCLK_ADC_TO_GPIO_Pos (11UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RFCLK_ADC_TO_GPIO (Bit 11) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RFCLK_ADC_TO_GPIO_Msk (0x800UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RFCLK_ADC_TO_GPIO (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RFCLK_ADPLL_TO_GPIO_Pos (12UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RFCLK_ADPLL_TO_GPIO (Bit 12) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RFCLK_ADPLL_TO_GPIO_Msk (0x1000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RFCLK_ADPLL_TO_GPIO (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_LDO_VREF_SELECT_Pos (13UL)   /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_LDO_VREF_SELECT (Bit 13) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_LDO_VREF_SELECT_Msk (0x2000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_LDO_VREF_SELECT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RST_N_XTAL_Pos (14UL)        /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RST_N_XTAL (Bit 14)     */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_RST_N_XTAL_Msk (0x4000UL)    /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_RST_N_XTAL (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_ENABLE_GATE_Pos (15UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_ENABLE_GATE (Bit 15) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_CXCOMP_ENABLE_GATE_Msk (0x8000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_CXCOMP_ENABLE_GATE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_AMPDET_BLANK_Pos (16UL)      /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_AMPDET_BLANK (Bit 16)   */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_AMPDET_BLANK_Msk (0x10000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_AMPDET_BLANK (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_TAMPDET_BLANK_Pos (17UL)     /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_TAMPDET_BLANK (Bit 17)  */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_TAMPDET_BLANK_Msk (0x60000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_TAMPDET_BLANK (Bitfield-Mask: 0x03) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_TAMPDET_BLANK_SETTLE_Pos (19UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_TAMPDET_BLANK_SETTLE (Bit 19) */
#define CRG_XTAL_XTAL32M_CTRL4_REG_XTAL32M_TAMPDET_BLANK_SETTLE_Msk (0x180000UL) /*!< CRG_XTAL XTAL32M_CTRL4_REG: XTAL32M_TAMPDET_BLANK_SETTLE (Bitfield-Mask: 0x03) */
/* -------------------------  CRG_XTAL_XTAL32M_STAT0_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_FREQ_DET_OUT_Pos (0UL)       /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_FREQ_DET_OUT (Bit 0)    */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_FREQ_DET_OUT_Msk (0x3fffUL)  /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_FREQ_DET_OUT (Bitfield-Mask: 0x3fff) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_FREQ_DET_END_Pos (14UL)      /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_FREQ_DET_END (Bit 14)   */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_FREQ_DET_END_Msk (0x4000UL)  /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_FREQ_DET_END (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_CALIBRATION_DONE_Pos (15UL) /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_CALIBRATION_DONE (Bit 15) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_CALIBRATION_DONE_Msk (0x8000UL) /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_CALIBRATION_DONE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_SW2_IN_Pos (16UL)            /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_SW2_IN (Bit 16)         */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_SW2_IN_Msk (0x10000UL)       /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_SW2_IN (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_LDO_OK_Pos (17UL)            /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_LDO_OK (Bit 17)         */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_LDO_OK_Msk (0x20000UL)       /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_LDO_OK (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_TRIM_STAT_Pos (18UL)   /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_TRIM_STAT (Bit 18) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_TRIM_STAT_Msk (0xffc0000UL) /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_TRIM_STAT (Bitfield-Mask: 0x3ff) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_BAND_SELECT_STAT_Pos (28UL) /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_BAND_SELECT_STAT (Bit 28) */
#define CRG_XTAL_XTAL32M_STAT0_REG_XTAL32M_RCOSC_BAND_SELECT_STAT_Msk (0xf0000000UL) /*!< CRG_XTAL XTAL32M_STAT0_REG: XTAL32M_RCOSC_BAND_SELECT_STAT (Bitfield-Mask: 0x0f) */
/* -------------------------  CRG_XTAL_XTAL32M_STAT1_REG  ------------------------- */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_STATE_Pos (0UL)              /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_STATE (Bit 0)           */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_STATE_Msk (0xfUL)            /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_STATE (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_CAL_STATE_Pos (4UL)          /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_CAL_STATE (Bit 4)       */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_CAL_STATE_Msk (0xf0UL)       /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_CAL_STATE (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SW2_OUT_Pos (8UL)            /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SW2_OUT (Bit 8)         */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SW2_OUT_Msk (0x100UL)        /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SW2_OUT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SETTLE_READY_Pos (9UL)       /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SETTLE_READY (Bit 9)    */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SETTLE_READY_Msk (0x200UL)   /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SETTLE_READY (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_TRIM_READY_Pos (10UL)        /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_TRIM_READY (Bit 10)     */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_TRIM_READY_Msk (0x400UL)     /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_TRIM_READY (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SM_TIMER_Pos (11UL)          /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SM_TIMER (Bit 11)       */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_SM_TIMER_Msk (0x7ff800UL)    /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_SM_TIMER (Bitfield-Mask: 0xfff) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_XTAL_DRIVE_STAT_Pos (23UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_XTAL_DRIVE_STAT (Bit 23) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_XTAL_DRIVE_STAT_Msk (0x800000UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_XTAL_DRIVE_STAT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_SYNC_GATE_STAT_Pos (24UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_SYNC_GATE_STAT (Bit 24) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_SYNC_GATE_STAT_Msk (0x1000000UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_SYNC_GATE_STAT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_SYNC_FORCE_STAT_Pos (25UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_SYNC_FORCE_STAT (Bit 25) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_RCOSC_SYNC_FORCE_STAT_Msk (0x2000000UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_RCOSC_SYNC_FORCE_STAT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_XTAL_OVERLOAD_Pos (26UL)     /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_XTAL_OVERLOAD (Bit 26)  */
#define CRG_XTAL_XTAL32M_STAT1_REG_XTAL32M_XTAL_OVERLOAD_Msk (0x4000000UL) /*!< CRG_XTAL XTAL32M_STAT1_REG: XTAL32M_XTAL_OVERLOAD (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_PLL_SYS_CTRL1_REG  ------------------------- */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_EN_Pos (1UL)                     /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_EN (Bit 1)                  */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_EN_Msk (0x2UL)                   /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_EN (Bitfield-Mask: 0x01)    */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_ENABLE_Pos (2UL)             /*!< CRG_XTAL PLL_SYS_CTRL1_REG: LDO_PLL_ENABLE (Bit 2)          */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_ENABLE_Msk (0x4UL)           /*!< CRG_XTAL PLL_SYS_CTRL1_REG: LDO_PLL_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_VREF_HOLD_Pos (3UL)          /*!< CRG_XTAL PLL_SYS_CTRL1_REG: LDO_PLL_VREF_HOLD (Bit 3)       */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_LDO_PLL_VREF_HOLD_Msk (0x8UL)        /*!< CRG_XTAL PLL_SYS_CTRL1_REG: LDO_PLL_VREF_HOLD (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_N_DIV_Pos (4UL)                  /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_N_DIV (Bit 4)               */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_N_DIV_Msk (0x7f0UL)              /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_N_DIV (Bitfield-Mask: 0x7f) */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_PRE_DIV_Pos (11UL)               /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_PRE_DIV (Bit 11)            */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_PRE_DIV_Msk (0x800UL)            /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_PRE_DIV (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_DEL_SEL_Pos (12UL)               /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_DEL_SEL (Bit 12)            */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_DEL_SEL_Msk (0x3000UL)           /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_DEL_SEL (Bitfield-Mask: 0x03) */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Pos (14UL)       /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_SEL_MIN_CUR_INT (Bit 14)    */
#define CRG_XTAL_PLL_SYS_CTRL1_REG_PLL_SEL_MIN_CUR_INT_Msk (0x4000UL)   /*!< CRG_XTAL PLL_SYS_CTRL1_REG: PLL_SEL_MIN_CUR_INT (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_PLL_SYS_CTRL2_REG  ------------------------- */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_ICP_SEL_Pos (0UL)                /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_ICP_SEL (Bit 0)             */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_ICP_SEL_Msk (0x1fUL)             /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_ICP_SEL (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_START_DEL_Pos (10UL)             /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_START_DEL (Bit 10)          */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_START_DEL_Msk (0x7c00UL)         /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_START_DEL (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_RECALIB_Pos (15UL)               /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_RECALIB (Bit 15)            */
#define CRG_XTAL_PLL_SYS_CTRL2_REG_PLL_RECALIB_Msk (0x8000UL)           /*!< CRG_XTAL PLL_SYS_CTRL2_REG: PLL_RECALIB (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_PLL_SYS_CTRL3_REG  ------------------------- */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_DIS_LOOPFILT_Pos (0UL)           /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_DIS_LOOPFILT (Bit 0)        */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_DIS_LOOPFILT_Msk (0x1UL)         /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_DIS_LOOPFILT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_MIN_CURRENT_Pos (1UL)            /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_MIN_CURRENT (Bit 1)         */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_MIN_CURRENT_Msk (0x7eUL)         /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_MIN_CURRENT (Bitfield-Mask: 0x3f) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_TEST_VCTR_Pos (7UL)              /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_TEST_VCTR (Bit 7)           */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_TEST_VCTR_Msk (0x80UL)           /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_TEST_VCTR (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_OPEN_LOOP_Pos (8UL)              /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_OPEN_LOOP (Bit 8)           */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_OPEN_LOOP_Msk (0x100UL)          /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_OPEN_LOOP (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_CHANGE_Pos (9UL)                 /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_CHANGE (Bit 9)              */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_CHANGE_Msk (0x200UL)             /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_CHANGE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_SEL_N_DIV_TEST_Pos (10UL)        /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_SEL_N_DIV_TEST (Bit 10)     */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_SEL_N_DIV_TEST_Msk (0x400UL)     /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_SEL_N_DIV_TEST (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_LOCK_DET_RES_CNT_Pos (13UL)      /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_LOCK_DET_RES_CNT (Bit 13)   */
#define CRG_XTAL_PLL_SYS_CTRL3_REG_PLL_LOCK_DET_RES_CNT_Msk (0xe000UL)  /*!< CRG_XTAL PLL_SYS_CTRL3_REG: PLL_LOCK_DET_RES_CNT (Bitfield-Mask: 0x07) */
/* -------------------------  CRG_XTAL_PLL_SYS_STATUS_REG  ------------------------ */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_LOCK_FINE_Pos (0UL)             /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_LOCK_FINE (Bit 0)          */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_LOCK_FINE_Msk (0x1UL)           /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_LOCK_FINE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_BEST_MIN_CUR_Pos (5UL)          /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_BEST_MIN_CUR (Bit 5)       */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_BEST_MIN_CUR_Msk (0x7e0UL)      /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_BEST_MIN_CUR (Bitfield-Mask: 0x3f) */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_CALIBRATION_END_Pos (11UL)      /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_CALIBRATION_END (Bit 11)   */
#define CRG_XTAL_PLL_SYS_STATUS_REG_PLL_CALIBRATION_END_Msk (0x800UL)   /*!< CRG_XTAL PLL_SYS_STATUS_REG: PLL_CALIBRATION_END (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL_SYS_STATUS_REG_LDO_PLL_OK_Pos (15UL)               /*!< CRG_XTAL PLL_SYS_STATUS_REG: LDO_PLL_OK (Bit 15)            */
#define CRG_XTAL_PLL_SYS_STATUS_REG_LDO_PLL_OK_Msk (0x8000UL)           /*!< CRG_XTAL PLL_SYS_STATUS_REG: LDO_PLL_OK (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_XTAL_PLL96M_CTRL1_REG  ------------------------- */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_ENABLE_Pos (0UL)               /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_ENABLE (Bit 0)            */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_ENABLE_Msk (0x1UL)             /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_ENABLE (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_DELTA_SEARCH_Pos (4UL)         /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_DELTA_SEARCH (Bit 4)      */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_DELTA_SEARCH_Msk (0xf0UL)      /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_DELTA_SEARCH (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_DELTA_COUNT_Pos (8UL)          /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_DELTA_COUNT (Bit 8)       */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_DELTA_COUNT_Msk (0x1f00UL)     /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_DELTA_COUNT (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_USE_OOP_TRIGGER_Pos (15UL)     /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_USE_OOP_TRIGGER (Bit 15)  */
#define CRG_XTAL_PLL96M_CTRL1_REG_PLL96M_USE_OOP_TRIGGER_Msk (0x8000UL) /*!< CRG_XTAL PLL96M_CTRL1_REG: PLL96M_USE_OOP_TRIGGER (Bitfield-Mask: 0x01) */
/* --------------------------  CRG_XTAL_PLL96M_CTRL2_REG  ------------------------- */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_EXTERN_CMD_Pos (0UL)           /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_EXTERN_CMD (Bit 0)        */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_EXTERN_CMD_Msk (0x1UL)         /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_EXTERN_CMD (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_INIT_DUTYCYCLE_Pos (1UL)       /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_INIT_DUTYCYCLE (Bit 1)    */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_INIT_DUTYCYCLE_Msk (0x7eUL)    /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_INIT_DUTYCYCLE (Bitfield-Mask: 0x3f) */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_INIT_DELAY_Pos (7UL)           /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_INIT_DELAY (Bit 7)        */
#define CRG_XTAL_PLL96M_CTRL2_REG_PLL96M_INIT_DELAY_Msk (0xff80UL)      /*!< CRG_XTAL PLL96M_CTRL2_REG: PLL96M_INIT_DELAY (Bitfield-Mask: 0x1ff) */
/* --------------------------  CRG_XTAL_PLL96M_CTRL3_REG  ------------------------- */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_PHD_CD1_Pos (0UL)              /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_PHD_CD1 (Bit 0)           */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_PHD_CD1_Msk (0xfUL)            /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_PHD_CD1 (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_PHD_CD2_Pos (4UL)              /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_PHD_CD2 (Bit 4)           */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_PHD_CD2_Msk (0xf0UL)           /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_PHD_CD2 (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_BIAS_Pos (8UL)                 /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_BIAS (Bit 8)              */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_BIAS_Msk (0xf00UL)             /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_BIAS (Bitfield-Mask: 0x0f) */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_CDEL1_Pos (12UL)               /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_CDEL1 (Bit 12)            */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_CDEL1_Msk (0x3000UL)           /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_CDEL1 (Bitfield-Mask: 0x03) */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_TST_CLK_INV_Pos (15UL)         /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_TST_CLK_INV (Bit 15)      */
#define CRG_XTAL_PLL96M_CTRL3_REG_PLL96M_TST_CLK_INV_Msk (0x8000UL)     /*!< CRG_XTAL PLL96M_CTRL3_REG: PLL96M_TST_CLK_INV (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_PLL96M_STATUS1_REG  ------------------------ */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_DELTA_DELAY_Pos (0UL)        /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_DELTA_DELAY (Bit 0)     */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_DELTA_DELAY_Msk (0xffUL)     /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_DELTA_DELAY (Bitfield-Mask: 0xff) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_EFF_DELAY_Pos (8UL)          /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_EFF_DELAY (Bit 8)       */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_EFF_DELAY_Msk (0x1ff00UL)    /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_EFF_DELAY (Bitfield-Mask: 0x1ff) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_TRIGGER_Pos (17UL)           /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_TRIGGER (Bit 17)        */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_TRIGGER_Msk (0x20000UL)      /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_TRIGGER (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_FINE_CNT_Pos (18UL)          /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_FINE_CNT (Bit 18)       */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_FINE_CNT_Msk (0xfc0000UL)    /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_FINE_CNT (Bitfield-Mask: 0x3f) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_ERROR_HISAT_Pos (24UL)       /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_ERROR_HISAT (Bit 24)    */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_ERROR_HISAT_Msk (0x1000000UL) /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_ERROR_HISAT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_ERROR_LOSAT_Pos (25UL)       /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_ERROR_LOSAT (Bit 25)    */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_ERROR_LOSAT_Msk (0x2000000UL) /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_ERROR_LOSAT (Bitfield-Mask: 0x01) */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_OK_Pos (26UL)                /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_OK (Bit 26)             */
#define CRG_XTAL_PLL96M_STATUS1_REG_PLL96M_OK_Msk (0x4000000UL)         /*!< CRG_XTAL PLL96M_STATUS1_REG: PLL96M_OK (Bitfield-Mask: 0x01) */
/* -------------------------  CRG_XTAL_PLL96M_STATUS2_REG  ------------------------ */
#define CRG_XTAL_PLL96M_STATUS2_REG_PLL96M_PHD_OUT_Pos (0UL)            /*!< CRG_XTAL PLL96M_STATUS2_REG: PLL96M_PHD_OUT (Bit 0)         */
#define CRG_XTAL_PLL96M_STATUS2_REG_PLL96M_PHD_OUT_Msk (0x1fUL)         /*!< CRG_XTAL PLL96M_STATUS2_REG: PLL96M_PHD_OUT (Bitfield-Mask: 0x1f) */
#define CRG_XTAL_PLL96M_STATUS2_REG_PLL96M_CNT96_Pos (5UL)              /*!< CRG_XTAL PLL96M_STATUS2_REG: PLL96M_CNT96 (Bit 5)           */
#define CRG_XTAL_PLL96M_STATUS2_REG_PLL96M_CNT96_Msk (0x7e0UL)          /*!< CRG_XTAL PLL96M_STATUS2_REG: PLL96M_CNT96 (Bitfield-Mask: 0x3f) */
/* ================================================================================ */
/* ================          struct 'DCDC' Position & Mask         ================ */
/* ================================================================================ */
/* -----------------------------  DCDC_DCDC_CTRL1_REG  ---------------------------- */
#define DCDC_DCDC_CTRL1_REG_DCDC_ENABLE_Pos   (0UL)                     /*!< DCDC DCDC_CTRL1_REG: DCDC_ENABLE (Bit 0)                    */
#define DCDC_DCDC_CTRL1_REG_DCDC_ENABLE_Msk   (0x1UL)                   /*!< DCDC DCDC_CTRL1_REG: DCDC_ENABLE (Bitfield-Mask: 0x01)      */
#define DCDC_DCDC_CTRL1_REG_DCDC_FW_ENABLE_Pos (1UL)                    /*!< DCDC DCDC_CTRL1_REG: DCDC_FW_ENABLE (Bit 1)                 */
#define DCDC_DCDC_CTRL1_REG_DCDC_FW_ENABLE_Msk (0x2UL)                  /*!< DCDC DCDC_CTRL1_REG: DCDC_FW_ENABLE (Bitfield-Mask: 0x01)   */
#define DCDC_DCDC_CTRL1_REG_DCDC_PRIORITY_Pos (2UL)                     /*!< DCDC DCDC_CTRL1_REG: DCDC_PRIORITY (Bit 2)                  */
#define DCDC_DCDC_CTRL1_REG_DCDC_PRIORITY_Msk (0x3fcUL)                 /*!< DCDC DCDC_CTRL1_REG: DCDC_PRIORITY (Bitfield-Mask: 0xff)    */
#define DCDC_DCDC_CTRL1_REG_DCDC_IDLE_CLK_DIV_Pos (10UL)                /*!< DCDC DCDC_CTRL1_REG: DCDC_IDLE_CLK_DIV (Bit 10)             */
#define DCDC_DCDC_CTRL1_REG_DCDC_IDLE_CLK_DIV_Msk (0xc00UL)             /*!< DCDC DCDC_CTRL1_REG: DCDC_IDLE_CLK_DIV (Bitfield-Mask: 0x03) */
#define DCDC_DCDC_CTRL1_REG_DCDC_AUTO_LV_MODE_Pos (12UL)                /*!< DCDC DCDC_CTRL1_REG: DCDC_AUTO_LV_MODE (Bit 12)             */
#define DCDC_DCDC_CTRL1_REG_DCDC_AUTO_LV_MODE_Msk (0x1000UL)            /*!< DCDC DCDC_CTRL1_REG: DCDC_AUTO_LV_MODE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_CTRL1_REG_DCDC_MAN_LV_MODE_Pos (13UL)                 /*!< DCDC DCDC_CTRL1_REG: DCDC_MAN_LV_MODE (Bit 13)              */
#define DCDC_DCDC_CTRL1_REG_DCDC_MAN_LV_MODE_Msk (0x2000UL)             /*!< DCDC DCDC_CTRL1_REG: DCDC_MAN_LV_MODE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_CTRL1_REG_DCDC_FAST_STARTUP_Pos (14UL)                /*!< DCDC DCDC_CTRL1_REG: DCDC_FAST_STARTUP (Bit 14)             */
#define DCDC_DCDC_CTRL1_REG_DCDC_FAST_STARTUP_Msk (0x4000UL)            /*!< DCDC DCDC_CTRL1_REG: DCDC_FAST_STARTUP (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_CTRL1_REG_DCDC_SW_TIMEOUT_Pos (15UL)                  /*!< DCDC DCDC_CTRL1_REG: DCDC_SW_TIMEOUT (Bit 15)               */
#define DCDC_DCDC_CTRL1_REG_DCDC_SW_TIMEOUT_Msk (0xf8000UL)             /*!< DCDC DCDC_CTRL1_REG: DCDC_SW_TIMEOUT (Bitfield-Mask: 0x1f)  */
#define DCDC_DCDC_CTRL1_REG_DCDC_IDLE_MAX_FAST_DOWNRAMP_Pos (20UL)      /*!< DCDC DCDC_CTRL1_REG: DCDC_IDLE_MAX_FAST_DOWNRAMP (Bit 20)   */
#define DCDC_DCDC_CTRL1_REG_DCDC_IDLE_MAX_FAST_DOWNRAMP_Msk (0x3f00000UL) /*!< DCDC DCDC_CTRL1_REG: DCDC_IDLE_MAX_FAST_DOWNRAMP (Bitfield-Mask: 0x3f) */
#define DCDC_DCDC_CTRL1_REG_DCDC_STARTUP_DELAY_Pos (26UL)               /*!< DCDC DCDC_CTRL1_REG: DCDC_STARTUP_DELAY (Bit 26)            */
#define DCDC_DCDC_CTRL1_REG_DCDC_STARTUP_DELAY_Msk (0x7c000000UL)       /*!< DCDC DCDC_CTRL1_REG: DCDC_STARTUP_DELAY (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_CTRL1_REG_DCDC_SH_ENABLE_Pos (31UL)                   /*!< DCDC DCDC_CTRL1_REG: DCDC_SH_ENABLE (Bit 31)                */
#define DCDC_DCDC_CTRL1_REG_DCDC_SH_ENABLE_Msk (0x80000000UL)           /*!< DCDC DCDC_CTRL1_REG: DCDC_SH_ENABLE (Bitfield-Mask: 0x01)   */
/* -----------------------------  DCDC_DCDC_CTRL2_REG  ---------------------------- */
#define DCDC_DCDC_CTRL2_REG_DCDC_HSGND_TRIM_Pos (0UL)                   /*!< DCDC DCDC_CTRL2_REG: DCDC_HSGND_TRIM (Bit 0)                */
#define DCDC_DCDC_CTRL2_REG_DCDC_HSGND_TRIM_Msk (0x3UL)                 /*!< DCDC DCDC_CTRL2_REG: DCDC_HSGND_TRIM (Bitfield-Mask: 0x03)  */
#define DCDC_DCDC_CTRL2_REG_DCDC_LSSUP_TRIM_Pos (2UL)                   /*!< DCDC DCDC_CTRL2_REG: DCDC_LSSUP_TRIM (Bit 2)                */
#define DCDC_DCDC_CTRL2_REG_DCDC_LSSUP_TRIM_Msk (0xcUL)                 /*!< DCDC DCDC_CTRL2_REG: DCDC_LSSUP_TRIM (Bitfield-Mask: 0x03)  */
#define DCDC_DCDC_CTRL2_REG_DCDC_VBTSTRP_TRIM_Pos (4UL)                 /*!< DCDC DCDC_CTRL2_REG: DCDC_VBTSTRP_TRIM (Bit 4)              */
#define DCDC_DCDC_CTRL2_REG_DCDC_VBTSTRP_TRIM_Msk (0x30UL)              /*!< DCDC DCDC_CTRL2_REG: DCDC_VBTSTRP_TRIM (Bitfield-Mask: 0x03) */
#define DCDC_DCDC_CTRL2_REG_DCDC_SLOPE_CONTROL_Pos (6UL)                /*!< DCDC DCDC_CTRL2_REG: DCDC_SLOPE_CONTROL (Bit 6)             */
#define DCDC_DCDC_CTRL2_REG_DCDC_SLOPE_CONTROL_Msk (0xc0UL)             /*!< DCDC DCDC_CTRL2_REG: DCDC_SLOPE_CONTROL (Bitfield-Mask: 0x03) */
#define DCDC_DCDC_CTRL2_REG_DCDC_TIMEOUT_IRQ_RES_Pos (8UL)              /*!< DCDC DCDC_CTRL2_REG: DCDC_TIMEOUT_IRQ_RES (Bit 8)           */
#define DCDC_DCDC_CTRL2_REG_DCDC_TIMEOUT_IRQ_RES_Msk (0xf00UL)          /*!< DCDC DCDC_CTRL2_REG: DCDC_TIMEOUT_IRQ_RES (Bitfield-Mask: 0x0f) */
#define DCDC_DCDC_CTRL2_REG_DCDC_TIMEOUT_IRQ_TRIG_Pos (12UL)            /*!< DCDC DCDC_CTRL2_REG: DCDC_TIMEOUT_IRQ_TRIG (Bit 12)         */
#define DCDC_DCDC_CTRL2_REG_DCDC_TIMEOUT_IRQ_TRIG_Msk (0xf000UL)        /*!< DCDC DCDC_CTRL2_REG: DCDC_TIMEOUT_IRQ_TRIG (Bitfield-Mask: 0x0f) */
#define DCDC_DCDC_CTRL2_REG_DCDC_N_COMP_TRIM_VAL_Pos (16UL)             /*!< DCDC DCDC_CTRL2_REG: DCDC_N_COMP_TRIM_VAL (Bit 16)          */
#define DCDC_DCDC_CTRL2_REG_DCDC_N_COMP_TRIM_VAL_Msk (0x3f0000UL)       /*!< DCDC DCDC_CTRL2_REG: DCDC_N_COMP_TRIM_VAL (Bitfield-Mask: 0x3f) */
#define DCDC_DCDC_CTRL2_REG_DCDC_N_COMP_TRIM_MAN_Pos (22UL)             /*!< DCDC DCDC_CTRL2_REG: DCDC_N_COMP_TRIM_MAN (Bit 22)          */
#define DCDC_DCDC_CTRL2_REG_DCDC_N_COMP_TRIM_MAN_Msk (0x400000UL)       /*!< DCDC DCDC_CTRL2_REG: DCDC_N_COMP_TRIM_MAN (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_CTRL2_REG_DCDC_V_NOK_CNT_MAX_Pos (24UL)               /*!< DCDC DCDC_CTRL2_REG: DCDC_V_NOK_CNT_MAX (Bit 24)            */
#define DCDC_DCDC_CTRL2_REG_DCDC_V_NOK_CNT_MAX_Msk (0xf000000UL)        /*!< DCDC DCDC_CTRL2_REG: DCDC_V_NOK_CNT_MAX (Bitfield-Mask: 0x0f) */
/* ------------------------------  DCDC_DCDC_V14_REG  ----------------------------- */
#define DCDC_DCDC_V14_REG_DCDC_V14_ENABLE_LV_Pos (0UL)                  /*!< DCDC DCDC_V14_REG: DCDC_V14_ENABLE_LV (Bit 0)               */
#define DCDC_DCDC_V14_REG_DCDC_V14_ENABLE_LV_Msk (0x1UL)                /*!< DCDC DCDC_V14_REG: DCDC_V14_ENABLE_LV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V14_REG_DCDC_V14_ENABLE_HV_Pos (1UL)                  /*!< DCDC DCDC_V14_REG: DCDC_V14_ENABLE_HV (Bit 1)               */
#define DCDC_DCDC_V14_REG_DCDC_V14_ENABLE_HV_Msk (0x2UL)                /*!< DCDC DCDC_V14_REG: DCDC_V14_ENABLE_HV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V14_REG_DCDC_V14_IDLE_MIN_Pos (2UL)                   /*!< DCDC DCDC_V14_REG: DCDC_V14_IDLE_MIN (Bit 2)                */
#define DCDC_DCDC_V14_REG_DCDC_V14_IDLE_MIN_Msk (0x7cUL)                /*!< DCDC DCDC_V14_REG: DCDC_V14_IDLE_MIN (Bitfield-Mask: 0x1f)  */
#define DCDC_DCDC_V14_REG_DCDC_V14_IDLE_HYST_Pos (7UL)                  /*!< DCDC DCDC_V14_REG: DCDC_V14_IDLE_HYST (Bit 7)               */
#define DCDC_DCDC_V14_REG_DCDC_V14_IDLE_HYST_Msk (0xf80UL)              /*!< DCDC DCDC_V14_REG: DCDC_V14_IDLE_HYST (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MIN_Pos (12UL)               /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MIN (Bit 12)            */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MIN_Msk (0x1f000UL)          /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MIN (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MAX_LV_Pos (17UL)            /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MAX_LV (Bit 17)         */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MAX_LV_Msk (0x3e0000UL)      /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MAX_LV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MAX_HV_Pos (22UL)            /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MAX_HV (Bit 22)         */
#define DCDC_DCDC_V14_REG_DCDC_V14_CUR_LIM_MAX_HV_Msk (0x7c00000UL)     /*!< DCDC DCDC_V14_REG: DCDC_V14_CUR_LIM_MAX_HV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V14_REG_DCDC_V14_TRIM_Pos   (27UL)                    /*!< DCDC DCDC_V14_REG: DCDC_V14_TRIM (Bit 27)                   */
#define DCDC_DCDC_V14_REG_DCDC_V14_TRIM_Msk   (0x8000000UL)             /*!< DCDC DCDC_V14_REG: DCDC_V14_TRIM (Bitfield-Mask: 0x01)      */
#define DCDC_DCDC_V14_REG_DCDC_V14_FAST_RAMPING_Pos (31UL)              /*!< DCDC DCDC_V14_REG: DCDC_V14_FAST_RAMPING (Bit 31)           */
#define DCDC_DCDC_V14_REG_DCDC_V14_FAST_RAMPING_Msk (0x80000000UL)      /*!< DCDC DCDC_V14_REG: DCDC_V14_FAST_RAMPING (Bitfield-Mask: 0x01) */
/* ------------------------------  DCDC_DCDC_VDD_REG  ----------------------------- */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_ENABLE_LV_Pos (0UL)                  /*!< DCDC DCDC_VDD_REG: DCDC_VDD_ENABLE_LV (Bit 0)               */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_ENABLE_LV_Msk (0x1UL)                /*!< DCDC DCDC_VDD_REG: DCDC_VDD_ENABLE_LV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_ENABLE_HV_Pos (1UL)                  /*!< DCDC DCDC_VDD_REG: DCDC_VDD_ENABLE_HV (Bit 1)               */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_ENABLE_HV_Msk (0x2UL)                /*!< DCDC DCDC_VDD_REG: DCDC_VDD_ENABLE_HV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_IDLE_MIN_Pos (2UL)                   /*!< DCDC DCDC_VDD_REG: DCDC_VDD_IDLE_MIN (Bit 2)                */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_IDLE_MIN_Msk (0x7cUL)                /*!< DCDC DCDC_VDD_REG: DCDC_VDD_IDLE_MIN (Bitfield-Mask: 0x1f)  */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_IDLE_HYST_Pos (7UL)                  /*!< DCDC DCDC_VDD_REG: DCDC_VDD_IDLE_HYST (Bit 7)               */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_IDLE_HYST_Msk (0xf80UL)              /*!< DCDC DCDC_VDD_REG: DCDC_VDD_IDLE_HYST (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MIN_Pos (12UL)               /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MIN (Bit 12)            */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MIN_Msk (0x1f000UL)          /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MIN (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MAX_LV_Pos (17UL)            /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MAX_LV (Bit 17)         */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MAX_LV_Msk (0x3e0000UL)      /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MAX_LV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MAX_HV_Pos (22UL)            /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MAX_HV (Bit 22)         */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_CUR_LIM_MAX_HV_Msk (0x7c00000UL)     /*!< DCDC DCDC_VDD_REG: DCDC_VDD_CUR_LIM_MAX_HV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_TRIM_Pos   (27UL)                    /*!< DCDC DCDC_VDD_REG: DCDC_VDD_TRIM (Bit 27)                   */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_TRIM_Msk   (0x38000000UL)            /*!< DCDC DCDC_VDD_REG: DCDC_VDD_TRIM (Bitfield-Mask: 0x07)      */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_FAST_RAMPING_Pos (31UL)              /*!< DCDC DCDC_VDD_REG: DCDC_VDD_FAST_RAMPING (Bit 31)           */
#define DCDC_DCDC_VDD_REG_DCDC_VDD_FAST_RAMPING_Msk (0x80000000UL)      /*!< DCDC DCDC_VDD_REG: DCDC_VDD_FAST_RAMPING (Bitfield-Mask: 0x01) */
/* ------------------------------  DCDC_DCDC_V18_REG  ----------------------------- */
#define DCDC_DCDC_V18_REG_DCDC_V18_ENABLE_LV_Pos (0UL)                  /*!< DCDC DCDC_V18_REG: DCDC_V18_ENABLE_LV (Bit 0)               */
#define DCDC_DCDC_V18_REG_DCDC_V18_ENABLE_LV_Msk (0x1UL)                /*!< DCDC DCDC_V18_REG: DCDC_V18_ENABLE_LV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V18_REG_DCDC_V18_ENABLE_HV_Pos (1UL)                  /*!< DCDC DCDC_V18_REG: DCDC_V18_ENABLE_HV (Bit 1)               */
#define DCDC_DCDC_V18_REG_DCDC_V18_ENABLE_HV_Msk (0x2UL)                /*!< DCDC DCDC_V18_REG: DCDC_V18_ENABLE_HV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V18_REG_DCDC_V18_IDLE_MIN_Pos (2UL)                   /*!< DCDC DCDC_V18_REG: DCDC_V18_IDLE_MIN (Bit 2)                */
#define DCDC_DCDC_V18_REG_DCDC_V18_IDLE_MIN_Msk (0x7cUL)                /*!< DCDC DCDC_V18_REG: DCDC_V18_IDLE_MIN (Bitfield-Mask: 0x1f)  */
#define DCDC_DCDC_V18_REG_DCDC_V18_IDLE_HYST_Pos (7UL)                  /*!< DCDC DCDC_V18_REG: DCDC_V18_IDLE_HYST (Bit 7)               */
#define DCDC_DCDC_V18_REG_DCDC_V18_IDLE_HYST_Msk (0xf80UL)              /*!< DCDC DCDC_V18_REG: DCDC_V18_IDLE_HYST (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MIN_Pos (12UL)               /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MIN (Bit 12)            */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MIN_Msk (0x1f000UL)          /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MIN (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MAX_LV_Pos (17UL)            /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MAX_LV (Bit 17)         */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MAX_LV_Msk (0x3e0000UL)      /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MAX_LV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MAX_HV_Pos (22UL)            /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MAX_HV (Bit 22)         */
#define DCDC_DCDC_V18_REG_DCDC_V18_CUR_LIM_MAX_HV_Msk (0x7c00000UL)     /*!< DCDC DCDC_V18_REG: DCDC_V18_CUR_LIM_MAX_HV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18_REG_DCDC_V18_TRIM_Pos   (27UL)                    /*!< DCDC DCDC_V18_REG: DCDC_V18_TRIM (Bit 27)                   */
#define DCDC_DCDC_V18_REG_DCDC_V18_TRIM_Msk   (0x78000000UL)            /*!< DCDC DCDC_V18_REG: DCDC_V18_TRIM (Bitfield-Mask: 0x0f)      */
#define DCDC_DCDC_V18_REG_DCDC_V18_FAST_RAMPING_Pos (31UL)              /*!< DCDC DCDC_V18_REG: DCDC_V18_FAST_RAMPING (Bit 31)           */
#define DCDC_DCDC_V18_REG_DCDC_V18_FAST_RAMPING_Msk (0x80000000UL)      /*!< DCDC DCDC_V18_REG: DCDC_V18_FAST_RAMPING (Bitfield-Mask: 0x01) */
/* -----------------------------  DCDC_DCDC_V18P_REG  ----------------------------- */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_ENABLE_LV_Pos (0UL)                /*!< DCDC DCDC_V18P_REG: DCDC_V18P_ENABLE_LV (Bit 0)             */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_ENABLE_LV_Msk (0x1UL)              /*!< DCDC DCDC_V18P_REG: DCDC_V18P_ENABLE_LV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_ENABLE_HV_Pos (1UL)                /*!< DCDC DCDC_V18P_REG: DCDC_V18P_ENABLE_HV (Bit 1)             */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_ENABLE_HV_Msk (0x2UL)              /*!< DCDC DCDC_V18P_REG: DCDC_V18P_ENABLE_HV (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_IDLE_MIN_Pos (2UL)                 /*!< DCDC DCDC_V18P_REG: DCDC_V18P_IDLE_MIN (Bit 2)              */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_IDLE_MIN_Msk (0x7cUL)              /*!< DCDC DCDC_V18P_REG: DCDC_V18P_IDLE_MIN (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_IDLE_HYST_Pos (7UL)                /*!< DCDC DCDC_V18P_REG: DCDC_V18P_IDLE_HYST (Bit 7)             */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_IDLE_HYST_Msk (0xf80UL)            /*!< DCDC DCDC_V18P_REG: DCDC_V18P_IDLE_HYST (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MIN_Pos (12UL)             /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MIN (Bit 12)          */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MIN_Msk (0x1f000UL)        /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MIN (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MAX_LV_Pos (17UL)          /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MAX_LV (Bit 17)       */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MAX_LV_Msk (0x3e0000UL)    /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MAX_LV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MAX_HV_Pos (22UL)          /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MAX_HV (Bit 22)       */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_CUR_LIM_MAX_HV_Msk (0x7c00000UL)   /*!< DCDC DCDC_V18P_REG: DCDC_V18P_CUR_LIM_MAX_HV (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_TRIM_Pos (27UL)                    /*!< DCDC DCDC_V18P_REG: DCDC_V18P_TRIM (Bit 27)                 */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_TRIM_Msk (0x78000000UL)            /*!< DCDC DCDC_V18P_REG: DCDC_V18P_TRIM (Bitfield-Mask: 0x0f)    */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_FAST_RAMPING_Pos (31UL)            /*!< DCDC DCDC_V18P_REG: DCDC_V18P_FAST_RAMPING (Bit 31)         */
#define DCDC_DCDC_V18P_REG_DCDC_V18P_FAST_RAMPING_Msk (0x80000000UL)    /*!< DCDC DCDC_V18P_REG: DCDC_V18P_FAST_RAMPING (Bitfield-Mask: 0x01) */
/* -----------------------------  DCDC_DCDC_TEST_REG  ----------------------------- */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_P_SW_Pos (0UL)                    /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_P_SW (Bit 0)                 */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_P_SW_Msk (0x1UL)                  /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_P_SW (Bitfield-Mask: 0x01)   */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_N_SW_Pos (1UL)                    /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_N_SW (Bit 1)                 */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_N_SW_Msk (0x2UL)                  /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_N_SW (Bitfield-Mask: 0x01)   */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_FW_SW_Pos (2UL)                   /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_FW_SW (Bit 2)                */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_FW_SW_Msk (0x4UL)                 /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_FW_SW (Bitfield-Mask: 0x01)  */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V14_SW_Pos (3UL)                  /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V14_SW (Bit 3)               */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V14_SW_Msk (0x8UL)                /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V14_SW (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V18_SW_Pos (4UL)                  /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V18_SW (Bit 4)               */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V18_SW_Msk (0x10UL)               /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V18_SW (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_VDD_SW_Pos (5UL)                  /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_VDD_SW (Bit 5)               */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_VDD_SW_Msk (0x20UL)               /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_VDD_SW (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V18P_SW_Pos (6UL)                 /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V18P_SW (Bit 6)              */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_V18P_SW_Msk (0x40UL)              /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_V18P_SW (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_IDLE_Pos (7UL)                    /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_IDLE (Bit 7)                 */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_IDLE_Msk (0x80UL)                 /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_IDLE (Bitfield-Mask: 0x01)   */
#define DCDC_DCDC_TEST_REG_DCDC_ANA_TEST_Pos  (8UL)                     /*!< DCDC DCDC_TEST_REG: DCDC_ANA_TEST (Bit 8)                   */
#define DCDC_DCDC_TEST_REG_DCDC_ANA_TEST_Msk  (0x700UL)                 /*!< DCDC DCDC_TEST_REG: DCDC_ANA_TEST (Bitfield-Mask: 0x07)     */
#define DCDC_DCDC_TEST_REG_DCDC_OUTPUT_MON_Pos (11UL)                   /*!< DCDC DCDC_TEST_REG: DCDC_OUTPUT_MON (Bit 11)                */
#define DCDC_DCDC_TEST_REG_DCDC_OUTPUT_MON_Msk (0x3800UL)               /*!< DCDC DCDC_TEST_REG: DCDC_OUTPUT_MON (Bitfield-Mask: 0x07)   */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_COMP_CLK_Pos (14UL)               /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_COMP_CLK (Bit 14)            */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_COMP_CLK_Msk (0x4000UL)           /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_COMP_CLK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_CUR_LIM_Pos (15UL)                /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_CUR_LIM (Bit 15)             */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_CUR_LIM_Msk (0x8000UL)            /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_CUR_LIM (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_COMP_CLK_VAL_Pos (16UL)           /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_COMP_CLK_VAL (Bit 16)        */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_COMP_CLK_VAL_Msk (0xf0000UL)      /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_COMP_CLK_VAL (Bitfield-Mask: 0x0f) */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_CUR_LIM_VAL_Pos (20UL)            /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_CUR_LIM_VAL (Bit 20)         */
#define DCDC_DCDC_TEST_REG_DCDC_FORCE_CUR_LIM_VAL_Msk (0x1f00000UL)     /*!< DCDC DCDC_TEST_REG: DCDC_FORCE_CUR_LIM_VAL (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_TEST_REG_DCDC_TEST_OUT_Pos  (25UL)                    /*!< DCDC DCDC_TEST_REG: DCDC_TEST_OUT (Bit 25)                  */
#define DCDC_DCDC_TEST_REG_DCDC_TEST_OUT_Msk  (0x1e000000UL)            /*!< DCDC DCDC_TEST_REG: DCDC_TEST_OUT (Bitfield-Mask: 0x0f)     */
/* ----------------------------  DCDC_DCDC_STATUS1_REG  --------------------------- */
#define DCDC_DCDC_STATUS1_REG_DCDC_STARTUP_COMPLETE_Pos (0UL)           /*!< DCDC DCDC_STATUS1_REG: DCDC_STARTUP_COMPLETE (Bit 0)        */
#define DCDC_DCDC_STATUS1_REG_DCDC_STARTUP_COMPLETE_Msk (0x1UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_STARTUP_COMPLETE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_P_SW_STATE_Pos (1UL)                 /*!< DCDC DCDC_STATUS1_REG: DCDC_P_SW_STATE (Bit 1)              */
#define DCDC_DCDC_STATUS1_REG_DCDC_P_SW_STATE_Msk (0x2UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_P_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_SW_STATE_Pos (2UL)                 /*!< DCDC DCDC_STATUS1_REG: DCDC_N_SW_STATE (Bit 2)              */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_SW_STATE_Msk (0x4UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_N_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_SW_STATE_Pos (3UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_SW_STATE (Bit 3)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_SW_STATE_Msk (0x8UL)             /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_SW_STATE_Pos (4UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_SW_STATE (Bit 4)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_SW_STATE_Msk (0x10UL)            /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_SW_STATE_Pos (5UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_SW_STATE (Bit 5)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_SW_STATE_Msk (0x20UL)            /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_SW_STATE_Pos (6UL)              /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_SW_STATE (Bit 6)           */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_SW_STATE_Msk (0x40UL)           /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_SW_STATE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_LV_MODE_Pos (7UL)                    /*!< DCDC DCDC_STATUS1_REG: DCDC_LV_MODE (Bit 7)                 */
#define DCDC_DCDC_STATUS1_REG_DCDC_LV_MODE_Msk (0x80UL)                 /*!< DCDC DCDC_STATUS1_REG: DCDC_LV_MODE (Bitfield-Mask: 0x01)   */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_Pos (8UL)                     /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP (Bit 8)                  */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_Msk (0x100UL)                 /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP (Bitfield-Mask: 0x01)    */
#define DCDC_DCDC_STATUS1_REG_DCDC_P_COMP_Pos (9UL)                     /*!< DCDC DCDC_STATUS1_REG: DCDC_P_COMP (Bit 9)                  */
#define DCDC_DCDC_STATUS1_REG_DCDC_P_COMP_Msk (0x200UL)                 /*!< DCDC DCDC_STATUS1_REG: DCDC_P_COMP (Bitfield-Mask: 0x01)    */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_N_Pos (10UL)                  /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP_N (Bit 10)               */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_N_Msk (0x400UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP_N (Bitfield-Mask: 0x01)  */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_P_Pos (11UL)                  /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP_P (Bit 11)               */
#define DCDC_DCDC_STATUS1_REG_DCDC_N_COMP_P_Msk (0x800UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_N_COMP_P (Bitfield-Mask: 0x01)  */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_COMP_NOK_Pos (16UL)              /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_COMP_NOK (Bit 16)           */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_COMP_NOK_Msk (0x10000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_COMP_NOK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_COMP_NOK_Pos (17UL)              /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_COMP_NOK (Bit 17)           */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_COMP_NOK_Msk (0x20000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_COMP_NOK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_COMP_NOK_Pos (18UL)              /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_COMP_NOK (Bit 18)           */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_COMP_NOK_Msk (0x40000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_COMP_NOK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_COMP_NOK_Pos (19UL)             /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_COMP_NOK (Bit 19)          */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_COMP_NOK_Msk (0x80000UL)        /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_COMP_NOK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_COMP_OK_Pos (20UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_COMP_OK (Bit 20)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_COMP_OK_Msk (0x100000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_COMP_OK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_COMP_OK_Pos (21UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_COMP_OK (Bit 21)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_COMP_OK_Msk (0x200000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_COMP_OK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_COMP_OK_Pos (22UL)               /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_COMP_OK (Bit 22)            */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_COMP_OK_Msk (0x400000UL)         /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_COMP_OK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_COMP_OK_Pos (23UL)              /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_COMP_OK (Bit 23)           */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_COMP_OK_Msk (0x800000UL)        /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_COMP_OK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_AVAILABLE_Pos (24UL)             /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_AVAILABLE (Bit 24)          */
#define DCDC_DCDC_STATUS1_REG_DCDC_V14_AVAILABLE_Msk (0x1000000UL)      /*!< DCDC DCDC_STATUS1_REG: DCDC_V14_AVAILABLE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_AVAILABLE_Pos (25UL)             /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_AVAILABLE (Bit 25)          */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18_AVAILABLE_Msk (0x2000000UL)      /*!< DCDC DCDC_STATUS1_REG: DCDC_V18_AVAILABLE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_AVAILABLE_Pos (26UL)             /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_AVAILABLE (Bit 26)          */
#define DCDC_DCDC_STATUS1_REG_DCDC_VDD_AVAILABLE_Msk (0x4000000UL)      /*!< DCDC DCDC_STATUS1_REG: DCDC_VDD_AVAILABLE (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_AVAILABLE_Pos (27UL)            /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_AVAILABLE (Bit 27)         */
#define DCDC_DCDC_STATUS1_REG_DCDC_V18P_AVAILABLE_Msk (0x8000000UL)     /*!< DCDC DCDC_STATUS1_REG: DCDC_V18P_AVAILABLE (Bitfield-Mask: 0x01) */
/* ----------------------------  DCDC_DCDC_STATUS2_REG  --------------------------- */
#define DCDC_DCDC_STATUS2_REG_DCDC_V14_CUR_LIM_Pos (0UL)                /*!< DCDC DCDC_STATUS2_REG: DCDC_V14_CUR_LIM (Bit 0)             */
#define DCDC_DCDC_STATUS2_REG_DCDC_V14_CUR_LIM_Msk (0x1fUL)             /*!< DCDC DCDC_STATUS2_REG: DCDC_V14_CUR_LIM (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_STATUS2_REG_DCDC_VDD_CUR_LIM_Pos (5UL)                /*!< DCDC DCDC_STATUS2_REG: DCDC_VDD_CUR_LIM (Bit 5)             */
#define DCDC_DCDC_STATUS2_REG_DCDC_VDD_CUR_LIM_Msk (0x3e0UL)            /*!< DCDC DCDC_STATUS2_REG: DCDC_VDD_CUR_LIM (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_STATUS2_REG_DCDC_V18_CUR_LIM_Pos (16UL)               /*!< DCDC DCDC_STATUS2_REG: DCDC_V18_CUR_LIM (Bit 16)            */
#define DCDC_DCDC_STATUS2_REG_DCDC_V18_CUR_LIM_Msk (0x1f0000UL)         /*!< DCDC DCDC_STATUS2_REG: DCDC_V18_CUR_LIM (Bitfield-Mask: 0x1f) */
#define DCDC_DCDC_STATUS2_REG_DCDC_V18P_CUR_LIM_Pos (21UL)              /*!< DCDC DCDC_STATUS2_REG: DCDC_V18P_CUR_LIM (Bit 21)           */
#define DCDC_DCDC_STATUS2_REG_DCDC_V18P_CUR_LIM_Msk (0x3e00000UL)       /*!< DCDC DCDC_STATUS2_REG: DCDC_V18P_CUR_LIM (Bitfield-Mask: 0x1f) */
/* ----------------------------  DCDC_DCDC_STATUS3_REG  --------------------------- */
#define DCDC_DCDC_STATUS3_REG_DCDC_V14_N_COMP_TRIM_Pos (0UL)            /*!< DCDC DCDC_STATUS3_REG: DCDC_V14_N_COMP_TRIM (Bit 0)         */
#define DCDC_DCDC_STATUS3_REG_DCDC_V14_N_COMP_TRIM_Msk (0x3fUL)         /*!< DCDC DCDC_STATUS3_REG: DCDC_V14_N_COMP_TRIM (Bitfield-Mask: 0x3f) */
#define DCDC_DCDC_STATUS3_REG_DCDC_VDD_N_COMP_TRIM_Pos (6UL)            /*!< DCDC DCDC_STATUS3_REG: DCDC_VDD_N_COMP_TRIM (Bit 6)         */
#define DCDC_DCDC_STATUS3_REG_DCDC_VDD_N_COMP_TRIM_Msk (0xfc0UL)        /*!< DCDC DCDC_STATUS3_REG: DCDC_VDD_N_COMP_TRIM (Bitfield-Mask: 0x3f) */
#define DCDC_DCDC_STATUS3_REG_DCDC_V18_N_COMP_TRIM_Pos (16UL)           /*!< DCDC DCDC_STATUS3_REG: DCDC_V18_N_COMP_TRIM (Bit 16)        */
#define DCDC_DCDC_STATUS3_REG_DCDC_V18_N_COMP_TRIM_Msk (0x3f0000UL)     /*!< DCDC DCDC_STATUS3_REG: DCDC_V18_N_COMP_TRIM (Bitfield-Mask: 0x3f) */
#define DCDC_DCDC_STATUS3_REG_DCDC_V18P_N_COMP_TRIM_Pos (22UL)          /*!< DCDC DCDC_STATUS3_REG: DCDC_V18P_N_COMP_TRIM (Bit 22)       */
#define DCDC_DCDC_STATUS3_REG_DCDC_V18P_N_COMP_TRIM_Msk (0xfc00000UL)   /*!< DCDC DCDC_STATUS3_REG: DCDC_V18P_N_COMP_TRIM (Bitfield-Mask: 0x3f) */
/* ----------------------------  DCDC_DCDC_STATUS4_REG  --------------------------- */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_0_Pos (0UL)               /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_0 (Bit 0)            */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_0_Msk (0x7UL)             /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_0 (Bitfield-Mask: 0x07) */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_1_Pos (3UL)               /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_1 (Bit 3)            */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_1_Msk (0x38UL)            /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_1 (Bitfield-Mask: 0x07) */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_2_Pos (6UL)               /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_2 (Bit 6)            */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_2_Msk (0x1c0UL)           /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_2 (Bitfield-Mask: 0x07) */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_3_Pos (9UL)               /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_3 (Bit 9)            */
#define DCDC_DCDC_STATUS4_REG_DCDC_CHARGE_REG_3_Msk (0xe00UL)           /*!< DCDC DCDC_STATUS4_REG: DCDC_CHARGE_REG_3 (Bitfield-Mask: 0x07) */
/* --------------------------  DCDC_DCDC_IRQ_STATUS_REG  -------------------------- */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V14_TIMEOUT_IRQ_STATUS_Pos (0UL)  /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V14_TIMEOUT_IRQ_STATUS (Bit 0) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V14_TIMEOUT_IRQ_STATUS_Msk (0x1UL) /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V14_TIMEOUT_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V18_TIMEOUT_IRQ_STATUS_Pos (1UL)  /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V18_TIMEOUT_IRQ_STATUS (Bit 1) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V18_TIMEOUT_IRQ_STATUS_Msk (0x2UL) /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V18_TIMEOUT_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_VDD_TIMEOUT_IRQ_STATUS_Pos (2UL)  /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_VDD_TIMEOUT_IRQ_STATUS (Bit 2) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_VDD_TIMEOUT_IRQ_STATUS_Msk (0x4UL) /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_VDD_TIMEOUT_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V18P_TIMEOUT_IRQ_STATUS_Pos (3UL) /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V18P_TIMEOUT_IRQ_STATUS (Bit 3) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_V18P_TIMEOUT_IRQ_STATUS_Msk (0x8UL) /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_V18P_TIMEOUT_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_LOW_VBAT_IRQ_STATUS_Pos (4UL)     /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_LOW_VBAT_IRQ_STATUS (Bit 4)  */
#define DCDC_DCDC_IRQ_STATUS_REG_DCDC_LOW_VBAT_IRQ_STATUS_Msk (0x10UL)  /*!< DCDC DCDC_IRQ_STATUS_REG: DCDC_LOW_VBAT_IRQ_STATUS (Bitfield-Mask: 0x01) */
/* ---------------------------  DCDC_DCDC_IRQ_CLEAR_REG  -------------------------- */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V14_TIMEOUT_IRQ_CLEAR_Pos (0UL)    /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V14_TIMEOUT_IRQ_CLEAR (Bit 0) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V14_TIMEOUT_IRQ_CLEAR_Msk (0x1UL)  /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V14_TIMEOUT_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V18_TIMEOUT_IRQ_CLEAR_Pos (1UL)    /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V18_TIMEOUT_IRQ_CLEAR (Bit 1) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V18_TIMEOUT_IRQ_CLEAR_Msk (0x2UL)  /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V18_TIMEOUT_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_VDD_TIMEOUT_IRQ_CLEAR_Pos (2UL)    /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_VDD_TIMEOUT_IRQ_CLEAR (Bit 2) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_VDD_TIMEOUT_IRQ_CLEAR_Msk (0x4UL)  /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_VDD_TIMEOUT_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V18P_TIMEOUT_IRQ_CLEAR_Pos (3UL)   /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V18P_TIMEOUT_IRQ_CLEAR (Bit 3) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_V18P_TIMEOUT_IRQ_CLEAR_Msk (0x8UL) /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_V18P_TIMEOUT_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_LOW_VBAT_IRQ_CLEAR_Pos (4UL)       /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_LOW_VBAT_IRQ_CLEAR (Bit 4)    */
#define DCDC_DCDC_IRQ_CLEAR_REG_DCDC_LOW_VBAT_IRQ_CLEAR_Msk (0x10UL)    /*!< DCDC DCDC_IRQ_CLEAR_REG: DCDC_LOW_VBAT_IRQ_CLEAR (Bitfield-Mask: 0x01) */
/* ---------------------------  DCDC_DCDC_IRQ_MASK_REG  --------------------------- */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V14_TIMEOUT_IRQ_MASK_Pos (0UL)      /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V14_TIMEOUT_IRQ_MASK (Bit 0)   */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V14_TIMEOUT_IRQ_MASK_Msk (0x1UL)    /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V14_TIMEOUT_IRQ_MASK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V18_TIMEOUT_IRQ_MASK_Pos (1UL)      /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V18_TIMEOUT_IRQ_MASK (Bit 1)   */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V18_TIMEOUT_IRQ_MASK_Msk (0x2UL)    /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V18_TIMEOUT_IRQ_MASK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_VDD_TIMEOUT_IRQ_MASK_Pos (2UL)      /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_VDD_TIMEOUT_IRQ_MASK (Bit 2)   */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_VDD_TIMEOUT_IRQ_MASK_Msk (0x4UL)    /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_VDD_TIMEOUT_IRQ_MASK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V18P_TIMEOUT_IRQ_MASK_Pos (3UL)     /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V18P_TIMEOUT_IRQ_MASK (Bit 3)  */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_V18P_TIMEOUT_IRQ_MASK_Msk (0x8UL)   /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_V18P_TIMEOUT_IRQ_MASK (Bitfield-Mask: 0x01) */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_LOW_VBAT_IRQ_MASK_Pos (4UL)         /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_LOW_VBAT_IRQ_MASK (Bit 4)      */
#define DCDC_DCDC_IRQ_MASK_REG_DCDC_LOW_VBAT_IRQ_MASK_Msk (0x10UL)      /*!< DCDC DCDC_IRQ_MASK_REG: DCDC_LOW_VBAT_IRQ_MASK (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================          struct 'DEM' Position & Mask          ================ */
/* ================================================================================ */
/* -----------------------------  DEM_RF_DEM_CTRL_REG  ---------------------------- */
#define DEM_RF_DEM_CTRL_REG_EQUAL_EN_Pos      (0UL)                     /*!< DEM RF_DEM_CTRL_REG: EQUAL_EN (Bit 0)                       */
#define DEM_RF_DEM_CTRL_REG_EQUAL_EN_Msk      (0x1UL)                   /*!< DEM RF_DEM_CTRL_REG: EQUAL_EN (Bitfield-Mask: 0x01)         */
#define DEM_RF_DEM_CTRL_REG_BLE_DDC_EN_Pos    (1UL)                     /*!< DEM RF_DEM_CTRL_REG: BLE_DDC_EN (Bit 1)                     */
#define DEM_RF_DEM_CTRL_REG_BLE_DDC_EN_Msk    (0x2UL)                   /*!< DEM RF_DEM_CTRL_REG: BLE_DDC_EN (Bitfield-Mask: 0x01)       */
#define DEM_RF_DEM_CTRL_REG_IQCORR_EN_Pos     (2UL)                     /*!< DEM RF_DEM_CTRL_REG: IQCORR_EN (Bit 2)                      */
#define DEM_RF_DEM_CTRL_REG_IQCORR_EN_Msk     (0x4UL)                   /*!< DEM RF_DEM_CTRL_REG: IQCORR_EN (Bitfield-Mask: 0x01)        */
#define DEM_RF_DEM_CTRL_REG_CIC_EN_Pos        (3UL)                     /*!< DEM RF_DEM_CTRL_REG: CIC_EN (Bit 3)                         */
#define DEM_RF_DEM_CTRL_REG_CIC_EN_Msk        (0x8UL)                   /*!< DEM RF_DEM_CTRL_REG: CIC_EN (Bitfield-Mask: 0x01)           */
#define DEM_RF_DEM_CTRL_REG_AGC_USE_GPIO_IN_Pos (4UL)                   /*!< DEM RF_DEM_CTRL_REG: AGC_USE_GPIO_IN (Bit 4)                */
#define DEM_RF_DEM_CTRL_REG_AGC_USE_GPIO_IN_Msk (0x10UL)                /*!< DEM RF_DEM_CTRL_REG: AGC_USE_GPIO_IN (Bitfield-Mask: 0x01)  */
#define DEM_RF_DEM_CTRL_REG_IQ_TO_GPIO_EN_Pos (5UL)                     /*!< DEM RF_DEM_CTRL_REG: IQ_TO_GPIO_EN (Bit 5)                  */
#define DEM_RF_DEM_CTRL_REG_IQ_TO_GPIO_EN_Msk (0x20UL)                  /*!< DEM RF_DEM_CTRL_REG: IQ_TO_GPIO_EN (Bitfield-Mask: 0x01)    */
/* ---------------------------  DEM_RF_AGC_LUT_0123_REG  -------------------------- */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN0_Pos (0UL)                    /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN0 (Bit 0)                 */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN0_Msk (0x3UL)                  /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN0 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN0_Pos (2UL)                    /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN0 (Bit 2)                 */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN0_Msk (0x1cUL)                 /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN0 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN0_Pos (5UL)                     /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN0 (Bit 5)                  */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN0_Msk (0xe0UL)                  /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN0 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN1_Pos (8UL)                    /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN1 (Bit 8)                 */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN1_Msk (0x300UL)                /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN1 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN1_Pos (10UL)                   /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN1 (Bit 10)                */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN1_Msk (0x1c00UL)               /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN1 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN1_Pos (13UL)                    /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN1 (Bit 13)                 */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN1_Msk (0xe000UL)                /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN1 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN2_Pos (16UL)                   /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN2 (Bit 16)                */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN2_Msk (0x30000UL)              /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN2 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN2_Pos (18UL)                   /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN2 (Bit 18)                */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN2_Msk (0x1c0000UL)             /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN2 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN2_Pos (21UL)                    /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN2 (Bit 21)                 */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN2_Msk (0xe00000UL)              /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN2 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN3_Pos (24UL)                   /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN3 (Bit 24)                */
#define DEM_RF_AGC_LUT_0123_REG_VGA2_GAIN3_Msk (0x3000000UL)            /*!< DEM RF_AGC_LUT_0123_REG: VGA2_GAIN3 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN3_Pos (26UL)                   /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN3 (Bit 26)                */
#define DEM_RF_AGC_LUT_0123_REG_VGA1_GAIN3_Msk (0x1c000000UL)           /*!< DEM RF_AGC_LUT_0123_REG: VGA1_GAIN3 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN3_Pos (29UL)                    /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN3 (Bit 29)                 */
#define DEM_RF_AGC_LUT_0123_REG_LNA_GAIN3_Msk (0xe0000000UL)            /*!< DEM RF_AGC_LUT_0123_REG: LNA_GAIN3 (Bitfield-Mask: 0x07)    */
/* ---------------------------  DEM_RF_AGC_LUT_4567_REG  -------------------------- */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN4_Pos (0UL)                    /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN4 (Bit 0)                 */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN4_Msk (0x3UL)                  /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN4 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN4_Pos (2UL)                    /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN4 (Bit 2)                 */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN4_Msk (0x1cUL)                 /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN4 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN4_Pos (5UL)                     /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN4 (Bit 5)                  */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN4_Msk (0xe0UL)                  /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN4 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN5_Pos (8UL)                    /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN5 (Bit 8)                 */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN5_Msk (0x300UL)                /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN5 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN5_Pos (10UL)                   /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN5 (Bit 10)                */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN5_Msk (0x1c00UL)               /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN5 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN5_Pos (13UL)                    /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN5 (Bit 13)                 */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN5_Msk (0xe000UL)                /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN5 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN6_Pos (16UL)                   /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN6 (Bit 16)                */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN6_Msk (0x30000UL)              /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN6 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN6_Pos (18UL)                   /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN6 (Bit 18)                */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN6_Msk (0x1c0000UL)             /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN6 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN6_Pos (21UL)                    /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN6 (Bit 21)                 */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN6_Msk (0xe00000UL)              /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN6 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN7_Pos (24UL)                   /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN7 (Bit 24)                */
#define DEM_RF_AGC_LUT_4567_REG_VGA2_GAIN7_Msk (0x3000000UL)            /*!< DEM RF_AGC_LUT_4567_REG: VGA2_GAIN7 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN7_Pos (26UL)                   /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN7 (Bit 26)                */
#define DEM_RF_AGC_LUT_4567_REG_VGA1_GAIN7_Msk (0x1c000000UL)           /*!< DEM RF_AGC_LUT_4567_REG: VGA1_GAIN7 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN7_Pos (29UL)                    /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN7 (Bit 29)                 */
#define DEM_RF_AGC_LUT_4567_REG_LNA_GAIN7_Msk (0xe0000000UL)            /*!< DEM RF_AGC_LUT_4567_REG: LNA_GAIN7 (Bitfield-Mask: 0x07)    */
/* ---------------------------  DEM_RF_AGC_LUT_89AB_REG  -------------------------- */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN8_Pos (0UL)                    /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN8 (Bit 0)                 */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN8_Msk (0x3UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN8 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN8_Pos (2UL)                    /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN8 (Bit 2)                 */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN8_Msk (0x1cUL)                 /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN8 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN8_Pos (5UL)                     /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN8 (Bit 5)                  */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN8_Msk (0xe0UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN8 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN9_Pos (8UL)                    /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN9 (Bit 8)                 */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN9_Msk (0x300UL)                /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN9 (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN9_Pos (10UL)                   /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN9 (Bit 10)                */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN9_Msk (0x1c00UL)               /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN9 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN9_Pos (13UL)                    /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN9 (Bit 13)                 */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN9_Msk (0xe000UL)                /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN9 (Bitfield-Mask: 0x07)    */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN10_Pos (16UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN10 (Bit 16)               */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN10_Msk (0x30000UL)             /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN10 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN10_Pos (18UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN10 (Bit 18)               */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN10_Msk (0x1c0000UL)            /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN10 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN10_Pos (21UL)                   /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN10 (Bit 21)                */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN10_Msk (0xe00000UL)             /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN10 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN11_Pos (24UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN11 (Bit 24)               */
#define DEM_RF_AGC_LUT_89AB_REG_VGA2_GAIN11_Msk (0x3000000UL)           /*!< DEM RF_AGC_LUT_89AB_REG: VGA2_GAIN11 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN11_Pos (26UL)                  /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN11 (Bit 26)               */
#define DEM_RF_AGC_LUT_89AB_REG_VGA1_GAIN11_Msk (0x1c000000UL)          /*!< DEM RF_AGC_LUT_89AB_REG: VGA1_GAIN11 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN11_Pos (29UL)                   /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN11 (Bit 29)                */
#define DEM_RF_AGC_LUT_89AB_REG_LNA_GAIN11_Msk (0xe0000000UL)           /*!< DEM RF_AGC_LUT_89AB_REG: LNA_GAIN11 (Bitfield-Mask: 0x07)   */
/* ---------------------------  DEM_RF_AGC_LUT_CDEF_REG  -------------------------- */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN12_Pos (0UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN12 (Bit 0)                */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN12_Msk (0x3UL)                 /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN12 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN12_Pos (2UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN12 (Bit 2)                */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN12_Msk (0x1cUL)                /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN12 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN12_Pos (5UL)                    /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN12 (Bit 5)                 */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN12_Msk (0xe0UL)                 /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN12 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN13_Pos (8UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN13 (Bit 8)                */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN13_Msk (0x300UL)               /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN13 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN13_Pos (10UL)                  /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN13 (Bit 10)               */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN13_Msk (0x1c00UL)              /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN13 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN13_Pos (13UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN13 (Bit 13)                */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN13_Msk (0xe000UL)               /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN13 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN14_Pos (16UL)                  /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN14 (Bit 16)               */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN14_Msk (0x30000UL)             /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN14 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN14_Pos (18UL)                  /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN14 (Bit 18)               */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN14_Msk (0x1c0000UL)            /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN14 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN14_Pos (21UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN14 (Bit 21)                */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN14_Msk (0xe00000UL)             /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN14 (Bitfield-Mask: 0x07)   */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN15_Pos (24UL)                  /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN15 (Bit 24)               */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA2_GAIN15_Msk (0x3000000UL)           /*!< DEM RF_AGC_LUT_CDEF_REG: VGA2_GAIN15 (Bitfield-Mask: 0x03)  */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN15_Pos (26UL)                  /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN15 (Bit 26)               */
#define DEM_RF_AGC_LUT_CDEF_REG_VGA1_GAIN15_Msk (0x1c000000UL)          /*!< DEM RF_AGC_LUT_CDEF_REG: VGA1_GAIN15 (Bitfield-Mask: 0x07)  */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN15_Pos (29UL)                   /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN15 (Bit 29)                */
#define DEM_RF_AGC_LUT_CDEF_REG_LNA_GAIN15_Msk (0xe0000000UL)           /*!< DEM RF_AGC_LUT_CDEF_REG: LNA_GAIN15 (Bitfield-Mask: 0x07)   */
/* ----------------------------  DEM_RF_AGC_CTRL1_REG  ---------------------------- */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH_LOW_Pos   (0UL)                     /*!< DEM RF_AGC_CTRL1_REG: AGC_TH_LOW (Bit 0)                    */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH_LOW_Msk   (0x7fUL)                  /*!< DEM RF_AGC_CTRL1_REG: AGC_TH_LOW (Bitfield-Mask: 0x7f)      */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH_HIGH_Pos  (7UL)                     /*!< DEM RF_AGC_CTRL1_REG: AGC_TH_HIGH (Bit 7)                   */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH_HIGH_Msk  (0x3f80UL)                /*!< DEM RF_AGC_CTRL1_REG: AGC_TH_HIGH (Bitfield-Mask: 0x7f)     */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH2_HIGH_Pos (14UL)                    /*!< DEM RF_AGC_CTRL1_REG: AGC_TH2_HIGH (Bit 14)                 */
#define DEM_RF_AGC_CTRL1_REG_AGC_TH2_HIGH_Msk (0x1fc000UL)              /*!< DEM RF_AGC_CTRL1_REG: AGC_TH2_HIGH (Bitfield-Mask: 0x7f)    */
#define DEM_RF_AGC_CTRL1_REG_AGC_MODE_Pos     (21UL)                    /*!< DEM RF_AGC_CTRL1_REG: AGC_MODE (Bit 21)                     */
#define DEM_RF_AGC_CTRL1_REG_AGC_MODE_Msk     (0x600000UL)              /*!< DEM RF_AGC_CTRL1_REG: AGC_MODE (Bitfield-Mask: 0x03)        */
/* ----------------------------  DEM_RF_AGC_CTRL2_REG  ---------------------------- */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_EN_Pos   (0UL)                     /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_EN (Bit 0)                    */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_EN_Msk   (0x1UL)                   /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_EN (Bitfield-Mask: 0x01)      */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_STEPS_Pos (1UL)                    /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_STEPS (Bit 1)                 */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_STEPS_Msk (0x6UL)                  /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_STEPS (Bitfield-Mask: 0x03)   */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_WAIT_Pos (3UL)                     /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_WAIT (Bit 3)                  */
#define DEM_RF_AGC_CTRL2_REG_FASTAGC_WAIT_Msk (0x18UL)                  /*!< DEM RF_AGC_CTRL2_REG: FASTAGC_WAIT (Bitfield-Mask: 0x03)    */
#define DEM_RF_AGC_CTRL2_REG_AGCINC_WAIT_Pos  (5UL)                     /*!< DEM RF_AGC_CTRL2_REG: AGCINC_WAIT (Bit 5)                   */
#define DEM_RF_AGC_CTRL2_REG_AGCINC_WAIT_Msk  (0x60UL)                  /*!< DEM RF_AGC_CTRL2_REG: AGCINC_WAIT (Bitfield-Mask: 0x03)     */
#define DEM_RF_AGC_CTRL2_REG_AGCDEC_WAIT_Pos  (7UL)                     /*!< DEM RF_AGC_CTRL2_REG: AGCDEC_WAIT (Bit 7)                   */
#define DEM_RF_AGC_CTRL2_REG_AGCDEC_WAIT_Msk  (0x180UL)                 /*!< DEM RF_AGC_CTRL2_REG: AGCDEC_WAIT (Bitfield-Mask: 0x03)     */
#define DEM_RF_AGC_CTRL2_REG_AGC_MAX_SETTING_Pos (9UL)                  /*!< DEM RF_AGC_CTRL2_REG: AGC_MAX_SETTING (Bit 9)               */
#define DEM_RF_AGC_CTRL2_REG_AGC_MAX_SETTING_Msk (0x1e00UL)             /*!< DEM RF_AGC_CTRL2_REG: AGC_MAX_SETTING (Bitfield-Mask: 0x0f) */
#define DEM_RF_AGC_CTRL2_REG_AGCSETTING_SEL_Pos (17UL)                  /*!< DEM RF_AGC_CTRL2_REG: AGCSETTING_SEL (Bit 17)               */
#define DEM_RF_AGC_CTRL2_REG_AGCSETTING_SEL_Msk (0x20000UL)             /*!< DEM RF_AGC_CTRL2_REG: AGCSETTING_SEL (Bitfield-Mask: 0x01)  */
#define DEM_RF_AGC_CTRL2_REG_AGCSETTING_WR_Pos (18UL)                   /*!< DEM RF_AGC_CTRL2_REG: AGCSETTING_WR (Bit 18)                */
#define DEM_RF_AGC_CTRL2_REG_AGCSETTING_WR_Msk (0x3c0000UL)             /*!< DEM RF_AGC_CTRL2_REG: AGCSETTING_WR (Bitfield-Mask: 0x0f)   */
#define DEM_RF_AGC_CTRL2_REG_EN_FRZ_GAIN_Pos  (22UL)                    /*!< DEM RF_AGC_CTRL2_REG: EN_FRZ_GAIN (Bit 22)                  */
#define DEM_RF_AGC_CTRL2_REG_EN_FRZ_GAIN_Msk  (0x400000UL)              /*!< DEM RF_AGC_CTRL2_REG: EN_FRZ_GAIN (Bitfield-Mask: 0x01)     */
/* -----------------------------  DEM_RF_AFC_CTRL_REG  ---------------------------- */
#define DEM_RF_AFC_CTRL_REG_AFC_MODE_Pos      (0UL)                     /*!< DEM RF_AFC_CTRL_REG: AFC_MODE (Bit 0)                       */
#define DEM_RF_AFC_CTRL_REG_AFC_MODE_Msk      (0xfUL)                   /*!< DEM RF_AFC_CTRL_REG: AFC_MODE (Bitfield-Mask: 0x0f)         */
#define DEM_RF_AFC_CTRL_REG_PAD_MODE_Pos      (4UL)                     /*!< DEM RF_AFC_CTRL_REG: PAD_MODE (Bit 4)                       */
#define DEM_RF_AFC_CTRL_REG_PAD_MODE_Msk      (0x30UL)                  /*!< DEM RF_AFC_CTRL_REG: PAD_MODE (Bitfield-Mask: 0x03)         */
#define DEM_RF_AFC_CTRL_REG_APD_MODE_Pos      (6UL)                     /*!< DEM RF_AFC_CTRL_REG: APD_MODE (Bit 6)                       */
#define DEM_RF_AFC_CTRL_REG_APD_MODE_Msk      (0x1c0UL)                 /*!< DEM RF_AFC_CTRL_REG: APD_MODE (Bitfield-Mask: 0x07)         */
/* -------------------------  DEM_RF_DC_OFFSET_CTRL1_REG  ------------------------- */
#define DEM_RF_DC_OFFSET_CTRL1_REG_DCOFFSET_I_WR_Pos (0UL)              /*!< DEM RF_DC_OFFSET_CTRL1_REG: DCOFFSET_I_WR (Bit 0)           */
#define DEM_RF_DC_OFFSET_CTRL1_REG_DCOFFSET_I_WR_Msk (0x1ffUL)          /*!< DEM RF_DC_OFFSET_CTRL1_REG: DCOFFSET_I_WR (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_CTRL1_REG_DCOFFSET_Q_WR_Pos (9UL)              /*!< DEM RF_DC_OFFSET_CTRL1_REG: DCOFFSET_Q_WR (Bit 9)           */
#define DEM_RF_DC_OFFSET_CTRL1_REG_DCOFFSET_Q_WR_Msk (0x3fe00UL)        /*!< DEM RF_DC_OFFSET_CTRL1_REG: DCOFFSET_Q_WR (Bitfield-Mask: 0x1ff) */
/* -------------------------  DEM_RF_DC_OFFSET_CTRL2_REG  ------------------------- */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOFFSET_SEL_Pos (0UL)               /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOFFSET_SEL (Bit 0)            */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOFFSET_SEL_Msk (0x1UL)             /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOFFSET_SEL (Bitfield-Mask: 0x01) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARCAL_EN_Pos (1UL)                /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARCAL_EN (Bit 1)             */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARCAL_EN_Msk (0x2UL)              /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARCAL_EN (Bitfield-Mask: 0x01) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCNSTEP_Pos (2UL)                    /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCNSTEP (Bit 2)                 */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCNSTEP_Msk (0x1cUL)                 /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCNSTEP (Bitfield-Mask: 0x07)   */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCFULLNGAIN_Pos (5UL)                /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCFULLNGAIN (Bit 5)             */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCFULLNGAIN_Msk (0xe0UL)             /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCFULLNGAIN (Bitfield-Mask: 0x07) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARCAL_INIT_Pos (8UL)              /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARCAL_INIT (Bit 8)           */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARCAL_INIT_Msk (0x300UL)          /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARCAL_INIT (Bitfield-Mask: 0x03) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCVGA1SCALE_EN_Pos (10UL)            /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCVGA1SCALE_EN (Bit 10)         */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCVGA1SCALE_EN_Msk (0x400UL)         /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCVGA1SCALE_EN (Bitfield-Mask: 0x01) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARNGAIN_Pos (11UL)                /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARNGAIN (Bit 11)             */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPARNGAIN_Msk (0x3800UL)            /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPARNGAIN (Bitfield-Mask: 0x07) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPAR_MULT_STEPS_EN_Pos (14UL)       /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPAR_MULT_STEPS_EN (Bit 14)    */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPAR_MULT_STEPS_EN_Msk (0x4000UL)   /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPAR_MULT_STEPS_EN (Bitfield-Mask: 0x01) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPAR_DCF_EN_Pos (15UL)              /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPAR_DCF_EN (Bit 15)           */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCPAR_DCF_EN_Msk (0x8000UL)          /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCPAR_DCF_EN (Bitfield-Mask: 0x01) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN0_LUT_Pos (16UL)  /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN0_LUT (Bit 16) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN0_LUT_Msk (0x30000UL) /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN0_LUT (Bitfield-Mask: 0x03) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN1_LUT_Pos (18UL)  /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN1_LUT (Bit 18) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN1_LUT_Msk (0xc0000UL) /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN1_LUT (Bitfield-Mask: 0x03) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN2_LUT_Pos (20UL)  /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN2_LUT (Bit 20) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN2_LUT_Msk (0x300000UL) /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN2_LUT (Bitfield-Mask: 0x03) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN345_LUT_Pos (22UL) /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN345_LUT (Bit 22) */
#define DEM_RF_DC_OFFSET_CTRL2_REG_DCOC_RESULT_LNAGAIN345_LUT_Msk (0xc00000UL) /*!< DEM RF_DC_OFFSET_CTRL2_REG: DCOC_RESULT_LNAGAIN345_LUT (Bitfield-Mask: 0x03) */
/* -------------------------  DEM_RF_DC_OFFSET_CTRL3_REG  ------------------------- */
#define DEM_RF_DC_OFFSET_CTRL3_REG_DCBETA_I_Pos (0UL)                   /*!< DEM RF_DC_OFFSET_CTRL3_REG: DCBETA_I (Bit 0)                */
#define DEM_RF_DC_OFFSET_CTRL3_REG_DCBETA_I_Msk (0xffUL)                /*!< DEM RF_DC_OFFSET_CTRL3_REG: DCBETA_I (Bitfield-Mask: 0xff)  */
#define DEM_RF_DC_OFFSET_CTRL3_REG_DCBETA_Q_Pos (8UL)                   /*!< DEM RF_DC_OFFSET_CTRL3_REG: DCBETA_Q (Bit 8)                */
#define DEM_RF_DC_OFFSET_CTRL3_REG_DCBETA_Q_Msk (0xff00UL)              /*!< DEM RF_DC_OFFSET_CTRL3_REG: DCBETA_Q (Bitfield-Mask: 0xff)  */
/* -------------------------  DEM_RF_DC_OFFSET_CTRL4_REG  ------------------------- */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL0_Pos (0UL)         /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL0 (Bit 0)      */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL0_Msk (0xfUL)       /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL0 (Bitfield-Mask: 0x0f) */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL1_Pos (4UL)         /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL1 (Bit 4)      */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL1_Msk (0xf0UL)      /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL1 (Bitfield-Mask: 0x0f) */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL2_Pos (8UL)         /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL2 (Bit 8)      */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL2_Msk (0xf00UL)     /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL2 (Bitfield-Mask: 0x0f) */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL3_Pos (12UL)        /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL3 (Bit 12)     */
#define DEM_RF_DC_OFFSET_CTRL4_REG_DCAGCSETTING_FULL3_Msk (0xf000UL)    /*!< DEM RF_DC_OFFSET_CTRL4_REG: DCAGCSETTING_FULL3 (Bitfield-Mask: 0x0f) */
/* ----------------------------  DEM_RF_AGC_RESULT_REG  --------------------------- */
#define DEM_RF_AGC_RESULT_REG_AFC_RD_Pos      (0UL)                     /*!< DEM RF_AGC_RESULT_REG: AFC_RD (Bit 0)                       */
#define DEM_RF_AGC_RESULT_REG_AFC_RD_Msk      (0xffUL)                  /*!< DEM RF_AGC_RESULT_REG: AFC_RD (Bitfield-Mask: 0xff)         */
#define DEM_RF_AGC_RESULT_REG_AGCSETTING_RD_Pos (8UL)                   /*!< DEM RF_AGC_RESULT_REG: AGCSETTING_RD (Bit 8)                */
#define DEM_RF_AGC_RESULT_REG_AGCSETTING_RD_Msk (0xf00UL)               /*!< DEM RF_AGC_RESULT_REG: AGCSETTING_RD (Bitfield-Mask: 0x0f)  */
/* ---------------------------  DEM_RF_RSSI_RESULT_REG  --------------------------- */
#define DEM_RF_RSSI_RESULT_REG_RSSI_LATCHED_RD_Pos (0UL)                /*!< DEM RF_RSSI_RESULT_REG: RSSI_LATCHED_RD (Bit 0)             */
#define DEM_RF_RSSI_RESULT_REG_RSSI_LATCHED_RD_Msk (0x3ffUL)            /*!< DEM RF_RSSI_RESULT_REG: RSSI_LATCHED_RD (Bitfield-Mask: 0x3ff) */
#define DEM_RF_RSSI_RESULT_REG_RSSI_AVG_RD_Pos (10UL)                   /*!< DEM RF_RSSI_RESULT_REG: RSSI_AVG_RD (Bit 10)                */
#define DEM_RF_RSSI_RESULT_REG_RSSI_AVG_RD_Msk (0xffc00UL)              /*!< DEM RF_RSSI_RESULT_REG: RSSI_AVG_RD (Bitfield-Mask: 0x3ff)  */
/* -----------------------------  DEM_RF_DEM_ATTR_REG  ---------------------------- */
#define DEM_RF_DEM_ATTR_REG_AFC_POLE1_Pos     (0UL)                     /*!< DEM RF_DEM_ATTR_REG: AFC_POLE1 (Bit 0)                      */
#define DEM_RF_DEM_ATTR_REG_AFC_POLE1_Msk     (0x3UL)                   /*!< DEM RF_DEM_ATTR_REG: AFC_POLE1 (Bitfield-Mask: 0x03)        */
#define DEM_RF_DEM_ATTR_REG_AFC_POLE2_Pos     (2UL)                     /*!< DEM RF_DEM_ATTR_REG: AFC_POLE2 (Bit 2)                      */
#define DEM_RF_DEM_ATTR_REG_AFC_POLE2_Msk     (0xcUL)                   /*!< DEM RF_DEM_ATTR_REG: AFC_POLE2 (Bitfield-Mask: 0x03)        */
#define DEM_RF_DEM_ATTR_REG_RXDATA_INV_Pos    (4UL)                     /*!< DEM RF_DEM_ATTR_REG: RXDATA_INV (Bit 4)                     */
#define DEM_RF_DEM_ATTR_REG_RXDATA_INV_Msk    (0x10UL)                  /*!< DEM RF_DEM_ATTR_REG: RXDATA_INV (Bitfield-Mask: 0x01)       */
#define DEM_RF_DEM_ATTR_REG_DEM_HSI_POL_Pos   (5UL)                     /*!< DEM RF_DEM_ATTR_REG: DEM_HSI_POL (Bit 5)                    */
#define DEM_RF_DEM_ATTR_REG_DEM_HSI_POL_Msk   (0x20UL)                  /*!< DEM RF_DEM_ATTR_REG: DEM_HSI_POL (Bitfield-Mask: 0x01)      */
#define DEM_RF_DEM_ATTR_REG_MATCH0101_TH_Pos  (6UL)                     /*!< DEM RF_DEM_ATTR_REG: MATCH0101_TH (Bit 6)                   */
#define DEM_RF_DEM_ATTR_REG_MATCH0101_TH_Msk  (0x3c0UL)                 /*!< DEM RF_DEM_ATTR_REG: MATCH0101_TH (Bitfield-Mask: 0x0f)     */
#define DEM_RF_DEM_ATTR_REG_DEM_SET_DEC2N_Pos (10UL)                    /*!< DEM RF_DEM_ATTR_REG: DEM_SET_DEC2N (Bit 10)                 */
#define DEM_RF_DEM_ATTR_REG_DEM_SET_DEC2N_Msk (0x400UL)                 /*!< DEM RF_DEM_ATTR_REG: DEM_SET_DEC2N (Bitfield-Mask: 0x01)    */
#define DEM_RF_DEM_ATTR_REG_AGC_SPEED8M_EN_Pos (11UL)                   /*!< DEM RF_DEM_ATTR_REG: AGC_SPEED8M_EN (Bit 11)                */
#define DEM_RF_DEM_ATTR_REG_AGC_SPEED8M_EN_Msk (0x800UL)                /*!< DEM RF_DEM_ATTR_REG: AGC_SPEED8M_EN (Bitfield-Mask: 0x01)   */
#define DEM_RF_DEM_ATTR_REG_DCOC_SPEED8M_EN_Pos (12UL)                  /*!< DEM RF_DEM_ATTR_REG: DCOC_SPEED8M_EN (Bit 12)               */
#define DEM_RF_DEM_ATTR_REG_DCOC_SPEED8M_EN_Msk (0x1000UL)              /*!< DEM RF_DEM_ATTR_REG: DCOC_SPEED8M_EN (Bitfield-Mask: 0x01)  */
#define DEM_RF_DEM_ATTR_REG_DCPOLE_Pos        (13UL)                    /*!< DEM RF_DEM_ATTR_REG: DCPOLE (Bit 13)                        */
#define DEM_RF_DEM_ATTR_REG_DCPOLE_Msk        (0x6000UL)                /*!< DEM RF_DEM_ATTR_REG: DCPOLE (Bitfield-Mask: 0x03)           */
#define DEM_RF_DEM_ATTR_REG_RSSI_TH_Pos       (15UL)                    /*!< DEM RF_DEM_ATTR_REG: RSSI_TH (Bit 15)                       */
#define DEM_RF_DEM_ATTR_REG_RSSI_TH_Msk       (0x1f8000UL)              /*!< DEM RF_DEM_ATTR_REG: RSSI_TH (Bitfield-Mask: 0x3f)          */
#define DEM_RF_DEM_ATTR_REG_DEM_16M_CLK_SET_Pos (21UL)                  /*!< DEM RF_DEM_ATTR_REG: DEM_16M_CLK_SET (Bit 21)               */
#define DEM_RF_DEM_ATTR_REG_DEM_16M_CLK_SET_Msk (0x200000UL)            /*!< DEM RF_DEM_ATTR_REG: DEM_16M_CLK_SET (Bitfield-Mask: 0x01)  */
#define DEM_RF_DEM_ATTR_REG_RFADC_CLK_PHASE_Pos (22UL)                  /*!< DEM RF_DEM_ATTR_REG: RFADC_CLK_PHASE (Bit 22)               */
#define DEM_RF_DEM_ATTR_REG_RFADC_CLK_PHASE_Msk (0xc00000UL)            /*!< DEM RF_DEM_ATTR_REG: RFADC_CLK_PHASE (Bitfield-Mask: 0x03)  */
/* --------------------------  DEM_RF_RSSI_COMP_CTRL_REG  ------------------------- */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP0_Pos (0UL)                  /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP0 (Bit 0)               */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP0_Msk (0xfUL)                /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP0 (Bitfield-Mask: 0x0f) */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP1_Pos (4UL)                  /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP1 (Bit 4)               */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP1_Msk (0xf0UL)               /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP1 (Bitfield-Mask: 0x0f) */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP2_Pos (8UL)                  /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP2 (Bit 8)               */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP2_Msk (0xf00UL)              /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP2 (Bitfield-Mask: 0x0f) */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP3_Pos (12UL)                 /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP3 (Bit 12)              */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP3_Msk (0xf000UL)             /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP3 (Bitfield-Mask: 0x0f) */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP4_Pos (16UL)                 /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP4 (Bit 16)              */
#define DEM_RF_RSSI_COMP_CTRL_REG_RSSI_COMP4_Msk (0xf0000UL)            /*!< DEM RF_RSSI_COMP_CTRL_REG: RSSI_COMP4 (Bitfield-Mask: 0x0f) */
/* ---------------------------  DEM_RF_DEM_TESTMODE_REG  -------------------------- */
#define DEM_RF_DEM_TESTMODE_REG_DEM_TESTMODE_Pos (0UL)                  /*!< DEM RF_DEM_TESTMODE_REG: DEM_TESTMODE (Bit 0)               */
#define DEM_RF_DEM_TESTMODE_REG_DEM_TESTMODE_Msk (0x3ffUL)              /*!< DEM RF_DEM_TESTMODE_REG: DEM_TESTMODE (Bitfield-Mask: 0x3ff) */
/* --------------------------  DEM_RF_DEM_IQCORRECT_REG  -------------------------- */
#define DEM_RF_DEM_IQCORRECT_REG_IQCORR_BETA_Pos (0UL)                  /*!< DEM RF_DEM_IQCORRECT_REG: IQCORR_BETA (Bit 0)               */
#define DEM_RF_DEM_IQCORRECT_REG_IQCORR_BETA_Msk (0xffUL)               /*!< DEM RF_DEM_IQCORRECT_REG: IQCORR_BETA (Bitfield-Mask: 0xff) */
#define DEM_RF_DEM_IQCORRECT_REG_IQCORR_ALPHA_Pos (8UL)                 /*!< DEM RF_DEM_IQCORRECT_REG: IQCORR_ALPHA (Bit 8)              */
#define DEM_RF_DEM_IQCORRECT_REG_IQCORR_ALPHA_Msk (0xff00UL)            /*!< DEM RF_DEM_IQCORRECT_REG: IQCORR_ALPHA (Bitfield-Mask: 0xff) */
/* ---------------------------  DEM_RF_PAD_CNT_CTRL_REG  -------------------------- */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_POS_LIMIT_Pos (0UL)                 /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_POS_LIMIT (Bit 0)              */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_POS_LIMIT_Msk (0x7fUL)              /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_POS_LIMIT (Bitfield-Mask: 0x7f) */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_NEG_LIMIT_Pos (7UL)                 /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_NEG_LIMIT (Bit 7)              */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_NEG_LIMIT_Msk (0x3f80UL)            /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_NEG_LIMIT (Bitfield-Mask: 0x7f) */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_CLEAR_COUNT_Pos (14UL)              /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_CLEAR_COUNT (Bit 14)           */
#define DEM_RF_PAD_CNT_CTRL_REG_PAD_CLEAR_COUNT_Msk (0x4000UL)          /*!< DEM RF_PAD_CNT_CTRL_REG: PAD_CLEAR_COUNT (Bitfield-Mask: 0x01) */
/* --------------------------  DEM_RF_PAD_CNT_RESULT_REG  ------------------------- */
#define DEM_RF_PAD_CNT_RESULT_REG_PAD_POS_CNT_RD_Pos (0UL)              /*!< DEM RF_PAD_CNT_RESULT_REG: PAD_POS_CNT_RD (Bit 0)           */
#define DEM_RF_PAD_CNT_RESULT_REG_PAD_POS_CNT_RD_Msk (0xffUL)           /*!< DEM RF_PAD_CNT_RESULT_REG: PAD_POS_CNT_RD (Bitfield-Mask: 0xff) */
#define DEM_RF_PAD_CNT_RESULT_REG_PAD_NEG_CNT_RD_Pos (8UL)              /*!< DEM RF_PAD_CNT_RESULT_REG: PAD_NEG_CNT_RD (Bit 8)           */
#define DEM_RF_PAD_CNT_RESULT_REG_PAD_NEG_CNT_RD_Msk (0xff00UL)         /*!< DEM RF_PAD_CNT_RESULT_REG: PAD_NEG_CNT_RD (Bitfield-Mask: 0xff) */
/* -------------------------  DEM_RF_DC_OFFSET_RESULT_REG  ------------------------ */
#define DEM_RF_DC_OFFSET_RESULT_REG_DCOFFSET_I_RD_Pos (0UL)             /*!< DEM RF_DC_OFFSET_RESULT_REG: DCOFFSET_I_RD (Bit 0)          */
#define DEM_RF_DC_OFFSET_RESULT_REG_DCOFFSET_I_RD_Msk (0x1ffUL)         /*!< DEM RF_DC_OFFSET_RESULT_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_RESULT_REG_DCOFFSET_Q_RD_Pos (9UL)             /*!< DEM RF_DC_OFFSET_RESULT_REG: DCOFFSET_Q_RD (Bit 9)          */
#define DEM_RF_DC_OFFSET_RESULT_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)       /*!< DEM RF_DC_OFFSET_RESULT_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* ------------------------  DEM_RF_DC_OFFSET_FULL_RES_REG  ----------------------- */
#define DEM_RF_DC_OFFSET_FULL_RES_REG_DCOFFSET_I_RD_Pos (0UL)           /*!< DEM RF_DC_OFFSET_FULL_RES_REG: DCOFFSET_I_RD (Bit 0)        */
#define DEM_RF_DC_OFFSET_FULL_RES_REG_DCOFFSET_I_RD_Msk (0x1ffUL)       /*!< DEM RF_DC_OFFSET_FULL_RES_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_FULL_RES_REG_DCOFFSET_Q_RD_Pos (9UL)           /*!< DEM RF_DC_OFFSET_FULL_RES_REG: DCOFFSET_Q_RD (Bit 9)        */
#define DEM_RF_DC_OFFSET_FULL_RES_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)     /*!< DEM RF_DC_OFFSET_FULL_RES_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* -----------------------  DEM_RF_DC_OFFSET_MPAR_RES0_REG  ----------------------- */
#define DEM_RF_DC_OFFSET_MPAR_RES0_REG_DCOFFSET_I_RD_Pos (0UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES0_REG: DCOFFSET_I_RD (Bit 0)       */
#define DEM_RF_DC_OFFSET_MPAR_RES0_REG_DCOFFSET_I_RD_Msk (0x1ffUL)      /*!< DEM RF_DC_OFFSET_MPAR_RES0_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_MPAR_RES0_REG_DCOFFSET_Q_RD_Pos (9UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES0_REG: DCOFFSET_Q_RD (Bit 9)       */
#define DEM_RF_DC_OFFSET_MPAR_RES0_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)    /*!< DEM RF_DC_OFFSET_MPAR_RES0_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* -----------------------  DEM_RF_DC_OFFSET_MPAR_RES1_REG  ----------------------- */
#define DEM_RF_DC_OFFSET_MPAR_RES1_REG_DCOFFSET_I_RD_Pos (0UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES1_REG: DCOFFSET_I_RD (Bit 0)       */
#define DEM_RF_DC_OFFSET_MPAR_RES1_REG_DCOFFSET_I_RD_Msk (0x1ffUL)      /*!< DEM RF_DC_OFFSET_MPAR_RES1_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_MPAR_RES1_REG_DCOFFSET_Q_RD_Pos (9UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES1_REG: DCOFFSET_Q_RD (Bit 9)       */
#define DEM_RF_DC_OFFSET_MPAR_RES1_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)    /*!< DEM RF_DC_OFFSET_MPAR_RES1_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* -----------------------  DEM_RF_DC_OFFSET_MPAR_RES2_REG  ----------------------- */
#define DEM_RF_DC_OFFSET_MPAR_RES2_REG_DCOFFSET_I_RD_Pos (0UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES2_REG: DCOFFSET_I_RD (Bit 0)       */
#define DEM_RF_DC_OFFSET_MPAR_RES2_REG_DCOFFSET_I_RD_Msk (0x1ffUL)      /*!< DEM RF_DC_OFFSET_MPAR_RES2_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_MPAR_RES2_REG_DCOFFSET_Q_RD_Pos (9UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES2_REG: DCOFFSET_Q_RD (Bit 9)       */
#define DEM_RF_DC_OFFSET_MPAR_RES2_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)    /*!< DEM RF_DC_OFFSET_MPAR_RES2_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* -----------------------  DEM_RF_DC_OFFSET_MPAR_RES3_REG  ----------------------- */
#define DEM_RF_DC_OFFSET_MPAR_RES3_REG_DCOFFSET_I_RD_Pos (0UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES3_REG: DCOFFSET_I_RD (Bit 0)       */
#define DEM_RF_DC_OFFSET_MPAR_RES3_REG_DCOFFSET_I_RD_Msk (0x1ffUL)      /*!< DEM RF_DC_OFFSET_MPAR_RES3_REG: DCOFFSET_I_RD (Bitfield-Mask: 0x1ff) */
#define DEM_RF_DC_OFFSET_MPAR_RES3_REG_DCOFFSET_Q_RD_Pos (9UL)          /*!< DEM RF_DC_OFFSET_MPAR_RES3_REG: DCOFFSET_Q_RD (Bit 9)       */
#define DEM_RF_DC_OFFSET_MPAR_RES3_REG_DCOFFSET_Q_RD_Msk (0x3fe00UL)    /*!< DEM RF_DC_OFFSET_MPAR_RES3_REG: DCOFFSET_Q_RD (Bitfield-Mask: 0x1ff) */
/* ================================================================================ */
/* ================          struct 'DMA' Position & Mask          ================ */
/* ================================================================================ */
/* ----------------------------  DMA_DMA0_A_START_REG  ---------------------------- */
#define DMA_DMA0_A_START_REG_DMA0_A_START_Pos (0UL)                     /*!< DMA DMA0_A_START_REG: DMA0_A_START (Bit 0)                  */
#define DMA_DMA0_A_START_REG_DMA0_A_START_Msk (0xffffffffUL)            /*!< DMA DMA0_A_START_REG: DMA0_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA0_B_START_REG  ---------------------------- */
#define DMA_DMA0_B_START_REG_DMA0_B_START_Pos (0UL)                     /*!< DMA DMA0_B_START_REG: DMA0_B_START (Bit 0)                  */
#define DMA_DMA0_B_START_REG_DMA0_B_START_Msk (0xffffffffUL)            /*!< DMA DMA0_B_START_REG: DMA0_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA0_INT_REG  ------------------------------ */
#define DMA_DMA0_INT_REG_DMA0_INT_Pos         (0UL)                     /*!< DMA DMA0_INT_REG: DMA0_INT (Bit 0)                          */
#define DMA_DMA0_INT_REG_DMA0_INT_Msk         (0xffffUL)                /*!< DMA DMA0_INT_REG: DMA0_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA0_LEN_REG  ------------------------------ */
#define DMA_DMA0_LEN_REG_DMA0_LEN_Pos         (0UL)                     /*!< DMA DMA0_LEN_REG: DMA0_LEN (Bit 0)                          */
#define DMA_DMA0_LEN_REG_DMA0_LEN_Msk         (0xffffUL)                /*!< DMA DMA0_LEN_REG: DMA0_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA0_CTRL_REG  ----------------------------- */
#define DMA_DMA0_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA0_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA0_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA0_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA0_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA0_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA0_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA0_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA0_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA0_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA0_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA0_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA0_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA0_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA0_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA0_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA0_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA0_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA0_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA0_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA0_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA0_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA0_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA0_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA0_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA0_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA0_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA0_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA0_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA0_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA0_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA0_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA0_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA0_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA0_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA0_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA0_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA0_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA0_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA0_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA0_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA0_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA0_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA0_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA0_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA0_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA0_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA0_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA0_IDX_REG  ------------------------------ */
#define DMA_DMA0_IDX_REG_DMA0_IDX_Pos         (0UL)                     /*!< DMA DMA0_IDX_REG: DMA0_IDX (Bit 0)                          */
#define DMA_DMA0_IDX_REG_DMA0_IDX_Msk         (0xffffUL)                /*!< DMA DMA0_IDX_REG: DMA0_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA1_A_START_REG  ---------------------------- */
#define DMA_DMA1_A_START_REG_DMA1_A_START_Pos (0UL)                     /*!< DMA DMA1_A_START_REG: DMA1_A_START (Bit 0)                  */
#define DMA_DMA1_A_START_REG_DMA1_A_START_Msk (0xffffffffUL)            /*!< DMA DMA1_A_START_REG: DMA1_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA1_B_START_REG  ---------------------------- */
#define DMA_DMA1_B_START_REG_DMA1_B_START_Pos (0UL)                     /*!< DMA DMA1_B_START_REG: DMA1_B_START (Bit 0)                  */
#define DMA_DMA1_B_START_REG_DMA1_B_START_Msk (0xffffffffUL)            /*!< DMA DMA1_B_START_REG: DMA1_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA1_INT_REG  ------------------------------ */
#define DMA_DMA1_INT_REG_DMA1_INT_Pos         (0UL)                     /*!< DMA DMA1_INT_REG: DMA1_INT (Bit 0)                          */
#define DMA_DMA1_INT_REG_DMA1_INT_Msk         (0xffffUL)                /*!< DMA DMA1_INT_REG: DMA1_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA1_LEN_REG  ------------------------------ */
#define DMA_DMA1_LEN_REG_DMA1_LEN_Pos         (0UL)                     /*!< DMA DMA1_LEN_REG: DMA1_LEN (Bit 0)                          */
#define DMA_DMA1_LEN_REG_DMA1_LEN_Msk         (0xffffUL)                /*!< DMA DMA1_LEN_REG: DMA1_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA1_CTRL_REG  ----------------------------- */
#define DMA_DMA1_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA1_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA1_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA1_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA1_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA1_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA1_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA1_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA1_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA1_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA1_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA1_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA1_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA1_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA1_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA1_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA1_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA1_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA1_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA1_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA1_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA1_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA1_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA1_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA1_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA1_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA1_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA1_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA1_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA1_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA1_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA1_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA1_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA1_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA1_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA1_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA1_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA1_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA1_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA1_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA1_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA1_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA1_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA1_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA1_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA1_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA1_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA1_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA1_IDX_REG  ------------------------------ */
#define DMA_DMA1_IDX_REG_DMA1_IDX_Pos         (0UL)                     /*!< DMA DMA1_IDX_REG: DMA1_IDX (Bit 0)                          */
#define DMA_DMA1_IDX_REG_DMA1_IDX_Msk         (0xffffUL)                /*!< DMA DMA1_IDX_REG: DMA1_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA2_A_START_REG  ---------------------------- */
#define DMA_DMA2_A_START_REG_DMA2_A_START_Pos (0UL)                     /*!< DMA DMA2_A_START_REG: DMA2_A_START (Bit 0)                  */
#define DMA_DMA2_A_START_REG_DMA2_A_START_Msk (0xffffffffUL)            /*!< DMA DMA2_A_START_REG: DMA2_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA2_B_START_REG  ---------------------------- */
#define DMA_DMA2_B_START_REG_DMA2_B_START_Pos (0UL)                     /*!< DMA DMA2_B_START_REG: DMA2_B_START (Bit 0)                  */
#define DMA_DMA2_B_START_REG_DMA2_B_START_Msk (0xffffffffUL)            /*!< DMA DMA2_B_START_REG: DMA2_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA2_INT_REG  ------------------------------ */
#define DMA_DMA2_INT_REG_DMA2_INT_Pos         (0UL)                     /*!< DMA DMA2_INT_REG: DMA2_INT (Bit 0)                          */
#define DMA_DMA2_INT_REG_DMA2_INT_Msk         (0xffffUL)                /*!< DMA DMA2_INT_REG: DMA2_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA2_LEN_REG  ------------------------------ */
#define DMA_DMA2_LEN_REG_DMA2_LEN_Pos         (0UL)                     /*!< DMA DMA2_LEN_REG: DMA2_LEN (Bit 0)                          */
#define DMA_DMA2_LEN_REG_DMA2_LEN_Msk         (0xffffUL)                /*!< DMA DMA2_LEN_REG: DMA2_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA2_CTRL_REG  ----------------------------- */
#define DMA_DMA2_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA2_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA2_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA2_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA2_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA2_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA2_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA2_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA2_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA2_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA2_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA2_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA2_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA2_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA2_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA2_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA2_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA2_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA2_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA2_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA2_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA2_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA2_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA2_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA2_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA2_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA2_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA2_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA2_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA2_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA2_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA2_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA2_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA2_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA2_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA2_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA2_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA2_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA2_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA2_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA2_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA2_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA2_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA2_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA2_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA2_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA2_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA2_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA2_IDX_REG  ------------------------------ */
#define DMA_DMA2_IDX_REG_DMA2_IDX_Pos         (0UL)                     /*!< DMA DMA2_IDX_REG: DMA2_IDX (Bit 0)                          */
#define DMA_DMA2_IDX_REG_DMA2_IDX_Msk         (0xffffUL)                /*!< DMA DMA2_IDX_REG: DMA2_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA3_A_START_REG  ---------------------------- */
#define DMA_DMA3_A_START_REG_DMA3_A_START_Pos (0UL)                     /*!< DMA DMA3_A_START_REG: DMA3_A_START (Bit 0)                  */
#define DMA_DMA3_A_START_REG_DMA3_A_START_Msk (0xffffffffUL)            /*!< DMA DMA3_A_START_REG: DMA3_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA3_B_START_REG  ---------------------------- */
#define DMA_DMA3_B_START_REG_DMA3_B_START_Pos (0UL)                     /*!< DMA DMA3_B_START_REG: DMA3_B_START (Bit 0)                  */
#define DMA_DMA3_B_START_REG_DMA3_B_START_Msk (0xffffffffUL)            /*!< DMA DMA3_B_START_REG: DMA3_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA3_INT_REG  ------------------------------ */
#define DMA_DMA3_INT_REG_DMA3_INT_Pos         (0UL)                     /*!< DMA DMA3_INT_REG: DMA3_INT (Bit 0)                          */
#define DMA_DMA3_INT_REG_DMA3_INT_Msk         (0xffffUL)                /*!< DMA DMA3_INT_REG: DMA3_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA3_LEN_REG  ------------------------------ */
#define DMA_DMA3_LEN_REG_DMA3_LEN_Pos         (0UL)                     /*!< DMA DMA3_LEN_REG: DMA3_LEN (Bit 0)                          */
#define DMA_DMA3_LEN_REG_DMA3_LEN_Msk         (0xffffUL)                /*!< DMA DMA3_LEN_REG: DMA3_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA3_CTRL_REG  ----------------------------- */
#define DMA_DMA3_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA3_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA3_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA3_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA3_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA3_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA3_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA3_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA3_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA3_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA3_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA3_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA3_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA3_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA3_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA3_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA3_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA3_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA3_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA3_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA3_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA3_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA3_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA3_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA3_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA3_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA3_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA3_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA3_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA3_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA3_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA3_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA3_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA3_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA3_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA3_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA3_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA3_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA3_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA3_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA3_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA3_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA3_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA3_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA3_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA3_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA3_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA3_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA3_IDX_REG  ------------------------------ */
#define DMA_DMA3_IDX_REG_DMA3_IDX_Pos         (0UL)                     /*!< DMA DMA3_IDX_REG: DMA3_IDX (Bit 0)                          */
#define DMA_DMA3_IDX_REG_DMA3_IDX_Msk         (0xffffUL)                /*!< DMA DMA3_IDX_REG: DMA3_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA4_A_START_REG  ---------------------------- */
#define DMA_DMA4_A_START_REG_DMA4_A_START_Pos (0UL)                     /*!< DMA DMA4_A_START_REG: DMA4_A_START (Bit 0)                  */
#define DMA_DMA4_A_START_REG_DMA4_A_START_Msk (0xffffffffUL)            /*!< DMA DMA4_A_START_REG: DMA4_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA4_B_START_REG  ---------------------------- */
#define DMA_DMA4_B_START_REG_DMA4_B_START_Pos (0UL)                     /*!< DMA DMA4_B_START_REG: DMA4_B_START (Bit 0)                  */
#define DMA_DMA4_B_START_REG_DMA4_B_START_Msk (0xffffffffUL)            /*!< DMA DMA4_B_START_REG: DMA4_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA4_INT_REG  ------------------------------ */
#define DMA_DMA4_INT_REG_DMA4_INT_Pos         (0UL)                     /*!< DMA DMA4_INT_REG: DMA4_INT (Bit 0)                          */
#define DMA_DMA4_INT_REG_DMA4_INT_Msk         (0xffffUL)                /*!< DMA DMA4_INT_REG: DMA4_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA4_LEN_REG  ------------------------------ */
#define DMA_DMA4_LEN_REG_DMA4_LEN_Pos         (0UL)                     /*!< DMA DMA4_LEN_REG: DMA4_LEN (Bit 0)                          */
#define DMA_DMA4_LEN_REG_DMA4_LEN_Msk         (0xffffUL)                /*!< DMA DMA4_LEN_REG: DMA4_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA4_CTRL_REG  ----------------------------- */
#define DMA_DMA4_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA4_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA4_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA4_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA4_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA4_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA4_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA4_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA4_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA4_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA4_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA4_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA4_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA4_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA4_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA4_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA4_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA4_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA4_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA4_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA4_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA4_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA4_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA4_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA4_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA4_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA4_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA4_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA4_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA4_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA4_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA4_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA4_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA4_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA4_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA4_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA4_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA4_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA4_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA4_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA4_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA4_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA4_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA4_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA4_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA4_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA4_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA4_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA4_IDX_REG  ------------------------------ */
#define DMA_DMA4_IDX_REG_DMA4_IDX_Pos         (0UL)                     /*!< DMA DMA4_IDX_REG: DMA4_IDX (Bit 0)                          */
#define DMA_DMA4_IDX_REG_DMA4_IDX_Msk         (0xffffUL)                /*!< DMA DMA4_IDX_REG: DMA4_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA5_A_START_REG  ---------------------------- */
#define DMA_DMA5_A_START_REG_DMA5_A_START_Pos (0UL)                     /*!< DMA DMA5_A_START_REG: DMA5_A_START (Bit 0)                  */
#define DMA_DMA5_A_START_REG_DMA5_A_START_Msk (0xffffffffUL)            /*!< DMA DMA5_A_START_REG: DMA5_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA5_B_START_REG  ---------------------------- */
#define DMA_DMA5_B_START_REG_DMA5_B_START_Pos (0UL)                     /*!< DMA DMA5_B_START_REG: DMA5_B_START (Bit 0)                  */
#define DMA_DMA5_B_START_REG_DMA5_B_START_Msk (0xffffffffUL)            /*!< DMA DMA5_B_START_REG: DMA5_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA5_INT_REG  ------------------------------ */
#define DMA_DMA5_INT_REG_DMA5_INT_Pos         (0UL)                     /*!< DMA DMA5_INT_REG: DMA5_INT (Bit 0)                          */
#define DMA_DMA5_INT_REG_DMA5_INT_Msk         (0xffffUL)                /*!< DMA DMA5_INT_REG: DMA5_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA5_LEN_REG  ------------------------------ */
#define DMA_DMA5_LEN_REG_DMA5_LEN_Pos         (0UL)                     /*!< DMA DMA5_LEN_REG: DMA5_LEN (Bit 0)                          */
#define DMA_DMA5_LEN_REG_DMA5_LEN_Msk         (0xffffUL)                /*!< DMA DMA5_LEN_REG: DMA5_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA5_CTRL_REG  ----------------------------- */
#define DMA_DMA5_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA5_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA5_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA5_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA5_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA5_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA5_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA5_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA5_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA5_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA5_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA5_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA5_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA5_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA5_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA5_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA5_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA5_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA5_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA5_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA5_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA5_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA5_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA5_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA5_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA5_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA5_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA5_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA5_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA5_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA5_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA5_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA5_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA5_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA5_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA5_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA5_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA5_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA5_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA5_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA5_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA5_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA5_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA5_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA5_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA5_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA5_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA5_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA5_IDX_REG  ------------------------------ */
#define DMA_DMA5_IDX_REG_DMA5_IDX_Pos         (0UL)                     /*!< DMA DMA5_IDX_REG: DMA5_IDX (Bit 0)                          */
#define DMA_DMA5_IDX_REG_DMA5_IDX_Msk         (0xffffUL)                /*!< DMA DMA5_IDX_REG: DMA5_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA6_A_START_REG  ---------------------------- */
#define DMA_DMA6_A_START_REG_DMA6_A_START_Pos (0UL)                     /*!< DMA DMA6_A_START_REG: DMA6_A_START (Bit 0)                  */
#define DMA_DMA6_A_START_REG_DMA6_A_START_Msk (0xffffffffUL)            /*!< DMA DMA6_A_START_REG: DMA6_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA6_B_START_REG  ---------------------------- */
#define DMA_DMA6_B_START_REG_DMA6_B_START_Pos (0UL)                     /*!< DMA DMA6_B_START_REG: DMA6_B_START (Bit 0)                  */
#define DMA_DMA6_B_START_REG_DMA6_B_START_Msk (0xffffffffUL)            /*!< DMA DMA6_B_START_REG: DMA6_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA6_INT_REG  ------------------------------ */
#define DMA_DMA6_INT_REG_DMA6_INT_Pos         (0UL)                     /*!< DMA DMA6_INT_REG: DMA6_INT (Bit 0)                          */
#define DMA_DMA6_INT_REG_DMA6_INT_Msk         (0xffffUL)                /*!< DMA DMA6_INT_REG: DMA6_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA6_LEN_REG  ------------------------------ */
#define DMA_DMA6_LEN_REG_DMA6_LEN_Pos         (0UL)                     /*!< DMA DMA6_LEN_REG: DMA6_LEN (Bit 0)                          */
#define DMA_DMA6_LEN_REG_DMA6_LEN_Msk         (0xffffUL)                /*!< DMA DMA6_LEN_REG: DMA6_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA6_CTRL_REG  ----------------------------- */
#define DMA_DMA6_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA6_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA6_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA6_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA6_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA6_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA6_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA6_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA6_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA6_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA6_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA6_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA6_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA6_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA6_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA6_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA6_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA6_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA6_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA6_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA6_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA6_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA6_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA6_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA6_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA6_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA6_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA6_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA6_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA6_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA6_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA6_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA6_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA6_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA6_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA6_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA6_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA6_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA6_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA6_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA6_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA6_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA6_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA6_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA6_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA6_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA6_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA6_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA6_IDX_REG  ------------------------------ */
#define DMA_DMA6_IDX_REG_DMA6_IDX_Pos         (0UL)                     /*!< DMA DMA6_IDX_REG: DMA6_IDX (Bit 0)                          */
#define DMA_DMA6_IDX_REG_DMA6_IDX_Msk         (0xffffUL)                /*!< DMA DMA6_IDX_REG: DMA6_IDX (Bitfield-Mask: 0xffff)          */
/* ----------------------------  DMA_DMA7_A_START_REG  ---------------------------- */
#define DMA_DMA7_A_START_REG_DMA7_A_START_Pos (0UL)                     /*!< DMA DMA7_A_START_REG: DMA7_A_START (Bit 0)                  */
#define DMA_DMA7_A_START_REG_DMA7_A_START_Msk (0xffffffffUL)            /*!< DMA DMA7_A_START_REG: DMA7_A_START (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  DMA_DMA7_B_START_REG  ---------------------------- */
#define DMA_DMA7_B_START_REG_DMA7_B_START_Pos (0UL)                     /*!< DMA DMA7_B_START_REG: DMA7_B_START (Bit 0)                  */
#define DMA_DMA7_B_START_REG_DMA7_B_START_Msk (0xffffffffUL)            /*!< DMA DMA7_B_START_REG: DMA7_B_START (Bitfield-Mask: 0xffffffff) */
/* ------------------------------  DMA_DMA7_INT_REG  ------------------------------ */
#define DMA_DMA7_INT_REG_DMA7_INT_Pos         (0UL)                     /*!< DMA DMA7_INT_REG: DMA7_INT (Bit 0)                          */
#define DMA_DMA7_INT_REG_DMA7_INT_Msk         (0xffffUL)                /*!< DMA DMA7_INT_REG: DMA7_INT (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA7_LEN_REG  ------------------------------ */
#define DMA_DMA7_LEN_REG_DMA7_LEN_Pos         (0UL)                     /*!< DMA DMA7_LEN_REG: DMA7_LEN (Bit 0)                          */
#define DMA_DMA7_LEN_REG_DMA7_LEN_Msk         (0xffffUL)                /*!< DMA DMA7_LEN_REG: DMA7_LEN (Bitfield-Mask: 0xffff)          */
/* ------------------------------  DMA_DMA7_CTRL_REG  ----------------------------- */
#define DMA_DMA7_CTRL_REG_DMA_ON_Pos          (0UL)                     /*!< DMA DMA7_CTRL_REG: DMA_ON (Bit 0)                           */
#define DMA_DMA7_CTRL_REG_DMA_ON_Msk          (0x1UL)                   /*!< DMA DMA7_CTRL_REG: DMA_ON (Bitfield-Mask: 0x01)             */
#define DMA_DMA7_CTRL_REG_BW_Pos              (1UL)                     /*!< DMA DMA7_CTRL_REG: BW (Bit 1)                               */
#define DMA_DMA7_CTRL_REG_BW_Msk              (0x6UL)                   /*!< DMA DMA7_CTRL_REG: BW (Bitfield-Mask: 0x03)                 */
#define DMA_DMA7_CTRL_REG_DREQ_MODE_Pos       (3UL)                     /*!< DMA DMA7_CTRL_REG: DREQ_MODE (Bit 3)                        */
#define DMA_DMA7_CTRL_REG_DREQ_MODE_Msk       (0x8UL)                   /*!< DMA DMA7_CTRL_REG: DREQ_MODE (Bitfield-Mask: 0x01)          */
#define DMA_DMA7_CTRL_REG_BINC_Pos            (4UL)                     /*!< DMA DMA7_CTRL_REG: BINC (Bit 4)                             */
#define DMA_DMA7_CTRL_REG_BINC_Msk            (0x10UL)                  /*!< DMA DMA7_CTRL_REG: BINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA7_CTRL_REG_AINC_Pos            (5UL)                     /*!< DMA DMA7_CTRL_REG: AINC (Bit 5)                             */
#define DMA_DMA7_CTRL_REG_AINC_Msk            (0x20UL)                  /*!< DMA DMA7_CTRL_REG: AINC (Bitfield-Mask: 0x01)               */
#define DMA_DMA7_CTRL_REG_CIRCULAR_Pos        (6UL)                     /*!< DMA DMA7_CTRL_REG: CIRCULAR (Bit 6)                         */
#define DMA_DMA7_CTRL_REG_CIRCULAR_Msk        (0x40UL)                  /*!< DMA DMA7_CTRL_REG: CIRCULAR (Bitfield-Mask: 0x01)           */
#define DMA_DMA7_CTRL_REG_DMA_PRIO_Pos        (7UL)                     /*!< DMA DMA7_CTRL_REG: DMA_PRIO (Bit 7)                         */
#define DMA_DMA7_CTRL_REG_DMA_PRIO_Msk        (0x380UL)                 /*!< DMA DMA7_CTRL_REG: DMA_PRIO (Bitfield-Mask: 0x07)           */
#define DMA_DMA7_CTRL_REG_DMA_IDLE_Pos        (10UL)                    /*!< DMA DMA7_CTRL_REG: DMA_IDLE (Bit 10)                        */
#define DMA_DMA7_CTRL_REG_DMA_IDLE_Msk        (0x400UL)                 /*!< DMA DMA7_CTRL_REG: DMA_IDLE (Bitfield-Mask: 0x01)           */
#define DMA_DMA7_CTRL_REG_DMA_INIT_Pos        (11UL)                    /*!< DMA DMA7_CTRL_REG: DMA_INIT (Bit 11)                        */
#define DMA_DMA7_CTRL_REG_DMA_INIT_Msk        (0x800UL)                 /*!< DMA DMA7_CTRL_REG: DMA_INIT (Bitfield-Mask: 0x01)           */
#define DMA_DMA7_CTRL_REG_REQ_SENSE_Pos       (12UL)                    /*!< DMA DMA7_CTRL_REG: REQ_SENSE (Bit 12)                       */
#define DMA_DMA7_CTRL_REG_REQ_SENSE_Msk       (0x1000UL)                /*!< DMA DMA7_CTRL_REG: REQ_SENSE (Bitfield-Mask: 0x01)          */
#define DMA_DMA7_CTRL_REG_BURST_MODE_Pos      (13UL)                    /*!< DMA DMA7_CTRL_REG: BURST_MODE (Bit 13)                      */
#define DMA_DMA7_CTRL_REG_BURST_MODE_Msk      (0x6000UL)                /*!< DMA DMA7_CTRL_REG: BURST_MODE (Bitfield-Mask: 0x03)         */
#define DMA_DMA7_CTRL_REG_BUS_ERROR_DETECT_Pos (15UL)                   /*!< DMA DMA7_CTRL_REG: BUS_ERROR_DETECT (Bit 15)                */
#define DMA_DMA7_CTRL_REG_BUS_ERROR_DETECT_Msk (0x8000UL)               /*!< DMA DMA7_CTRL_REG: BUS_ERROR_DETECT (Bitfield-Mask: 0x01)   */
/* ------------------------------  DMA_DMA7_IDX_REG  ------------------------------ */
#define DMA_DMA7_IDX_REG_DMA7_IDX_Pos         (0UL)                     /*!< DMA DMA7_IDX_REG: DMA7_IDX (Bit 0)                          */
#define DMA_DMA7_IDX_REG_DMA7_IDX_Msk         (0xffffUL)                /*!< DMA DMA7_IDX_REG: DMA7_IDX (Bitfield-Mask: 0xffff)          */
/* -----------------------------  DMA_DMA_REQ_MUX_REG  ---------------------------- */
#define DMA_DMA_REQ_MUX_REG_DMA01_SEL_Pos     (0UL)                     /*!< DMA DMA_REQ_MUX_REG: DMA01_SEL (Bit 0)                      */
#define DMA_DMA_REQ_MUX_REG_DMA01_SEL_Msk     (0xfUL)                   /*!< DMA DMA_REQ_MUX_REG: DMA01_SEL (Bitfield-Mask: 0x0f)        */
#define DMA_DMA_REQ_MUX_REG_DMA23_SEL_Pos     (4UL)                     /*!< DMA DMA_REQ_MUX_REG: DMA23_SEL (Bit 4)                      */
#define DMA_DMA_REQ_MUX_REG_DMA23_SEL_Msk     (0xf0UL)                  /*!< DMA DMA_REQ_MUX_REG: DMA23_SEL (Bitfield-Mask: 0x0f)        */
#define DMA_DMA_REQ_MUX_REG_DMA45_SEL_Pos     (8UL)                     /*!< DMA DMA_REQ_MUX_REG: DMA45_SEL (Bit 8)                      */
#define DMA_DMA_REQ_MUX_REG_DMA45_SEL_Msk     (0xf00UL)                 /*!< DMA DMA_REQ_MUX_REG: DMA45_SEL (Bitfield-Mask: 0x0f)        */
#define DMA_DMA_REQ_MUX_REG_DMA67_SEL_Pos     (12UL)                    /*!< DMA DMA_REQ_MUX_REG: DMA67_SEL (Bit 12)                     */
#define DMA_DMA_REQ_MUX_REG_DMA67_SEL_Msk     (0xf000UL)                /*!< DMA DMA_REQ_MUX_REG: DMA67_SEL (Bitfield-Mask: 0x0f)        */
/* ---------------------------  DMA_DMA_INT_STATUS_REG  --------------------------- */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH0_Pos (0UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH0 (Bit 0)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH0_Msk (0x1UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH0 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH1_Pos (1UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH1 (Bit 1)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH1_Msk (0x2UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH1 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH2_Pos (2UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH2 (Bit 2)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH2_Msk (0x4UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH2 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH3_Pos (3UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH3 (Bit 3)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH3_Msk (0x8UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH3 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH4_Pos (4UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH4 (Bit 4)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH4_Msk (0x10UL)                 /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH4 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH5_Pos (5UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH5 (Bit 5)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH5_Msk (0x20UL)                 /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH5 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH6_Pos (6UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH6 (Bit 6)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH6_Msk (0x40UL)                 /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH6 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH7_Pos (7UL)                    /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH7 (Bit 7)                 */
#define DMA_DMA_INT_STATUS_REG_DMA_IRQ_CH7_Msk (0x80UL)                 /*!< DMA DMA_INT_STATUS_REG: DMA_IRQ_CH7 (Bitfield-Mask: 0x01)   */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR0_Pos (8UL)                   /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR0 (Bit 8)                */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR0_Msk (0x100UL)               /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR0 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR1_Pos (9UL)                   /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR1 (Bit 9)                */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR1_Msk (0x200UL)               /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR1 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR2_Pos (10UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR2 (Bit 10)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR2_Msk (0x400UL)               /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR2 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR3_Pos (11UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR3 (Bit 11)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR3_Msk (0x800UL)               /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR3 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR4_Pos (12UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR4 (Bit 12)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR4_Msk (0x1000UL)              /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR4 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR5_Pos (13UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR5 (Bit 13)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR5_Msk (0x2000UL)              /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR5 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR6_Pos (14UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR6 (Bit 14)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR6_Msk (0x4000UL)              /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR6 (Bitfield-Mask: 0x01)  */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR7_Pos (15UL)                  /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR7 (Bit 15)               */
#define DMA_DMA_INT_STATUS_REG_DMA_BUS_ERR7_Msk (0x8000UL)              /*!< DMA DMA_INT_STATUS_REG: DMA_BUS_ERR7 (Bitfield-Mask: 0x01)  */
/* ----------------------------  DMA_DMA_CLEAR_INT_REG  --------------------------- */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH0_Pos (0UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH0 (Bit 0)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH0_Msk (0x1UL)               /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH0 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH1_Pos (1UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH1 (Bit 1)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH1_Msk (0x2UL)               /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH1 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH2_Pos (2UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH2 (Bit 2)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH2_Msk (0x4UL)               /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH2 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH3_Pos (3UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH3 (Bit 3)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH3_Msk (0x8UL)               /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH3 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH4_Pos (4UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH4 (Bit 4)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH4_Msk (0x10UL)              /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH4 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH5_Pos (5UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH5 (Bit 5)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH5_Msk (0x20UL)              /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH5 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH6_Pos (6UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH6 (Bit 6)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH6_Msk (0x40UL)              /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH6 (Bitfield-Mask: 0x01) */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH7_Pos (7UL)                 /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH7 (Bit 7)              */
#define DMA_DMA_CLEAR_INT_REG_DMA_RST_IRQ_CH7_Msk (0x80UL)              /*!< DMA DMA_CLEAR_INT_REG: DMA_RST_IRQ_CH7 (Bitfield-Mask: 0x01) */
/* ----------------------------  DMA_DMA_INT_MASK_REG  ---------------------------- */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE0_Pos (0UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE0 (Bit 0)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE0_Msk (0x1UL)                /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE0 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE1_Pos (1UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE1 (Bit 1)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE1_Msk (0x2UL)                /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE1 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE2_Pos (2UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE2 (Bit 2)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE2_Msk (0x4UL)                /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE2 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE3_Pos (3UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE3 (Bit 3)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE3_Msk (0x8UL)                /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE3 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE4_Pos (4UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE4 (Bit 4)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE4_Msk (0x10UL)               /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE4 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE5_Pos (5UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE5 (Bit 5)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE5_Msk (0x20UL)               /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE5 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE6_Pos (6UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE6 (Bit 6)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE6_Msk (0x40UL)               /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE6 (Bitfield-Mask: 0x01) */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE7_Pos (7UL)                  /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE7 (Bit 7)               */
#define DMA_DMA_INT_MASK_REG_DMA_IRQ_ENABLE7_Msk (0x80UL)               /*!< DMA DMA_INT_MASK_REG: DMA_IRQ_ENABLE7 (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================           struct 'DW' Position & Mask          ================ */
/* ================================================================================ */
/* -----------------------------  DW_AHB_DMA_PL1_REG  ----------------------------- */
#define DW_AHB_DMA_PL1_REG_AHB_DMA_PL1_Pos    (0UL)                     /*!< DW AHB_DMA_PL1_REG: AHB_DMA_PL1 (Bit 0)                     */
#define DW_AHB_DMA_PL1_REG_AHB_DMA_PL1_Msk    (0xfUL)                   /*!< DW AHB_DMA_PL1_REG: AHB_DMA_PL1 (Bitfield-Mask: 0x0f)       */
/* -----------------------------  DW_AHB_DMA_PL2_REG  ----------------------------- */
#define DW_AHB_DMA_PL2_REG_AHB_DMA_PL2_Pos    (0UL)                     /*!< DW AHB_DMA_PL2_REG: AHB_DMA_PL2 (Bit 0)                     */
#define DW_AHB_DMA_PL2_REG_AHB_DMA_PL2_Msk    (0xfUL)                   /*!< DW AHB_DMA_PL2_REG: AHB_DMA_PL2 (Bitfield-Mask: 0x0f)       */
/* -----------------------------  DW_AHB_DMA_PL3_REG  ----------------------------- */
#define DW_AHB_DMA_PL3_REG_AHB_DMA_PL3_Pos    (0UL)                     /*!< DW AHB_DMA_PL3_REG: AHB_DMA_PL3 (Bit 0)                     */
#define DW_AHB_DMA_PL3_REG_AHB_DMA_PL3_Msk    (0xfUL)                   /*!< DW AHB_DMA_PL3_REG: AHB_DMA_PL3 (Bitfield-Mask: 0x0f)       */
/* -----------------------------  DW_AHB_DMA_PL4_REG  ----------------------------- */
#define DW_AHB_DMA_PL4_REG_AHB_DMA_PL4_Pos    (0UL)                     /*!< DW AHB_DMA_PL4_REG: AHB_DMA_PL4 (Bit 0)                     */
#define DW_AHB_DMA_PL4_REG_AHB_DMA_PL4_Msk    (0xfUL)                   /*!< DW AHB_DMA_PL4_REG: AHB_DMA_PL4 (Bitfield-Mask: 0x0f)       */
/* -------------------------  DW_AHB_DMA_DFLT_MASTER_REG  ------------------------- */
#define DW_AHB_DMA_DFLT_MASTER_REG_AHB_DMA_DFLT_MASTER_Pos (0UL)        /*!< DW AHB_DMA_DFLT_MASTER_REG: AHB_DMA_DFLT_MASTER (Bit 0)     */
#define DW_AHB_DMA_DFLT_MASTER_REG_AHB_DMA_DFLT_MASTER_Msk (0xfUL)      /*!< DW AHB_DMA_DFLT_MASTER_REG: AHB_DMA_DFLT_MASTER (Bitfield-Mask: 0x0f) */
/* -----------------------------  DW_AHB_DMA_WTEN_REG  ---------------------------- */
#define DW_AHB_DMA_WTEN_REG_AHB_DMA_WTEN_Pos  (0UL)                     /*!< DW AHB_DMA_WTEN_REG: AHB_DMA_WTEN (Bit 0)                   */
#define DW_AHB_DMA_WTEN_REG_AHB_DMA_WTEN_Msk  (0x1UL)                   /*!< DW AHB_DMA_WTEN_REG: AHB_DMA_WTEN (Bitfield-Mask: 0x01)     */
/* -----------------------------  DW_AHB_DMA_TCL_REG  ----------------------------- */
#define DW_AHB_DMA_TCL_REG_AHB_DMA_TCL_Pos    (0UL)                     /*!< DW AHB_DMA_TCL_REG: AHB_DMA_TCL (Bit 0)                     */
#define DW_AHB_DMA_TCL_REG_AHB_DMA_TCL_Msk    (0xffffUL)                /*!< DW AHB_DMA_TCL_REG: AHB_DMA_TCL (Bitfield-Mask: 0xffff)     */
/* ----------------------------  DW_AHB_DMA_CCLM1_REG  ---------------------------- */
#define DW_AHB_DMA_CCLM1_REG_AHB_DMA_CCLM_Pos (0UL)                     /*!< DW AHB_DMA_CCLM1_REG: AHB_DMA_CCLM (Bit 0)                  */
#define DW_AHB_DMA_CCLM1_REG_AHB_DMA_CCLM_Msk (0xffffUL)                /*!< DW AHB_DMA_CCLM1_REG: AHB_DMA_CCLM (Bitfield-Mask: 0xffff)  */
/* ----------------------------  DW_AHB_DMA_CCLM2_REG  ---------------------------- */
#define DW_AHB_DMA_CCLM2_REG_AHB_DMA_CCLM_Pos (0UL)                     /*!< DW AHB_DMA_CCLM2_REG: AHB_DMA_CCLM (Bit 0)                  */
#define DW_AHB_DMA_CCLM2_REG_AHB_DMA_CCLM_Msk (0xffffUL)                /*!< DW AHB_DMA_CCLM2_REG: AHB_DMA_CCLM (Bitfield-Mask: 0xffff)  */
/* ----------------------------  DW_AHB_DMA_CCLM3_REG  ---------------------------- */
#define DW_AHB_DMA_CCLM3_REG_AHB_DMA_CCLM_Pos (0UL)                     /*!< DW AHB_DMA_CCLM3_REG: AHB_DMA_CCLM (Bit 0)                  */
#define DW_AHB_DMA_CCLM3_REG_AHB_DMA_CCLM_Msk (0xffffUL)                /*!< DW AHB_DMA_CCLM3_REG: AHB_DMA_CCLM (Bitfield-Mask: 0xffff)  */
/* ----------------------------  DW_AHB_DMA_CCLM4_REG  ---------------------------- */
#define DW_AHB_DMA_CCLM4_REG_AHB_DMA_CCLM_Pos (0UL)                     /*!< DW AHB_DMA_CCLM4_REG: AHB_DMA_CCLM (Bit 0)                  */
#define DW_AHB_DMA_CCLM4_REG_AHB_DMA_CCLM_Msk (0xffffUL)                /*!< DW AHB_DMA_CCLM4_REG: AHB_DMA_CCLM (Bitfield-Mask: 0xffff)  */
/* ---------------------------  DW_AHB_DMA_VERSION_REG  --------------------------- */
#define DW_AHB_DMA_VERSION_REG_AHB_DMA_VERSION_Pos (0UL)                /*!< DW AHB_DMA_VERSION_REG: AHB_DMA_VERSION (Bit 0)             */
#define DW_AHB_DMA_VERSION_REG_AHB_DMA_VERSION_Msk (0xffffffffUL)       /*!< DW AHB_DMA_VERSION_REG: AHB_DMA_VERSION (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================         struct 'GPADC' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  GPADC_GP_ADC_CTRL_REG  --------------------------- */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_EN_Pos   (0UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_EN (Bit 0)                    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_EN_Msk   (0x1UL)                   /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_EN (Bitfield-Mask: 0x01)      */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_START_Pos (1UL)                    /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_START (Bit 1)                 */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_START_Msk (0x2UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_START (Bitfield-Mask: 0x01)   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CONT_Pos (2UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CONT (Bit 2)                  */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CONT_Msk (0x4UL)                   /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CONT (Bitfield-Mask: 0x01)    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CLK_SEL_Pos (3UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CLK_SEL (Bit 3)               */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CLK_SEL_Msk (0x8UL)                /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CLK_SEL (Bitfield-Mask: 0x01) */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_INT_Pos  (4UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_INT (Bit 4)                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_INT_Msk  (0x10UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_INT (Bitfield-Mask: 0x01)     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MINT_Pos (5UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_MINT (Bit 5)                  */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MINT_Msk (0x20UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_MINT (Bitfield-Mask: 0x01)    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SE_Pos   (6UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SE (Bit 6)                    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SE_Msk   (0x40UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SE (Bitfield-Mask: 0x01)      */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MUTE_Pos (7UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_MUTE (Bit 7)                  */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_MUTE_Msk (0x80UL)                  /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_MUTE (Bitfield-Mask: 0x01)    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SEL_Pos  (8UL)                     /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SEL (Bit 8)                   */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SEL_Msk  (0x1f00UL)                /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SEL (Bitfield-Mask: 0x1f)     */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SIGN_Pos (13UL)                    /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SIGN (Bit 13)                 */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_SIGN_Msk (0x2000UL)                /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_SIGN (Bitfield-Mask: 0x01)    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CHOP_Pos (14UL)                    /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CHOP (Bit 14)                 */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_CHOP_Msk (0x4000UL)                /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_CHOP (Bitfield-Mask: 0x01)    */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_LDO_ZERO_Pos (15UL)                /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_LDO_ZERO (Bit 15)             */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_LDO_ZERO_Msk (0x8000UL)            /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_LDO_ZERO (Bitfield-Mask: 0x01) */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_SEL_Pos (16UL)           /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_DIFF_TEMP_SEL (Bit 16)        */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_SEL_Msk (0x30000UL)      /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_DIFF_TEMP_SEL (Bitfield-Mask: 0x03) */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_EN_Pos (18UL)            /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_DIFF_TEMP_EN (Bit 18)         */
#define GPADC_GP_ADC_CTRL_REG_GP_ADC_DIFF_TEMP_EN_Msk (0x40000UL)       /*!< GPADC GP_ADC_CTRL_REG: GP_ADC_DIFF_TEMP_EN (Bitfield-Mask: 0x01) */
/* ---------------------------  GPADC_GP_ADC_CTRL2_REG  --------------------------- */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_ATTN3X_Pos (0UL)                  /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_ATTN3X (Bit 0)               */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_ATTN3X_Msk (0x1UL)                /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_ATTN3X (Bitfield-Mask: 0x01) */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_IDYN_Pos (1UL)                    /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_IDYN (Bit 1)                 */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_IDYN_Msk (0x2UL)                  /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_IDYN (Bitfield-Mask: 0x01)   */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_I20U_Pos (2UL)                    /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_I20U (Bit 2)                 */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_I20U_Msk (0x4UL)                  /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_I20U (Bitfield-Mask: 0x01)   */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_DMA_EN_Pos (3UL)                  /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_DMA_EN (Bit 3)               */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_DMA_EN_Msk (0x8UL)                /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_DMA_EN (Bitfield-Mask: 0x01) */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_CONV_NRS_Pos (5UL)                /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_CONV_NRS (Bit 5)             */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_CONV_NRS_Msk (0xe0UL)             /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_CONV_NRS (Bitfield-Mask: 0x07) */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_SMPL_TIME_Pos (8UL)               /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_SMPL_TIME (Bit 8)            */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_SMPL_TIME_Msk (0xf00UL)           /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_SMPL_TIME (Bitfield-Mask: 0x0f) */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_STORE_DEL_Pos (12UL)              /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_STORE_DEL (Bit 12)           */
#define GPADC_GP_ADC_CTRL2_REG_GP_ADC_STORE_DEL_Msk (0xf000UL)          /*!< GPADC GP_ADC_CTRL2_REG: GP_ADC_STORE_DEL (Bitfield-Mask: 0x0f) */
/* ---------------------------  GPADC_GP_ADC_CTRL3_REG  --------------------------- */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_EN_DEL_Pos (0UL)                  /*!< GPADC GP_ADC_CTRL3_REG: GP_ADC_EN_DEL (Bit 0)               */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_EN_DEL_Msk (0xffUL)               /*!< GPADC GP_ADC_CTRL3_REG: GP_ADC_EN_DEL (Bitfield-Mask: 0xff) */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_INTERVAL_Pos (8UL)                /*!< GPADC GP_ADC_CTRL3_REG: GP_ADC_INTERVAL (Bit 8)             */
#define GPADC_GP_ADC_CTRL3_REG_GP_ADC_INTERVAL_Msk (0xff00UL)           /*!< GPADC GP_ADC_CTRL3_REG: GP_ADC_INTERVAL (Bitfield-Mask: 0xff) */
/* ----------------------------  GPADC_GP_ADC_OFFP_REG  --------------------------- */
#define GPADC_GP_ADC_OFFP_REG_GP_ADC_OFFP_Pos (0UL)                     /*!< GPADC GP_ADC_OFFP_REG: GP_ADC_OFFP (Bit 0)                  */
#define GPADC_GP_ADC_OFFP_REG_GP_ADC_OFFP_Msk (0x3ffUL)                 /*!< GPADC GP_ADC_OFFP_REG: GP_ADC_OFFP (Bitfield-Mask: 0x3ff)   */
/* ----------------------------  GPADC_GP_ADC_OFFN_REG  --------------------------- */
#define GPADC_GP_ADC_OFFN_REG_GP_ADC_OFFN_Pos (0UL)                     /*!< GPADC GP_ADC_OFFN_REG: GP_ADC_OFFN (Bit 0)                  */
#define GPADC_GP_ADC_OFFN_REG_GP_ADC_OFFN_Msk (0x3ffUL)                 /*!< GPADC GP_ADC_OFFN_REG: GP_ADC_OFFN (Bitfield-Mask: 0x3ff)   */
/* -------------------------  GPADC_GP_ADC_CLEAR_INT_REG  ------------------------- */
#define GPADC_GP_ADC_CLEAR_INT_REG_GP_ADC_CLR_INT_Pos (0UL)             /*!< GPADC GP_ADC_CLEAR_INT_REG: GP_ADC_CLR_INT (Bit 0)          */
#define GPADC_GP_ADC_CLEAR_INT_REG_GP_ADC_CLR_INT_Msk (0xffffUL)        /*!< GPADC GP_ADC_CLEAR_INT_REG: GP_ADC_CLR_INT (Bitfield-Mask: 0xffff) */
/* ---------------------------  GPADC_GP_ADC_RESULT_REG  -------------------------- */
#define GPADC_GP_ADC_RESULT_REG_GP_ADC_VAL_Pos (0UL)                    /*!< GPADC GP_ADC_RESULT_REG: GP_ADC_VAL (Bit 0)                 */
#define GPADC_GP_ADC_RESULT_REG_GP_ADC_VAL_Msk (0xffffUL)               /*!< GPADC GP_ADC_RESULT_REG: GP_ADC_VAL (Bitfield-Mask: 0xffff) */
/* ================================================================================ */
/* ================          struct 'GPIO' Position & Mask         ================ */
/* ================================================================================ */
/* ------------------------------  GPIO_P0_DATA_REG  ------------------------------ */
#define GPIO_P0_DATA_REG_P0_DATA_Pos          (0UL)                     /*!< GPIO P0_DATA_REG: P0_DATA (Bit 0)                           */
#define GPIO_P0_DATA_REG_P0_DATA_Msk          (0xffffffffUL)            /*!< GPIO P0_DATA_REG: P0_DATA (Bitfield-Mask: 0xffffffff)       */
/* ------------------------------  GPIO_P1_DATA_REG  ------------------------------ */
#define GPIO_P1_DATA_REG_P1_DATA_Pos          (0UL)                     /*!< GPIO P1_DATA_REG: P1_DATA (Bit 0)                           */
#define GPIO_P1_DATA_REG_P1_DATA_Msk          (0x7fffffUL)              /*!< GPIO P1_DATA_REG: P1_DATA (Bitfield-Mask: 0x7fffff)         */
/* ----------------------------  GPIO_P0_SET_DATA_REG  ---------------------------- */
#define GPIO_P0_SET_DATA_REG_P0_SET_Pos       (0UL)                     /*!< GPIO P0_SET_DATA_REG: P0_SET (Bit 0)                        */
#define GPIO_P0_SET_DATA_REG_P0_SET_Msk       (0xffffffffUL)            /*!< GPIO P0_SET_DATA_REG: P0_SET (Bitfield-Mask: 0xffffffff)    */
/* ----------------------------  GPIO_P1_SET_DATA_REG  ---------------------------- */
#define GPIO_P1_SET_DATA_REG_P1_SET_Pos       (0UL)                     /*!< GPIO P1_SET_DATA_REG: P1_SET (Bit 0)                        */
#define GPIO_P1_SET_DATA_REG_P1_SET_Msk       (0x7fffffUL)              /*!< GPIO P1_SET_DATA_REG: P1_SET (Bitfield-Mask: 0x7fffff)      */
/* ---------------------------  GPIO_P0_RESET_DATA_REG  --------------------------- */
#define GPIO_P0_RESET_DATA_REG_P0_RESET_Pos   (0UL)                     /*!< GPIO P0_RESET_DATA_REG: P0_RESET (Bit 0)                    */
#define GPIO_P0_RESET_DATA_REG_P0_RESET_Msk   (0xffffffffUL)            /*!< GPIO P0_RESET_DATA_REG: P0_RESET (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  GPIO_P1_RESET_DATA_REG  --------------------------- */
#define GPIO_P1_RESET_DATA_REG_P1_RESET_Pos   (0UL)                     /*!< GPIO P1_RESET_DATA_REG: P1_RESET (Bit 0)                    */
#define GPIO_P1_RESET_DATA_REG_P1_RESET_Msk   (0x7fffffUL)              /*!< GPIO P1_RESET_DATA_REG: P1_RESET (Bitfield-Mask: 0x7fffff)  */
/* -----------------------------  GPIO_P0_00_MODE_REG  ---------------------------- */
#define GPIO_P0_00_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_00_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_00_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_00_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_00_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_00_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_00_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_00_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_00_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_00_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_00_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_00_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_01_MODE_REG  ---------------------------- */
#define GPIO_P0_01_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_01_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_01_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_01_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_01_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_01_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_01_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_01_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_01_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_01_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_01_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_01_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_02_MODE_REG  ---------------------------- */
#define GPIO_P0_02_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_02_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_02_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_02_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_02_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_02_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_02_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_02_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_02_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_02_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_02_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_02_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_03_MODE_REG  ---------------------------- */
#define GPIO_P0_03_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_03_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_03_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_03_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_03_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_03_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_03_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_03_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_03_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_03_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_03_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_03_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_04_MODE_REG  ---------------------------- */
#define GPIO_P0_04_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_04_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_04_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_04_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_04_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_04_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_04_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_04_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_04_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_04_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_04_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_04_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_05_MODE_REG  ---------------------------- */
#define GPIO_P0_05_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_05_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_05_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_05_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_05_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_05_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_05_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_05_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_05_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_05_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_05_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_05_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_06_MODE_REG  ---------------------------- */
#define GPIO_P0_06_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_06_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_06_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_06_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_06_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_06_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_06_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_06_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_06_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_06_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_06_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_06_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_07_MODE_REG  ---------------------------- */
#define GPIO_P0_07_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_07_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_07_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_07_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_07_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_07_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_07_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_07_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_07_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_07_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_07_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_07_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_08_MODE_REG  ---------------------------- */
#define GPIO_P0_08_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_08_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_08_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_08_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_08_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_08_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_08_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_08_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_08_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_08_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_08_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_08_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_09_MODE_REG  ---------------------------- */
#define GPIO_P0_09_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_09_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_09_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_09_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_09_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_09_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_09_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_09_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_09_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_09_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_09_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_09_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_10_MODE_REG  ---------------------------- */
#define GPIO_P0_10_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_10_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_10_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_10_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_10_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_10_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_10_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_10_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_10_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_10_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_10_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_10_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_11_MODE_REG  ---------------------------- */
#define GPIO_P0_11_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_11_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_11_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_11_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_11_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_11_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_11_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_11_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_11_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_11_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_11_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_11_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_12_MODE_REG  ---------------------------- */
#define GPIO_P0_12_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_12_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_12_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_12_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_12_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_12_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_12_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_12_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_12_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_12_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_12_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_12_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_13_MODE_REG  ---------------------------- */
#define GPIO_P0_13_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_13_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_13_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_13_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_13_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_13_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_13_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_13_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_13_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_13_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_13_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_13_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_14_MODE_REG  ---------------------------- */
#define GPIO_P0_14_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_14_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_14_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_14_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_14_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_14_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_14_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_14_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_14_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_14_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_14_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_14_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_15_MODE_REG  ---------------------------- */
#define GPIO_P0_15_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_15_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_15_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_15_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_15_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_15_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_15_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_15_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_15_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_15_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_15_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_15_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_16_MODE_REG  ---------------------------- */
#define GPIO_P0_16_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_16_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_16_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_16_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_16_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_16_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_16_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_16_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_16_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_16_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_16_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_16_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_17_MODE_REG  ---------------------------- */
#define GPIO_P0_17_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_17_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_17_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_17_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_17_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_17_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_17_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_17_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_17_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_17_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_17_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_17_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_18_MODE_REG  ---------------------------- */
#define GPIO_P0_18_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_18_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_18_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_18_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_18_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_18_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_18_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_18_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_18_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_18_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_18_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_18_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_19_MODE_REG  ---------------------------- */
#define GPIO_P0_19_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_19_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_19_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_19_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_19_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_19_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_19_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_19_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_19_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_19_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_19_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_19_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_20_MODE_REG  ---------------------------- */
#define GPIO_P0_20_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_20_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_20_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_20_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_20_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_20_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_20_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_20_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_20_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_20_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_20_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_20_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_21_MODE_REG  ---------------------------- */
#define GPIO_P0_21_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_21_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_21_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_21_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_21_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_21_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_21_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_21_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_21_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_21_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_21_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_21_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_22_MODE_REG  ---------------------------- */
#define GPIO_P0_22_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_22_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_22_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_22_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_22_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_22_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_22_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_22_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_22_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_22_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_22_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_22_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_23_MODE_REG  ---------------------------- */
#define GPIO_P0_23_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_23_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_23_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_23_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_23_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_23_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_23_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_23_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_23_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_23_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_23_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_23_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_24_MODE_REG  ---------------------------- */
#define GPIO_P0_24_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_24_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_24_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_24_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_24_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_24_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_24_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_24_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_24_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_24_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_24_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_24_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_25_MODE_REG  ---------------------------- */
#define GPIO_P0_25_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_25_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_25_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_25_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_25_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_25_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_25_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_25_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_25_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_25_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_25_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_25_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_26_MODE_REG  ---------------------------- */
#define GPIO_P0_26_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_26_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_26_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_26_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_26_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_26_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_26_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_26_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_26_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_26_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_26_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_26_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_27_MODE_REG  ---------------------------- */
#define GPIO_P0_27_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_27_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_27_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_27_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_27_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_27_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_27_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_27_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_27_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_27_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_27_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_27_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_28_MODE_REG  ---------------------------- */
#define GPIO_P0_28_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_28_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_28_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_28_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_28_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_28_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_28_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_28_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_28_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_28_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_28_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_28_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_29_MODE_REG  ---------------------------- */
#define GPIO_P0_29_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_29_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_29_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_29_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_29_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_29_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_29_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_29_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_29_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_29_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_29_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_29_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_30_MODE_REG  ---------------------------- */
#define GPIO_P0_30_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_30_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_30_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_30_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_30_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_30_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_30_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_30_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_30_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_30_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_30_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_30_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P0_31_MODE_REG  ---------------------------- */
#define GPIO_P0_31_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P0_31_MODE_REG: PID (Bit 0)                            */
#define GPIO_P0_31_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P0_31_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P0_31_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P0_31_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P0_31_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P0_31_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P0_31_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P0_31_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P0_31_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P0_31_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_00_MODE_REG  ---------------------------- */
#define GPIO_P1_00_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_00_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_00_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_00_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_00_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_00_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_00_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_00_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_00_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_00_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_00_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_00_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_01_MODE_REG  ---------------------------- */
#define GPIO_P1_01_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_01_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_01_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_01_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_01_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_01_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_01_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_01_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_01_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_01_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_01_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_01_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_02_MODE_REG  ---------------------------- */
#define GPIO_P1_02_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_02_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_02_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_02_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_02_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_02_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_02_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_02_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_02_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_02_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_02_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_02_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_03_MODE_REG  ---------------------------- */
#define GPIO_P1_03_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_03_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_03_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_03_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_03_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_03_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_03_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_03_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_03_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_03_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_03_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_03_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_04_MODE_REG  ---------------------------- */
#define GPIO_P1_04_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_04_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_04_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_04_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_04_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_04_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_04_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_04_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_04_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_04_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_04_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_04_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_05_MODE_REG  ---------------------------- */
#define GPIO_P1_05_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_05_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_05_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_05_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_05_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_05_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_05_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_05_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_05_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_05_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_05_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_05_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_06_MODE_REG  ---------------------------- */
#define GPIO_P1_06_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_06_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_06_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_06_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_06_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_06_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_06_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_06_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_06_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_06_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_06_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_06_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_07_MODE_REG  ---------------------------- */
#define GPIO_P1_07_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_07_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_07_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_07_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_07_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_07_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_07_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_07_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_07_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_07_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_07_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_07_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_08_MODE_REG  ---------------------------- */
#define GPIO_P1_08_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_08_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_08_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_08_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_08_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_08_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_08_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_08_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_08_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_08_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_08_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_08_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_09_MODE_REG  ---------------------------- */
#define GPIO_P1_09_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_09_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_09_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_09_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_09_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_09_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_09_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_09_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_09_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_09_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_09_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_09_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_10_MODE_REG  ---------------------------- */
#define GPIO_P1_10_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_10_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_10_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_10_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_10_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_10_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_10_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_10_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_10_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_10_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_10_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_10_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_11_MODE_REG  ---------------------------- */
#define GPIO_P1_11_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_11_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_11_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_11_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_11_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_11_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_11_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_11_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_11_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_11_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_11_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_11_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_12_MODE_REG  ---------------------------- */
#define GPIO_P1_12_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_12_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_12_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_12_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_12_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_12_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_12_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_12_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_12_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_12_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_12_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_12_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_13_MODE_REG  ---------------------------- */
#define GPIO_P1_13_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_13_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_13_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_13_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_13_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_13_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_13_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_13_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_13_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_13_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_13_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_13_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_14_MODE_REG  ---------------------------- */
#define GPIO_P1_14_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_14_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_14_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_14_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_14_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_14_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_14_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_14_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_14_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_14_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_14_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_14_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_15_MODE_REG  ---------------------------- */
#define GPIO_P1_15_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_15_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_15_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_15_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_15_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_15_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_15_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_15_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_15_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_15_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_15_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_15_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_16_MODE_REG  ---------------------------- */
#define GPIO_P1_16_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_16_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_16_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_16_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_16_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_16_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_16_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_16_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_16_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_16_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_16_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_16_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_17_MODE_REG  ---------------------------- */
#define GPIO_P1_17_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_17_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_17_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_17_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_17_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_17_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_17_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_17_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_17_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_17_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_17_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_17_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_18_MODE_REG  ---------------------------- */
#define GPIO_P1_18_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_18_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_18_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_18_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_18_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_18_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_18_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_18_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_18_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_18_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_18_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_18_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_19_MODE_REG  ---------------------------- */
#define GPIO_P1_19_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_19_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_19_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_19_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_19_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_19_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_19_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_19_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_19_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_19_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_19_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_19_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_20_MODE_REG  ---------------------------- */
#define GPIO_P1_20_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_20_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_20_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_20_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_20_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_20_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_20_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_20_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_20_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_20_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_20_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_20_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_21_MODE_REG  ---------------------------- */
#define GPIO_P1_21_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_21_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_21_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_21_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_21_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_21_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_21_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_21_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_21_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_21_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_21_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_21_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* -----------------------------  GPIO_P1_22_MODE_REG  ---------------------------- */
#define GPIO_P1_22_MODE_REG_PID_Pos           (0UL)                     /*!< GPIO P1_22_MODE_REG: PID (Bit 0)                            */
#define GPIO_P1_22_MODE_REG_PID_Msk           (0x3fUL)                  /*!< GPIO P1_22_MODE_REG: PID (Bitfield-Mask: 0x3f)              */
#define GPIO_P1_22_MODE_REG_PUPD_Pos          (8UL)                     /*!< GPIO P1_22_MODE_REG: PUPD (Bit 8)                           */
#define GPIO_P1_22_MODE_REG_PUPD_Msk          (0x300UL)                 /*!< GPIO P1_22_MODE_REG: PUPD (Bitfield-Mask: 0x03)             */
#define GPIO_P1_22_MODE_REG_PPOD_Pos          (10UL)                    /*!< GPIO P1_22_MODE_REG: PPOD (Bit 10)                          */
#define GPIO_P1_22_MODE_REG_PPOD_Msk          (0x400UL)                 /*!< GPIO P1_22_MODE_REG: PPOD (Bitfield-Mask: 0x01)             */
/* ---------------------------  GPIO_P0_PADPWR_CTRL_REG  -------------------------- */
#define GPIO_P0_PADPWR_CTRL_REG_P0_OUT_CTRL_Pos (6UL)                   /*!< GPIO P0_PADPWR_CTRL_REG: P0_OUT_CTRL (Bit 6)                */
#define GPIO_P0_PADPWR_CTRL_REG_P0_OUT_CTRL_Msk (0xffffffc0UL)          /*!< GPIO P0_PADPWR_CTRL_REG: P0_OUT_CTRL (Bitfield-Mask: 0x3ffffff) */
/* ---------------------------  GPIO_P1_PADPWR_CTRL_REG  -------------------------- */
#define GPIO_P1_PADPWR_CTRL_REG_P1_OUT_CTRL_Pos (0UL)                   /*!< GPIO P1_PADPWR_CTRL_REG: P1_OUT_CTRL (Bit 0)                */
#define GPIO_P1_PADPWR_CTRL_REG_P1_OUT_CTRL_Msk (0x7fffffUL)            /*!< GPIO P1_PADPWR_CTRL_REG: P1_OUT_CTRL (Bitfield-Mask: 0x7fffff) */
/* ----------------------------  GPIO_GPIO_CLK_SEL_REG  --------------------------- */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_SEL_Pos (0UL)                  /*!< GPIO GPIO_CLK_SEL_REG: FUNC_CLOCK_SEL (Bit 0)               */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_SEL_Msk (0x7UL)                /*!< GPIO GPIO_CLK_SEL_REG: FUNC_CLOCK_SEL (Bitfield-Mask: 0x07) */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_EN_Pos (3UL)                   /*!< GPIO GPIO_CLK_SEL_REG: FUNC_CLOCK_EN (Bit 3)                */
#define GPIO_GPIO_CLK_SEL_REG_FUNC_CLOCK_EN_Msk (0x8UL)                 /*!< GPIO GPIO_CLK_SEL_REG: FUNC_CLOCK_EN (Bitfield-Mask: 0x01)  */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32K_OUTPUT_EN_Pos (4UL)               /*!< GPIO GPIO_CLK_SEL_REG: XTAL32K_OUTPUT_EN (Bit 4)            */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32K_OUTPUT_EN_Msk (0x10UL)            /*!< GPIO GPIO_CLK_SEL_REG: XTAL32K_OUTPUT_EN (Bitfield-Mask: 0x01) */
#define GPIO_GPIO_CLK_SEL_REG_RC32K_OUTPUT_EN_Pos (5UL)                 /*!< GPIO GPIO_CLK_SEL_REG: RC32K_OUTPUT_EN (Bit 5)              */
#define GPIO_GPIO_CLK_SEL_REG_RC32K_OUTPUT_EN_Msk (0x20UL)              /*!< GPIO GPIO_CLK_SEL_REG: RC32K_OUTPUT_EN (Bitfield-Mask: 0x01) */
#define GPIO_GPIO_CLK_SEL_REG_RCX_OUTPUT_EN_Pos (6UL)                   /*!< GPIO GPIO_CLK_SEL_REG: RCX_OUTPUT_EN (Bit 6)                */
#define GPIO_GPIO_CLK_SEL_REG_RCX_OUTPUT_EN_Msk (0x40UL)                /*!< GPIO GPIO_CLK_SEL_REG: RCX_OUTPUT_EN (Bitfield-Mask: 0x01)  */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32M_OUTPUT_EN_Pos (7UL)               /*!< GPIO GPIO_CLK_SEL_REG: XTAL32M_OUTPUT_EN (Bit 7)            */
#define GPIO_GPIO_CLK_SEL_REG_XTAL32M_OUTPUT_EN_Msk (0x80UL)            /*!< GPIO GPIO_CLK_SEL_REG: XTAL32M_OUTPUT_EN (Bitfield-Mask: 0x01) */
#define GPIO_GPIO_CLK_SEL_REG_RC32M_OUTPUT_EN_Pos (8UL)                 /*!< GPIO GPIO_CLK_SEL_REG: RC32M_OUTPUT_EN (Bit 8)              */
#define GPIO_GPIO_CLK_SEL_REG_RC32M_OUTPUT_EN_Msk (0x100UL)             /*!< GPIO GPIO_CLK_SEL_REG: RC32M_OUTPUT_EN (Bitfield-Mask: 0x01) */
#define GPIO_GPIO_CLK_SEL_REG_DIVN_OUTPUT_EN_Pos (9UL)                  /*!< GPIO GPIO_CLK_SEL_REG: DIVN_OUTPUT_EN (Bit 9)               */
#define GPIO_GPIO_CLK_SEL_REG_DIVN_OUTPUT_EN_Msk (0x200UL)              /*!< GPIO GPIO_CLK_SEL_REG: DIVN_OUTPUT_EN (Bitfield-Mask: 0x01) */
/* ---------------------------  GPIO_PAD_WEAK_CTRL_REG  --------------------------- */
#define GPIO_PAD_WEAK_CTRL_REG_P0_06_LOWDRV_Pos (0UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_06_LOWDRV (Bit 0)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_06_LOWDRV_Msk (0x1UL)                 /*!< GPIO PAD_WEAK_CTRL_REG: P0_06_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_07_LOWDRV_Pos (1UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_07_LOWDRV (Bit 1)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_07_LOWDRV_Msk (0x2UL)                 /*!< GPIO PAD_WEAK_CTRL_REG: P0_07_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_16_LOWDRV_Pos (2UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_16_LOWDRV (Bit 2)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_16_LOWDRV_Msk (0x4UL)                 /*!< GPIO PAD_WEAK_CTRL_REG: P0_16_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_17_LOWDRV_Pos (3UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_17_LOWDRV (Bit 3)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_17_LOWDRV_Msk (0x8UL)                 /*!< GPIO PAD_WEAK_CTRL_REG: P0_17_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_18_LOWDRV_Pos (4UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_18_LOWDRV (Bit 4)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_18_LOWDRV_Msk (0x10UL)                /*!< GPIO PAD_WEAK_CTRL_REG: P0_18_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_25_LOWDRV_Pos (5UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_25_LOWDRV (Bit 5)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_25_LOWDRV_Msk (0x20UL)                /*!< GPIO PAD_WEAK_CTRL_REG: P0_25_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_26_LOWDRV_Pos (6UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_26_LOWDRV (Bit 6)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_26_LOWDRV_Msk (0x40UL)                /*!< GPIO PAD_WEAK_CTRL_REG: P0_26_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P0_27_LOWDRV_Pos (7UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P0_27_LOWDRV (Bit 7)                */
#define GPIO_PAD_WEAK_CTRL_REG_P0_27_LOWDRV_Msk (0x80UL)                /*!< GPIO PAD_WEAK_CTRL_REG: P0_27_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P1_00_LOWDRV_Pos (8UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P1_00_LOWDRV (Bit 8)                */
#define GPIO_PAD_WEAK_CTRL_REG_P1_00_LOWDRV_Msk (0x100UL)               /*!< GPIO PAD_WEAK_CTRL_REG: P1_00_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P1_01_LOWDRV_Pos (9UL)                   /*!< GPIO PAD_WEAK_CTRL_REG: P1_01_LOWDRV (Bit 9)                */
#define GPIO_PAD_WEAK_CTRL_REG_P1_01_LOWDRV_Msk (0x200UL)               /*!< GPIO PAD_WEAK_CTRL_REG: P1_01_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P1_02_LOWDRV_Pos (10UL)                  /*!< GPIO PAD_WEAK_CTRL_REG: P1_02_LOWDRV (Bit 10)               */
#define GPIO_PAD_WEAK_CTRL_REG_P1_02_LOWDRV_Msk (0x400UL)               /*!< GPIO PAD_WEAK_CTRL_REG: P1_02_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P1_06_LOWDRV_Pos (11UL)                  /*!< GPIO PAD_WEAK_CTRL_REG: P1_06_LOWDRV (Bit 11)               */
#define GPIO_PAD_WEAK_CTRL_REG_P1_06_LOWDRV_Msk (0x800UL)               /*!< GPIO PAD_WEAK_CTRL_REG: P1_06_LOWDRV (Bitfield-Mask: 0x01)  */
#define GPIO_PAD_WEAK_CTRL_REG_P1_09_LOWDRV_Pos (12UL)                  /*!< GPIO PAD_WEAK_CTRL_REG: P1_09_LOWDRV (Bit 12)               */
#define GPIO_PAD_WEAK_CTRL_REG_P1_09_LOWDRV_Msk (0x1000UL)              /*!< GPIO PAD_WEAK_CTRL_REG: P1_09_LOWDRV (Bitfield-Mask: 0x01)  */
/* -----------------------------  GPIO_BIST_CTRL_REG  ----------------------------- */
#define GPIO_BIST_CTRL_REG_ROMBIST_ENABLE_Pos (4UL)                     /*!< GPIO BIST_CTRL_REG: ROMBIST_ENABLE (Bit 4)                  */
#define GPIO_BIST_CTRL_REG_ROMBIST_ENABLE_Msk (0x10UL)                  /*!< GPIO BIST_CTRL_REG: ROMBIST_ENABLE (Bitfield-Mask: 0x01)    */
#define GPIO_BIST_CTRL_REG_SYSRAMBIST_ENABLE_Pos (6UL)                  /*!< GPIO BIST_CTRL_REG: SYSRAMBIST_ENABLE (Bit 6)               */
#define GPIO_BIST_CTRL_REG_SYSRAMBIST_ENABLE_Msk (0x40UL)               /*!< GPIO BIST_CTRL_REG: SYSRAMBIST_ENABLE (Bitfield-Mask: 0x01) */
/* --------------------------  GPIO_RAMBIST_STATUS1_REG  -------------------------- */
#define GPIO_RAMBIST_STATUS1_REG_ROM_BIST_BUSY_Pos (15UL)               /*!< GPIO RAMBIST_STATUS1_REG: ROM_BIST_BUSY (Bit 15)            */
#define GPIO_RAMBIST_STATUS1_REG_ROM_BIST_BUSY_Msk (0x8000UL)           /*!< GPIO RAMBIST_STATUS1_REG: ROM_BIST_BUSY (Bitfield-Mask: 0x01) */
/* --------------------------  GPIO_ROMBIST_RESULTL_REG  -------------------------- */
#define GPIO_ROMBIST_RESULTL_REG_ROMBIST_RESULTL_Pos (0UL)              /*!< GPIO ROMBIST_RESULTL_REG: ROMBIST_RESULTL (Bit 0)           */
#define GPIO_ROMBIST_RESULTL_REG_ROMBIST_RESULTL_Msk (0xffffUL)         /*!< GPIO ROMBIST_RESULTL_REG: ROMBIST_RESULTL (Bitfield-Mask: 0xffff) */
/* --------------------------  GPIO_ROMBIST_RESULTH_REG  -------------------------- */
#define GPIO_ROMBIST_RESULTH_REG_ROMBIST_RESULTH_Pos (0UL)              /*!< GPIO ROMBIST_RESULTH_REG: ROMBIST_RESULTH (Bit 0)           */
#define GPIO_ROMBIST_RESULTH_REG_ROMBIST_RESULTH_Msk (0xffffUL)         /*!< GPIO ROMBIST_RESULTH_REG: ROMBIST_RESULTH (Bitfield-Mask: 0xffff) */
/* -----------------------------  GPIO_TEST_CTRL_REG  ----------------------------- */
#define GPIO_TEST_CTRL_REG_SHOW_CLOCKS_Pos    (0UL)                     /*!< GPIO TEST_CTRL_REG: SHOW_CLOCKS (Bit 0)                     */
#define GPIO_TEST_CTRL_REG_SHOW_CLOCKS_Msk    (0x1UL)                   /*!< GPIO TEST_CTRL_REG: SHOW_CLOCKS (Bitfield-Mask: 0x01)       */
#define GPIO_TEST_CTRL_REG_ENABLE_RFPT_Pos    (1UL)                     /*!< GPIO TEST_CTRL_REG: ENABLE_RFPT (Bit 1)                     */
#define GPIO_TEST_CTRL_REG_ENABLE_RFPT_Msk    (0x2UL)                   /*!< GPIO TEST_CTRL_REG: ENABLE_RFPT (Bitfield-Mask: 0x01)       */
#define GPIO_TEST_CTRL_REG_SHOW_PLL_TEST_OUT_Pos (2UL)                  /*!< GPIO TEST_CTRL_REG: SHOW_PLL_TEST_OUT (Bit 2)               */
#define GPIO_TEST_CTRL_REG_SHOW_PLL_TEST_OUT_Msk (0x4UL)                /*!< GPIO TEST_CTRL_REG: SHOW_PLL_TEST_OUT (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_SHOW_DCDC_TESTBUS_Pos (3UL)                  /*!< GPIO TEST_CTRL_REG: SHOW_DCDC_TESTBUS (Bit 3)               */
#define GPIO_TEST_CTRL_REG_SHOW_DCDC_TESTBUS_Msk (0x8UL)                /*!< GPIO TEST_CTRL_REG: SHOW_DCDC_TESTBUS (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_XTAL32M_CAP_TEST_EN_Pos (4UL)                /*!< GPIO TEST_CTRL_REG: XTAL32M_CAP_TEST_EN (Bit 4)             */
#define GPIO_TEST_CTRL_REG_XTAL32M_CAP_TEST_EN_Msk (0x10UL)             /*!< GPIO TEST_CTRL_REG: XTAL32M_CAP_TEST_EN (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_SHOW_IF_RO_Pos     (5UL)                     /*!< GPIO TEST_CTRL_REG: SHOW_IF_RO (Bit 5)                      */
#define GPIO_TEST_CTRL_REG_SHOW_IF_RO_Msk     (0x20UL)                  /*!< GPIO TEST_CTRL_REG: SHOW_IF_RO (Bitfield-Mask: 0x01)        */
#define GPIO_TEST_CTRL_REG_ADPLL_SCAN_TEST_EN_Pos (6UL)                 /*!< GPIO TEST_CTRL_REG: ADPLL_SCAN_TEST_EN (Bit 6)              */
#define GPIO_TEST_CTRL_REG_ADPLL_SCAN_TEST_EN_Msk (0x40UL)              /*!< GPIO TEST_CTRL_REG: ADPLL_SCAN_TEST_EN (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_PM_MON_EN_Pos      (7UL)                     /*!< GPIO TEST_CTRL_REG: PM_MON_EN (Bit 7)                       */
#define GPIO_TEST_CTRL_REG_PM_MON_EN_Msk      (0x80UL)                  /*!< GPIO TEST_CTRL_REG: PM_MON_EN (Bitfield-Mask: 0x01)         */
#define GPIO_TEST_CTRL_REG_SHOW_PWR_TST_OUT_Pos (8UL)                   /*!< GPIO TEST_CTRL_REG: SHOW_PWR_TST_OUT (Bit 8)                */
#define GPIO_TEST_CTRL_REG_SHOW_PWR_TST_OUT_Msk (0x700UL)               /*!< GPIO TEST_CTRL_REG: SHOW_PWR_TST_OUT (Bitfield-Mask: 0x07)  */
#define GPIO_TEST_CTRL_REG_RADIO_ONLY_MODE_EN_Pos (11UL)                /*!< GPIO TEST_CTRL_REG: RADIO_ONLY_MODE_EN (Bit 11)             */
#define GPIO_TEST_CTRL_REG_RADIO_ONLY_MODE_EN_Msk (0x800UL)             /*!< GPIO TEST_CTRL_REG: RADIO_ONLY_MODE_EN (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_SDADC_TEST_OUT_EN_Pos (12UL)                 /*!< GPIO TEST_CTRL_REG: SDADC_TEST_OUT_EN (Bit 12)              */
#define GPIO_TEST_CTRL_REG_SDADC_TEST_OUT_EN_Msk (0x1000UL)             /*!< GPIO TEST_CTRL_REG: SDADC_TEST_OUT_EN (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_XTAL32M_TRIM_TEST_EN_Pos (14UL)              /*!< GPIO TEST_CTRL_REG: XTAL32M_TRIM_TEST_EN (Bit 14)           */
#define GPIO_TEST_CTRL_REG_XTAL32M_TRIM_TEST_EN_Msk (0x4000UL)          /*!< GPIO TEST_CTRL_REG: XTAL32M_TRIM_TEST_EN (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL_REG_LED0_PWM_DISABLE_Pos (15UL)                  /*!< GPIO TEST_CTRL_REG: LED0_PWM_DISABLE (Bit 15)               */
#define GPIO_TEST_CTRL_REG_LED0_PWM_DISABLE_Msk (0x8000UL)              /*!< GPIO TEST_CTRL_REG: LED0_PWM_DISABLE (Bitfield-Mask: 0x01)  */
#define GPIO_TEST_CTRL_REG_LED1_PWM_DISABLE_Pos (16UL)                  /*!< GPIO TEST_CTRL_REG: LED1_PWM_DISABLE (Bit 16)               */
#define GPIO_TEST_CTRL_REG_LED1_PWM_DISABLE_Msk (0x10000UL)             /*!< GPIO TEST_CTRL_REG: LED1_PWM_DISABLE (Bitfield-Mask: 0x01)  */
#define GPIO_TEST_CTRL_REG_PM_MON_CTRL_Pos    (17UL)                    /*!< GPIO TEST_CTRL_REG: PM_MON_CTRL (Bit 17)                    */
#define GPIO_TEST_CTRL_REG_PM_MON_CTRL_Msk    (0x7e0000UL)              /*!< GPIO TEST_CTRL_REG: PM_MON_CTRL (Bitfield-Mask: 0x3f)       */
/* -----------------------------  GPIO_TEST_CTRL2_REG  ---------------------------- */
#define GPIO_TEST_CTRL2_REG_ANA_TESTMUX_CTRL_Pos (0UL)                  /*!< GPIO TEST_CTRL2_REG: ANA_TESTMUX_CTRL (Bit 0)               */
#define GPIO_TEST_CTRL2_REG_ANA_TESTMUX_CTRL_Msk (0xfUL)                /*!< GPIO TEST_CTRL2_REG: ANA_TESTMUX_CTRL (Bitfield-Mask: 0x0f) */
#define GPIO_TEST_CTRL2_REG_RF_IN_TESTMUX_CTRL_Pos (8UL)                /*!< GPIO TEST_CTRL2_REG: RF_IN_TESTMUX_CTRL (Bit 8)             */
#define GPIO_TEST_CTRL2_REG_RF_IN_TESTMUX_CTRL_Msk (0x300UL)            /*!< GPIO TEST_CTRL2_REG: RF_IN_TESTMUX_CTRL (Bitfield-Mask: 0x03) */
/* -----------------------------  GPIO_TEST_CTRL3_REG  ---------------------------- */
#define GPIO_TEST_CTRL3_REG_RF_TEST_OUT_SEL_Pos (0UL)                   /*!< GPIO TEST_CTRL3_REG: RF_TEST_OUT_SEL (Bit 0)                */
#define GPIO_TEST_CTRL3_REG_RF_TEST_OUT_SEL_Msk (0x3fUL)                /*!< GPIO TEST_CTRL3_REG: RF_TEST_OUT_SEL (Bitfield-Mask: 0x3f)  */
#define GPIO_TEST_CTRL3_REG_VBUS_COMPARATOR_TEST_Pos (6UL)              /*!< GPIO TEST_CTRL3_REG: VBUS_COMPARATOR_TEST (Bit 6)           */
#define GPIO_TEST_CTRL3_REG_VBUS_COMPARATOR_TEST_Msk (0x40UL)           /*!< GPIO TEST_CTRL3_REG: VBUS_COMPARATOR_TEST (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL3_REG_RF_TEST_OUT_PARAM_Pos (8UL)                 /*!< GPIO TEST_CTRL3_REG: RF_TEST_OUT_PARAM (Bit 8)              */
#define GPIO_TEST_CTRL3_REG_RF_TEST_OUT_PARAM_Msk (0xff00UL)            /*!< GPIO TEST_CTRL3_REG: RF_TEST_OUT_PARAM (Bitfield-Mask: 0xff) */
/* -----------------------------  GPIO_TEST_CTRL4_REG  ---------------------------- */
#define GPIO_TEST_CTRL4_REG_RF_TEST_IN_SEL_Pos (0UL)                    /*!< GPIO TEST_CTRL4_REG: RF_TEST_IN_SEL (Bit 0)                 */
#define GPIO_TEST_CTRL4_REG_RF_TEST_IN_SEL_Msk (0x7UL)                  /*!< GPIO TEST_CTRL4_REG: RF_TEST_IN_SEL (Bitfield-Mask: 0x07)   */
#define GPIO_TEST_CTRL4_REG_RF_TEST_IN_PARAM_Pos (8UL)                  /*!< GPIO TEST_CTRL4_REG: RF_TEST_IN_PARAM (Bit 8)               */
#define GPIO_TEST_CTRL4_REG_RF_TEST_IN_PARAM_Msk (0xff00UL)             /*!< GPIO TEST_CTRL4_REG: RF_TEST_IN_PARAM (Bitfield-Mask: 0xff) */
/* -----------------------------  GPIO_TEST_CTRL5_REG  ---------------------------- */
#define GPIO_TEST_CTRL5_REG_TEST_BUS_TO_AVS_Pos (0UL)                   /*!< GPIO TEST_CTRL5_REG: TEST_BUS_TO_AVS (Bit 0)                */
#define GPIO_TEST_CTRL5_REG_TEST_BUS_TO_AVS_Msk (0x1UL)                 /*!< GPIO TEST_CTRL5_REG: TEST_BUS_TO_AVS (Bitfield-Mask: 0x01)  */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V4_Pos  (1UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V4 (Bit 1)                   */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V4_Msk  (0x2UL)                   /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V4 (Bitfield-Mask: 0x01)     */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V8_Pos  (2UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V8 (Bit 2)                   */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V8_Msk  (0x4UL)                   /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V8 (Bitfield-Mask: 0x01)     */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_CORE_Pos (3UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_CORE (Bit 3)                  */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_CORE_Msk (0x8UL)                   /*!< GPIO TEST_CTRL5_REG: TEST_LDO_CORE (Bitfield-Mask: 0x01)    */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V8P_Pos (4UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V8P (Bit 4)                  */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_1V8P_Msk (0x10UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_LDO_1V8P (Bitfield-Mask: 0x01)    */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_ADC_Pos  (5UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_ADC (Bit 5)                   */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_ADC_Msk  (0x20UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_LDO_ADC (Bitfield-Mask: 0x01)     */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_PLL_Pos  (6UL)                     /*!< GPIO TEST_CTRL5_REG: TEST_LDO_PLL (Bit 6)                   */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_PLL_Msk  (0x40UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_LDO_PLL (Bitfield-Mask: 0x01)     */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_VDDHIGH_Pos (7UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_LDO_VDDHIGH (Bit 7)               */
#define GPIO_TEST_CTRL5_REG_TEST_LDO_VDDHIGH_Msk (0x80UL)               /*!< GPIO TEST_CTRL5_REG: TEST_LDO_VDDHIGH (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_VDDD_NOTSLEEP_Pos (8UL)                /*!< GPIO TEST_CTRL5_REG: TEST_VDDD_NOTSLEEP (Bit 8)             */
#define GPIO_TEST_CTRL5_REG_TEST_VDDD_NOTSLEEP_Msk (0x100UL)            /*!< GPIO TEST_CTRL5_REG: TEST_VDDD_NOTSLEEP (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_OSC32M_Pos (9UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_OSC32M (Bit 9)               */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_OSC32M_Msk (0x200UL)              /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_OSC32M (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_RCX_Pos (10UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_RCX (Bit 10)                 */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_RCX_Msk (0x400UL)                 /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_RCX (Bitfield-Mask: 0x01)    */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_ADPLL_Pos (11UL)                  /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_ADPLL (Bit 11)               */
#define GPIO_TEST_CTRL5_REG_TEST_VDDX_ADPLL_Msk (0x800UL)               /*!< GPIO TEST_CTRL5_REG: TEST_VDDX_ADPLL (Bitfield-Mask: 0x01)  */
#define GPIO_TEST_CTRL5_REG_TEST_SIMO_BUCK_Pos (12UL)                   /*!< GPIO TEST_CTRL5_REG: TEST_SIMO_BUCK (Bit 12)                */
#define GPIO_TEST_CTRL5_REG_TEST_SIMO_BUCK_Msk (0x1000UL)               /*!< GPIO TEST_CTRL5_REG: TEST_SIMO_BUCK (Bitfield-Mask: 0x01)   */
#define GPIO_TEST_CTRL5_REG_TEST_VCONT_Pos    (13UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_VCONT (Bit 13)                    */
#define GPIO_TEST_CTRL5_REG_TEST_VCONT_Msk    (0x2000UL)                /*!< GPIO TEST_CTRL5_REG: TEST_VCONT (Bitfield-Mask: 0x01)       */
#define GPIO_TEST_CTRL5_REG_TEST_DIFFTEMP_Pos (14UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_DIFFTEMP (Bit 14)                 */
#define GPIO_TEST_CTRL5_REG_TEST_DIFFTEMP_Msk (0x4000UL)                /*!< GPIO TEST_CTRL5_REG: TEST_DIFFTEMP (Bitfield-Mask: 0x01)    */
#define GPIO_TEST_CTRL5_REG_TEST_FORCE_RUNNING_Pos (15UL)               /*!< GPIO TEST_CTRL5_REG: TEST_FORCE_RUNNING (Bit 15)            */
#define GPIO_TEST_CTRL5_REG_TEST_FORCE_RUNNING_Msk (0x8000UL)           /*!< GPIO TEST_CTRL5_REG: TEST_FORCE_RUNNING (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_POR_VBAT_Pos (16UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_POR_VBAT (Bit 16)                 */
#define GPIO_TEST_CTRL5_REG_TEST_POR_VBAT_Msk (0x10000UL)               /*!< GPIO TEST_CTRL5_REG: TEST_POR_VBAT (Bitfield-Mask: 0x01)    */
#define GPIO_TEST_CTRL5_REG_TEST_LRA_ADC_Pos  (17UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_LRA_ADC (Bit 17)                  */
#define GPIO_TEST_CTRL5_REG_TEST_LRA_ADC_Msk  (0x20000UL)               /*!< GPIO TEST_CTRL5_REG: TEST_LRA_ADC (Bitfield-Mask: 0x01)     */
#define GPIO_TEST_CTRL5_REG_TEST_PLL_Pos      (18UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_PLL (Bit 18)                      */
#define GPIO_TEST_CTRL5_REG_TEST_PLL_Msk      (0x40000UL)               /*!< GPIO TEST_CTRL5_REG: TEST_PLL (Bitfield-Mask: 0x01)         */
#define GPIO_TEST_CTRL5_REG_TEST_BANDGAP_I_TEST_Pos (19UL)              /*!< GPIO TEST_CTRL5_REG: TEST_BANDGAP_I_TEST (Bit 19)           */
#define GPIO_TEST_CTRL5_REG_TEST_BANDGAP_I_TEST_Msk (0x80000UL)         /*!< GPIO TEST_CTRL5_REG: TEST_BANDGAP_I_TEST (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_BANDGAP_Pos  (20UL)                    /*!< GPIO TEST_CTRL5_REG: TEST_BANDGAP (Bit 20)                  */
#define GPIO_TEST_CTRL5_REG_TEST_BANDGAP_Msk  (0xf00000UL)              /*!< GPIO TEST_CTRL5_REG: TEST_BANDGAP (Bitfield-Mask: 0x0f)     */
#define GPIO_TEST_CTRL5_REG_BGR_BOOST_VREF_Pos (24UL)                   /*!< GPIO TEST_CTRL5_REG: BGR_BOOST_VREF (Bit 24)                */
#define GPIO_TEST_CTRL5_REG_BGR_BOOST_VREF_Msk (0x1000000UL)            /*!< GPIO TEST_CTRL5_REG: BGR_BOOST_VREF (Bitfield-Mask: 0x01)   */
#define GPIO_TEST_CTRL5_REG_LDO_CORE_BOOST_VDD_Pos (25UL)               /*!< GPIO TEST_CTRL5_REG: LDO_CORE_BOOST_VDD (Bit 25)            */
#define GPIO_TEST_CTRL5_REG_LDO_CORE_BOOST_VDD_Msk (0x2000000UL)        /*!< GPIO TEST_CTRL5_REG: LDO_CORE_BOOST_VDD (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_TEST_VCAP_PRECHARGE_Pos (26UL)              /*!< GPIO TEST_CTRL5_REG: TEST_VCAP_PRECHARGE (Bit 26)           */
#define GPIO_TEST_CTRL5_REG_TEST_VCAP_PRECHARGE_Msk (0x4000000UL)       /*!< GPIO TEST_CTRL5_REG: TEST_VCAP_PRECHARGE (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_MASK_Pos (28UL)              /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_MASK (Bit 28)           */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_MASK_Msk (0x10000000UL)      /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_MASK (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_OFF_Pos (29UL)               /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_OFF (Bit 29)            */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_OFF_Msk (0x20000000UL)       /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_OFF (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_ON_Pos (30UL)                /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_ON (Bit 30)             */
#define GPIO_TEST_CTRL5_REG_POR_VBAT_FORCE_ON_Msk (0x40000000UL)        /*!< GPIO TEST_CTRL5_REG: POR_VBAT_FORCE_ON (Bitfield-Mask: 0x01) */
#define GPIO_TEST_CTRL5_REG_LDO_RET_FORCE_HOLD_Pos (31UL)               /*!< GPIO TEST_CTRL5_REG: LDO_RET_FORCE_HOLD (Bit 31)            */
#define GPIO_TEST_CTRL5_REG_LDO_RET_FORCE_HOLD_Msk (0x80000000UL)       /*!< GPIO TEST_CTRL5_REG: LDO_RET_FORCE_HOLD (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'GPREG' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  GPREG_SET_FREEZE_REG  ---------------------------- */
#define GPREG_SET_FREEZE_REG_FRZ_WKUPTIM_Pos  (0UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_WKUPTIM (Bit 0)                   */
#define GPREG_SET_FREEZE_REG_FRZ_WKUPTIM_Msk  (0x1UL)                   /*!< GPREG SET_FREEZE_REG: FRZ_WKUPTIM (Bitfield-Mask: 0x01)     */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM_Pos    (1UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM (Bit 1)                     */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM_Msk    (0x2UL)                   /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM (Bitfield-Mask: 0x01)       */
#define GPREG_SET_FREEZE_REG_FRZ_RESERVED_Pos (2UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_RESERVED (Bit 2)                  */
#define GPREG_SET_FREEZE_REG_FRZ_RESERVED_Msk (0x4UL)                   /*!< GPREG SET_FREEZE_REG: FRZ_RESERVED (Bitfield-Mask: 0x01)    */
#define GPREG_SET_FREEZE_REG_FRZ_SYS_WDOG_Pos (3UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_SYS_WDOG (Bit 3)                  */
#define GPREG_SET_FREEZE_REG_FRZ_SYS_WDOG_Msk (0x8UL)                   /*!< GPREG SET_FREEZE_REG: FRZ_SYS_WDOG (Bitfield-Mask: 0x01)    */
#define GPREG_SET_FREEZE_REG_FRZ_USB_Pos      (4UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_USB (Bit 4)                       */
#define GPREG_SET_FREEZE_REG_FRZ_USB_Msk      (0x10UL)                  /*!< GPREG SET_FREEZE_REG: FRZ_USB (Bitfield-Mask: 0x01)         */
#define GPREG_SET_FREEZE_REG_FRZ_DMA_Pos      (5UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_DMA (Bit 5)                       */
#define GPREG_SET_FREEZE_REG_FRZ_DMA_Msk      (0x20UL)                  /*!< GPREG SET_FREEZE_REG: FRZ_DMA (Bitfield-Mask: 0x01)         */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM2_Pos   (6UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM2 (Bit 6)                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM2_Msk   (0x40UL)                  /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM2 (Bitfield-Mask: 0x01)      */
#define GPREG_SET_FREEZE_REG_FRZ_PWMLED_Pos   (7UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_PWMLED (Bit 7)                    */
#define GPREG_SET_FREEZE_REG_FRZ_PWMLED_Msk   (0x80UL)                  /*!< GPREG SET_FREEZE_REG: FRZ_PWMLED (Bitfield-Mask: 0x01)      */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM3_Pos   (8UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM3 (Bit 8)                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM3_Msk   (0x100UL)                 /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM3 (Bitfield-Mask: 0x01)      */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM4_Pos   (9UL)                     /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM4 (Bit 9)                    */
#define GPREG_SET_FREEZE_REG_FRZ_SWTIM4_Msk   (0x200UL)                 /*!< GPREG SET_FREEZE_REG: FRZ_SWTIM4 (Bitfield-Mask: 0x01)      */
#define GPREG_SET_FREEZE_REG_FRZ_CMAC_WDOG_Pos (10UL)                   /*!< GPREG SET_FREEZE_REG: FRZ_CMAC_WDOG (Bit 10)                */
#define GPREG_SET_FREEZE_REG_FRZ_CMAC_WDOG_Msk (0x400UL)                /*!< GPREG SET_FREEZE_REG: FRZ_CMAC_WDOG (Bitfield-Mask: 0x01)   */
/* ---------------------------  GPREG_RESET_FREEZE_REG  --------------------------- */
#define GPREG_RESET_FREEZE_REG_FRZ_WKUPTIM_Pos (0UL)                    /*!< GPREG RESET_FREEZE_REG: FRZ_WKUPTIM (Bit 0)                 */
#define GPREG_RESET_FREEZE_REG_FRZ_WKUPTIM_Msk (0x1UL)                  /*!< GPREG RESET_FREEZE_REG: FRZ_WKUPTIM (Bitfield-Mask: 0x01)   */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM_Pos  (1UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM (Bit 1)                   */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM_Msk  (0x2UL)                   /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM (Bitfield-Mask: 0x01)     */
#define GPREG_RESET_FREEZE_REG_FRZ_RESERVED_Pos (2UL)                   /*!< GPREG RESET_FREEZE_REG: FRZ_RESERVED (Bit 2)                */
#define GPREG_RESET_FREEZE_REG_FRZ_RESERVED_Msk (0x4UL)                 /*!< GPREG RESET_FREEZE_REG: FRZ_RESERVED (Bitfield-Mask: 0x01)  */
#define GPREG_RESET_FREEZE_REG_FRZ_SYS_WDOG_Pos (3UL)                   /*!< GPREG RESET_FREEZE_REG: FRZ_SYS_WDOG (Bit 3)                */
#define GPREG_RESET_FREEZE_REG_FRZ_SYS_WDOG_Msk (0x8UL)                 /*!< GPREG RESET_FREEZE_REG: FRZ_SYS_WDOG (Bitfield-Mask: 0x01)  */
#define GPREG_RESET_FREEZE_REG_FRZ_USB_Pos    (4UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_USB (Bit 4)                     */
#define GPREG_RESET_FREEZE_REG_FRZ_USB_Msk    (0x10UL)                  /*!< GPREG RESET_FREEZE_REG: FRZ_USB (Bitfield-Mask: 0x01)       */
#define GPREG_RESET_FREEZE_REG_FRZ_DMA_Pos    (5UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_DMA (Bit 5)                     */
#define GPREG_RESET_FREEZE_REG_FRZ_DMA_Msk    (0x20UL)                  /*!< GPREG RESET_FREEZE_REG: FRZ_DMA (Bitfield-Mask: 0x01)       */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM2_Pos (6UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM2 (Bit 6)                  */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM2_Msk (0x40UL)                  /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM2 (Bitfield-Mask: 0x01)    */
#define GPREG_RESET_FREEZE_REG_FRZ_PWMLED_Pos (7UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_PWMLED (Bit 7)                  */
#define GPREG_RESET_FREEZE_REG_FRZ_PWMLED_Msk (0x80UL)                  /*!< GPREG RESET_FREEZE_REG: FRZ_PWMLED (Bitfield-Mask: 0x01)    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM3_Pos (8UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM3 (Bit 8)                  */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM3_Msk (0x100UL)                 /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM3 (Bitfield-Mask: 0x01)    */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM4_Pos (9UL)                     /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM4 (Bit 9)                  */
#define GPREG_RESET_FREEZE_REG_FRZ_SWTIM4_Msk (0x200UL)                 /*!< GPREG RESET_FREEZE_REG: FRZ_SWTIM4 (Bitfield-Mask: 0x01)    */
#define GPREG_RESET_FREEZE_REG_FRZ_CMAC_WDOG_Pos (10UL)                 /*!< GPREG RESET_FREEZE_REG: FRZ_CMAC_WDOG (Bit 10)              */
#define GPREG_RESET_FREEZE_REG_FRZ_CMAC_WDOG_Msk (0x400UL)              /*!< GPREG RESET_FREEZE_REG: FRZ_CMAC_WDOG (Bitfield-Mask: 0x01) */
/* -------------------------------  GPREG_DEBUG_REG  ------------------------------ */
#define GPREG_DEBUG_REG_SYS_CPU_FREEZE_EN_Pos (0UL)                     /*!< GPREG DEBUG_REG: SYS_CPU_FREEZE_EN (Bit 0)                  */
#define GPREG_DEBUG_REG_SYS_CPU_FREEZE_EN_Msk (0x1UL)                   /*!< GPREG DEBUG_REG: SYS_CPU_FREEZE_EN (Bitfield-Mask: 0x01)    */
#define GPREG_DEBUG_REG_CMAC_CPU_FREEZE_EN_Pos (1UL)                    /*!< GPREG DEBUG_REG: CMAC_CPU_FREEZE_EN (Bit 1)                 */
#define GPREG_DEBUG_REG_CMAC_CPU_FREEZE_EN_Msk (0x2UL)                  /*!< GPREG DEBUG_REG: CMAC_CPU_FREEZE_EN (Bitfield-Mask: 0x01)   */
#define GPREG_DEBUG_REG_HALT_SYS_CMAC_CPU_EN_Pos (2UL)                  /*!< GPREG DEBUG_REG: HALT_SYS_CMAC_CPU_EN (Bit 2)               */
#define GPREG_DEBUG_REG_HALT_SYS_CMAC_CPU_EN_Msk (0x4UL)                /*!< GPREG DEBUG_REG: HALT_SYS_CMAC_CPU_EN (Bitfield-Mask: 0x01) */
#define GPREG_DEBUG_REG_HALT_CMAC_SYS_CPU_EN_Pos (3UL)                  /*!< GPREG DEBUG_REG: HALT_CMAC_SYS_CPU_EN (Bit 3)               */
#define GPREG_DEBUG_REG_HALT_CMAC_SYS_CPU_EN_Msk (0x8UL)                /*!< GPREG DEBUG_REG: HALT_CMAC_SYS_CPU_EN (Bitfield-Mask: 0x01) */
#define GPREG_DEBUG_REG_SYS_CPU_IS_HALTED_Pos (4UL)                     /*!< GPREG DEBUG_REG: SYS_CPU_IS_HALTED (Bit 4)                  */
#define GPREG_DEBUG_REG_SYS_CPU_IS_HALTED_Msk (0x10UL)                  /*!< GPREG DEBUG_REG: SYS_CPU_IS_HALTED (Bitfield-Mask: 0x01)    */
#define GPREG_DEBUG_REG_CMAC_CPU_IS_HALTED_Pos (5UL)                    /*!< GPREG DEBUG_REG: CMAC_CPU_IS_HALTED (Bit 5)                 */
#define GPREG_DEBUG_REG_CMAC_CPU_IS_HALTED_Msk (0x20UL)                 /*!< GPREG DEBUG_REG: CMAC_CPU_IS_HALTED (Bitfield-Mask: 0x01)   */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_Pos       (6UL)                     /*!< GPREG DEBUG_REG: SYS_CPUWAIT (Bit 6)                        */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_Msk       (0x40UL)                  /*!< GPREG DEBUG_REG: SYS_CPUWAIT (Bitfield-Mask: 0x01)          */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_ON_JTAG_Pos (7UL)                   /*!< GPREG DEBUG_REG: SYS_CPUWAIT_ON_JTAG (Bit 7)                */
#define GPREG_DEBUG_REG_SYS_CPUWAIT_ON_JTAG_Msk (0x80UL)                /*!< GPREG DEBUG_REG: SYS_CPUWAIT_ON_JTAG (Bitfield-Mask: 0x01)  */
#define GPREG_DEBUG_REG_CROSS_CPU_HALT_SENSITIVITY_Pos (8UL)            /*!< GPREG DEBUG_REG: CROSS_CPU_HALT_SENSITIVITY (Bit 8)         */
#define GPREG_DEBUG_REG_CROSS_CPU_HALT_SENSITIVITY_Msk (0x100UL)        /*!< GPREG DEBUG_REG: CROSS_CPU_HALT_SENSITIVITY (Bitfield-Mask: 0x01) */
/* -----------------------------  GPREG_GP_STATUS_REG  ---------------------------- */
#define GPREG_GP_STATUS_REG_CAL_PHASE_Pos     (0UL)                     /*!< GPREG GP_STATUS_REG: CAL_PHASE (Bit 0)                      */
#define GPREG_GP_STATUS_REG_CAL_PHASE_Msk     (0x1UL)                   /*!< GPREG GP_STATUS_REG: CAL_PHASE (Bitfield-Mask: 0x01)        */
/* ----------------------------  GPREG_GP_CONTROL_REG  ---------------------------- */
#define GPREG_GP_CONTROL_REG_CMAC_H2H_BRIDGE_BYPASS_Pos (1UL)           /*!< GPREG GP_CONTROL_REG: CMAC_H2H_BRIDGE_BYPASS (Bit 1)        */
#define GPREG_GP_CONTROL_REG_CMAC_H2H_BRIDGE_BYPASS_Msk (0x2UL)         /*!< GPREG GP_CONTROL_REG: CMAC_H2H_BRIDGE_BYPASS (Bitfield-Mask: 0x01) */
/* ------------------------------  GPREG_USBPAD_REG  ------------------------------ */
#define GPREG_USBPAD_REG_USBPAD_EN_Pos        (0UL)                     /*!< GPREG USBPAD_REG: USBPAD_EN (Bit 0)                         */
#define GPREG_USBPAD_REG_USBPAD_EN_Msk        (0x1UL)                   /*!< GPREG USBPAD_REG: USBPAD_EN (Bitfield-Mask: 0x01)           */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW1_OFF_Pos (1UL)                 /*!< GPREG USBPAD_REG: USBPHY_FORCE_SW1_OFF (Bit 1)              */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW1_OFF_Msk (0x2UL)               /*!< GPREG USBPAD_REG: USBPHY_FORCE_SW1_OFF (Bitfield-Mask: 0x01) */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW2_ON_Pos (2UL)                  /*!< GPREG USBPAD_REG: USBPHY_FORCE_SW2_ON (Bit 2)               */
#define GPREG_USBPAD_REG_USBPHY_FORCE_SW2_ON_Msk (0x4UL)                /*!< GPREG USBPAD_REG: USBPHY_FORCE_SW2_ON (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================          struct 'I2C' Position & Mask          ================ */
/* ================================================================================ */
/* -------------------------------  I2C_I2C_CON_REG  ------------------------------ */
#define I2C_I2C_CON_REG_I2C_MASTER_MODE_Pos   (0UL)                     /*!< I2C I2C_CON_REG: I2C_MASTER_MODE (Bit 0)                    */
#define I2C_I2C_CON_REG_I2C_MASTER_MODE_Msk   (0x1UL)                   /*!< I2C I2C_CON_REG: I2C_MASTER_MODE (Bitfield-Mask: 0x01)      */
#define I2C_I2C_CON_REG_I2C_SPEED_Pos         (1UL)                     /*!< I2C I2C_CON_REG: I2C_SPEED (Bit 1)                          */
#define I2C_I2C_CON_REG_I2C_SPEED_Msk         (0x6UL)                   /*!< I2C I2C_CON_REG: I2C_SPEED (Bitfield-Mask: 0x03)            */
#define I2C_I2C_CON_REG_I2C_10BITADDR_SLAVE_Pos (3UL)                   /*!< I2C I2C_CON_REG: I2C_10BITADDR_SLAVE (Bit 3)                */
#define I2C_I2C_CON_REG_I2C_10BITADDR_SLAVE_Msk (0x8UL)                 /*!< I2C I2C_CON_REG: I2C_10BITADDR_SLAVE (Bitfield-Mask: 0x01)  */
#define I2C_I2C_CON_REG_I2C_10BITADDR_MASTER_Pos (4UL)                  /*!< I2C I2C_CON_REG: I2C_10BITADDR_MASTER (Bit 4)               */
#define I2C_I2C_CON_REG_I2C_10BITADDR_MASTER_Msk (0x10UL)               /*!< I2C I2C_CON_REG: I2C_10BITADDR_MASTER (Bitfield-Mask: 0x01) */
#define I2C_I2C_CON_REG_I2C_RESTART_EN_Pos    (5UL)                     /*!< I2C I2C_CON_REG: I2C_RESTART_EN (Bit 5)                     */
#define I2C_I2C_CON_REG_I2C_RESTART_EN_Msk    (0x20UL)                  /*!< I2C I2C_CON_REG: I2C_RESTART_EN (Bitfield-Mask: 0x01)       */
#define I2C_I2C_CON_REG_I2C_SLAVE_DISABLE_Pos (6UL)                     /*!< I2C I2C_CON_REG: I2C_SLAVE_DISABLE (Bit 6)                  */
#define I2C_I2C_CON_REG_I2C_SLAVE_DISABLE_Msk (0x40UL)                  /*!< I2C I2C_CON_REG: I2C_SLAVE_DISABLE (Bitfield-Mask: 0x01)    */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IFADDRESSED_Pos (7UL)              /*!< I2C I2C_CON_REG: I2C_STOP_DET_IFADDRESSED (Bit 7)           */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IFADDRESSED_Msk (0x80UL)           /*!< I2C I2C_CON_REG: I2C_STOP_DET_IFADDRESSED (Bitfield-Mask: 0x01) */
#define I2C_I2C_CON_REG_I2C_TX_EMPTY_CTRL_Pos (8UL)                     /*!< I2C I2C_CON_REG: I2C_TX_EMPTY_CTRL (Bit 8)                  */
#define I2C_I2C_CON_REG_I2C_TX_EMPTY_CTRL_Msk (0x100UL)                 /*!< I2C I2C_CON_REG: I2C_TX_EMPTY_CTRL (Bitfield-Mask: 0x01)    */
#define I2C_I2C_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Pos (9UL)             /*!< I2C I2C_CON_REG: I2C_RX_FIFO_FULL_HLD_CTRL (Bit 9)          */
#define I2C_I2C_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Msk (0x200UL)         /*!< I2C I2C_CON_REG: I2C_RX_FIFO_FULL_HLD_CTRL (Bitfield-Mask: 0x01) */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Pos (10UL)        /*!< I2C I2C_CON_REG: I2C_STOP_DET_IF_MASTER_ACTIVE (Bit 10)     */
#define I2C_I2C_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Msk (0x400UL)     /*!< I2C I2C_CON_REG: I2C_STOP_DET_IF_MASTER_ACTIVE (Bitfield-Mask: 0x01) */
/* -------------------------------  I2C_I2C_TAR_REG  ------------------------------ */
#define I2C_I2C_TAR_REG_IC_TAR_Pos            (0UL)                     /*!< I2C I2C_TAR_REG: IC_TAR (Bit 0)                             */
#define I2C_I2C_TAR_REG_IC_TAR_Msk            (0x3ffUL)                 /*!< I2C I2C_TAR_REG: IC_TAR (Bitfield-Mask: 0x3ff)              */
#define I2C_I2C_TAR_REG_GC_OR_START_Pos       (10UL)                    /*!< I2C I2C_TAR_REG: GC_OR_START (Bit 10)                       */
#define I2C_I2C_TAR_REG_GC_OR_START_Msk       (0x400UL)                 /*!< I2C I2C_TAR_REG: GC_OR_START (Bitfield-Mask: 0x01)          */
#define I2C_I2C_TAR_REG_SPECIAL_Pos           (11UL)                    /*!< I2C I2C_TAR_REG: SPECIAL (Bit 11)                           */
#define I2C_I2C_TAR_REG_SPECIAL_Msk           (0x800UL)                 /*!< I2C I2C_TAR_REG: SPECIAL (Bitfield-Mask: 0x01)              */
/* -------------------------------  I2C_I2C_SAR_REG  ------------------------------ */
#define I2C_I2C_SAR_REG_IC_SAR_Pos            (0UL)                     /*!< I2C I2C_SAR_REG: IC_SAR (Bit 0)                             */
#define I2C_I2C_SAR_REG_IC_SAR_Msk            (0x3ffUL)                 /*!< I2C I2C_SAR_REG: IC_SAR (Bitfield-Mask: 0x3ff)              */
/* ----------------------------  I2C_I2C_HS_MADDR_REG  ---------------------------- */
#define I2C_I2C_HS_MADDR_REG_I2C_IC_HS_MAR_Pos (0UL)                    /*!< I2C I2C_HS_MADDR_REG: I2C_IC_HS_MAR (Bit 0)                 */
#define I2C_I2C_HS_MADDR_REG_I2C_IC_HS_MAR_Msk (0x7UL)                  /*!< I2C I2C_HS_MADDR_REG: I2C_IC_HS_MAR (Bitfield-Mask: 0x07)   */
/* ----------------------------  I2C_I2C_DATA_CMD_REG  ---------------------------- */
#define I2C_I2C_DATA_CMD_REG_I2C_DAT_Pos      (0UL)                     /*!< I2C I2C_DATA_CMD_REG: I2C_DAT (Bit 0)                       */
#define I2C_I2C_DATA_CMD_REG_I2C_DAT_Msk      (0xffUL)                  /*!< I2C I2C_DATA_CMD_REG: I2C_DAT (Bitfield-Mask: 0xff)         */
#define I2C_I2C_DATA_CMD_REG_I2C_CMD_Pos      (8UL)                     /*!< I2C I2C_DATA_CMD_REG: I2C_CMD (Bit 8)                       */
#define I2C_I2C_DATA_CMD_REG_I2C_CMD_Msk      (0x100UL)                 /*!< I2C I2C_DATA_CMD_REG: I2C_CMD (Bitfield-Mask: 0x01)         */
#define I2C_I2C_DATA_CMD_REG_I2C_STOP_Pos     (9UL)                     /*!< I2C I2C_DATA_CMD_REG: I2C_STOP (Bit 9)                      */
#define I2C_I2C_DATA_CMD_REG_I2C_STOP_Msk     (0x200UL)                 /*!< I2C I2C_DATA_CMD_REG: I2C_STOP (Bitfield-Mask: 0x01)        */
#define I2C_I2C_DATA_CMD_REG_I2C_RESTART_Pos  (10UL)                    /*!< I2C I2C_DATA_CMD_REG: I2C_RESTART (Bit 10)                  */
#define I2C_I2C_DATA_CMD_REG_I2C_RESTART_Msk  (0x400UL)                 /*!< I2C I2C_DATA_CMD_REG: I2C_RESTART (Bitfield-Mask: 0x01)     */
/* ---------------------------  I2C_I2C_SS_SCL_HCNT_REG  -------------------------- */
#define I2C_I2C_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Pos (0UL)                /*!< I2C I2C_SS_SCL_HCNT_REG: IC_SS_SCL_HCNT (Bit 0)             */
#define I2C_I2C_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Msk (0xffffUL)           /*!< I2C I2C_SS_SCL_HCNT_REG: IC_SS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C_I2C_SS_SCL_LCNT_REG  -------------------------- */
#define I2C_I2C_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Pos (0UL)                /*!< I2C I2C_SS_SCL_LCNT_REG: IC_SS_SCL_LCNT (Bit 0)             */
#define I2C_I2C_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Msk (0xffffUL)           /*!< I2C I2C_SS_SCL_LCNT_REG: IC_SS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C_I2C_FS_SCL_HCNT_REG  -------------------------- */
#define I2C_I2C_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Pos (0UL)                /*!< I2C I2C_FS_SCL_HCNT_REG: IC_FS_SCL_HCNT (Bit 0)             */
#define I2C_I2C_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Msk (0xffffUL)           /*!< I2C I2C_FS_SCL_HCNT_REG: IC_FS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C_I2C_FS_SCL_LCNT_REG  -------------------------- */
#define I2C_I2C_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Pos (0UL)                /*!< I2C I2C_FS_SCL_LCNT_REG: IC_FS_SCL_LCNT (Bit 0)             */
#define I2C_I2C_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Msk (0xffffUL)           /*!< I2C I2C_FS_SCL_LCNT_REG: IC_FS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C_I2C_HS_SCL_HCNT_REG  -------------------------- */
#define I2C_I2C_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Pos (0UL)                /*!< I2C I2C_HS_SCL_HCNT_REG: IC_HS_SCL_HCNT (Bit 0)             */
#define I2C_I2C_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Msk (0xffffUL)           /*!< I2C I2C_HS_SCL_HCNT_REG: IC_HS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C_I2C_HS_SCL_LCNT_REG  -------------------------- */
#define I2C_I2C_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Pos (0UL)                /*!< I2C I2C_HS_SCL_LCNT_REG: IC_HS_SCL_LCNT (Bit 0)             */
#define I2C_I2C_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Msk (0xffffUL)           /*!< I2C I2C_HS_SCL_LCNT_REG: IC_HS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* ----------------------------  I2C_I2C_INTR_STAT_REG  --------------------------- */
#define I2C_I2C_INTR_STAT_REG_R_RX_UNDER_Pos  (0UL)                     /*!< I2C I2C_INTR_STAT_REG: R_RX_UNDER (Bit 0)                   */
#define I2C_I2C_INTR_STAT_REG_R_RX_UNDER_Msk  (0x1UL)                   /*!< I2C I2C_INTR_STAT_REG: R_RX_UNDER (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_STAT_REG_R_RX_OVER_Pos   (1UL)                     /*!< I2C I2C_INTR_STAT_REG: R_RX_OVER (Bit 1)                    */
#define I2C_I2C_INTR_STAT_REG_R_RX_OVER_Msk   (0x2UL)                   /*!< I2C I2C_INTR_STAT_REG: R_RX_OVER (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_STAT_REG_R_RX_FULL_Pos   (2UL)                     /*!< I2C I2C_INTR_STAT_REG: R_RX_FULL (Bit 2)                    */
#define I2C_I2C_INTR_STAT_REG_R_RX_FULL_Msk   (0x4UL)                   /*!< I2C I2C_INTR_STAT_REG: R_RX_FULL (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_STAT_REG_R_TX_OVER_Pos   (3UL)                     /*!< I2C I2C_INTR_STAT_REG: R_TX_OVER (Bit 3)                    */
#define I2C_I2C_INTR_STAT_REG_R_TX_OVER_Msk   (0x8UL)                   /*!< I2C I2C_INTR_STAT_REG: R_TX_OVER (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_STAT_REG_R_TX_EMPTY_Pos  (4UL)                     /*!< I2C I2C_INTR_STAT_REG: R_TX_EMPTY (Bit 4)                   */
#define I2C_I2C_INTR_STAT_REG_R_TX_EMPTY_Msk  (0x10UL)                  /*!< I2C I2C_INTR_STAT_REG: R_TX_EMPTY (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_STAT_REG_R_RD_REQ_Pos    (5UL)                     /*!< I2C I2C_INTR_STAT_REG: R_RD_REQ (Bit 5)                     */
#define I2C_I2C_INTR_STAT_REG_R_RD_REQ_Msk    (0x20UL)                  /*!< I2C I2C_INTR_STAT_REG: R_RD_REQ (Bitfield-Mask: 0x01)       */
#define I2C_I2C_INTR_STAT_REG_R_TX_ABRT_Pos   (6UL)                     /*!< I2C I2C_INTR_STAT_REG: R_TX_ABRT (Bit 6)                    */
#define I2C_I2C_INTR_STAT_REG_R_TX_ABRT_Msk   (0x40UL)                  /*!< I2C I2C_INTR_STAT_REG: R_TX_ABRT (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_STAT_REG_R_RX_DONE_Pos   (7UL)                     /*!< I2C I2C_INTR_STAT_REG: R_RX_DONE (Bit 7)                    */
#define I2C_I2C_INTR_STAT_REG_R_RX_DONE_Msk   (0x80UL)                  /*!< I2C I2C_INTR_STAT_REG: R_RX_DONE (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_STAT_REG_R_ACTIVITY_Pos  (8UL)                     /*!< I2C I2C_INTR_STAT_REG: R_ACTIVITY (Bit 8)                   */
#define I2C_I2C_INTR_STAT_REG_R_ACTIVITY_Msk  (0x100UL)                 /*!< I2C I2C_INTR_STAT_REG: R_ACTIVITY (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_STAT_REG_R_STOP_DET_Pos  (9UL)                     /*!< I2C I2C_INTR_STAT_REG: R_STOP_DET (Bit 9)                   */
#define I2C_I2C_INTR_STAT_REG_R_STOP_DET_Msk  (0x200UL)                 /*!< I2C I2C_INTR_STAT_REG: R_STOP_DET (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_STAT_REG_R_START_DET_Pos (10UL)                    /*!< I2C I2C_INTR_STAT_REG: R_START_DET (Bit 10)                 */
#define I2C_I2C_INTR_STAT_REG_R_START_DET_Msk (0x400UL)                 /*!< I2C I2C_INTR_STAT_REG: R_START_DET (Bitfield-Mask: 0x01)    */
#define I2C_I2C_INTR_STAT_REG_R_GEN_CALL_Pos  (11UL)                    /*!< I2C I2C_INTR_STAT_REG: R_GEN_CALL (Bit 11)                  */
#define I2C_I2C_INTR_STAT_REG_R_GEN_CALL_Msk  (0x800UL)                 /*!< I2C I2C_INTR_STAT_REG: R_GEN_CALL (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_STAT_REG_R_RESTART_DET_Pos (12UL)                  /*!< I2C I2C_INTR_STAT_REG: R_RESTART_DET (Bit 12)               */
#define I2C_I2C_INTR_STAT_REG_R_RESTART_DET_Msk (0x1000UL)              /*!< I2C I2C_INTR_STAT_REG: R_RESTART_DET (Bitfield-Mask: 0x01)  */
#define I2C_I2C_INTR_STAT_REG_R_MASTER_ON_HOLD_Pos (13UL)               /*!< I2C I2C_INTR_STAT_REG: R_MASTER_ON_HOLD (Bit 13)            */
#define I2C_I2C_INTR_STAT_REG_R_MASTER_ON_HOLD_Msk (0x2000UL)           /*!< I2C I2C_INTR_STAT_REG: R_MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C_I2C_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Pos (14UL)             /*!< I2C I2C_INTR_STAT_REG: R_SCL_STUCK_AT_LOW (Bit 14)          */
#define I2C_I2C_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Msk (0x4000UL)         /*!< I2C I2C_INTR_STAT_REG: R_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* ----------------------------  I2C_I2C_INTR_MASK_REG  --------------------------- */
#define I2C_I2C_INTR_MASK_REG_M_RX_UNDER_Pos  (0UL)                     /*!< I2C I2C_INTR_MASK_REG: M_RX_UNDER (Bit 0)                   */
#define I2C_I2C_INTR_MASK_REG_M_RX_UNDER_Msk  (0x1UL)                   /*!< I2C I2C_INTR_MASK_REG: M_RX_UNDER (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_MASK_REG_M_RX_OVER_Pos   (1UL)                     /*!< I2C I2C_INTR_MASK_REG: M_RX_OVER (Bit 1)                    */
#define I2C_I2C_INTR_MASK_REG_M_RX_OVER_Msk   (0x2UL)                   /*!< I2C I2C_INTR_MASK_REG: M_RX_OVER (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_MASK_REG_M_RX_FULL_Pos   (2UL)                     /*!< I2C I2C_INTR_MASK_REG: M_RX_FULL (Bit 2)                    */
#define I2C_I2C_INTR_MASK_REG_M_RX_FULL_Msk   (0x4UL)                   /*!< I2C I2C_INTR_MASK_REG: M_RX_FULL (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_MASK_REG_M_TX_OVER_Pos   (3UL)                     /*!< I2C I2C_INTR_MASK_REG: M_TX_OVER (Bit 3)                    */
#define I2C_I2C_INTR_MASK_REG_M_TX_OVER_Msk   (0x8UL)                   /*!< I2C I2C_INTR_MASK_REG: M_TX_OVER (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_MASK_REG_M_TX_EMPTY_Pos  (4UL)                     /*!< I2C I2C_INTR_MASK_REG: M_TX_EMPTY (Bit 4)                   */
#define I2C_I2C_INTR_MASK_REG_M_TX_EMPTY_Msk  (0x10UL)                  /*!< I2C I2C_INTR_MASK_REG: M_TX_EMPTY (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_MASK_REG_M_RD_REQ_Pos    (5UL)                     /*!< I2C I2C_INTR_MASK_REG: M_RD_REQ (Bit 5)                     */
#define I2C_I2C_INTR_MASK_REG_M_RD_REQ_Msk    (0x20UL)                  /*!< I2C I2C_INTR_MASK_REG: M_RD_REQ (Bitfield-Mask: 0x01)       */
#define I2C_I2C_INTR_MASK_REG_M_TX_ABRT_Pos   (6UL)                     /*!< I2C I2C_INTR_MASK_REG: M_TX_ABRT (Bit 6)                    */
#define I2C_I2C_INTR_MASK_REG_M_TX_ABRT_Msk   (0x40UL)                  /*!< I2C I2C_INTR_MASK_REG: M_TX_ABRT (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_MASK_REG_M_RX_DONE_Pos   (7UL)                     /*!< I2C I2C_INTR_MASK_REG: M_RX_DONE (Bit 7)                    */
#define I2C_I2C_INTR_MASK_REG_M_RX_DONE_Msk   (0x80UL)                  /*!< I2C I2C_INTR_MASK_REG: M_RX_DONE (Bitfield-Mask: 0x01)      */
#define I2C_I2C_INTR_MASK_REG_M_ACTIVITY_Pos  (8UL)                     /*!< I2C I2C_INTR_MASK_REG: M_ACTIVITY (Bit 8)                   */
#define I2C_I2C_INTR_MASK_REG_M_ACTIVITY_Msk  (0x100UL)                 /*!< I2C I2C_INTR_MASK_REG: M_ACTIVITY (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_MASK_REG_M_STOP_DET_Pos  (9UL)                     /*!< I2C I2C_INTR_MASK_REG: M_STOP_DET (Bit 9)                   */
#define I2C_I2C_INTR_MASK_REG_M_STOP_DET_Msk  (0x200UL)                 /*!< I2C I2C_INTR_MASK_REG: M_STOP_DET (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_MASK_REG_M_START_DET_Pos (10UL)                    /*!< I2C I2C_INTR_MASK_REG: M_START_DET (Bit 10)                 */
#define I2C_I2C_INTR_MASK_REG_M_START_DET_Msk (0x400UL)                 /*!< I2C I2C_INTR_MASK_REG: M_START_DET (Bitfield-Mask: 0x01)    */
#define I2C_I2C_INTR_MASK_REG_M_GEN_CALL_Pos  (11UL)                    /*!< I2C I2C_INTR_MASK_REG: M_GEN_CALL (Bit 11)                  */
#define I2C_I2C_INTR_MASK_REG_M_GEN_CALL_Msk  (0x800UL)                 /*!< I2C I2C_INTR_MASK_REG: M_GEN_CALL (Bitfield-Mask: 0x01)     */
#define I2C_I2C_INTR_MASK_REG_M_RESTART_DET_Pos (12UL)                  /*!< I2C I2C_INTR_MASK_REG: M_RESTART_DET (Bit 12)               */
#define I2C_I2C_INTR_MASK_REG_M_RESTART_DET_Msk (0x1000UL)              /*!< I2C I2C_INTR_MASK_REG: M_RESTART_DET (Bitfield-Mask: 0x01)  */
#define I2C_I2C_INTR_MASK_REG_M_MASTER_ON_HOLD_Pos (13UL)               /*!< I2C I2C_INTR_MASK_REG: M_MASTER_ON_HOLD (Bit 13)            */
#define I2C_I2C_INTR_MASK_REG_M_MASTER_ON_HOLD_Msk (0x2000UL)           /*!< I2C I2C_INTR_MASK_REG: M_MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C_I2C_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Pos (14UL)             /*!< I2C I2C_INTR_MASK_REG: M_SCL_STUCK_AT_LOW (Bit 14)          */
#define I2C_I2C_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Msk (0x4000UL)         /*!< I2C I2C_INTR_MASK_REG: M_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_RAW_INTR_STAT_REG  ------------------------- */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_UNDER_Pos (0UL)                    /*!< I2C I2C_RAW_INTR_STAT_REG: RX_UNDER (Bit 0)                 */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_UNDER_Msk (0x1UL)                  /*!< I2C I2C_RAW_INTR_STAT_REG: RX_UNDER (Bitfield-Mask: 0x01)   */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_OVER_Pos (1UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: RX_OVER (Bit 1)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_OVER_Msk (0x2UL)                   /*!< I2C I2C_RAW_INTR_STAT_REG: RX_OVER (Bitfield-Mask: 0x01)    */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_FULL_Pos (2UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: RX_FULL (Bit 2)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_FULL_Msk (0x4UL)                   /*!< I2C I2C_RAW_INTR_STAT_REG: RX_FULL (Bitfield-Mask: 0x01)    */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_OVER_Pos (3UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: TX_OVER (Bit 3)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_OVER_Msk (0x8UL)                   /*!< I2C I2C_RAW_INTR_STAT_REG: TX_OVER (Bitfield-Mask: 0x01)    */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_EMPTY_Pos (4UL)                    /*!< I2C I2C_RAW_INTR_STAT_REG: TX_EMPTY (Bit 4)                 */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_EMPTY_Msk (0x10UL)                 /*!< I2C I2C_RAW_INTR_STAT_REG: TX_EMPTY (Bitfield-Mask: 0x01)   */
#define I2C_I2C_RAW_INTR_STAT_REG_RD_REQ_Pos  (5UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: RD_REQ (Bit 5)                   */
#define I2C_I2C_RAW_INTR_STAT_REG_RD_REQ_Msk  (0x20UL)                  /*!< I2C I2C_RAW_INTR_STAT_REG: RD_REQ (Bitfield-Mask: 0x01)     */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_ABRT_Pos (6UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: TX_ABRT (Bit 6)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_TX_ABRT_Msk (0x40UL)                  /*!< I2C I2C_RAW_INTR_STAT_REG: TX_ABRT (Bitfield-Mask: 0x01)    */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_DONE_Pos (7UL)                     /*!< I2C I2C_RAW_INTR_STAT_REG: RX_DONE (Bit 7)                  */
#define I2C_I2C_RAW_INTR_STAT_REG_RX_DONE_Msk (0x80UL)                  /*!< I2C I2C_RAW_INTR_STAT_REG: RX_DONE (Bitfield-Mask: 0x01)    */
#define I2C_I2C_RAW_INTR_STAT_REG_ACTIVITY_Pos (8UL)                    /*!< I2C I2C_RAW_INTR_STAT_REG: ACTIVITY (Bit 8)                 */
#define I2C_I2C_RAW_INTR_STAT_REG_ACTIVITY_Msk (0x100UL)                /*!< I2C I2C_RAW_INTR_STAT_REG: ACTIVITY (Bitfield-Mask: 0x01)   */
#define I2C_I2C_RAW_INTR_STAT_REG_STOP_DET_Pos (9UL)                    /*!< I2C I2C_RAW_INTR_STAT_REG: STOP_DET (Bit 9)                 */
#define I2C_I2C_RAW_INTR_STAT_REG_STOP_DET_Msk (0x200UL)                /*!< I2C I2C_RAW_INTR_STAT_REG: STOP_DET (Bitfield-Mask: 0x01)   */
#define I2C_I2C_RAW_INTR_STAT_REG_START_DET_Pos (10UL)                  /*!< I2C I2C_RAW_INTR_STAT_REG: START_DET (Bit 10)               */
#define I2C_I2C_RAW_INTR_STAT_REG_START_DET_Msk (0x400UL)               /*!< I2C I2C_RAW_INTR_STAT_REG: START_DET (Bitfield-Mask: 0x01)  */
#define I2C_I2C_RAW_INTR_STAT_REG_GEN_CALL_Pos (11UL)                   /*!< I2C I2C_RAW_INTR_STAT_REG: GEN_CALL (Bit 11)                */
#define I2C_I2C_RAW_INTR_STAT_REG_GEN_CALL_Msk (0x800UL)                /*!< I2C I2C_RAW_INTR_STAT_REG: GEN_CALL (Bitfield-Mask: 0x01)   */
#define I2C_I2C_RAW_INTR_STAT_REG_RESTART_DET_Pos (12UL)                /*!< I2C I2C_RAW_INTR_STAT_REG: RESTART_DET (Bit 12)             */
#define I2C_I2C_RAW_INTR_STAT_REG_RESTART_DET_Msk (0x1000UL)            /*!< I2C I2C_RAW_INTR_STAT_REG: RESTART_DET (Bitfield-Mask: 0x01) */
#define I2C_I2C_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Pos (13UL)             /*!< I2C I2C_RAW_INTR_STAT_REG: MASTER_ON_HOLD (Bit 13)          */
#define I2C_I2C_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Msk (0x2000UL)         /*!< I2C I2C_RAW_INTR_STAT_REG: MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C_I2C_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Pos (14UL)           /*!< I2C I2C_RAW_INTR_STAT_REG: SCL_STUCK_AT_LOW (Bit 14)        */
#define I2C_I2C_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Msk (0x4000UL)       /*!< I2C I2C_RAW_INTR_STAT_REG: SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* ------------------------------  I2C_I2C_RX_TL_REG  ----------------------------- */
#define I2C_I2C_RX_TL_REG_RX_TL_Pos           (0UL)                     /*!< I2C I2C_RX_TL_REG: RX_TL (Bit 0)                            */
#define I2C_I2C_RX_TL_REG_RX_TL_Msk           (0x1fUL)                  /*!< I2C I2C_RX_TL_REG: RX_TL (Bitfield-Mask: 0x1f)              */
/* ------------------------------  I2C_I2C_TX_TL_REG  ----------------------------- */
#define I2C_I2C_TX_TL_REG_TX_TL_Pos           (0UL)                     /*!< I2C I2C_TX_TL_REG: TX_TL (Bit 0)                            */
#define I2C_I2C_TX_TL_REG_TX_TL_Msk           (0x1fUL)                  /*!< I2C I2C_TX_TL_REG: TX_TL (Bitfield-Mask: 0x1f)              */
/* ----------------------------  I2C_I2C_CLR_INTR_REG  ---------------------------- */
#define I2C_I2C_CLR_INTR_REG_CLR_INTR_Pos     (0UL)                     /*!< I2C I2C_CLR_INTR_REG: CLR_INTR (Bit 0)                      */
#define I2C_I2C_CLR_INTR_REG_CLR_INTR_Msk     (0x1UL)                   /*!< I2C I2C_CLR_INTR_REG: CLR_INTR (Bitfield-Mask: 0x01)        */
/* --------------------------  I2C_I2C_CLR_RX_UNDER_REG  -------------------------- */
#define I2C_I2C_CLR_RX_UNDER_REG_CLR_RX_UNDER_Pos (0UL)                 /*!< I2C I2C_CLR_RX_UNDER_REG: CLR_RX_UNDER (Bit 0)              */
#define I2C_I2C_CLR_RX_UNDER_REG_CLR_RX_UNDER_Msk (0x1UL)               /*!< I2C I2C_CLR_RX_UNDER_REG: CLR_RX_UNDER (Bitfield-Mask: 0x01) */
/* ---------------------------  I2C_I2C_CLR_RX_OVER_REG  -------------------------- */
#define I2C_I2C_CLR_RX_OVER_REG_CLR_RX_OVER_Pos (0UL)                   /*!< I2C I2C_CLR_RX_OVER_REG: CLR_RX_OVER (Bit 0)                */
#define I2C_I2C_CLR_RX_OVER_REG_CLR_RX_OVER_Msk (0x1UL)                 /*!< I2C I2C_CLR_RX_OVER_REG: CLR_RX_OVER (Bitfield-Mask: 0x01)  */
/* ---------------------------  I2C_I2C_CLR_TX_OVER_REG  -------------------------- */
#define I2C_I2C_CLR_TX_OVER_REG_CLR_TX_OVER_Pos (0UL)                   /*!< I2C I2C_CLR_TX_OVER_REG: CLR_TX_OVER (Bit 0)                */
#define I2C_I2C_CLR_TX_OVER_REG_CLR_TX_OVER_Msk (0x1UL)                 /*!< I2C I2C_CLR_TX_OVER_REG: CLR_TX_OVER (Bitfield-Mask: 0x01)  */
/* ---------------------------  I2C_I2C_CLR_RD_REQ_REG  --------------------------- */
#define I2C_I2C_CLR_RD_REQ_REG_CLR_RD_REQ_Pos (0UL)                     /*!< I2C I2C_CLR_RD_REQ_REG: CLR_RD_REQ (Bit 0)                  */
#define I2C_I2C_CLR_RD_REQ_REG_CLR_RD_REQ_Msk (0x1UL)                   /*!< I2C I2C_CLR_RD_REQ_REG: CLR_RD_REQ (Bitfield-Mask: 0x01)    */
/* ---------------------------  I2C_I2C_CLR_TX_ABRT_REG  -------------------------- */
#define I2C_I2C_CLR_TX_ABRT_REG_CLR_TX_ABRT_Pos (0UL)                   /*!< I2C I2C_CLR_TX_ABRT_REG: CLR_TX_ABRT (Bit 0)                */
#define I2C_I2C_CLR_TX_ABRT_REG_CLR_TX_ABRT_Msk (0x1UL)                 /*!< I2C I2C_CLR_TX_ABRT_REG: CLR_TX_ABRT (Bitfield-Mask: 0x01)  */
/* ---------------------------  I2C_I2C_CLR_RX_DONE_REG  -------------------------- */
#define I2C_I2C_CLR_RX_DONE_REG_CLR_RX_DONE_Pos (0UL)                   /*!< I2C I2C_CLR_RX_DONE_REG: CLR_RX_DONE (Bit 0)                */
#define I2C_I2C_CLR_RX_DONE_REG_CLR_RX_DONE_Msk (0x1UL)                 /*!< I2C I2C_CLR_RX_DONE_REG: CLR_RX_DONE (Bitfield-Mask: 0x01)  */
/* --------------------------  I2C_I2C_CLR_ACTIVITY_REG  -------------------------- */
#define I2C_I2C_CLR_ACTIVITY_REG_CLR_ACTIVITY_Pos (0UL)                 /*!< I2C I2C_CLR_ACTIVITY_REG: CLR_ACTIVITY (Bit 0)              */
#define I2C_I2C_CLR_ACTIVITY_REG_CLR_ACTIVITY_Msk (0x1UL)               /*!< I2C I2C_CLR_ACTIVITY_REG: CLR_ACTIVITY (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_CLR_STOP_DET_REG  -------------------------- */
#define I2C_I2C_CLR_STOP_DET_REG_CLR_ACTIVITY_Pos (0UL)                 /*!< I2C I2C_CLR_STOP_DET_REG: CLR_ACTIVITY (Bit 0)              */
#define I2C_I2C_CLR_STOP_DET_REG_CLR_ACTIVITY_Msk (0x1UL)               /*!< I2C I2C_CLR_STOP_DET_REG: CLR_ACTIVITY (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_CLR_START_DET_REG  ------------------------- */
#define I2C_I2C_CLR_START_DET_REG_CLR_START_DET_Pos (0UL)               /*!< I2C I2C_CLR_START_DET_REG: CLR_START_DET (Bit 0)            */
#define I2C_I2C_CLR_START_DET_REG_CLR_START_DET_Msk (0x1UL)             /*!< I2C I2C_CLR_START_DET_REG: CLR_START_DET (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_CLR_GEN_CALL_REG  -------------------------- */
#define I2C_I2C_CLR_GEN_CALL_REG_CLR_GEN_CALL_Pos (0UL)                 /*!< I2C I2C_CLR_GEN_CALL_REG: CLR_GEN_CALL (Bit 0)              */
#define I2C_I2C_CLR_GEN_CALL_REG_CLR_GEN_CALL_Msk (0x1UL)               /*!< I2C I2C_CLR_GEN_CALL_REG: CLR_GEN_CALL (Bitfield-Mask: 0x01) */
/* -----------------------------  I2C_I2C_ENABLE_REG  ----------------------------- */
#define I2C_I2C_ENABLE_REG_I2C_EN_Pos         (0UL)                     /*!< I2C I2C_ENABLE_REG: I2C_EN (Bit 0)                          */
#define I2C_I2C_ENABLE_REG_I2C_EN_Msk         (0x1UL)                   /*!< I2C I2C_ENABLE_REG: I2C_EN (Bitfield-Mask: 0x01)            */
#define I2C_I2C_ENABLE_REG_I2C_ABORT_Pos      (1UL)                     /*!< I2C I2C_ENABLE_REG: I2C_ABORT (Bit 1)                       */
#define I2C_I2C_ENABLE_REG_I2C_ABORT_Msk      (0x2UL)                   /*!< I2C I2C_ENABLE_REG: I2C_ABORT (Bitfield-Mask: 0x01)         */
#define I2C_I2C_ENABLE_REG_I2C_TX_CMD_BLOCK_Pos (2UL)                   /*!< I2C I2C_ENABLE_REG: I2C_TX_CMD_BLOCK (Bit 2)                */
#define I2C_I2C_ENABLE_REG_I2C_TX_CMD_BLOCK_Msk (0x4UL)                 /*!< I2C I2C_ENABLE_REG: I2C_TX_CMD_BLOCK (Bitfield-Mask: 0x01)  */
/* -----------------------------  I2C_I2C_STATUS_REG  ----------------------------- */
#define I2C_I2C_STATUS_REG_I2C_ACTIVITY_Pos   (0UL)                     /*!< I2C I2C_STATUS_REG: I2C_ACTIVITY (Bit 0)                    */
#define I2C_I2C_STATUS_REG_I2C_ACTIVITY_Msk   (0x1UL)                   /*!< I2C I2C_STATUS_REG: I2C_ACTIVITY (Bitfield-Mask: 0x01)      */
#define I2C_I2C_STATUS_REG_TFNF_Pos           (1UL)                     /*!< I2C I2C_STATUS_REG: TFNF (Bit 1)                            */
#define I2C_I2C_STATUS_REG_TFNF_Msk           (0x2UL)                   /*!< I2C I2C_STATUS_REG: TFNF (Bitfield-Mask: 0x01)              */
#define I2C_I2C_STATUS_REG_TFE_Pos            (2UL)                     /*!< I2C I2C_STATUS_REG: TFE (Bit 2)                             */
#define I2C_I2C_STATUS_REG_TFE_Msk            (0x4UL)                   /*!< I2C I2C_STATUS_REG: TFE (Bitfield-Mask: 0x01)               */
#define I2C_I2C_STATUS_REG_RFNE_Pos           (3UL)                     /*!< I2C I2C_STATUS_REG: RFNE (Bit 3)                            */
#define I2C_I2C_STATUS_REG_RFNE_Msk           (0x8UL)                   /*!< I2C I2C_STATUS_REG: RFNE (Bitfield-Mask: 0x01)              */
#define I2C_I2C_STATUS_REG_RFF_Pos            (4UL)                     /*!< I2C I2C_STATUS_REG: RFF (Bit 4)                             */
#define I2C_I2C_STATUS_REG_RFF_Msk            (0x10UL)                  /*!< I2C I2C_STATUS_REG: RFF (Bitfield-Mask: 0x01)               */
#define I2C_I2C_STATUS_REG_MST_ACTIVITY_Pos   (5UL)                     /*!< I2C I2C_STATUS_REG: MST_ACTIVITY (Bit 5)                    */
#define I2C_I2C_STATUS_REG_MST_ACTIVITY_Msk   (0x20UL)                  /*!< I2C I2C_STATUS_REG: MST_ACTIVITY (Bitfield-Mask: 0x01)      */
#define I2C_I2C_STATUS_REG_SLV_ACTIVITY_Pos   (6UL)                     /*!< I2C I2C_STATUS_REG: SLV_ACTIVITY (Bit 6)                    */
#define I2C_I2C_STATUS_REG_SLV_ACTIVITY_Msk   (0x40UL)                  /*!< I2C I2C_STATUS_REG: SLV_ACTIVITY (Bitfield-Mask: 0x01)      */
#define I2C_I2C_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Pos (7UL)             /*!< I2C I2C_STATUS_REG: MST_HOLD_TX_FIFO_EMPTY (Bit 7)          */
#define I2C_I2C_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Msk (0x80UL)          /*!< I2C I2C_STATUS_REG: MST_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define I2C_I2C_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Pos (8UL)              /*!< I2C I2C_STATUS_REG: MST_HOLD_RX_FIFO_FULL (Bit 8)           */
#define I2C_I2C_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Msk (0x100UL)          /*!< I2C I2C_STATUS_REG: MST_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01) */
#define I2C_I2C_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Pos (9UL)             /*!< I2C I2C_STATUS_REG: SLV_HOLD_TX_FIFO_EMPTY (Bit 9)          */
#define I2C_I2C_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Msk (0x200UL)         /*!< I2C I2C_STATUS_REG: SLV_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define I2C_I2C_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Pos (10UL)              /*!< I2C I2C_STATUS_REG: LV_HOLD_RX_FIFO_FULL (Bit 10)           */
#define I2C_I2C_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Msk (0x400UL)           /*!< I2C I2C_STATUS_REG: LV_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01) */
/* ------------------------------  I2C_I2C_TXFLR_REG  ----------------------------- */
#define I2C_I2C_TXFLR_REG_TXFLR_Pos           (0UL)                     /*!< I2C I2C_TXFLR_REG: TXFLR (Bit 0)                            */
#define I2C_I2C_TXFLR_REG_TXFLR_Msk           (0x3fUL)                  /*!< I2C I2C_TXFLR_REG: TXFLR (Bitfield-Mask: 0x3f)              */
/* ------------------------------  I2C_I2C_RXFLR_REG  ----------------------------- */
#define I2C_I2C_RXFLR_REG_RXFLR_Pos           (0UL)                     /*!< I2C I2C_RXFLR_REG: RXFLR (Bit 0)                            */
#define I2C_I2C_RXFLR_REG_RXFLR_Msk           (0x3fUL)                  /*!< I2C I2C_RXFLR_REG: RXFLR (Bitfield-Mask: 0x3f)              */
/* ----------------------------  I2C_I2C_SDA_HOLD_REG  ---------------------------- */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Pos (0UL)                  /*!< I2C I2C_SDA_HOLD_REG: I2C_SDA_TX_HOLD (Bit 0)               */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Msk (0xffffUL)             /*!< I2C I2C_SDA_HOLD_REG: I2C_SDA_TX_HOLD (Bitfield-Mask: 0xffff) */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Pos (16UL)                 /*!< I2C I2C_SDA_HOLD_REG: I2C_SDA_RX_HOLD (Bit 16)              */
#define I2C_I2C_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Msk (0xff0000UL)           /*!< I2C I2C_SDA_HOLD_REG: I2C_SDA_RX_HOLD (Bitfield-Mask: 0xff) */
/* -------------------------  I2C_I2C_TX_ABRT_SOURCE_REG  ------------------------- */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Pos (0UL)         /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_7B_ADDR_NOACK (Bit 0)      */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Msk (0x1UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_7B_ADDR_NOACK (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Pos (1UL)         /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10ADDR1_NOACK (Bit 1)      */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Msk (0x2UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10ADDR1_NOACK (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Pos (2UL)         /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10ADDR2_NOACK (Bit 2)      */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Msk (0x4UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10ADDR2_NOACK (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Pos (3UL)          /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_TXDATA_NOACK (Bit 3)       */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Msk (0x8UL)        /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_TXDATA_NOACK (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Pos (4UL)           /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_GCALL_NOACK (Bit 4)        */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Msk (0x10UL)        /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_GCALL_NOACK (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Pos (5UL)            /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_GCALL_READ (Bit 5)         */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Msk (0x20UL)         /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_GCALL_READ (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Pos (6UL)             /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_HS_ACKDET (Bit 6)          */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Msk (0x40UL)          /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_HS_ACKDET (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Pos (7UL)          /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SBYTE_ACKDET (Bit 7)       */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Msk (0x80UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SBYTE_ACKDET (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Pos (8UL)            /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_HS_NORSTRT (Bit 8)         */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Msk (0x100UL)        /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_HS_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Pos (9UL)         /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SBYTE_NORSTRT (Bit 9)      */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Msk (0x200UL)     /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SBYTE_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Pos (10UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10B_RD_NORSTRT (Bit 10)    */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Msk (0x400UL)    /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_10B_RD_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Pos (11UL)           /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_MASTER_DIS (Bit 11)        */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Msk (0x800UL)        /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_MASTER_DIS (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ARB_LOST_Pos (12UL)                  /*!< I2C I2C_TX_ABRT_SOURCE_REG: ARB_LOST (Bit 12)               */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ARB_LOST_Msk (0x1000UL)              /*!< I2C I2C_TX_ABRT_SOURCE_REG: ARB_LOST (Bitfield-Mask: 0x01)  */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Pos (13UL)      /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLVFLUSH_TXFIFO (Bit 13)   */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Msk (0x2000UL)  /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLVFLUSH_TXFIFO (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Pos (14UL)          /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLV_ARBLOST (Bit 14)       */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Msk (0x4000UL)      /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLV_ARBLOST (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Pos (15UL)           /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLVRD_INTX (Bit 15)        */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Msk (0x8000UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_SLVRD_INTX (Bitfield-Mask: 0x01) */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Pos (16UL)            /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_USER_ABRT (Bit 16)         */
#define I2C_I2C_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Msk (0x10000UL)       /*!< I2C I2C_TX_ABRT_SOURCE_REG: ABRT_USER_ABRT (Bitfield-Mask: 0x01) */
/* -----------------------------  I2C_I2C_DMA_CR_REG  ----------------------------- */
#define I2C_I2C_DMA_CR_REG_RDMAE_Pos          (0UL)                     /*!< I2C I2C_DMA_CR_REG: RDMAE (Bit 0)                           */
#define I2C_I2C_DMA_CR_REG_RDMAE_Msk          (0x1UL)                   /*!< I2C I2C_DMA_CR_REG: RDMAE (Bitfield-Mask: 0x01)             */
#define I2C_I2C_DMA_CR_REG_TDMAE_Pos          (1UL)                     /*!< I2C I2C_DMA_CR_REG: TDMAE (Bit 1)                           */
#define I2C_I2C_DMA_CR_REG_TDMAE_Msk          (0x2UL)                   /*!< I2C I2C_DMA_CR_REG: TDMAE (Bitfield-Mask: 0x01)             */
/* ----------------------------  I2C_I2C_DMA_TDLR_REG  ---------------------------- */
#define I2C_I2C_DMA_TDLR_REG_DMATDL_Pos       (0UL)                     /*!< I2C I2C_DMA_TDLR_REG: DMATDL (Bit 0)                        */
#define I2C_I2C_DMA_TDLR_REG_DMATDL_Msk       (0x1fUL)                  /*!< I2C I2C_DMA_TDLR_REG: DMATDL (Bitfield-Mask: 0x1f)          */
/* ----------------------------  I2C_I2C_DMA_RDLR_REG  ---------------------------- */
#define I2C_I2C_DMA_RDLR_REG_DMARDL_Pos       (0UL)                     /*!< I2C I2C_DMA_RDLR_REG: DMARDL (Bit 0)                        */
#define I2C_I2C_DMA_RDLR_REG_DMARDL_Msk       (0x1fUL)                  /*!< I2C I2C_DMA_RDLR_REG: DMARDL (Bitfield-Mask: 0x1f)          */
/* ----------------------------  I2C_I2C_SDA_SETUP_REG  --------------------------- */
#define I2C_I2C_SDA_SETUP_REG_SDA_SETUP_Pos   (0UL)                     /*!< I2C I2C_SDA_SETUP_REG: SDA_SETUP (Bit 0)                    */
#define I2C_I2C_SDA_SETUP_REG_SDA_SETUP_Msk   (0xffUL)                  /*!< I2C I2C_SDA_SETUP_REG: SDA_SETUP (Bitfield-Mask: 0xff)      */
/* ------------------------  I2C_I2C_ACK_GENERAL_CALL_REG  ------------------------ */
#define I2C_I2C_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Pos (0UL)             /*!< I2C I2C_ACK_GENERAL_CALL_REG: ACK_GEN_CALL (Bit 0)          */
#define I2C_I2C_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Msk (0x1UL)           /*!< I2C I2C_ACK_GENERAL_CALL_REG: ACK_GEN_CALL (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_ENABLE_STATUS_REG  ------------------------- */
#define I2C_I2C_ENABLE_STATUS_REG_IC_EN_Pos   (0UL)                     /*!< I2C I2C_ENABLE_STATUS_REG: IC_EN (Bit 0)                    */
#define I2C_I2C_ENABLE_STATUS_REG_IC_EN_Msk   (0x1UL)                   /*!< I2C I2C_ENABLE_STATUS_REG: IC_EN (Bitfield-Mask: 0x01)      */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Pos (1UL)     /*!< I2C I2C_ENABLE_STATUS_REG: SLV_DISABLED_WHILE_BUSY (Bit 1)  */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Msk (0x2UL)   /*!< I2C I2C_ENABLE_STATUS_REG: SLV_DISABLED_WHILE_BUSY (Bitfield-Mask: 0x01) */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Pos (2UL)            /*!< I2C I2C_ENABLE_STATUS_REG: SLV_RX_DATA_LOST (Bit 2)         */
#define I2C_I2C_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Msk (0x4UL)          /*!< I2C I2C_ENABLE_STATUS_REG: SLV_RX_DATA_LOST (Bitfield-Mask: 0x01) */
/* --------------------------  I2C_I2C_IC_FS_SPKLEN_REG  -------------------------- */
#define I2C_I2C_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Pos (0UL)                /*!< I2C I2C_IC_FS_SPKLEN_REG: I2C_FS_SPKLEN (Bit 0)             */
#define I2C_I2C_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Msk (0xffUL)             /*!< I2C I2C_IC_FS_SPKLEN_REG: I2C_FS_SPKLEN (Bitfield-Mask: 0xff) */
/* --------------------------  I2C_I2C_IC_HS_SPKLEN_REG  -------------------------- */
#define I2C_I2C_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Pos (0UL)                /*!< I2C I2C_IC_HS_SPKLEN_REG: I2C_HS_SPKLEN (Bit 0)             */
#define I2C_I2C_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Msk (0xffUL)             /*!< I2C I2C_IC_HS_SPKLEN_REG: I2C_HS_SPKLEN (Bitfield-Mask: 0xff) */
/* ---------------------------  I2C_I2C_COMP_PARAM1_REG  -------------------------- */
#define I2C_I2C_COMP_PARAM1_REG_IC_COMP_PARAM1_Pos (0UL)                /*!< I2C I2C_COMP_PARAM1_REG: IC_COMP_PARAM1 (Bit 0)             */
#define I2C_I2C_COMP_PARAM1_REG_IC_COMP_PARAM1_Msk (0xffffffffUL)       /*!< I2C I2C_COMP_PARAM1_REG: IC_COMP_PARAM1 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  I2C_I2C_COMP_VERSION_REG  -------------------------- */
#define I2C_I2C_COMP_VERSION_REG_IC_COMP_VERSION_Pos (0UL)              /*!< I2C I2C_COMP_VERSION_REG: IC_COMP_VERSION (Bit 0)           */
#define I2C_I2C_COMP_VERSION_REG_IC_COMP_VERSION_Msk (0xffffffffUL)     /*!< I2C I2C_COMP_VERSION_REG: IC_COMP_VERSION (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  I2C_I2C_COMP_TYPE_REG  --------------------------- */
#define I2C_I2C_COMP_TYPE_REG_IC_COMP_TYPE_Pos (0UL)                    /*!< I2C I2C_COMP_TYPE_REG: IC_COMP_TYPE (Bit 0)                 */
#define I2C_I2C_COMP_TYPE_REG_IC_COMP_TYPE_Msk (0xffffffffUL)           /*!< I2C I2C_COMP_TYPE_REG: IC_COMP_TYPE (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'I2C2' Position & Mask         ================ */
/* ================================================================================ */
/* ------------------------------  I2C2_I2C2_CON_REG  ----------------------------- */
#define I2C2_I2C2_CON_REG_I2C_MASTER_MODE_Pos (0UL)                     /*!< I2C2 I2C2_CON_REG: I2C_MASTER_MODE (Bit 0)                  */
#define I2C2_I2C2_CON_REG_I2C_MASTER_MODE_Msk (0x1UL)                   /*!< I2C2 I2C2_CON_REG: I2C_MASTER_MODE (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_CON_REG_I2C_SPEED_Pos       (1UL)                     /*!< I2C2 I2C2_CON_REG: I2C_SPEED (Bit 1)                        */
#define I2C2_I2C2_CON_REG_I2C_SPEED_Msk       (0x6UL)                   /*!< I2C2 I2C2_CON_REG: I2C_SPEED (Bitfield-Mask: 0x03)          */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_SLAVE_Pos (3UL)                 /*!< I2C2 I2C2_CON_REG: I2C_10BITADDR_SLAVE (Bit 3)              */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_SLAVE_Msk (0x8UL)               /*!< I2C2 I2C2_CON_REG: I2C_10BITADDR_SLAVE (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_MASTER_Pos (4UL)                /*!< I2C2 I2C2_CON_REG: I2C_10BITADDR_MASTER (Bit 4)             */
#define I2C2_I2C2_CON_REG_I2C_10BITADDR_MASTER_Msk (0x10UL)             /*!< I2C2 I2C2_CON_REG: I2C_10BITADDR_MASTER (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_CON_REG_I2C_RESTART_EN_Pos  (5UL)                     /*!< I2C2 I2C2_CON_REG: I2C_RESTART_EN (Bit 5)                   */
#define I2C2_I2C2_CON_REG_I2C_RESTART_EN_Msk  (0x20UL)                  /*!< I2C2 I2C2_CON_REG: I2C_RESTART_EN (Bitfield-Mask: 0x01)     */
#define I2C2_I2C2_CON_REG_I2C_SLAVE_DISABLE_Pos (6UL)                   /*!< I2C2 I2C2_CON_REG: I2C_SLAVE_DISABLE (Bit 6)                */
#define I2C2_I2C2_CON_REG_I2C_SLAVE_DISABLE_Msk (0x40UL)                /*!< I2C2 I2C2_CON_REG: I2C_SLAVE_DISABLE (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IFADDRESSED_Pos (7UL)            /*!< I2C2 I2C2_CON_REG: I2C_STOP_DET_IFADDRESSED (Bit 7)         */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IFADDRESSED_Msk (0x80UL)         /*!< I2C2 I2C2_CON_REG: I2C_STOP_DET_IFADDRESSED (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_CON_REG_I2C_TX_EMPTY_CTRL_Pos (8UL)                   /*!< I2C2 I2C2_CON_REG: I2C_TX_EMPTY_CTRL (Bit 8)                */
#define I2C2_I2C2_CON_REG_I2C_TX_EMPTY_CTRL_Msk (0x100UL)               /*!< I2C2 I2C2_CON_REG: I2C_TX_EMPTY_CTRL (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Pos (9UL)           /*!< I2C2 I2C2_CON_REG: I2C_RX_FIFO_FULL_HLD_CTRL (Bit 9)        */
#define I2C2_I2C2_CON_REG_I2C_RX_FIFO_FULL_HLD_CTRL_Msk (0x200UL)       /*!< I2C2 I2C2_CON_REG: I2C_RX_FIFO_FULL_HLD_CTRL (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Pos (10UL)      /*!< I2C2 I2C2_CON_REG: I2C_STOP_DET_IF_MASTER_ACTIVE (Bit 10)   */
#define I2C2_I2C2_CON_REG_I2C_STOP_DET_IF_MASTER_ACTIVE_Msk (0x400UL)   /*!< I2C2 I2C2_CON_REG: I2C_STOP_DET_IF_MASTER_ACTIVE (Bitfield-Mask: 0x01) */
/* ------------------------------  I2C2_I2C2_TAR_REG  ----------------------------- */
#define I2C2_I2C2_TAR_REG_IC_TAR_Pos          (0UL)                     /*!< I2C2 I2C2_TAR_REG: IC_TAR (Bit 0)                           */
#define I2C2_I2C2_TAR_REG_IC_TAR_Msk          (0x3ffUL)                 /*!< I2C2 I2C2_TAR_REG: IC_TAR (Bitfield-Mask: 0x3ff)            */
#define I2C2_I2C2_TAR_REG_GC_OR_START_Pos     (10UL)                    /*!< I2C2 I2C2_TAR_REG: GC_OR_START (Bit 10)                     */
#define I2C2_I2C2_TAR_REG_GC_OR_START_Msk     (0x400UL)                 /*!< I2C2 I2C2_TAR_REG: GC_OR_START (Bitfield-Mask: 0x01)        */
#define I2C2_I2C2_TAR_REG_SPECIAL_Pos         (11UL)                    /*!< I2C2 I2C2_TAR_REG: SPECIAL (Bit 11)                         */
#define I2C2_I2C2_TAR_REG_SPECIAL_Msk         (0x800UL)                 /*!< I2C2 I2C2_TAR_REG: SPECIAL (Bitfield-Mask: 0x01)            */
/* ------------------------------  I2C2_I2C2_SAR_REG  ----------------------------- */
#define I2C2_I2C2_SAR_REG_IC_SAR_Pos          (0UL)                     /*!< I2C2 I2C2_SAR_REG: IC_SAR (Bit 0)                           */
#define I2C2_I2C2_SAR_REG_IC_SAR_Msk          (0x3ffUL)                 /*!< I2C2 I2C2_SAR_REG: IC_SAR (Bitfield-Mask: 0x3ff)            */
/* ---------------------------  I2C2_I2C2_HS_MADDR_REG  --------------------------- */
#define I2C2_I2C2_HS_MADDR_REG_I2C_IC_HS_MAR_Pos (0UL)                  /*!< I2C2 I2C2_HS_MADDR_REG: I2C_IC_HS_MAR (Bit 0)               */
#define I2C2_I2C2_HS_MADDR_REG_I2C_IC_HS_MAR_Msk (0x7UL)                /*!< I2C2 I2C2_HS_MADDR_REG: I2C_IC_HS_MAR (Bitfield-Mask: 0x07) */
/* ---------------------------  I2C2_I2C2_DATA_CMD_REG  --------------------------- */
#define I2C2_I2C2_DATA_CMD_REG_I2C_DAT_Pos    (0UL)                     /*!< I2C2 I2C2_DATA_CMD_REG: I2C_DAT (Bit 0)                     */
#define I2C2_I2C2_DATA_CMD_REG_I2C_DAT_Msk    (0xffUL)                  /*!< I2C2 I2C2_DATA_CMD_REG: I2C_DAT (Bitfield-Mask: 0xff)       */
#define I2C2_I2C2_DATA_CMD_REG_I2C_CMD_Pos    (8UL)                     /*!< I2C2 I2C2_DATA_CMD_REG: I2C_CMD (Bit 8)                     */
#define I2C2_I2C2_DATA_CMD_REG_I2C_CMD_Msk    (0x100UL)                 /*!< I2C2 I2C2_DATA_CMD_REG: I2C_CMD (Bitfield-Mask: 0x01)       */
#define I2C2_I2C2_DATA_CMD_REG_I2C_STOP_Pos   (9UL)                     /*!< I2C2 I2C2_DATA_CMD_REG: I2C_STOP (Bit 9)                    */
#define I2C2_I2C2_DATA_CMD_REG_I2C_STOP_Msk   (0x200UL)                 /*!< I2C2 I2C2_DATA_CMD_REG: I2C_STOP (Bitfield-Mask: 0x01)      */
#define I2C2_I2C2_DATA_CMD_REG_I2C_RESTART_Pos (10UL)                   /*!< I2C2 I2C2_DATA_CMD_REG: I2C_RESTART (Bit 10)                */
#define I2C2_I2C2_DATA_CMD_REG_I2C_RESTART_Msk (0x400UL)                /*!< I2C2 I2C2_DATA_CMD_REG: I2C_RESTART (Bitfield-Mask: 0x01)   */
/* --------------------------  I2C2_I2C2_SS_SCL_HCNT_REG  ------------------------- */
#define I2C2_I2C2_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Pos (0UL)              /*!< I2C2 I2C2_SS_SCL_HCNT_REG: IC_SS_SCL_HCNT (Bit 0)           */
#define I2C2_I2C2_SS_SCL_HCNT_REG_IC_SS_SCL_HCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_SS_SCL_HCNT_REG: IC_SS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* --------------------------  I2C2_I2C2_SS_SCL_LCNT_REG  ------------------------- */
#define I2C2_I2C2_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Pos (0UL)              /*!< I2C2 I2C2_SS_SCL_LCNT_REG: IC_SS_SCL_LCNT (Bit 0)           */
#define I2C2_I2C2_SS_SCL_LCNT_REG_IC_SS_SCL_LCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_SS_SCL_LCNT_REG: IC_SS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* --------------------------  I2C2_I2C2_FS_SCL_HCNT_REG  ------------------------- */
#define I2C2_I2C2_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Pos (0UL)              /*!< I2C2 I2C2_FS_SCL_HCNT_REG: IC_FS_SCL_HCNT (Bit 0)           */
#define I2C2_I2C2_FS_SCL_HCNT_REG_IC_FS_SCL_HCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_FS_SCL_HCNT_REG: IC_FS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* --------------------------  I2C2_I2C2_FS_SCL_LCNT_REG  ------------------------- */
#define I2C2_I2C2_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Pos (0UL)              /*!< I2C2 I2C2_FS_SCL_LCNT_REG: IC_FS_SCL_LCNT (Bit 0)           */
#define I2C2_I2C2_FS_SCL_LCNT_REG_IC_FS_SCL_LCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_FS_SCL_LCNT_REG: IC_FS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* --------------------------  I2C2_I2C2_HS_SCL_HCNT_REG  ------------------------- */
#define I2C2_I2C2_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Pos (0UL)              /*!< I2C2 I2C2_HS_SCL_HCNT_REG: IC_HS_SCL_HCNT (Bit 0)           */
#define I2C2_I2C2_HS_SCL_HCNT_REG_IC_HS_SCL_HCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_HS_SCL_HCNT_REG: IC_HS_SCL_HCNT (Bitfield-Mask: 0xffff) */
/* --------------------------  I2C2_I2C2_HS_SCL_LCNT_REG  ------------------------- */
#define I2C2_I2C2_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Pos (0UL)              /*!< I2C2 I2C2_HS_SCL_LCNT_REG: IC_HS_SCL_LCNT (Bit 0)           */
#define I2C2_I2C2_HS_SCL_LCNT_REG_IC_HS_SCL_LCNT_Msk (0xffffUL)         /*!< I2C2 I2C2_HS_SCL_LCNT_REG: IC_HS_SCL_LCNT (Bitfield-Mask: 0xffff) */
/* ---------------------------  I2C2_I2C2_INTR_STAT_REG  -------------------------- */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_UNDER_Pos (0UL)                    /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_UNDER (Bit 0)                 */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_UNDER_Msk (0x1UL)                  /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_UNDER (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_OVER_Pos (1UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_OVER (Bit 1)                  */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_OVER_Msk (0x2UL)                   /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_OVER (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_FULL_Pos (2UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_FULL (Bit 2)                  */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_FULL_Msk (0x4UL)                   /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_FULL (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_OVER_Pos (3UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_OVER (Bit 3)                  */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_OVER_Msk (0x8UL)                   /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_OVER (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_EMPTY_Pos (4UL)                    /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_EMPTY (Bit 4)                 */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_EMPTY_Msk (0x10UL)                 /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_EMPTY (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_STAT_REG_R_RD_REQ_Pos  (5UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_RD_REQ (Bit 5)                   */
#define I2C2_I2C2_INTR_STAT_REG_R_RD_REQ_Msk  (0x20UL)                  /*!< I2C2 I2C2_INTR_STAT_REG: R_RD_REQ (Bitfield-Mask: 0x01)     */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_ABRT_Pos (6UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_ABRT (Bit 6)                  */
#define I2C2_I2C2_INTR_STAT_REG_R_TX_ABRT_Msk (0x40UL)                  /*!< I2C2 I2C2_INTR_STAT_REG: R_TX_ABRT (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_DONE_Pos (7UL)                     /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_DONE (Bit 7)                  */
#define I2C2_I2C2_INTR_STAT_REG_R_RX_DONE_Msk (0x80UL)                  /*!< I2C2 I2C2_INTR_STAT_REG: R_RX_DONE (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_STAT_REG_R_ACTIVITY_Pos (8UL)                    /*!< I2C2 I2C2_INTR_STAT_REG: R_ACTIVITY (Bit 8)                 */
#define I2C2_I2C2_INTR_STAT_REG_R_ACTIVITY_Msk (0x100UL)                /*!< I2C2 I2C2_INTR_STAT_REG: R_ACTIVITY (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_STAT_REG_R_STOP_DET_Pos (9UL)                    /*!< I2C2 I2C2_INTR_STAT_REG: R_STOP_DET (Bit 9)                 */
#define I2C2_I2C2_INTR_STAT_REG_R_STOP_DET_Msk (0x200UL)                /*!< I2C2 I2C2_INTR_STAT_REG: R_STOP_DET (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_STAT_REG_R_START_DET_Pos (10UL)                  /*!< I2C2 I2C2_INTR_STAT_REG: R_START_DET (Bit 10)               */
#define I2C2_I2C2_INTR_STAT_REG_R_START_DET_Msk (0x400UL)               /*!< I2C2 I2C2_INTR_STAT_REG: R_START_DET (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_INTR_STAT_REG_R_GEN_CALL_Pos (11UL)                   /*!< I2C2 I2C2_INTR_STAT_REG: R_GEN_CALL (Bit 11)                */
#define I2C2_I2C2_INTR_STAT_REG_R_GEN_CALL_Msk (0x800UL)                /*!< I2C2 I2C2_INTR_STAT_REG: R_GEN_CALL (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_STAT_REG_R_RESTART_DET_Pos (12UL)                /*!< I2C2 I2C2_INTR_STAT_REG: R_RESTART_DET (Bit 12)             */
#define I2C2_I2C2_INTR_STAT_REG_R_RESTART_DET_Msk (0x1000UL)            /*!< I2C2 I2C2_INTR_STAT_REG: R_RESTART_DET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_INTR_STAT_REG_R_MASTER_ON_HOLD_Pos (13UL)             /*!< I2C2 I2C2_INTR_STAT_REG: R_MASTER_ON_HOLD (Bit 13)          */
#define I2C2_I2C2_INTR_STAT_REG_R_MASTER_ON_HOLD_Msk (0x2000UL)         /*!< I2C2 I2C2_INTR_STAT_REG: R_MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Pos (14UL)           /*!< I2C2 I2C2_INTR_STAT_REG: R_SCL_STUCK_AT_LOW (Bit 14)        */
#define I2C2_I2C2_INTR_STAT_REG_R_SCL_STUCK_AT_LOW_Msk (0x4000UL)       /*!< I2C2 I2C2_INTR_STAT_REG: R_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* ---------------------------  I2C2_I2C2_INTR_MASK_REG  -------------------------- */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_UNDER_Pos (0UL)                    /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_UNDER (Bit 0)                 */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_UNDER_Msk (0x1UL)                  /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_UNDER (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_OVER_Pos (1UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_OVER (Bit 1)                  */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_OVER_Msk (0x2UL)                   /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_OVER (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_FULL_Pos (2UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_FULL (Bit 2)                  */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_FULL_Msk (0x4UL)                   /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_FULL (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_OVER_Pos (3UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_OVER (Bit 3)                  */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_OVER_Msk (0x8UL)                   /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_OVER (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_EMPTY_Pos (4UL)                    /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_EMPTY (Bit 4)                 */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_EMPTY_Msk (0x10UL)                 /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_EMPTY (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_MASK_REG_M_RD_REQ_Pos  (5UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_RD_REQ (Bit 5)                   */
#define I2C2_I2C2_INTR_MASK_REG_M_RD_REQ_Msk  (0x20UL)                  /*!< I2C2 I2C2_INTR_MASK_REG: M_RD_REQ (Bitfield-Mask: 0x01)     */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_ABRT_Pos (6UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_ABRT (Bit 6)                  */
#define I2C2_I2C2_INTR_MASK_REG_M_TX_ABRT_Msk (0x40UL)                  /*!< I2C2 I2C2_INTR_MASK_REG: M_TX_ABRT (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_DONE_Pos (7UL)                     /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_DONE (Bit 7)                  */
#define I2C2_I2C2_INTR_MASK_REG_M_RX_DONE_Msk (0x80UL)                  /*!< I2C2 I2C2_INTR_MASK_REG: M_RX_DONE (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_INTR_MASK_REG_M_ACTIVITY_Pos (8UL)                    /*!< I2C2 I2C2_INTR_MASK_REG: M_ACTIVITY (Bit 8)                 */
#define I2C2_I2C2_INTR_MASK_REG_M_ACTIVITY_Msk (0x100UL)                /*!< I2C2 I2C2_INTR_MASK_REG: M_ACTIVITY (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_MASK_REG_M_STOP_DET_Pos (9UL)                    /*!< I2C2 I2C2_INTR_MASK_REG: M_STOP_DET (Bit 9)                 */
#define I2C2_I2C2_INTR_MASK_REG_M_STOP_DET_Msk (0x200UL)                /*!< I2C2 I2C2_INTR_MASK_REG: M_STOP_DET (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_MASK_REG_M_START_DET_Pos (10UL)                  /*!< I2C2 I2C2_INTR_MASK_REG: M_START_DET (Bit 10)               */
#define I2C2_I2C2_INTR_MASK_REG_M_START_DET_Msk (0x400UL)               /*!< I2C2 I2C2_INTR_MASK_REG: M_START_DET (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_INTR_MASK_REG_M_GEN_CALL_Pos (11UL)                   /*!< I2C2 I2C2_INTR_MASK_REG: M_GEN_CALL (Bit 11)                */
#define I2C2_I2C2_INTR_MASK_REG_M_GEN_CALL_Msk (0x800UL)                /*!< I2C2 I2C2_INTR_MASK_REG: M_GEN_CALL (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_INTR_MASK_REG_M_RESTART_DET_Pos (12UL)                /*!< I2C2 I2C2_INTR_MASK_REG: M_RESTART_DET (Bit 12)             */
#define I2C2_I2C2_INTR_MASK_REG_M_RESTART_DET_Msk (0x1000UL)            /*!< I2C2 I2C2_INTR_MASK_REG: M_RESTART_DET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_INTR_MASK_REG_M_MASTER_ON_HOLD_Pos (13UL)             /*!< I2C2 I2C2_INTR_MASK_REG: M_MASTER_ON_HOLD (Bit 13)          */
#define I2C2_I2C2_INTR_MASK_REG_M_MASTER_ON_HOLD_Msk (0x2000UL)         /*!< I2C2 I2C2_INTR_MASK_REG: M_MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Pos (14UL)           /*!< I2C2 I2C2_INTR_MASK_REG: M_SCL_STUCK_AT_LOW (Bit 14)        */
#define I2C2_I2C2_INTR_MASK_REG_M_SCL_STUCK_AT_LOW_Msk (0x4000UL)       /*!< I2C2 I2C2_INTR_MASK_REG: M_SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_RAW_INTR_STAT_REG  ------------------------ */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_UNDER_Pos (0UL)                  /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_UNDER (Bit 0)               */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_UNDER_Msk (0x1UL)                /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_UNDER (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_OVER_Pos (1UL)                   /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_OVER (Bit 1)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_OVER_Msk (0x2UL)                 /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_OVER (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_FULL_Pos (2UL)                   /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_FULL (Bit 2)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_FULL_Msk (0x4UL)                 /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_FULL (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_OVER_Pos (3UL)                   /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_OVER (Bit 3)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_OVER_Msk (0x8UL)                 /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_OVER (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_EMPTY_Pos (4UL)                  /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_EMPTY (Bit 4)               */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_EMPTY_Msk (0x10UL)               /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_EMPTY (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RD_REQ_Pos (5UL)                    /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RD_REQ (Bit 5)                 */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RD_REQ_Msk (0x20UL)                 /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RD_REQ (Bitfield-Mask: 0x01)   */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_ABRT_Pos (6UL)                   /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_ABRT (Bit 6)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_TX_ABRT_Msk (0x40UL)                /*!< I2C2 I2C2_RAW_INTR_STAT_REG: TX_ABRT (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_DONE_Pos (7UL)                   /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_DONE (Bit 7)                */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RX_DONE_Msk (0x80UL)                /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RX_DONE (Bitfield-Mask: 0x01)  */
#define I2C2_I2C2_RAW_INTR_STAT_REG_ACTIVITY_Pos (8UL)                  /*!< I2C2 I2C2_RAW_INTR_STAT_REG: ACTIVITY (Bit 8)               */
#define I2C2_I2C2_RAW_INTR_STAT_REG_ACTIVITY_Msk (0x100UL)              /*!< I2C2 I2C2_RAW_INTR_STAT_REG: ACTIVITY (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_STOP_DET_Pos (9UL)                  /*!< I2C2 I2C2_RAW_INTR_STAT_REG: STOP_DET (Bit 9)               */
#define I2C2_I2C2_RAW_INTR_STAT_REG_STOP_DET_Msk (0x200UL)              /*!< I2C2 I2C2_RAW_INTR_STAT_REG: STOP_DET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_START_DET_Pos (10UL)                /*!< I2C2 I2C2_RAW_INTR_STAT_REG: START_DET (Bit 10)             */
#define I2C2_I2C2_RAW_INTR_STAT_REG_START_DET_Msk (0x400UL)             /*!< I2C2 I2C2_RAW_INTR_STAT_REG: START_DET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_GEN_CALL_Pos (11UL)                 /*!< I2C2 I2C2_RAW_INTR_STAT_REG: GEN_CALL (Bit 11)              */
#define I2C2_I2C2_RAW_INTR_STAT_REG_GEN_CALL_Msk (0x800UL)              /*!< I2C2 I2C2_RAW_INTR_STAT_REG: GEN_CALL (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RESTART_DET_Pos (12UL)              /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RESTART_DET (Bit 12)           */
#define I2C2_I2C2_RAW_INTR_STAT_REG_RESTART_DET_Msk (0x1000UL)          /*!< I2C2 I2C2_RAW_INTR_STAT_REG: RESTART_DET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Pos (13UL)           /*!< I2C2 I2C2_RAW_INTR_STAT_REG: MASTER_ON_HOLD (Bit 13)        */
#define I2C2_I2C2_RAW_INTR_STAT_REG_MASTER_ON_HOLD_Msk (0x2000UL)       /*!< I2C2 I2C2_RAW_INTR_STAT_REG: MASTER_ON_HOLD (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Pos (14UL)         /*!< I2C2 I2C2_RAW_INTR_STAT_REG: SCL_STUCK_AT_LOW (Bit 14)      */
#define I2C2_I2C2_RAW_INTR_STAT_REG_SCL_STUCK_AT_LOW_Msk (0x4000UL)     /*!< I2C2 I2C2_RAW_INTR_STAT_REG: SCL_STUCK_AT_LOW (Bitfield-Mask: 0x01) */
/* -----------------------------  I2C2_I2C2_RX_TL_REG  ---------------------------- */
#define I2C2_I2C2_RX_TL_REG_RX_TL_Pos         (0UL)                     /*!< I2C2 I2C2_RX_TL_REG: RX_TL (Bit 0)                          */
#define I2C2_I2C2_RX_TL_REG_RX_TL_Msk         (0x1fUL)                  /*!< I2C2 I2C2_RX_TL_REG: RX_TL (Bitfield-Mask: 0x1f)            */
/* -----------------------------  I2C2_I2C2_TX_TL_REG  ---------------------------- */
#define I2C2_I2C2_TX_TL_REG_TX_TL_Pos         (0UL)                     /*!< I2C2 I2C2_TX_TL_REG: TX_TL (Bit 0)                          */
#define I2C2_I2C2_TX_TL_REG_TX_TL_Msk         (0x1fUL)                  /*!< I2C2 I2C2_TX_TL_REG: TX_TL (Bitfield-Mask: 0x1f)            */
/* ---------------------------  I2C2_I2C2_CLR_INTR_REG  --------------------------- */
#define I2C2_I2C2_CLR_INTR_REG_CLR_INTR_Pos   (0UL)                     /*!< I2C2 I2C2_CLR_INTR_REG: CLR_INTR (Bit 0)                    */
#define I2C2_I2C2_CLR_INTR_REG_CLR_INTR_Msk   (0x1UL)                   /*!< I2C2 I2C2_CLR_INTR_REG: CLR_INTR (Bitfield-Mask: 0x01)      */
/* -------------------------  I2C2_I2C2_CLR_RX_UNDER_REG  ------------------------- */
#define I2C2_I2C2_CLR_RX_UNDER_REG_CLR_RX_UNDER_Pos (0UL)               /*!< I2C2 I2C2_CLR_RX_UNDER_REG: CLR_RX_UNDER (Bit 0)            */
#define I2C2_I2C2_CLR_RX_UNDER_REG_CLR_RX_UNDER_Msk (0x1UL)             /*!< I2C2 I2C2_CLR_RX_UNDER_REG: CLR_RX_UNDER (Bitfield-Mask: 0x01) */
/* --------------------------  I2C2_I2C2_CLR_RX_OVER_REG  ------------------------- */
#define I2C2_I2C2_CLR_RX_OVER_REG_CLR_RX_OVER_Pos (0UL)                 /*!< I2C2 I2C2_CLR_RX_OVER_REG: CLR_RX_OVER (Bit 0)              */
#define I2C2_I2C2_CLR_RX_OVER_REG_CLR_RX_OVER_Msk (0x1UL)               /*!< I2C2 I2C2_CLR_RX_OVER_REG: CLR_RX_OVER (Bitfield-Mask: 0x01) */
/* --------------------------  I2C2_I2C2_CLR_TX_OVER_REG  ------------------------- */
#define I2C2_I2C2_CLR_TX_OVER_REG_CLR_TX_OVER_Pos (0UL)                 /*!< I2C2 I2C2_CLR_TX_OVER_REG: CLR_TX_OVER (Bit 0)              */
#define I2C2_I2C2_CLR_TX_OVER_REG_CLR_TX_OVER_Msk (0x1UL)               /*!< I2C2 I2C2_CLR_TX_OVER_REG: CLR_TX_OVER (Bitfield-Mask: 0x01) */
/* --------------------------  I2C2_I2C2_CLR_RD_REQ_REG  -------------------------- */
#define I2C2_I2C2_CLR_RD_REQ_REG_CLR_RD_REQ_Pos (0UL)                   /*!< I2C2 I2C2_CLR_RD_REQ_REG: CLR_RD_REQ (Bit 0)                */
#define I2C2_I2C2_CLR_RD_REQ_REG_CLR_RD_REQ_Msk (0x1UL)                 /*!< I2C2 I2C2_CLR_RD_REQ_REG: CLR_RD_REQ (Bitfield-Mask: 0x01)  */
/* --------------------------  I2C2_I2C2_CLR_TX_ABRT_REG  ------------------------- */
#define I2C2_I2C2_CLR_TX_ABRT_REG_CLR_TX_ABRT_Pos (0UL)                 /*!< I2C2 I2C2_CLR_TX_ABRT_REG: CLR_TX_ABRT (Bit 0)              */
#define I2C2_I2C2_CLR_TX_ABRT_REG_CLR_TX_ABRT_Msk (0x1UL)               /*!< I2C2 I2C2_CLR_TX_ABRT_REG: CLR_TX_ABRT (Bitfield-Mask: 0x01) */
/* --------------------------  I2C2_I2C2_CLR_RX_DONE_REG  ------------------------- */
#define I2C2_I2C2_CLR_RX_DONE_REG_CLR_RX_DONE_Pos (0UL)                 /*!< I2C2 I2C2_CLR_RX_DONE_REG: CLR_RX_DONE (Bit 0)              */
#define I2C2_I2C2_CLR_RX_DONE_REG_CLR_RX_DONE_Msk (0x1UL)               /*!< I2C2 I2C2_CLR_RX_DONE_REG: CLR_RX_DONE (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_CLR_ACTIVITY_REG  ------------------------- */
#define I2C2_I2C2_CLR_ACTIVITY_REG_CLR_ACTIVITY_Pos (0UL)               /*!< I2C2 I2C2_CLR_ACTIVITY_REG: CLR_ACTIVITY (Bit 0)            */
#define I2C2_I2C2_CLR_ACTIVITY_REG_CLR_ACTIVITY_Msk (0x1UL)             /*!< I2C2 I2C2_CLR_ACTIVITY_REG: CLR_ACTIVITY (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_CLR_STOP_DET_REG  ------------------------- */
#define I2C2_I2C2_CLR_STOP_DET_REG_CLR_ACTIVITY_Pos (0UL)               /*!< I2C2 I2C2_CLR_STOP_DET_REG: CLR_ACTIVITY (Bit 0)            */
#define I2C2_I2C2_CLR_STOP_DET_REG_CLR_ACTIVITY_Msk (0x1UL)             /*!< I2C2 I2C2_CLR_STOP_DET_REG: CLR_ACTIVITY (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_CLR_START_DET_REG  ------------------------ */
#define I2C2_I2C2_CLR_START_DET_REG_CLR_START_DET_Pos (0UL)             /*!< I2C2 I2C2_CLR_START_DET_REG: CLR_START_DET (Bit 0)          */
#define I2C2_I2C2_CLR_START_DET_REG_CLR_START_DET_Msk (0x1UL)           /*!< I2C2 I2C2_CLR_START_DET_REG: CLR_START_DET (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_CLR_GEN_CALL_REG  ------------------------- */
#define I2C2_I2C2_CLR_GEN_CALL_REG_CLR_GEN_CALL_Pos (0UL)               /*!< I2C2 I2C2_CLR_GEN_CALL_REG: CLR_GEN_CALL (Bit 0)            */
#define I2C2_I2C2_CLR_GEN_CALL_REG_CLR_GEN_CALL_Msk (0x1UL)             /*!< I2C2 I2C2_CLR_GEN_CALL_REG: CLR_GEN_CALL (Bitfield-Mask: 0x01) */
/* ----------------------------  I2C2_I2C2_ENABLE_REG  ---------------------------- */
#define I2C2_I2C2_ENABLE_REG_I2C_EN_Pos       (0UL)                     /*!< I2C2 I2C2_ENABLE_REG: I2C_EN (Bit 0)                        */
#define I2C2_I2C2_ENABLE_REG_I2C_EN_Msk       (0x1UL)                   /*!< I2C2 I2C2_ENABLE_REG: I2C_EN (Bitfield-Mask: 0x01)          */
#define I2C2_I2C2_ENABLE_REG_I2C_ABORT_Pos    (1UL)                     /*!< I2C2 I2C2_ENABLE_REG: I2C_ABORT (Bit 1)                     */
#define I2C2_I2C2_ENABLE_REG_I2C_ABORT_Msk    (0x2UL)                   /*!< I2C2 I2C2_ENABLE_REG: I2C_ABORT (Bitfield-Mask: 0x01)       */
#define I2C2_I2C2_ENABLE_REG_I2C_TX_CMD_BLOCK_Pos (2UL)                 /*!< I2C2 I2C2_ENABLE_REG: I2C_TX_CMD_BLOCK (Bit 2)              */
#define I2C2_I2C2_ENABLE_REG_I2C_TX_CMD_BLOCK_Msk (0x4UL)               /*!< I2C2 I2C2_ENABLE_REG: I2C_TX_CMD_BLOCK (Bitfield-Mask: 0x01) */
/* ----------------------------  I2C2_I2C2_STATUS_REG  ---------------------------- */
#define I2C2_I2C2_STATUS_REG_I2C_ACTIVITY_Pos (0UL)                     /*!< I2C2 I2C2_STATUS_REG: I2C_ACTIVITY (Bit 0)                  */
#define I2C2_I2C2_STATUS_REG_I2C_ACTIVITY_Msk (0x1UL)                   /*!< I2C2 I2C2_STATUS_REG: I2C_ACTIVITY (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_STATUS_REG_TFNF_Pos         (1UL)                     /*!< I2C2 I2C2_STATUS_REG: TFNF (Bit 1)                          */
#define I2C2_I2C2_STATUS_REG_TFNF_Msk         (0x2UL)                   /*!< I2C2 I2C2_STATUS_REG: TFNF (Bitfield-Mask: 0x01)            */
#define I2C2_I2C2_STATUS_REG_TFE_Pos          (2UL)                     /*!< I2C2 I2C2_STATUS_REG: TFE (Bit 2)                           */
#define I2C2_I2C2_STATUS_REG_TFE_Msk          (0x4UL)                   /*!< I2C2 I2C2_STATUS_REG: TFE (Bitfield-Mask: 0x01)             */
#define I2C2_I2C2_STATUS_REG_RFNE_Pos         (3UL)                     /*!< I2C2 I2C2_STATUS_REG: RFNE (Bit 3)                          */
#define I2C2_I2C2_STATUS_REG_RFNE_Msk         (0x8UL)                   /*!< I2C2 I2C2_STATUS_REG: RFNE (Bitfield-Mask: 0x01)            */
#define I2C2_I2C2_STATUS_REG_RFF_Pos          (4UL)                     /*!< I2C2 I2C2_STATUS_REG: RFF (Bit 4)                           */
#define I2C2_I2C2_STATUS_REG_RFF_Msk          (0x10UL)                  /*!< I2C2 I2C2_STATUS_REG: RFF (Bitfield-Mask: 0x01)             */
#define I2C2_I2C2_STATUS_REG_MST_ACTIVITY_Pos (5UL)                     /*!< I2C2 I2C2_STATUS_REG: MST_ACTIVITY (Bit 5)                  */
#define I2C2_I2C2_STATUS_REG_MST_ACTIVITY_Msk (0x20UL)                  /*!< I2C2 I2C2_STATUS_REG: MST_ACTIVITY (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_STATUS_REG_SLV_ACTIVITY_Pos (6UL)                     /*!< I2C2 I2C2_STATUS_REG: SLV_ACTIVITY (Bit 6)                  */
#define I2C2_I2C2_STATUS_REG_SLV_ACTIVITY_Msk (0x40UL)                  /*!< I2C2 I2C2_STATUS_REG: SLV_ACTIVITY (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Pos (7UL)           /*!< I2C2 I2C2_STATUS_REG: MST_HOLD_TX_FIFO_EMPTY (Bit 7)        */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_TX_FIFO_EMPTY_Msk (0x80UL)        /*!< I2C2 I2C2_STATUS_REG: MST_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Pos (8UL)            /*!< I2C2 I2C2_STATUS_REG: MST_HOLD_RX_FIFO_FULL (Bit 8)         */
#define I2C2_I2C2_STATUS_REG_MST_HOLD_RX_FIFO_FULL_Msk (0x100UL)        /*!< I2C2 I2C2_STATUS_REG: MST_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Pos (9UL)           /*!< I2C2 I2C2_STATUS_REG: SLV_HOLD_TX_FIFO_EMPTY (Bit 9)        */
#define I2C2_I2C2_STATUS_REG_SLV_HOLD_TX_FIFO_EMPTY_Msk (0x200UL)       /*!< I2C2 I2C2_STATUS_REG: SLV_HOLD_TX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Pos (10UL)            /*!< I2C2 I2C2_STATUS_REG: LV_HOLD_RX_FIFO_FULL (Bit 10)         */
#define I2C2_I2C2_STATUS_REG_LV_HOLD_RX_FIFO_FULL_Msk (0x400UL)         /*!< I2C2 I2C2_STATUS_REG: LV_HOLD_RX_FIFO_FULL (Bitfield-Mask: 0x01) */
/* -----------------------------  I2C2_I2C2_TXFLR_REG  ---------------------------- */
#define I2C2_I2C2_TXFLR_REG_TXFLR_Pos         (0UL)                     /*!< I2C2 I2C2_TXFLR_REG: TXFLR (Bit 0)                          */
#define I2C2_I2C2_TXFLR_REG_TXFLR_Msk         (0x3fUL)                  /*!< I2C2 I2C2_TXFLR_REG: TXFLR (Bitfield-Mask: 0x3f)            */
/* -----------------------------  I2C2_I2C2_RXFLR_REG  ---------------------------- */
#define I2C2_I2C2_RXFLR_REG_RXFLR_Pos         (0UL)                     /*!< I2C2 I2C2_RXFLR_REG: RXFLR (Bit 0)                          */
#define I2C2_I2C2_RXFLR_REG_RXFLR_Msk         (0x3fUL)                  /*!< I2C2 I2C2_RXFLR_REG: RXFLR (Bitfield-Mask: 0x3f)            */
/* ---------------------------  I2C2_I2C2_SDA_HOLD_REG  --------------------------- */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Pos (0UL)                /*!< I2C2 I2C2_SDA_HOLD_REG: I2C_SDA_TX_HOLD (Bit 0)             */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_TX_HOLD_Msk (0xffffUL)           /*!< I2C2 I2C2_SDA_HOLD_REG: I2C_SDA_TX_HOLD (Bitfield-Mask: 0xffff) */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Pos (16UL)               /*!< I2C2 I2C2_SDA_HOLD_REG: I2C_SDA_RX_HOLD (Bit 16)            */
#define I2C2_I2C2_SDA_HOLD_REG_I2C_SDA_RX_HOLD_Msk (0xff0000UL)         /*!< I2C2 I2C2_SDA_HOLD_REG: I2C_SDA_RX_HOLD (Bitfield-Mask: 0xff) */
/* ------------------------  I2C2_I2C2_TX_ABRT_SOURCE_REG  ------------------------ */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Pos (0UL)       /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_7B_ADDR_NOACK (Bit 0)    */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_7B_ADDR_NOACK_Msk (0x1UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_7B_ADDR_NOACK (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Pos (1UL)       /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10ADDR1_NOACK (Bit 1)    */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR1_NOACK_Msk (0x2UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10ADDR1_NOACK (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Pos (2UL)       /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10ADDR2_NOACK (Bit 2)    */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10ADDR2_NOACK_Msk (0x4UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10ADDR2_NOACK (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Pos (3UL)        /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_TXDATA_NOACK (Bit 3)     */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_TXDATA_NOACK_Msk (0x8UL)      /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_TXDATA_NOACK (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Pos (4UL)         /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_GCALL_NOACK (Bit 4)      */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_NOACK_Msk (0x10UL)      /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_GCALL_NOACK (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Pos (5UL)          /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_GCALL_READ (Bit 5)       */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_GCALL_READ_Msk (0x20UL)       /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_GCALL_READ (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Pos (6UL)           /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_HS_ACKDET (Bit 6)        */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_ACKDET_Msk (0x40UL)        /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_HS_ACKDET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Pos (7UL)        /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SBYTE_ACKDET (Bit 7)     */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_ACKDET_Msk (0x80UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SBYTE_ACKDET (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Pos (8UL)          /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_HS_NORSTRT (Bit 8)       */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_HS_NORSTRT_Msk (0x100UL)      /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_HS_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Pos (9UL)       /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SBYTE_NORSTRT (Bit 9)    */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SBYTE_NORSTRT_Msk (0x200UL)   /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SBYTE_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Pos (10UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10B_RD_NORSTRT (Bit 10)  */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_10B_RD_NORSTRT_Msk (0x400UL)  /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_10B_RD_NORSTRT (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Pos (11UL)         /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_MASTER_DIS (Bit 11)      */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_MASTER_DIS_Msk (0x800UL)      /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_MASTER_DIS (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ARB_LOST_Pos (12UL)                /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ARB_LOST (Bit 12)             */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ARB_LOST_Msk (0x1000UL)            /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ARB_LOST (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Pos (13UL)    /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLVFLUSH_TXFIFO (Bit 13) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVFLUSH_TXFIFO_Msk (0x2000UL) /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLVFLUSH_TXFIFO (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Pos (14UL)        /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLV_ARBLOST (Bit 14)     */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLV_ARBLOST_Msk (0x4000UL)    /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLV_ARBLOST (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Pos (15UL)         /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLVRD_INTX (Bit 15)      */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_SLVRD_INTX_Msk (0x8000UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_SLVRD_INTX (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Pos (16UL)          /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_USER_ABRT (Bit 16)       */
#define I2C2_I2C2_TX_ABRT_SOURCE_REG_ABRT_USER_ABRT_Msk (0x10000UL)     /*!< I2C2 I2C2_TX_ABRT_SOURCE_REG: ABRT_USER_ABRT (Bitfield-Mask: 0x01) */
/* ----------------------------  I2C2_I2C2_DMA_CR_REG  ---------------------------- */
#define I2C2_I2C2_DMA_CR_REG_RDMAE_Pos        (0UL)                     /*!< I2C2 I2C2_DMA_CR_REG: RDMAE (Bit 0)                         */
#define I2C2_I2C2_DMA_CR_REG_RDMAE_Msk        (0x1UL)                   /*!< I2C2 I2C2_DMA_CR_REG: RDMAE (Bitfield-Mask: 0x01)           */
#define I2C2_I2C2_DMA_CR_REG_TDMAE_Pos        (1UL)                     /*!< I2C2 I2C2_DMA_CR_REG: TDMAE (Bit 1)                         */
#define I2C2_I2C2_DMA_CR_REG_TDMAE_Msk        (0x2UL)                   /*!< I2C2 I2C2_DMA_CR_REG: TDMAE (Bitfield-Mask: 0x01)           */
/* ---------------------------  I2C2_I2C2_DMA_TDLR_REG  --------------------------- */
#define I2C2_I2C2_DMA_TDLR_REG_DMATDL_Pos     (0UL)                     /*!< I2C2 I2C2_DMA_TDLR_REG: DMATDL (Bit 0)                      */
#define I2C2_I2C2_DMA_TDLR_REG_DMATDL_Msk     (0x1fUL)                  /*!< I2C2 I2C2_DMA_TDLR_REG: DMATDL (Bitfield-Mask: 0x1f)        */
/* ---------------------------  I2C2_I2C2_DMA_RDLR_REG  --------------------------- */
#define I2C2_I2C2_DMA_RDLR_REG_DMARDL_Pos     (0UL)                     /*!< I2C2 I2C2_DMA_RDLR_REG: DMARDL (Bit 0)                      */
#define I2C2_I2C2_DMA_RDLR_REG_DMARDL_Msk     (0x1fUL)                  /*!< I2C2 I2C2_DMA_RDLR_REG: DMARDL (Bitfield-Mask: 0x1f)        */
/* ---------------------------  I2C2_I2C2_SDA_SETUP_REG  -------------------------- */
#define I2C2_I2C2_SDA_SETUP_REG_SDA_SETUP_Pos (0UL)                     /*!< I2C2 I2C2_SDA_SETUP_REG: SDA_SETUP (Bit 0)                  */
#define I2C2_I2C2_SDA_SETUP_REG_SDA_SETUP_Msk (0xffUL)                  /*!< I2C2 I2C2_SDA_SETUP_REG: SDA_SETUP (Bitfield-Mask: 0xff)    */
/* -----------------------  I2C2_I2C2_ACK_GENERAL_CALL_REG  ----------------------- */
#define I2C2_I2C2_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Pos (0UL)           /*!< I2C2 I2C2_ACK_GENERAL_CALL_REG: ACK_GEN_CALL (Bit 0)        */
#define I2C2_I2C2_ACK_GENERAL_CALL_REG_ACK_GEN_CALL_Msk (0x1UL)         /*!< I2C2 I2C2_ACK_GENERAL_CALL_REG: ACK_GEN_CALL (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_ENABLE_STATUS_REG  ------------------------ */
#define I2C2_I2C2_ENABLE_STATUS_REG_IC_EN_Pos (0UL)                     /*!< I2C2 I2C2_ENABLE_STATUS_REG: IC_EN (Bit 0)                  */
#define I2C2_I2C2_ENABLE_STATUS_REG_IC_EN_Msk (0x1UL)                   /*!< I2C2 I2C2_ENABLE_STATUS_REG: IC_EN (Bitfield-Mask: 0x01)    */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Pos (1UL)   /*!< I2C2 I2C2_ENABLE_STATUS_REG: SLV_DISABLED_WHILE_BUSY (Bit 1) */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_DISABLED_WHILE_BUSY_Msk (0x2UL) /*!< I2C2 I2C2_ENABLE_STATUS_REG: SLV_DISABLED_WHILE_BUSY (Bitfield-Mask: 0x01) */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Pos (2UL)          /*!< I2C2 I2C2_ENABLE_STATUS_REG: SLV_RX_DATA_LOST (Bit 2)       */
#define I2C2_I2C2_ENABLE_STATUS_REG_SLV_RX_DATA_LOST_Msk (0x4UL)        /*!< I2C2 I2C2_ENABLE_STATUS_REG: SLV_RX_DATA_LOST (Bitfield-Mask: 0x01) */
/* -------------------------  I2C2_I2C2_IC_FS_SPKLEN_REG  ------------------------- */
#define I2C2_I2C2_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Pos (0UL)              /*!< I2C2 I2C2_IC_FS_SPKLEN_REG: I2C_FS_SPKLEN (Bit 0)           */
#define I2C2_I2C2_IC_FS_SPKLEN_REG_I2C_FS_SPKLEN_Msk (0xffUL)           /*!< I2C2 I2C2_IC_FS_SPKLEN_REG: I2C_FS_SPKLEN (Bitfield-Mask: 0xff) */
/* -------------------------  I2C2_I2C2_IC_HS_SPKLEN_REG  ------------------------- */
#define I2C2_I2C2_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Pos (0UL)              /*!< I2C2 I2C2_IC_HS_SPKLEN_REG: I2C_HS_SPKLEN (Bit 0)           */
#define I2C2_I2C2_IC_HS_SPKLEN_REG_I2C_HS_SPKLEN_Msk (0xffUL)           /*!< I2C2 I2C2_IC_HS_SPKLEN_REG: I2C_HS_SPKLEN (Bitfield-Mask: 0xff) */
/* --------------------------  I2C2_I2C2_COMP_PARAM1_REG  ------------------------- */
#define I2C2_I2C2_COMP_PARAM1_REG_IC_COMP_PARAM1_Pos (0UL)              /*!< I2C2 I2C2_COMP_PARAM1_REG: IC_COMP_PARAM1 (Bit 0)           */
#define I2C2_I2C2_COMP_PARAM1_REG_IC_COMP_PARAM1_Msk (0xffffffffUL)     /*!< I2C2 I2C2_COMP_PARAM1_REG: IC_COMP_PARAM1 (Bitfield-Mask: 0xffffffff) */
/* -------------------------  I2C2_I2C2_COMP_VERSION_REG  ------------------------- */
#define I2C2_I2C2_COMP_VERSION_REG_IC_COMP_VERSION_Pos (0UL)            /*!< I2C2 I2C2_COMP_VERSION_REG: IC_COMP_VERSION (Bit 0)         */
#define I2C2_I2C2_COMP_VERSION_REG_IC_COMP_VERSION_Msk (0xffffffffUL)   /*!< I2C2 I2C2_COMP_VERSION_REG: IC_COMP_VERSION (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  I2C2_I2C2_COMP_TYPE_REG  -------------------------- */
#define I2C2_I2C2_COMP_TYPE_REG_IC_COMP_TYPE_Pos (0UL)                  /*!< I2C2 I2C2_COMP_TYPE_REG: IC_COMP_TYPE (Bit 0)               */
#define I2C2_I2C2_COMP_TYPE_REG_IC_COMP_TYPE_Msk (0xffffffffUL)         /*!< I2C2 I2C2_COMP_TYPE_REG: IC_COMP_TYPE (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'LCDC' Position & Mask         ================ */
/* ================================================================================ */
/* -----------------------------  LCDC_LCDC_MODE_REG  ----------------------------- */
#define LCDC_LCDC_MODE_REG_LCDC_TMODE_Pos     (0UL)                     /*!< LCDC LCDC_MODE_REG: LCDC_TMODE (Bit 0)                      */
#define LCDC_LCDC_MODE_REG_LCDC_TMODE_Msk     (0x1UL)                   /*!< LCDC LCDC_MODE_REG: LCDC_TMODE (Bitfield-Mask: 0x01)        */
#define LCDC_LCDC_MODE_REG_LCDC_DSCAN_Pos     (1UL)                     /*!< LCDC LCDC_MODE_REG: LCDC_DSCAN (Bit 1)                      */
#define LCDC_LCDC_MODE_REG_LCDC_DSCAN_Msk     (0x2UL)                   /*!< LCDC LCDC_MODE_REG: LCDC_DSCAN (Bitfield-Mask: 0x01)        */
#define LCDC_LCDC_MODE_REG_LCDC_FORM_OFF_Pos  (3UL)                     /*!< LCDC LCDC_MODE_REG: LCDC_FORM_OFF (Bit 3)                   */
#define LCDC_LCDC_MODE_REG_LCDC_FORM_OFF_Msk  (0x8UL)                   /*!< LCDC LCDC_MODE_REG: LCDC_FORM_OFF (Bitfield-Mask: 0x01)     */
#define LCDC_LCDC_MODE_REG_LCDC_MIPI_OFF_Pos  (4UL)                     /*!< LCDC LCDC_MODE_REG: LCDC_MIPI_OFF (Bit 4)                   */
#define LCDC_LCDC_MODE_REG_LCDC_MIPI_OFF_Msk  (0x10UL)                  /*!< LCDC LCDC_MODE_REG: LCDC_MIPI_OFF (Bitfield-Mask: 0x01)     */
#define LCDC_LCDC_MODE_REG_LCDC_OUT_MODE_Pos  (5UL)                     /*!< LCDC LCDC_MODE_REG: LCDC_OUT_MODE (Bit 5)                   */
#define LCDC_LCDC_MODE_REG_LCDC_OUT_MODE_Msk  (0x1e0UL)                 /*!< LCDC LCDC_MODE_REG: LCDC_OUT_MODE (Bitfield-Mask: 0x0f)     */
#define LCDC_LCDC_MODE_REG_LCDC_PIXCLKOUT_SEL_Pos (11UL)                /*!< LCDC LCDC_MODE_REG: LCDC_PIXCLKOUT_SEL (Bit 11)             */
#define LCDC_LCDC_MODE_REG_LCDC_PIXCLKOUT_SEL_Msk (0x800UL)             /*!< LCDC LCDC_MODE_REG: LCDC_PIXCLKOUT_SEL (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_MODE_REG_LCDC_SFRAME_UPD_Pos (17UL)                   /*!< LCDC LCDC_MODE_REG: LCDC_SFRAME_UPD (Bit 17)                */
#define LCDC_LCDC_MODE_REG_LCDC_SFRAME_UPD_Msk (0x20000UL)              /*!< LCDC LCDC_MODE_REG: LCDC_SFRAME_UPD (Bitfield-Mask: 0x01)   */
#define LCDC_LCDC_MODE_REG_LCDC_FORCE_BLANK_Pos (19UL)                  /*!< LCDC LCDC_MODE_REG: LCDC_FORCE_BLANK (Bit 19)               */
#define LCDC_LCDC_MODE_REG_LCDC_FORCE_BLANK_Msk (0x80000UL)             /*!< LCDC LCDC_MODE_REG: LCDC_FORCE_BLANK (Bitfield-Mask: 0x01)  */
#define LCDC_LCDC_MODE_REG_LCDC_PIXCLKOUT_POL_Pos (22UL)                /*!< LCDC LCDC_MODE_REG: LCDC_PIXCLKOUT_POL (Bit 22)             */
#define LCDC_LCDC_MODE_REG_LCDC_PIXCLKOUT_POL_Msk (0x400000UL)          /*!< LCDC LCDC_MODE_REG: LCDC_PIXCLKOUT_POL (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_MODE_REG_LCDC_VSYNC_SCPL_Pos (23UL)                   /*!< LCDC LCDC_MODE_REG: LCDC_VSYNC_SCPL (Bit 23)                */
#define LCDC_LCDC_MODE_REG_LCDC_VSYNC_SCPL_Msk (0x800000UL)             /*!< LCDC LCDC_MODE_REG: LCDC_VSYNC_SCPL (Bitfield-Mask: 0x01)   */
#define LCDC_LCDC_MODE_REG_LCDC_DE_POL_Pos    (26UL)                    /*!< LCDC LCDC_MODE_REG: LCDC_DE_POL (Bit 26)                    */
#define LCDC_LCDC_MODE_REG_LCDC_DE_POL_Msk    (0x4000000UL)             /*!< LCDC LCDC_MODE_REG: LCDC_DE_POL (Bitfield-Mask: 0x01)       */
#define LCDC_LCDC_MODE_REG_LCDC_HSYNC_POL_Pos (27UL)                    /*!< LCDC LCDC_MODE_REG: LCDC_HSYNC_POL (Bit 27)                 */
#define LCDC_LCDC_MODE_REG_LCDC_HSYNC_POL_Msk (0x8000000UL)             /*!< LCDC LCDC_MODE_REG: LCDC_HSYNC_POL (Bitfield-Mask: 0x01)    */
#define LCDC_LCDC_MODE_REG_LCDC_VSYNC_POL_Pos (28UL)                    /*!< LCDC LCDC_MODE_REG: LCDC_VSYNC_POL (Bit 28)                 */
#define LCDC_LCDC_MODE_REG_LCDC_VSYNC_POL_Msk (0x10000000UL)            /*!< LCDC LCDC_MODE_REG: LCDC_VSYNC_POL (Bitfield-Mask: 0x01)    */
#define LCDC_LCDC_MODE_REG_LCDC_MODE_EN_Pos   (31UL)                    /*!< LCDC LCDC_MODE_REG: LCDC_MODE_EN (Bit 31)                   */
#define LCDC_LCDC_MODE_REG_LCDC_MODE_EN_Msk   (0x80000000UL)            /*!< LCDC LCDC_MODE_REG: LCDC_MODE_EN (Bitfield-Mask: 0x01)      */
/* ----------------------------  LCDC_LCDC_CLKCTRL_REG  --------------------------- */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_CLK_DIV_Pos (0UL)                    /*!< LCDC LCDC_CLKCTRL_REG: LCDC_CLK_DIV (Bit 0)                 */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_CLK_DIV_Msk (0x3fUL)                 /*!< LCDC LCDC_CLKCTRL_REG: LCDC_CLK_DIV (Bitfield-Mask: 0x3f)   */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_DMA_HOLD_Pos (8UL)                   /*!< LCDC LCDC_CLKCTRL_REG: LCDC_DMA_HOLD (Bit 8)                */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_DMA_HOLD_Msk (0x3f00UL)              /*!< LCDC LCDC_CLKCTRL_REG: LCDC_DMA_HOLD (Bitfield-Mask: 0x3f)  */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_SEC_CLK_DIV_Pos (27UL)               /*!< LCDC LCDC_CLKCTRL_REG: LCDC_SEC_CLK_DIV (Bit 27)            */
#define LCDC_LCDC_CLKCTRL_REG_LCDC_SEC_CLK_DIV_Msk (0xf8000000UL)       /*!< LCDC LCDC_CLKCTRL_REG: LCDC_SEC_CLK_DIV (Bitfield-Mask: 0x1f) */
/* ----------------------------  LCDC_LCDC_BGCOLOR_REG  --------------------------- */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_ALPHA_Pos (0UL)                   /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_ALPHA (Bit 0)                */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_ALPHA_Msk (0xffUL)                /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_ALPHA (Bitfield-Mask: 0xff)  */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_BLUE_Pos (8UL)                    /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_BLUE (Bit 8)                 */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_BLUE_Msk (0xff00UL)               /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_BLUE (Bitfield-Mask: 0xff)   */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_GREEN_Pos (16UL)                  /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_GREEN (Bit 16)               */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_GREEN_Msk (0xff0000UL)            /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_GREEN (Bitfield-Mask: 0xff)  */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_RED_Pos (24UL)                    /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_RED (Bit 24)                 */
#define LCDC_LCDC_BGCOLOR_REG_LCDC_BG_RED_Msk (0xff000000UL)            /*!< LCDC LCDC_BGCOLOR_REG: LCDC_BG_RED (Bitfield-Mask: 0xff)    */
/* -----------------------------  LCDC_LCDC_RESXY_REG  ---------------------------- */
#define LCDC_LCDC_RESXY_REG_LCDC_RES_Y_Pos    (0UL)                     /*!< LCDC LCDC_RESXY_REG: LCDC_RES_Y (Bit 0)                     */
#define LCDC_LCDC_RESXY_REG_LCDC_RES_Y_Msk    (0xffffUL)                /*!< LCDC LCDC_RESXY_REG: LCDC_RES_Y (Bitfield-Mask: 0xffff)     */
#define LCDC_LCDC_RESXY_REG_LCDC_RES_X_Pos    (16UL)                    /*!< LCDC LCDC_RESXY_REG: LCDC_RES_X (Bit 16)                    */
#define LCDC_LCDC_RESXY_REG_LCDC_RES_X_Msk    (0xffff0000UL)            /*!< LCDC LCDC_RESXY_REG: LCDC_RES_X (Bitfield-Mask: 0xffff)     */
/* -------------------------  LCDC_LCDC_FRONTPORCHXY_REG  ------------------------- */
#define LCDC_LCDC_FRONTPORCHXY_REG_LCDC_FPORCH_Y_Pos (0UL)              /*!< LCDC LCDC_FRONTPORCHXY_REG: LCDC_FPORCH_Y (Bit 0)           */
#define LCDC_LCDC_FRONTPORCHXY_REG_LCDC_FPORCH_Y_Msk (0xffffUL)         /*!< LCDC LCDC_FRONTPORCHXY_REG: LCDC_FPORCH_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_FRONTPORCHXY_REG_LCDC_FPORCH_X_Pos (16UL)             /*!< LCDC LCDC_FRONTPORCHXY_REG: LCDC_FPORCH_X (Bit 16)          */
#define LCDC_LCDC_FRONTPORCHXY_REG_LCDC_FPORCH_X_Msk (0xffff0000UL)     /*!< LCDC LCDC_FRONTPORCHXY_REG: LCDC_FPORCH_X (Bitfield-Mask: 0xffff) */
/* --------------------------  LCDC_LCDC_BLANKINGXY_REG  -------------------------- */
#define LCDC_LCDC_BLANKINGXY_REG_LCDC_BLANKING_Y_Pos (0UL)              /*!< LCDC LCDC_BLANKINGXY_REG: LCDC_BLANKING_Y (Bit 0)           */
#define LCDC_LCDC_BLANKINGXY_REG_LCDC_BLANKING_Y_Msk (0xffffUL)         /*!< LCDC LCDC_BLANKINGXY_REG: LCDC_BLANKING_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_BLANKINGXY_REG_LCDC_BLANKING_X_Pos (16UL)             /*!< LCDC LCDC_BLANKINGXY_REG: LCDC_BLANKING_X (Bit 16)          */
#define LCDC_LCDC_BLANKINGXY_REG_LCDC_BLANKING_X_Msk (0xffff0000UL)     /*!< LCDC LCDC_BLANKINGXY_REG: LCDC_BLANKING_X (Bitfield-Mask: 0xffff) */
/* --------------------------  LCDC_LCDC_BACKPORCHXY_REG  ------------------------- */
#define LCDC_LCDC_BACKPORCHXY_REG_LCDC_BPORCH_Y_Pos (0UL)               /*!< LCDC LCDC_BACKPORCHXY_REG: LCDC_BPORCH_Y (Bit 0)            */
#define LCDC_LCDC_BACKPORCHXY_REG_LCDC_BPORCH_Y_Msk (0xffffUL)          /*!< LCDC LCDC_BACKPORCHXY_REG: LCDC_BPORCH_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_BACKPORCHXY_REG_LCDC_BPORCH_X_Pos (16UL)              /*!< LCDC LCDC_BACKPORCHXY_REG: LCDC_BPORCH_X (Bit 16)           */
#define LCDC_LCDC_BACKPORCHXY_REG_LCDC_BPORCH_X_Msk (0xffff0000UL)      /*!< LCDC LCDC_BACKPORCHXY_REG: LCDC_BPORCH_X (Bitfield-Mask: 0xffff) */
/* ---------------------------  LCDC_LCDC_DBIB_CFG_REG  --------------------------- */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_FMT_Pos (0UL)                  /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_FMT (Bit 0)               */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_FMT_Msk (0x1fUL)               /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_FMT (Bitfield-Mask: 0x1f) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_JDI_SOFT_RST_Pos (13UL)        /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_JDI_SOFT_RST (Bit 13)     */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_JDI_SOFT_RST_Msk (0x2000UL)    /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_JDI_SOFT_RST (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_JDI_INV_PIX_Pos (14UL)         /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_JDI_INV_PIX (Bit 14)      */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_JDI_INV_PIX_Msk (0x4000UL)     /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_JDI_INV_PIX (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_INV_DATA_Pos (15UL)            /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_INV_DATA (Bit 15)         */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_INV_DATA_Msk (0x8000UL)        /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_INV_DATA (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_INV_ADDR_Pos (16UL)        /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_INV_ADDR (Bit 16)     */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_INV_ADDR_Msk (0x10000UL)   /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_INV_ADDR (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_HOLD_Pos (17UL)            /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_HOLD (Bit 17)         */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_HOLD_Msk (0x20000UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_HOLD (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_JDI_Pos (18UL)             /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_JDI (Bit 18)          */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_JDI_Msk (0x40000UL)        /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_JDI (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_CPOL_Pos (19UL)            /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_CPOL (Bit 19)         */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_CPOL_Msk (0x80000UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_CPOL (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_CPHA_Pos (20UL)            /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_CPHA (Bit 20)         */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_CPHA_Msk (0x100000UL)      /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_CPHA (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI4_EN_Pos (22UL)             /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI4_EN (Bit 22)          */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI4_EN_Msk (0x400000UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI4_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI3_EN_Pos (23UL)             /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI3_EN (Bit 23)          */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI3_EN_Msk (0x800000UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI3_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_DMA_EN_Pos (24UL)              /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_DMA_EN (Bit 24)           */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_DMA_EN_Msk (0x1000000UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_DMA_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_RESX_Pos (25UL)                /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_RESX (Bit 25)             */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_RESX_Msk (0x2000000UL)         /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_RESX (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_PAD_Pos (28UL)             /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_PAD (Bit 28)          */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_SPI_PAD_Msk (0x10000000UL)     /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_SPI_PAD (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_CSX_FORCE_VAL_Pos (29UL)       /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_CSX_FORCE_VAL (Bit 29)    */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_CSX_FORCE_VAL_Msk (0x20000000UL) /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_CSX_FORCE_VAL (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_CSX_FORCE_Pos (30UL)           /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_CSX_FORCE (Bit 30)        */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_CSX_FORCE_Msk (0x40000000UL)   /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_CSX_FORCE (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_TE_DIS_Pos (31UL)              /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_TE_DIS (Bit 31)           */
#define LCDC_LCDC_DBIB_CFG_REG_LCDC_DBIB_TE_DIS_Msk (0x80000000UL)      /*!< LCDC LCDC_DBIB_CFG_REG: LCDC_DBIB_TE_DIS (Bitfield-Mask: 0x01) */
/* -----------------------------  LCDC_LCDC_GPIO_REG  ----------------------------- */
#define LCDC_LCDC_GPIO_REG_LCDC_PARIF_SEL_Pos (0UL)                     /*!< LCDC LCDC_GPIO_REG: LCDC_PARIF_SEL (Bit 0)                  */
#define LCDC_LCDC_GPIO_REG_LCDC_PARIF_SEL_Msk (0x1UL)                   /*!< LCDC LCDC_GPIO_REG: LCDC_PARIF_SEL (Bitfield-Mask: 0x01)    */
#define LCDC_LCDC_GPIO_REG_LCDC_TE_INV_Pos    (1UL)                     /*!< LCDC LCDC_GPIO_REG: LCDC_TE_INV (Bit 1)                     */
#define LCDC_LCDC_GPIO_REG_LCDC_TE_INV_Msk    (0x2UL)                   /*!< LCDC LCDC_GPIO_REG: LCDC_TE_INV (Bitfield-Mask: 0x01)       */
/* --------------------------  LCDC_LCDC_LAYER0_MODE_REG  ------------------------- */
#define LCDC_LCDC_LAYER0_MODE_REG_LCDC_L0_COLOUR_MODE_Pos (0UL)         /*!< LCDC LCDC_LAYER0_MODE_REG: LCDC_L0_COLOUR_MODE (Bit 0)      */
#define LCDC_LCDC_LAYER0_MODE_REG_LCDC_L0_COLOUR_MODE_Msk (0x1fUL)      /*!< LCDC LCDC_LAYER0_MODE_REG: LCDC_L0_COLOUR_MODE (Bitfield-Mask: 0x1f) */
#define LCDC_LCDC_LAYER0_MODE_REG_LCDC_L0_EN_Pos (31UL)                 /*!< LCDC LCDC_LAYER0_MODE_REG: LCDC_L0_EN (Bit 31)              */
#define LCDC_LCDC_LAYER0_MODE_REG_LCDC_L0_EN_Msk (0x80000000UL)         /*!< LCDC LCDC_LAYER0_MODE_REG: LCDC_L0_EN (Bitfield-Mask: 0x01) */
/* ------------------------  LCDC_LCDC_LAYER0_STARTXY_REG  ------------------------ */
#define LCDC_LCDC_LAYER0_STARTXY_REG_LCDC_L0_START_Y_Pos (0UL)          /*!< LCDC LCDC_LAYER0_STARTXY_REG: LCDC_L0_START_Y (Bit 0)       */
#define LCDC_LCDC_LAYER0_STARTXY_REG_LCDC_L0_START_Y_Msk (0xffffUL)     /*!< LCDC LCDC_LAYER0_STARTXY_REG: LCDC_L0_START_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_LAYER0_STARTXY_REG_LCDC_L0_START_X_Pos (16UL)         /*!< LCDC LCDC_LAYER0_STARTXY_REG: LCDC_L0_START_X (Bit 16)      */
#define LCDC_LCDC_LAYER0_STARTXY_REG_LCDC_L0_START_X_Msk (0xffff0000UL) /*!< LCDC LCDC_LAYER0_STARTXY_REG: LCDC_L0_START_X (Bitfield-Mask: 0xffff) */
/* -------------------------  LCDC_LCDC_LAYER0_SIZEXY_REG  ------------------------ */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_LCDC_L0_SIZE_Y_Pos (0UL)            /*!< LCDC LCDC_LAYER0_SIZEXY_REG: LCDC_L0_SIZE_Y (Bit 0)         */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_LCDC_L0_SIZE_Y_Msk (0xffffUL)       /*!< LCDC LCDC_LAYER0_SIZEXY_REG: LCDC_L0_SIZE_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_LCDC_L0_SIZE_X_Pos (16UL)           /*!< LCDC LCDC_LAYER0_SIZEXY_REG: LCDC_L0_SIZE_X (Bit 16)        */
#define LCDC_LCDC_LAYER0_SIZEXY_REG_LCDC_L0_SIZE_X_Msk (0xffff0000UL)   /*!< LCDC LCDC_LAYER0_SIZEXY_REG: LCDC_L0_SIZE_X (Bitfield-Mask: 0xffff) */
/* ------------------------  LCDC_LCDC_LAYER0_BASEADDR_REG  ----------------------- */
#define LCDC_LCDC_LAYER0_BASEADDR_REG_LCDC_L0_FB_ADDR_Pos (0UL)         /*!< LCDC LCDC_LAYER0_BASEADDR_REG: LCDC_L0_FB_ADDR (Bit 0)      */
#define LCDC_LCDC_LAYER0_BASEADDR_REG_LCDC_L0_FB_ADDR_Msk (0xffffffffUL) /*!< LCDC LCDC_LAYER0_BASEADDR_REG: LCDC_L0_FB_ADDR (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_LAYER0_STRIDE_REG  ------------------------ */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_STRIDE_Pos (0UL)            /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_STRIDE (Bit 0)         */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_STRIDE_Msk (0xffffUL)       /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_STRIDE (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_BURST_LEN_Pos (16UL)        /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_BURST_LEN (Bit 16)     */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_BURST_LEN_Msk (0x70000UL)   /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_BURST_LEN (Bitfield-Mask: 0x07) */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_FIFO_THR_Pos (19UL)         /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_FIFO_THR (Bit 19)      */
#define LCDC_LCDC_LAYER0_STRIDE_REG_LCDC_L0_FIFO_THR_Msk (0x180000UL)   /*!< LCDC LCDC_LAYER0_STRIDE_REG: LCDC_L0_FIFO_THR (Bitfield-Mask: 0x03) */
/* -------------------------  LCDC_LCDC_LAYER0_RESXY_REG  ------------------------- */
#define LCDC_LCDC_LAYER0_RESXY_REG_LCDC_L0_RES_Y_Pos (0UL)              /*!< LCDC LCDC_LAYER0_RESXY_REG: LCDC_L0_RES_Y (Bit 0)           */
#define LCDC_LCDC_LAYER0_RESXY_REG_LCDC_L0_RES_Y_Msk (0xffffUL)         /*!< LCDC LCDC_LAYER0_RESXY_REG: LCDC_L0_RES_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_LAYER0_RESXY_REG_LCDC_L0_RES_X_Pos (16UL)             /*!< LCDC LCDC_LAYER0_RESXY_REG: LCDC_L0_RES_X (Bit 16)          */
#define LCDC_LCDC_LAYER0_RESXY_REG_LCDC_L0_RES_X_Msk (0xffff0000UL)     /*!< LCDC LCDC_LAYER0_RESXY_REG: LCDC_L0_RES_X (Bitfield-Mask: 0xffff) */
/* ---------------------------  LCDC_LCDC_JDI_RESXY_REG  -------------------------- */
#define LCDC_LCDC_JDI_RESXY_REG_LCDC_JDI_RES_Y_Pos (0UL)                /*!< LCDC LCDC_JDI_RESXY_REG: LCDC_JDI_RES_Y (Bit 0)             */
#define LCDC_LCDC_JDI_RESXY_REG_LCDC_JDI_RES_Y_Msk (0xffffUL)           /*!< LCDC LCDC_JDI_RESXY_REG: LCDC_JDI_RES_Y (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_JDI_RESXY_REG_LCDC_JDI_RES_X_Pos (16UL)               /*!< LCDC LCDC_JDI_RESXY_REG: LCDC_JDI_RES_X (Bit 16)            */
#define LCDC_LCDC_JDI_RESXY_REG_LCDC_JDI_RES_X_Msk (0xffff0000UL)       /*!< LCDC LCDC_JDI_RESXY_REG: LCDC_JDI_RES_X (Bitfield-Mask: 0xffff) */
/* -----------------------  LCDC_LCDC_JDI_FBX_BLANKING_REG  ----------------------- */
#define LCDC_LCDC_JDI_FBX_BLANKING_REG_LCDC_JDI_BXBLANKING_Pos (0UL)    /*!< LCDC LCDC_JDI_FBX_BLANKING_REG: LCDC_JDI_BXBLANKING (Bit 0) */
#define LCDC_LCDC_JDI_FBX_BLANKING_REG_LCDC_JDI_BXBLANKING_Msk (0xffffUL) /*!< LCDC LCDC_JDI_FBX_BLANKING_REG: LCDC_JDI_BXBLANKING (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_JDI_FBX_BLANKING_REG_LCDC_JDI_FXBLANKING_Pos (16UL)   /*!< LCDC LCDC_JDI_FBX_BLANKING_REG: LCDC_JDI_FXBLANKING (Bit 16) */
#define LCDC_LCDC_JDI_FBX_BLANKING_REG_LCDC_JDI_FXBLANKING_Msk (0xffff0000UL) /*!< LCDC LCDC_JDI_FBX_BLANKING_REG: LCDC_JDI_FXBLANKING (Bitfield-Mask: 0xffff) */
/* -----------------------  LCDC_LCDC_JDI_FBY_BLANKING_REG  ----------------------- */
#define LCDC_LCDC_JDI_FBY_BLANKING_REG_LCDC_JDI_BYBLANKING_Pos (0UL)    /*!< LCDC LCDC_JDI_FBY_BLANKING_REG: LCDC_JDI_BYBLANKING (Bit 0) */
#define LCDC_LCDC_JDI_FBY_BLANKING_REG_LCDC_JDI_BYBLANKING_Msk (0xffffUL) /*!< LCDC LCDC_JDI_FBY_BLANKING_REG: LCDC_JDI_BYBLANKING (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_JDI_FBY_BLANKING_REG_LCDC_JDI_FYBLANKING_Pos (16UL)   /*!< LCDC LCDC_JDI_FBY_BLANKING_REG: LCDC_JDI_FYBLANKING (Bit 16) */
#define LCDC_LCDC_JDI_FBY_BLANKING_REG_LCDC_JDI_FYBLANKING_Msk (0xffff0000UL) /*!< LCDC LCDC_JDI_FBY_BLANKING_REG: LCDC_JDI_FYBLANKING (Bitfield-Mask: 0xffff) */
/* -------------------------  LCDC_LCDC_JDI_HCK_WIDTH_REG  ------------------------ */
#define LCDC_LCDC_JDI_HCK_WIDTH_REG_LCDC_JDI_HCK_WIDTH_Pos (0UL)        /*!< LCDC LCDC_JDI_HCK_WIDTH_REG: LCDC_JDI_HCK_WIDTH (Bit 0)     */
#define LCDC_LCDC_JDI_HCK_WIDTH_REG_LCDC_JDI_HCK_WIDTH_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_HCK_WIDTH_REG: LCDC_JDI_HCK_WIDTH (Bitfield-Mask: 0xffffffff) */
/* ------------------------  LCDC_LCDC_JDI_XRST_WIDTH_REG  ------------------------ */
#define LCDC_LCDC_JDI_XRST_WIDTH_REG_LCDC_JDI_XRST_WIDTH_Pos (0UL)      /*!< LCDC LCDC_JDI_XRST_WIDTH_REG: LCDC_JDI_XRST_WIDTH (Bit 0)   */
#define LCDC_LCDC_JDI_XRST_WIDTH_REG_LCDC_JDI_XRST_WIDTH_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_XRST_WIDTH_REG: LCDC_JDI_XRST_WIDTH (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_JDI_VST_DELAY_REG  ------------------------ */
#define LCDC_LCDC_JDI_VST_DELAY_REG_LCDC_JDI_VST_DELAY_Pos (0UL)        /*!< LCDC LCDC_JDI_VST_DELAY_REG: LCDC_JDI_VST_DELAY (Bit 0)     */
#define LCDC_LCDC_JDI_VST_DELAY_REG_LCDC_JDI_VST_DELAY_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_VST_DELAY_REG: LCDC_JDI_VST_DELAY (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_JDI_VST_WIDTH_REG  ------------------------ */
#define LCDC_LCDC_JDI_VST_WIDTH_REG_LCDC_JDI_VST_WIDTH_Pos (0UL)        /*!< LCDC LCDC_JDI_VST_WIDTH_REG: LCDC_JDI_VST_WIDTH (Bit 0)     */
#define LCDC_LCDC_JDI_VST_WIDTH_REG_LCDC_JDI_VST_WIDTH_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_VST_WIDTH_REG: LCDC_JDI_VST_WIDTH (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_JDI_VCK_DELAY_REG  ------------------------ */
#define LCDC_LCDC_JDI_VCK_DELAY_REG_LCDC_JDI_VCK_DELAY_Pos (0UL)        /*!< LCDC LCDC_JDI_VCK_DELAY_REG: LCDC_JDI_VCK_DELAY (Bit 0)     */
#define LCDC_LCDC_JDI_VCK_DELAY_REG_LCDC_JDI_VCK_DELAY_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_VCK_DELAY_REG: LCDC_JDI_VCK_DELAY (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_JDI_HST_DELAY_REG  ------------------------ */
#define LCDC_LCDC_JDI_HST_DELAY_REG_LCDC_JDI_HST_DELAY_Pos (0UL)        /*!< LCDC LCDC_JDI_HST_DELAY_REG: LCDC_JDI_HST_DELAY (Bit 0)     */
#define LCDC_LCDC_JDI_HST_DELAY_REG_LCDC_JDI_HST_DELAY_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_HST_DELAY_REG: LCDC_JDI_HST_DELAY (Bitfield-Mask: 0xffffffff) */
/* -------------------------  LCDC_LCDC_JDI_HST_WIDTH_REG  ------------------------ */
#define LCDC_LCDC_JDI_HST_WIDTH_REG_LCDC_JDI_HST_WIDTH_Pos (0UL)        /*!< LCDC LCDC_JDI_HST_WIDTH_REG: LCDC_JDI_HST_WIDTH (Bit 0)     */
#define LCDC_LCDC_JDI_HST_WIDTH_REG_LCDC_JDI_HST_WIDTH_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_HST_WIDTH_REG: LCDC_JDI_HST_WIDTH (Bitfield-Mask: 0xffffffff) */
/* ----------------------  LCDC_LCDC_JDI_ENB_START_HLINE_REG  --------------------- */
#define LCDC_LCDC_JDI_ENB_START_HLINE_REG_LCDC_JDI_ENB_START_HLINE_Pos (0UL) /*!< LCDC LCDC_JDI_ENB_START_HLINE_REG: LCDC_JDI_ENB_START_HLINE (Bit 0) */
#define LCDC_LCDC_JDI_ENB_START_HLINE_REG_LCDC_JDI_ENB_START_HLINE_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_ENB_START_HLINE_REG: LCDC_JDI_ENB_START_HLINE (Bitfield-Mask: 0xffffffff) */
/* -----------------------  LCDC_LCDC_JDI_ENB_END_HLINE_REG  ---------------------- */
#define LCDC_LCDC_JDI_ENB_END_HLINE_REG_LCDC_JDI_ENB_END_HLINE_Pos (0UL) /*!< LCDC LCDC_JDI_ENB_END_HLINE_REG: LCDC_JDI_ENB_END_HLINE (Bit 0) */
#define LCDC_LCDC_JDI_ENB_END_HLINE_REG_LCDC_JDI_ENB_END_HLINE_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_ENB_END_HLINE_REG: LCDC_JDI_ENB_END_HLINE (Bitfield-Mask: 0xffffffff) */
/* -----------------------  LCDC_LCDC_JDI_ENB_START_CLK_REG  ---------------------- */
#define LCDC_LCDC_JDI_ENB_START_CLK_REG_LCDC_JDI_ENB_START_CLK_Pos (0UL) /*!< LCDC LCDC_JDI_ENB_START_CLK_REG: LCDC_JDI_ENB_START_CLK (Bit 0) */
#define LCDC_LCDC_JDI_ENB_START_CLK_REG_LCDC_JDI_ENB_START_CLK_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_ENB_START_CLK_REG: LCDC_JDI_ENB_START_CLK (Bitfield-Mask: 0xffffffff) */
/* -----------------------  LCDC_LCDC_JDI_ENB_WIDTH_CLK_REG  ---------------------- */
#define LCDC_LCDC_JDI_ENB_WIDTH_CLK_REG_LCDC_JDI_ENB_WIDTH_CLK_Pos (0UL) /*!< LCDC LCDC_JDI_ENB_WIDTH_CLK_REG: LCDC_JDI_ENB_WIDTH_CLK (Bit 0) */
#define LCDC_LCDC_JDI_ENB_WIDTH_CLK_REG_LCDC_JDI_ENB_WIDTH_CLK_Msk (0xffffffffUL) /*!< LCDC LCDC_JDI_ENB_WIDTH_CLK_REG: LCDC_JDI_ENB_WIDTH_CLK (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  LCDC_LCDC_DBIB_CMD_REG  --------------------------- */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_VAL_Pos (0UL)              /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_VAL (Bit 0)           */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_VAL_Msk (0xffffUL)         /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_VAL (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_STORE_Pos (27UL)           /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_STORE (Bit 27)        */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_STORE_Msk (0x8000000UL)    /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_STORE (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_SEND_Pos (30UL)            /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_SEND (Bit 30)         */
#define LCDC_LCDC_DBIB_CMD_REG_LCDC_DBIB_CMD_SEND_Msk (0x40000000UL)    /*!< LCDC LCDC_DBIB_CMD_REG: LCDC_DBIB_CMD_SEND (Bitfield-Mask: 0x01) */
/* -----------------------------  LCDC_LCDC_IDREG_REG  ---------------------------- */
#define LCDC_LCDC_IDREG_REG_LCDC_ID_Pos       (0UL)                     /*!< LCDC LCDC_IDREG_REG: LCDC_ID (Bit 0)                        */
#define LCDC_LCDC_IDREG_REG_LCDC_ID_Msk       (0xffffffffUL)            /*!< LCDC LCDC_IDREG_REG: LCDC_ID (Bitfield-Mask: 0xffffffff)    */
/* ---------------------------  LCDC_LCDC_INTERRUPT_REG  -------------------------- */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_VSYNC_IRQ_EN_Pos (0UL)             /*!< LCDC LCDC_INTERRUPT_REG: LCDC_VSYNC_IRQ_EN (Bit 0)          */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_VSYNC_IRQ_EN_Msk (0x1UL)           /*!< LCDC LCDC_INTERRUPT_REG: LCDC_VSYNC_IRQ_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_HSYNC_IRQ_EN_Pos (1UL)             /*!< LCDC LCDC_INTERRUPT_REG: LCDC_HSYNC_IRQ_EN (Bit 1)          */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_HSYNC_IRQ_EN_Msk (0x2UL)           /*!< LCDC LCDC_INTERRUPT_REG: LCDC_HSYNC_IRQ_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_TE_IRQ_EN_Pos (3UL)                /*!< LCDC LCDC_INTERRUPT_REG: LCDC_TE_IRQ_EN (Bit 3)             */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_TE_IRQ_EN_Msk (0x8UL)              /*!< LCDC LCDC_INTERRUPT_REG: LCDC_TE_IRQ_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_FRAME_END_IRQ_EN_Pos (5UL)         /*!< LCDC LCDC_INTERRUPT_REG: LCDC_FRAME_END_IRQ_EN (Bit 5)      */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_FRAME_END_IRQ_EN_Msk (0x20UL)      /*!< LCDC LCDC_INTERRUPT_REG: LCDC_FRAME_END_IRQ_EN (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_IRQ_TRIGGER_SEL_Pos (31UL)         /*!< LCDC LCDC_INTERRUPT_REG: LCDC_IRQ_TRIGGER_SEL (Bit 31)      */
#define LCDC_LCDC_INTERRUPT_REG_LCDC_IRQ_TRIGGER_SEL_Msk (0x80000000UL) /*!< LCDC LCDC_INTERRUPT_REG: LCDC_IRQ_TRIGGER_SEL (Bitfield-Mask: 0x01) */
/* ----------------------------  LCDC_LCDC_STATUS_REG  ---------------------------- */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_ACTIVE_Pos (0UL)                 /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_ACTIVE (Bit 0)              */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_ACTIVE_Msk (0x1UL)               /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_ACTIVE (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAMEGEN_BUSY_Pos (1UL)               /*!< LCDC LCDC_STATUS_REG: LCDC_FRAMEGEN_BUSY (Bit 1)            */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAMEGEN_BUSY_Msk (0x2UL)             /*!< LCDC LCDC_STATUS_REG: LCDC_FRAMEGEN_BUSY (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_HSYNC_Pos (2UL)                  /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_HSYNC (Bit 2)               */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_HSYNC_Msk (0x4UL)                /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_HSYNC (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_VSYNC_Pos (3UL)                  /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_VSYNC (Bit 3)               */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_VSYNC_Msk (0x8UL)                /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_VSYNC (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_CSYNC_Pos (4UL)                  /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_CSYNC (Bit 4)               */
#define LCDC_LCDC_STATUS_REG_LCDC_STAT_CSYNC_Msk (0x10UL)               /*!< LCDC LCDC_STATUS_REG: LCDC_STAT_CSYNC (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_LAST_ROW_Pos (5UL)                    /*!< LCDC LCDC_STATUS_REG: LCDC_LAST_ROW (Bit 5)                 */
#define LCDC_LCDC_STATUS_REG_LCDC_LAST_ROW_Msk (0x20UL)                 /*!< LCDC LCDC_STATUS_REG: LCDC_LAST_ROW (Bitfield-Mask: 0x01)   */
#define LCDC_LCDC_STATUS_REG_LCDC_UNDERFLOW_Pos (6UL)                   /*!< LCDC LCDC_STATUS_REG: LCDC_UNDERFLOW (Bit 6)                */
#define LCDC_LCDC_STATUS_REG_LCDC_UNDERFLOW_Msk (0x40UL)                /*!< LCDC LCDC_STATUS_REG: LCDC_UNDERFLOW (Bitfield-Mask: 0x01)  */
#define LCDC_LCDC_STATUS_REG_LCDC_STICKY_UNDERFLOW_Pos (7UL)            /*!< LCDC LCDC_STATUS_REG: LCDC_STICKY_UNDERFLOW (Bit 7)         */
#define LCDC_LCDC_STATUS_REG_LCDC_STICKY_UNDERFLOW_Msk (0x80UL)         /*!< LCDC LCDC_STATUS_REG: LCDC_STICKY_UNDERFLOW (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_TE_Pos (8UL)                     /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_TE (Bit 8)                  */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_TE_Msk (0x100UL)                 /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_TE (Bitfield-Mask: 0x01)    */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_FIFO_EMPTY_N_Pos (10UL)      /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_FIFO_EMPTY_N (Bit 10)   */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_FIFO_EMPTY_N_Msk (0x400UL)   /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_FIFO_EMPTY_N (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_FIFO_FULL_Pos (11UL)         /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_FIFO_FULL (Bit 11)      */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_FIFO_FULL_Msk (0x800UL)      /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_FIFO_FULL (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_PENDING_Pos (12UL)           /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_PENDING (Bit 12)        */
#define LCDC_LCDC_STATUS_REG_LCDC_DBIB_CMD_PENDING_Msk (0x1000UL)       /*!< LCDC LCDC_STATUS_REG: LCDC_DBIB_CMD_PENDING (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAME_END_Pos (13UL)                  /*!< LCDC LCDC_STATUS_REG: LCDC_FRAME_END (Bit 13)               */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAME_END_Msk (0x2000UL)              /*!< LCDC LCDC_STATUS_REG: LCDC_FRAME_END (Bitfield-Mask: 0x01)  */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAME_START_Pos (14UL)                /*!< LCDC LCDC_STATUS_REG: LCDC_FRAME_START (Bit 14)             */
#define LCDC_LCDC_STATUS_REG_LCDC_FRAME_START_Msk (0x4000UL)            /*!< LCDC LCDC_STATUS_REG: LCDC_FRAME_START (Bitfield-Mask: 0x01) */
#define LCDC_LCDC_STATUS_REG_LCDC_JDI_TIM_SW_RST_Pos (15UL)             /*!< LCDC LCDC_STATUS_REG: LCDC_JDI_TIM_SW_RST (Bit 15)          */
#define LCDC_LCDC_STATUS_REG_LCDC_JDI_TIM_SW_RST_Msk (0x8000UL)         /*!< LCDC LCDC_STATUS_REG: LCDC_JDI_TIM_SW_RST (Bitfield-Mask: 0x01) */
/* ------------------------------  LCDC_LCDC_CRC_REG  ----------------------------- */
#define LCDC_LCDC_CRC_REG_LCDC_CRC_Pos        (0UL)                     /*!< LCDC LCDC_CRC_REG: LCDC_CRC (Bit 0)                         */
#define LCDC_LCDC_CRC_REG_LCDC_CRC_Msk        (0xffffffffUL)            /*!< LCDC LCDC_CRC_REG: LCDC_CRC (Bitfield-Mask: 0xffffffff)     */
/* ------------------------  LCDC_LCDC_LAYER0_OFFSETX_REG  ------------------------ */
#define LCDC_LCDC_LAYER0_OFFSETX_REG_LCDC_L0_OFFSETX_Pos (0UL)          /*!< LCDC LCDC_LAYER0_OFFSETX_REG: LCDC_L0_OFFSETX (Bit 0)       */
#define LCDC_LCDC_LAYER0_OFFSETX_REG_LCDC_L0_OFFSETX_Msk (0xffffUL)     /*!< LCDC LCDC_LAYER0_OFFSETX_REG: LCDC_L0_OFFSETX (Bitfield-Mask: 0xffff) */
#define LCDC_LCDC_LAYER0_OFFSETX_REG_LCDC_L0_DMA_PREFETCH_Pos (16UL)    /*!< LCDC LCDC_LAYER0_OFFSETX_REG: LCDC_L0_DMA_PREFETCH (Bit 16) */
#define LCDC_LCDC_LAYER0_OFFSETX_REG_LCDC_L0_DMA_PREFETCH_Msk (0xffff0000UL) /*!< LCDC LCDC_LAYER0_OFFSETX_REG: LCDC_L0_DMA_PREFETCH (Bitfield-Mask: 0xffff) */
/* ================================================================================ */
/* ================          struct 'LRA' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  LRA_LRA_CTRL1_REG  ----------------------------- */
#define LRA_LRA_CTRL1_REG_LRA_EN_Pos          (0UL)                     /*!< LRA LRA_CTRL1_REG: LRA_EN (Bit 0)                           */
#define LRA_LRA_CTRL1_REG_LRA_EN_Msk          (0x1UL)                   /*!< LRA LRA_CTRL1_REG: LRA_EN (Bitfield-Mask: 0x01)             */
#define LRA_LRA_CTRL1_REG_HBRIDGE_EN_Pos      (1UL)                     /*!< LRA LRA_CTRL1_REG: HBRIDGE_EN (Bit 1)                       */
#define LRA_LRA_CTRL1_REG_HBRIDGE_EN_Msk      (0x2UL)                   /*!< LRA LRA_CTRL1_REG: HBRIDGE_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_CTRL1_REG_ADC_EN_Pos          (2UL)                     /*!< LRA LRA_CTRL1_REG: ADC_EN (Bit 2)                           */
#define LRA_LRA_CTRL1_REG_ADC_EN_Msk          (0x4UL)                   /*!< LRA LRA_CTRL1_REG: ADC_EN (Bitfield-Mask: 0x01)             */
#define LRA_LRA_CTRL1_REG_LDO_EN_Pos          (3UL)                     /*!< LRA LRA_CTRL1_REG: LDO_EN (Bit 3)                           */
#define LRA_LRA_CTRL1_REG_LDO_EN_Msk          (0x8UL)                   /*!< LRA LRA_CTRL1_REG: LDO_EN (Bitfield-Mask: 0x01)             */
#define LRA_LRA_CTRL1_REG_LOOP_EN_Pos         (4UL)                     /*!< LRA LRA_CTRL1_REG: LOOP_EN (Bit 4)                          */
#define LRA_LRA_CTRL1_REG_LOOP_EN_Msk         (0x10UL)                  /*!< LRA LRA_CTRL1_REG: LOOP_EN (Bitfield-Mask: 0x01)            */
#define LRA_LRA_CTRL1_REG_PULLDOWN_EN_Pos     (5UL)                     /*!< LRA LRA_CTRL1_REG: PULLDOWN_EN (Bit 5)                      */
#define LRA_LRA_CTRL1_REG_PULLDOWN_EN_Msk     (0x20UL)                  /*!< LRA LRA_CTRL1_REG: PULLDOWN_EN (Bitfield-Mask: 0x01)        */
#define LRA_LRA_CTRL1_REG_SMP_SEL_Pos         (6UL)                     /*!< LRA LRA_CTRL1_REG: SMP_SEL (Bit 6)                          */
#define LRA_LRA_CTRL1_REG_SMP_SEL_Msk         (0xc0UL)                  /*!< LRA LRA_CTRL1_REG: SMP_SEL (Bitfield-Mask: 0x03)            */
#define LRA_LRA_CTRL1_REG_IRQ_DIV_Pos         (8UL)                     /*!< LRA LRA_CTRL1_REG: IRQ_DIV (Bit 8)                          */
#define LRA_LRA_CTRL1_REG_IRQ_DIV_Msk         (0xf00UL)                 /*!< LRA LRA_CTRL1_REG: IRQ_DIV (Bitfield-Mask: 0x0f)            */
#define LRA_LRA_CTRL1_REG_IRQ_IDX_Pos         (12UL)                    /*!< LRA LRA_CTRL1_REG: IRQ_IDX (Bit 12)                         */
#define LRA_LRA_CTRL1_REG_IRQ_IDX_Msk         (0xf000UL)                /*!< LRA LRA_CTRL1_REG: IRQ_IDX (Bitfield-Mask: 0x0f)            */
#define LRA_LRA_CTRL1_REG_IRQ_CTRL_EN_Pos     (16UL)                    /*!< LRA LRA_CTRL1_REG: IRQ_CTRL_EN (Bit 16)                     */
#define LRA_LRA_CTRL1_REG_IRQ_CTRL_EN_Msk     (0x10000UL)               /*!< LRA LRA_CTRL1_REG: IRQ_CTRL_EN (Bitfield-Mask: 0x01)        */
#define LRA_LRA_CTRL1_REG_IRQ_ADC_EN_Pos      (17UL)                    /*!< LRA LRA_CTRL1_REG: IRQ_ADC_EN (Bit 17)                      */
#define LRA_LRA_CTRL1_REG_IRQ_ADC_EN_Msk      (0x20000UL)               /*!< LRA LRA_CTRL1_REG: IRQ_ADC_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_CTRL1_REG_IRQ_SCP_EVENT_EN_Pos (18UL)                   /*!< LRA LRA_CTRL1_REG: IRQ_SCP_EVENT_EN (Bit 18)                */
#define LRA_LRA_CTRL1_REG_IRQ_SCP_EVENT_EN_Msk (0x40000UL)              /*!< LRA LRA_CTRL1_REG: IRQ_SCP_EVENT_EN (Bitfield-Mask: 0x01)   */
#define LRA_LRA_CTRL1_REG_SMP_IDX_Pos         (24UL)                    /*!< LRA LRA_CTRL1_REG: SMP_IDX (Bit 24)                         */
#define LRA_LRA_CTRL1_REG_SMP_IDX_Msk         (0xf000000UL)             /*!< LRA LRA_CTRL1_REG: SMP_IDX (Bitfield-Mask: 0x0f)            */
/* ------------------------------  LRA_LRA_CTRL2_REG  ----------------------------- */
#define LRA_LRA_CTRL2_REG_PWM_MODE_Pos        (0UL)                     /*!< LRA LRA_CTRL2_REG: PWM_MODE (Bit 0)                         */
#define LRA_LRA_CTRL2_REG_PWM_MODE_Msk        (0x3UL)                   /*!< LRA LRA_CTRL2_REG: PWM_MODE (Bitfield-Mask: 0x03)           */
#define LRA_LRA_CTRL2_REG_FLT_IN_SEL_Pos      (2UL)                     /*!< LRA LRA_CTRL2_REG: FLT_IN_SEL (Bit 2)                       */
#define LRA_LRA_CTRL2_REG_FLT_IN_SEL_Msk      (0x4UL)                   /*!< LRA LRA_CTRL2_REG: FLT_IN_SEL (Bitfield-Mask: 0x01)         */
#define LRA_LRA_CTRL2_REG_POLARITY_Pos        (3UL)                     /*!< LRA LRA_CTRL2_REG: POLARITY (Bit 3)                         */
#define LRA_LRA_CTRL2_REG_POLARITY_Msk        (0x8UL)                   /*!< LRA LRA_CTRL2_REG: POLARITY (Bitfield-Mask: 0x01)           */
#define LRA_LRA_CTRL2_REG_SMP_MODE_Pos        (4UL)                     /*!< LRA LRA_CTRL2_REG: SMP_MODE (Bit 4)                         */
#define LRA_LRA_CTRL2_REG_SMP_MODE_Msk        (0x10UL)                  /*!< LRA LRA_CTRL2_REG: SMP_MODE (Bitfield-Mask: 0x01)           */
#define LRA_LRA_CTRL2_REG_AUTO_MODE_Pos       (5UL)                     /*!< LRA LRA_CTRL2_REG: AUTO_MODE (Bit 5)                        */
#define LRA_LRA_CTRL2_REG_AUTO_MODE_Msk       (0x20UL)                  /*!< LRA LRA_CTRL2_REG: AUTO_MODE (Bitfield-Mask: 0x01)          */
#define LRA_LRA_CTRL2_REG_HALF_PERIOD_Pos     (16UL)                    /*!< LRA LRA_CTRL2_REG: HALF_PERIOD (Bit 16)                     */
#define LRA_LRA_CTRL2_REG_HALF_PERIOD_Msk     (0xffff0000UL)            /*!< LRA LRA_CTRL2_REG: HALF_PERIOD (Bitfield-Mask: 0xffff)      */
/* ------------------------------  LRA_LRA_CTRL3_REG  ----------------------------- */
#define LRA_LRA_CTRL3_REG_DREF_Pos            (0UL)                     /*!< LRA LRA_CTRL3_REG: DREF (Bit 0)                             */
#define LRA_LRA_CTRL3_REG_DREF_Msk            (0xffffUL)                /*!< LRA LRA_CTRL3_REG: DREF (Bitfield-Mask: 0xffff)             */
#define LRA_LRA_CTRL3_REG_VREF_Pos            (16UL)                    /*!< LRA LRA_CTRL3_REG: VREF (Bit 16)                            */
#define LRA_LRA_CTRL3_REG_VREF_Msk            (0xffff0000UL)            /*!< LRA LRA_CTRL3_REG: VREF (Bitfield-Mask: 0xffff)             */
/* ----------------------------  LRA_LRA_FLT_SMP1_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP1_REG_LRA_SMP_1_Pos    (0UL)                     /*!< LRA LRA_FLT_SMP1_REG: LRA_SMP_1 (Bit 0)                     */
#define LRA_LRA_FLT_SMP1_REG_LRA_SMP_1_Msk    (0xffffUL)                /*!< LRA LRA_FLT_SMP1_REG: LRA_SMP_1 (Bitfield-Mask: 0xffff)     */
#define LRA_LRA_FLT_SMP1_REG_LRA_SMP_2_Pos    (16UL)                    /*!< LRA LRA_FLT_SMP1_REG: LRA_SMP_2 (Bit 16)                    */
#define LRA_LRA_FLT_SMP1_REG_LRA_SMP_2_Msk    (0xffff0000UL)            /*!< LRA LRA_FLT_SMP1_REG: LRA_SMP_2 (Bitfield-Mask: 0xffff)     */
/* ----------------------------  LRA_LRA_FLT_SMP2_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP2_REG_LRA_SMP_3_Pos    (0UL)                     /*!< LRA LRA_FLT_SMP2_REG: LRA_SMP_3 (Bit 0)                     */
#define LRA_LRA_FLT_SMP2_REG_LRA_SMP_3_Msk    (0xffffUL)                /*!< LRA LRA_FLT_SMP2_REG: LRA_SMP_3 (Bitfield-Mask: 0xffff)     */
#define LRA_LRA_FLT_SMP2_REG_LRA_SMP_4_Pos    (16UL)                    /*!< LRA LRA_FLT_SMP2_REG: LRA_SMP_4 (Bit 16)                    */
#define LRA_LRA_FLT_SMP2_REG_LRA_SMP_4_Msk    (0xffff0000UL)            /*!< LRA LRA_FLT_SMP2_REG: LRA_SMP_4 (Bitfield-Mask: 0xffff)     */
/* ----------------------------  LRA_LRA_FLT_SMP3_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP3_REG_LRA_SMP_5_Pos    (0UL)                     /*!< LRA LRA_FLT_SMP3_REG: LRA_SMP_5 (Bit 0)                     */
#define LRA_LRA_FLT_SMP3_REG_LRA_SMP_5_Msk    (0xffffUL)                /*!< LRA LRA_FLT_SMP3_REG: LRA_SMP_5 (Bitfield-Mask: 0xffff)     */
#define LRA_LRA_FLT_SMP3_REG_LRA_SMP_6_Pos    (16UL)                    /*!< LRA LRA_FLT_SMP3_REG: LRA_SMP_6 (Bit 16)                    */
#define LRA_LRA_FLT_SMP3_REG_LRA_SMP_6_Msk    (0xffff0000UL)            /*!< LRA LRA_FLT_SMP3_REG: LRA_SMP_6 (Bitfield-Mask: 0xffff)     */
/* ----------------------------  LRA_LRA_FLT_SMP4_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP4_REG_LRA_SMP_7_Pos    (0UL)                     /*!< LRA LRA_FLT_SMP4_REG: LRA_SMP_7 (Bit 0)                     */
#define LRA_LRA_FLT_SMP4_REG_LRA_SMP_7_Msk    (0xffffUL)                /*!< LRA LRA_FLT_SMP4_REG: LRA_SMP_7 (Bitfield-Mask: 0xffff)     */
#define LRA_LRA_FLT_SMP4_REG_LRA_SMP_8_Pos    (16UL)                    /*!< LRA LRA_FLT_SMP4_REG: LRA_SMP_8 (Bit 16)                    */
#define LRA_LRA_FLT_SMP4_REG_LRA_SMP_8_Msk    (0xffff0000UL)            /*!< LRA LRA_FLT_SMP4_REG: LRA_SMP_8 (Bitfield-Mask: 0xffff)     */
/* ----------------------------  LRA_LRA_FLT_SMP5_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP5_REG_LRA_SMP_9_Pos    (0UL)                     /*!< LRA LRA_FLT_SMP5_REG: LRA_SMP_9 (Bit 0)                     */
#define LRA_LRA_FLT_SMP5_REG_LRA_SMP_9_Msk    (0xffffUL)                /*!< LRA LRA_FLT_SMP5_REG: LRA_SMP_9 (Bitfield-Mask: 0xffff)     */
#define LRA_LRA_FLT_SMP5_REG_LRA_SMP_10_Pos   (16UL)                    /*!< LRA LRA_FLT_SMP5_REG: LRA_SMP_10 (Bit 16)                   */
#define LRA_LRA_FLT_SMP5_REG_LRA_SMP_10_Msk   (0xffff0000UL)            /*!< LRA LRA_FLT_SMP5_REG: LRA_SMP_10 (Bitfield-Mask: 0xffff)    */
/* ----------------------------  LRA_LRA_FLT_SMP6_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP6_REG_LRA_SMP_11_Pos   (0UL)                     /*!< LRA LRA_FLT_SMP6_REG: LRA_SMP_11 (Bit 0)                    */
#define LRA_LRA_FLT_SMP6_REG_LRA_SMP_11_Msk   (0xffffUL)                /*!< LRA LRA_FLT_SMP6_REG: LRA_SMP_11 (Bitfield-Mask: 0xffff)    */
#define LRA_LRA_FLT_SMP6_REG_LRA_SMP_12_Pos   (16UL)                    /*!< LRA LRA_FLT_SMP6_REG: LRA_SMP_12 (Bit 16)                   */
#define LRA_LRA_FLT_SMP6_REG_LRA_SMP_12_Msk   (0xffff0000UL)            /*!< LRA LRA_FLT_SMP6_REG: LRA_SMP_12 (Bitfield-Mask: 0xffff)    */
/* ----------------------------  LRA_LRA_FLT_SMP7_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP7_REG_LRA_SMP_13_Pos   (0UL)                     /*!< LRA LRA_FLT_SMP7_REG: LRA_SMP_13 (Bit 0)                    */
#define LRA_LRA_FLT_SMP7_REG_LRA_SMP_13_Msk   (0xffffUL)                /*!< LRA LRA_FLT_SMP7_REG: LRA_SMP_13 (Bitfield-Mask: 0xffff)    */
#define LRA_LRA_FLT_SMP7_REG_LRA_SMP_14_Pos   (16UL)                    /*!< LRA LRA_FLT_SMP7_REG: LRA_SMP_14 (Bit 16)                   */
#define LRA_LRA_FLT_SMP7_REG_LRA_SMP_14_Msk   (0xffff0000UL)            /*!< LRA LRA_FLT_SMP7_REG: LRA_SMP_14 (Bitfield-Mask: 0xffff)    */
/* ----------------------------  LRA_LRA_FLT_SMP8_REG  ---------------------------- */
#define LRA_LRA_FLT_SMP8_REG_LRA_SMP_15_Pos   (0UL)                     /*!< LRA LRA_FLT_SMP8_REG: LRA_SMP_15 (Bit 0)                    */
#define LRA_LRA_FLT_SMP8_REG_LRA_SMP_15_Msk   (0xffffUL)                /*!< LRA LRA_FLT_SMP8_REG: LRA_SMP_15 (Bitfield-Mask: 0xffff)    */
#define LRA_LRA_FLT_SMP8_REG_LRA_SMP_16_Pos   (16UL)                    /*!< LRA LRA_FLT_SMP8_REG: LRA_SMP_16 (Bit 16)                   */
#define LRA_LRA_FLT_SMP8_REG_LRA_SMP_16_Msk   (0xffff0000UL)            /*!< LRA LRA_FLT_SMP8_REG: LRA_SMP_16 (Bitfield-Mask: 0xffff)    */
/* ----------------------------  LRA_LRA_FLT_COEF1_REG  --------------------------- */
#define LRA_LRA_FLT_COEF1_REG_FLT_COEF_00_Pos (0UL)                     /*!< LRA LRA_FLT_COEF1_REG: FLT_COEF_00 (Bit 0)                  */
#define LRA_LRA_FLT_COEF1_REG_FLT_COEF_00_Msk (0xffffUL)                /*!< LRA LRA_FLT_COEF1_REG: FLT_COEF_00 (Bitfield-Mask: 0xffff)  */
#define LRA_LRA_FLT_COEF1_REG_FLT_COEF_01_Pos (16UL)                    /*!< LRA LRA_FLT_COEF1_REG: FLT_COEF_01 (Bit 16)                 */
#define LRA_LRA_FLT_COEF1_REG_FLT_COEF_01_Msk (0xffff0000UL)            /*!< LRA LRA_FLT_COEF1_REG: FLT_COEF_01 (Bitfield-Mask: 0xffff)  */
/* ----------------------------  LRA_LRA_FLT_COEF2_REG  --------------------------- */
#define LRA_LRA_FLT_COEF2_REG_FLT_COEF_02_Pos (0UL)                     /*!< LRA LRA_FLT_COEF2_REG: FLT_COEF_02 (Bit 0)                  */
#define LRA_LRA_FLT_COEF2_REG_FLT_COEF_02_Msk (0xffffUL)                /*!< LRA LRA_FLT_COEF2_REG: FLT_COEF_02 (Bitfield-Mask: 0xffff)  */
#define LRA_LRA_FLT_COEF2_REG_FLT_COEF_10_Pos (16UL)                    /*!< LRA LRA_FLT_COEF2_REG: FLT_COEF_10 (Bit 16)                 */
#define LRA_LRA_FLT_COEF2_REG_FLT_COEF_10_Msk (0xffff0000UL)            /*!< LRA LRA_FLT_COEF2_REG: FLT_COEF_10 (Bitfield-Mask: 0xffff)  */
/* ----------------------------  LRA_LRA_FLT_COEF3_REG  --------------------------- */
#define LRA_LRA_FLT_COEF3_REG_FLT_COEF_11_Pos (0UL)                     /*!< LRA LRA_FLT_COEF3_REG: FLT_COEF_11 (Bit 0)                  */
#define LRA_LRA_FLT_COEF3_REG_FLT_COEF_11_Msk (0xffffUL)                /*!< LRA LRA_FLT_COEF3_REG: FLT_COEF_11 (Bitfield-Mask: 0xffff)  */
#define LRA_LRA_FLT_COEF3_REG_FLT_COEF_12_Pos (16UL)                    /*!< LRA LRA_FLT_COEF3_REG: FLT_COEF_12 (Bit 16)                 */
#define LRA_LRA_FLT_COEF3_REG_FLT_COEF_12_Msk (0xffff0000UL)            /*!< LRA LRA_FLT_COEF3_REG: FLT_COEF_12 (Bitfield-Mask: 0xffff)  */
/* -----------------------------  LRA_LRA_BRD_LS_REG  ----------------------------- */
#define LRA_LRA_BRD_LS_REG_ERC_LS_EN_Pos      (0UL)                     /*!< LRA LRA_BRD_LS_REG: ERC_LS_EN (Bit 0)                       */
#define LRA_LRA_BRD_LS_REG_ERC_LS_EN_Msk      (0x1UL)                   /*!< LRA LRA_BRD_LS_REG: ERC_LS_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_BRD_LS_REG_ERC_LS_TRIM_Pos    (1UL)                     /*!< LRA LRA_BRD_LS_REG: ERC_LS_TRIM (Bit 1)                     */
#define LRA_LRA_BRD_LS_REG_ERC_LS_TRIM_Msk    (0x6UL)                   /*!< LRA LRA_BRD_LS_REG: ERC_LS_TRIM (Bitfield-Mask: 0x03)       */
#define LRA_LRA_BRD_LS_REG_SCP_LS_EN_Pos      (3UL)                     /*!< LRA LRA_BRD_LS_REG: SCP_LS_EN (Bit 3)                       */
#define LRA_LRA_BRD_LS_REG_SCP_LS_EN_Msk      (0x8UL)                   /*!< LRA LRA_BRD_LS_REG: SCP_LS_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_BRD_LS_REG_SCP_LS_TRIM_P_Pos  (4UL)                     /*!< LRA LRA_BRD_LS_REG: SCP_LS_TRIM_P (Bit 4)                   */
#define LRA_LRA_BRD_LS_REG_SCP_LS_TRIM_P_Msk  (0xf0UL)                  /*!< LRA LRA_BRD_LS_REG: SCP_LS_TRIM_P (Bitfield-Mask: 0x0f)     */
#define LRA_LRA_BRD_LS_REG_SCP_LS_TRIM_N_Pos  (8UL)                     /*!< LRA LRA_BRD_LS_REG: SCP_LS_TRIM_N (Bit 8)                   */
#define LRA_LRA_BRD_LS_REG_SCP_LS_TRIM_N_Msk  (0xf00UL)                 /*!< LRA LRA_BRD_LS_REG: SCP_LS_TRIM_N (Bitfield-Mask: 0x0f)     */
/* -----------------------------  LRA_LRA_BRD_HS_REG  ----------------------------- */
#define LRA_LRA_BRD_HS_REG_ERC_HS_EN_Pos      (0UL)                     /*!< LRA LRA_BRD_HS_REG: ERC_HS_EN (Bit 0)                       */
#define LRA_LRA_BRD_HS_REG_ERC_HS_EN_Msk      (0x1UL)                   /*!< LRA LRA_BRD_HS_REG: ERC_HS_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_BRD_HS_REG_ERC_HS_TRIM_Pos    (1UL)                     /*!< LRA LRA_BRD_HS_REG: ERC_HS_TRIM (Bit 1)                     */
#define LRA_LRA_BRD_HS_REG_ERC_HS_TRIM_Msk    (0x6UL)                   /*!< LRA LRA_BRD_HS_REG: ERC_HS_TRIM (Bitfield-Mask: 0x03)       */
#define LRA_LRA_BRD_HS_REG_SCP_HS_EN_Pos      (3UL)                     /*!< LRA LRA_BRD_HS_REG: SCP_HS_EN (Bit 3)                       */
#define LRA_LRA_BRD_HS_REG_SCP_HS_EN_Msk      (0x8UL)                   /*!< LRA LRA_BRD_HS_REG: SCP_HS_EN (Bitfield-Mask: 0x01)         */
#define LRA_LRA_BRD_HS_REG_SCP_HS_TRIM_Pos    (4UL)                     /*!< LRA LRA_BRD_HS_REG: SCP_HS_TRIM (Bit 4)                     */
#define LRA_LRA_BRD_HS_REG_SCP_HS_TRIM_Msk    (0xf0UL)                  /*!< LRA LRA_BRD_HS_REG: SCP_HS_TRIM (Bitfield-Mask: 0x0f)       */
#define LRA_LRA_BRD_HS_REG_HSGND_TRIM_Pos     (8UL)                     /*!< LRA LRA_BRD_HS_REG: HSGND_TRIM (Bit 8)                      */
#define LRA_LRA_BRD_HS_REG_HSGND_TRIM_Msk     (0x700UL)                 /*!< LRA LRA_BRD_HS_REG: HSGND_TRIM (Bitfield-Mask: 0x07)        */
#define LRA_LRA_BRD_HS_REG_TRIM_GAIN_Pos      (11UL)                    /*!< LRA LRA_BRD_HS_REG: TRIM_GAIN (Bit 11)                      */
#define LRA_LRA_BRD_HS_REG_TRIM_GAIN_Msk      (0x7800UL)                /*!< LRA LRA_BRD_HS_REG: TRIM_GAIN (Bitfield-Mask: 0x0f)         */
/* ----------------------------  LRA_LRA_BRD_STAT_REG  ---------------------------- */
#define LRA_LRA_BRD_STAT_REG_HSP_STAT_Pos     (0UL)                     /*!< LRA LRA_BRD_STAT_REG: HSP_STAT (Bit 0)                      */
#define LRA_LRA_BRD_STAT_REG_HSP_STAT_Msk     (0x1UL)                   /*!< LRA LRA_BRD_STAT_REG: HSP_STAT (Bitfield-Mask: 0x01)        */
#define LRA_LRA_BRD_STAT_REG_HSN_STAT_Pos     (1UL)                     /*!< LRA LRA_BRD_STAT_REG: HSN_STAT (Bit 1)                      */
#define LRA_LRA_BRD_STAT_REG_HSN_STAT_Msk     (0x2UL)                   /*!< LRA LRA_BRD_STAT_REG: HSN_STAT (Bitfield-Mask: 0x01)        */
#define LRA_LRA_BRD_STAT_REG_LSP_STAT_Pos     (2UL)                     /*!< LRA LRA_BRD_STAT_REG: LSP_STAT (Bit 2)                      */
#define LRA_LRA_BRD_STAT_REG_LSP_STAT_Msk     (0x4UL)                   /*!< LRA LRA_BRD_STAT_REG: LSP_STAT (Bitfield-Mask: 0x01)        */
#define LRA_LRA_BRD_STAT_REG_LSN_STAT_Pos     (3UL)                     /*!< LRA LRA_BRD_STAT_REG: LSN_STAT (Bit 3)                      */
#define LRA_LRA_BRD_STAT_REG_LSN_STAT_Msk     (0x8UL)                   /*!< LRA LRA_BRD_STAT_REG: LSN_STAT (Bitfield-Mask: 0x01)        */
#define LRA_LRA_BRD_STAT_REG_HSP_ON_Pos       (4UL)                     /*!< LRA LRA_BRD_STAT_REG: HSP_ON (Bit 4)                        */
#define LRA_LRA_BRD_STAT_REG_HSP_ON_Msk       (0x10UL)                  /*!< LRA LRA_BRD_STAT_REG: HSP_ON (Bitfield-Mask: 0x01)          */
#define LRA_LRA_BRD_STAT_REG_HSN_ON_Pos       (5UL)                     /*!< LRA LRA_BRD_STAT_REG: HSN_ON (Bit 5)                        */
#define LRA_LRA_BRD_STAT_REG_HSN_ON_Msk       (0x20UL)                  /*!< LRA LRA_BRD_STAT_REG: HSN_ON (Bitfield-Mask: 0x01)          */
#define LRA_LRA_BRD_STAT_REG_LSP_ON_Pos       (6UL)                     /*!< LRA LRA_BRD_STAT_REG: LSP_ON (Bit 6)                        */
#define LRA_LRA_BRD_STAT_REG_LSP_ON_Msk       (0x40UL)                  /*!< LRA LRA_BRD_STAT_REG: LSP_ON (Bitfield-Mask: 0x01)          */
#define LRA_LRA_BRD_STAT_REG_LSN_ON_Pos       (7UL)                     /*!< LRA LRA_BRD_STAT_REG: LSN_ON (Bit 7)                        */
#define LRA_LRA_BRD_STAT_REG_LSN_ON_Msk       (0x80UL)                  /*!< LRA LRA_BRD_STAT_REG: LSN_ON (Bitfield-Mask: 0x01)          */
#define LRA_LRA_BRD_STAT_REG_LOOP_STAT_Pos    (8UL)                     /*!< LRA LRA_BRD_STAT_REG: LOOP_STAT (Bit 8)                     */
#define LRA_LRA_BRD_STAT_REG_LOOP_STAT_Msk    (0x100UL)                 /*!< LRA LRA_BRD_STAT_REG: LOOP_STAT (Bitfield-Mask: 0x01)       */
#define LRA_LRA_BRD_STAT_REG_SC_EVENT_HS_Pos  (9UL)                     /*!< LRA LRA_BRD_STAT_REG: SC_EVENT_HS (Bit 9)                   */
#define LRA_LRA_BRD_STAT_REG_SC_EVENT_HS_Msk  (0x200UL)                 /*!< LRA LRA_BRD_STAT_REG: SC_EVENT_HS (Bitfield-Mask: 0x01)     */
#define LRA_LRA_BRD_STAT_REG_SC_EVENT_LS_Pos  (10UL)                    /*!< LRA LRA_BRD_STAT_REG: SC_EVENT_LS (Bit 10)                  */
#define LRA_LRA_BRD_STAT_REG_SC_EVENT_LS_Msk  (0x400UL)                 /*!< LRA LRA_BRD_STAT_REG: SC_EVENT_LS (Bitfield-Mask: 0x01)     */
#define LRA_LRA_BRD_STAT_REG_SCP_LS_COMP_OUT_P_Pos (11UL)               /*!< LRA LRA_BRD_STAT_REG: SCP_LS_COMP_OUT_P (Bit 11)            */
#define LRA_LRA_BRD_STAT_REG_SCP_LS_COMP_OUT_P_Msk (0x800UL)            /*!< LRA LRA_BRD_STAT_REG: SCP_LS_COMP_OUT_P (Bitfield-Mask: 0x01) */
#define LRA_LRA_BRD_STAT_REG_SCP_LS_COMP_OUT_N_Pos (12UL)               /*!< LRA LRA_BRD_STAT_REG: SCP_LS_COMP_OUT_N (Bit 12)            */
#define LRA_LRA_BRD_STAT_REG_SCP_LS_COMP_OUT_N_Msk (0x1000UL)           /*!< LRA LRA_BRD_STAT_REG: SCP_LS_COMP_OUT_N (Bitfield-Mask: 0x01) */
#define LRA_LRA_BRD_STAT_REG_SCP_HS_OUT_Pos   (13UL)                    /*!< LRA LRA_BRD_STAT_REG: SCP_HS_OUT (Bit 13)                   */
#define LRA_LRA_BRD_STAT_REG_SCP_HS_OUT_Msk   (0x2000UL)                /*!< LRA LRA_BRD_STAT_REG: SCP_HS_OUT (Bitfield-Mask: 0x01)      */
/* ----------------------------  LRA_LRA_ADC_CTRL1_REG  --------------------------- */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_START_Pos (0UL)                   /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_START (Bit 0)                */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_START_Msk (0x1UL)                 /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_START (Bitfield-Mask: 0x01)  */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_MUTE_Pos (1UL)                    /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_MUTE (Bit 1)                 */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_MUTE_Msk (0x2UL)                  /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_MUTE (Bitfield-Mask: 0x01)   */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_SIGN_Pos (2UL)                    /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_SIGN (Bit 2)                 */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_SIGN_Msk (0x4UL)                  /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_SIGN (Bitfield-Mask: 0x01)   */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_FREQ_Pos (3UL)                    /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_FREQ (Bit 3)                 */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_FREQ_Msk (0x78UL)                 /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_FREQ (Bitfield-Mask: 0x0f)   */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_TEST_IN_SEL_Pos (7UL)             /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_TEST_IN_SEL (Bit 7)          */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_TEST_IN_SEL_Msk (0x80UL)          /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_TEST_IN_SEL (Bitfield-Mask: 0x01) */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_TEST_PARAM_Pos (8UL)              /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_TEST_PARAM (Bit 8)           */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_TEST_PARAM_Msk (0x100UL)          /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_TEST_PARAM (Bitfield-Mask: 0x01) */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_OFFSET_Pos (9UL)                  /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_OFFSET (Bit 9)               */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_OFFSET_Msk (0x1fe00UL)            /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_OFFSET (Bitfield-Mask: 0xff) */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_BUSY_Pos (31UL)                   /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_BUSY (Bit 31)                */
#define LRA_LRA_ADC_CTRL1_REG_LRA_ADC_BUSY_Msk (0x80000000UL)           /*!< LRA LRA_ADC_CTRL1_REG: LRA_ADC_BUSY (Bitfield-Mask: 0x01)   */
/* ----------------------------  LRA_LRA_ADC_CTRL2_REG  --------------------------- */
#define LRA_LRA_ADC_CTRL2_REG_ADC_OFFP_I_WR_Pos (0UL)                   /*!< LRA LRA_ADC_CTRL2_REG: ADC_OFFP_I_WR (Bit 0)                */
#define LRA_LRA_ADC_CTRL2_REG_ADC_OFFP_I_WR_Msk (0x1ffUL)               /*!< LRA LRA_ADC_CTRL2_REG: ADC_OFFP_I_WR (Bitfield-Mask: 0x1ff) */
#define LRA_LRA_ADC_CTRL2_REG_ADC_OFFN_I_WR_Pos (9UL)                   /*!< LRA LRA_ADC_CTRL2_REG: ADC_OFFN_I_WR (Bit 9)                */
#define LRA_LRA_ADC_CTRL2_REG_ADC_OFFN_I_WR_Msk (0x3fe00UL)             /*!< LRA LRA_ADC_CTRL2_REG: ADC_OFFN_I_WR (Bitfield-Mask: 0x1ff) */
/* ----------------------------  LRA_LRA_ADC_CTRL3_REG  --------------------------- */
#define LRA_LRA_ADC_CTRL3_REG_ADC_OFFP_Q_WR_Pos (0UL)                   /*!< LRA LRA_ADC_CTRL3_REG: ADC_OFFP_Q_WR (Bit 0)                */
#define LRA_LRA_ADC_CTRL3_REG_ADC_OFFP_Q_WR_Msk (0x1ffUL)               /*!< LRA LRA_ADC_CTRL3_REG: ADC_OFFP_Q_WR (Bitfield-Mask: 0x1ff) */
#define LRA_LRA_ADC_CTRL3_REG_ADC_OFFN_Q_WR_Pos (9UL)                   /*!< LRA LRA_ADC_CTRL3_REG: ADC_OFFN_Q_WR (Bit 9)                */
#define LRA_LRA_ADC_CTRL3_REG_ADC_OFFN_Q_WR_Msk (0x3fe00UL)             /*!< LRA LRA_ADC_CTRL3_REG: ADC_OFFN_Q_WR (Bitfield-Mask: 0x1ff) */
/* ---------------------------  LRA_LRA_ADC_RESULT_REG  --------------------------- */
#define LRA_LRA_ADC_RESULT_REG_GP_ADC_VAL_Pos (0UL)                     /*!< LRA LRA_ADC_RESULT_REG: GP_ADC_VAL (Bit 0)                  */
#define LRA_LRA_ADC_RESULT_REG_GP_ADC_VAL_Msk (0xffffUL)                /*!< LRA LRA_ADC_RESULT_REG: GP_ADC_VAL (Bitfield-Mask: 0xffff)  */
#define LRA_LRA_ADC_RESULT_REG_MAN_FLT_IN_Pos (16UL)                    /*!< LRA LRA_ADC_RESULT_REG: MAN_FLT_IN (Bit 16)                 */
#define LRA_LRA_ADC_RESULT_REG_MAN_FLT_IN_Msk (0xffff0000UL)            /*!< LRA LRA_ADC_RESULT_REG: MAN_FLT_IN (Bitfield-Mask: 0xffff)  */
/* -------------------------------  LRA_LRA_LDO_REG  ------------------------------ */
#define LRA_LRA_LDO_REG_LDO_TST_Pos           (0UL)                     /*!< LRA LRA_LDO_REG: LDO_TST (Bit 0)                            */
#define LRA_LRA_LDO_REG_LDO_TST_Msk           (0x1UL)                   /*!< LRA LRA_LDO_REG: LDO_TST (Bitfield-Mask: 0x01)              */
#define LRA_LRA_LDO_REG_LDO_VREF_HOLD_Pos     (1UL)                     /*!< LRA LRA_LDO_REG: LDO_VREF_HOLD (Bit 1)                      */
#define LRA_LRA_LDO_REG_LDO_VREF_HOLD_Msk     (0x2UL)                   /*!< LRA LRA_LDO_REG: LDO_VREF_HOLD (Bitfield-Mask: 0x01)        */
#define LRA_LRA_LDO_REG_LDO_OK_Pos            (31UL)                    /*!< LRA LRA_LDO_REG: LDO_OK (Bit 31)                            */
#define LRA_LRA_LDO_REG_LDO_OK_Msk            (0x80000000UL)            /*!< LRA LRA_LDO_REG: LDO_OK (Bitfield-Mask: 0x01)               */
/* -------------------------------  LRA_LRA_DFT_REG  ------------------------------ */
#define LRA_LRA_DFT_REG_DFT_CTRL_Pos          (0UL)                     /*!< LRA LRA_DFT_REG: DFT_CTRL (Bit 0)                           */
#define LRA_LRA_DFT_REG_DFT_CTRL_Msk          (0xffffUL)                /*!< LRA LRA_DFT_REG: DFT_CTRL (Bitfield-Mask: 0xffff)           */
#define LRA_LRA_DFT_REG_DFT_STALL_Pos         (16UL)                    /*!< LRA LRA_DFT_REG: DFT_STALL (Bit 16)                         */
#define LRA_LRA_DFT_REG_DFT_STALL_Msk         (0x30000UL)               /*!< LRA LRA_DFT_REG: DFT_STALL (Bitfield-Mask: 0x03)            */
#define LRA_LRA_DFT_REG_DFT_EN_TIMER_Pos      (18UL)                    /*!< LRA LRA_DFT_REG: DFT_EN_TIMER (Bit 18)                      */
#define LRA_LRA_DFT_REG_DFT_EN_TIMER_Msk      (0x40000UL)               /*!< LRA LRA_DFT_REG: DFT_EN_TIMER (Bitfield-Mask: 0x01)         */
#define LRA_LRA_DFT_REG_DFT_FORCE_HSPN_Pos    (19UL)                    /*!< LRA LRA_DFT_REG: DFT_FORCE_HSPN (Bit 19)                    */
#define LRA_LRA_DFT_REG_DFT_FORCE_HSPN_Msk    (0x80000UL)               /*!< LRA LRA_DFT_REG: DFT_FORCE_HSPN (Bitfield-Mask: 0x01)       */
#define LRA_LRA_DFT_REG_DFT_SEL_Pos           (20UL)                    /*!< LRA LRA_DFT_REG: DFT_SEL (Bit 20)                           */
#define LRA_LRA_DFT_REG_DFT_SEL_Msk           (0x100000UL)              /*!< LRA LRA_DFT_REG: DFT_SEL (Bitfield-Mask: 0x01)              */
#define LRA_LRA_DFT_REG_TIMER_SCALE_TRIM_Pos  (21UL)                    /*!< LRA LRA_DFT_REG: TIMER_SCALE_TRIM (Bit 21)                  */
#define LRA_LRA_DFT_REG_TIMER_SCALE_TRIM_Msk  (0x600000UL)              /*!< LRA LRA_DFT_REG: TIMER_SCALE_TRIM (Bitfield-Mask: 0x03)     */
#define LRA_LRA_DFT_REG_TIMER_TRIM_Pos        (23UL)                    /*!< LRA LRA_DFT_REG: TIMER_TRIM (Bit 23)                        */
#define LRA_LRA_DFT_REG_TIMER_TRIM_Msk        (0x1800000UL)             /*!< LRA LRA_DFT_REG: TIMER_TRIM (Bitfield-Mask: 0x03)           */
#define LRA_LRA_DFT_REG_PWM_MAN_Pos           (25UL)                    /*!< LRA LRA_DFT_REG: PWM_MAN (Bit 25)                           */
#define LRA_LRA_DFT_REG_PWM_MAN_Msk           (0x2000000UL)             /*!< LRA LRA_DFT_REG: PWM_MAN (Bitfield-Mask: 0x01)              */
#define LRA_LRA_DFT_REG_PWM_SEL_Pos           (26UL)                    /*!< LRA LRA_DFT_REG: PWM_SEL (Bit 26)                           */
#define LRA_LRA_DFT_REG_PWM_SEL_Msk           (0x4000000UL)             /*!< LRA LRA_DFT_REG: PWM_SEL (Bitfield-Mask: 0x01)              */
#define LRA_LRA_DFT_REG_SWM_MAN_Pos           (27UL)                    /*!< LRA LRA_DFT_REG: SWM_MAN (Bit 27)                           */
#define LRA_LRA_DFT_REG_SWM_MAN_Msk           (0x8000000UL)             /*!< LRA LRA_DFT_REG: SWM_MAN (Bitfield-Mask: 0x01)              */
#define LRA_LRA_DFT_REG_SWM_SEL_Pos           (28UL)                    /*!< LRA LRA_DFT_REG: SWM_SEL (Bit 28)                           */
#define LRA_LRA_DFT_REG_SWM_SEL_Msk           (0x10000000UL)            /*!< LRA LRA_DFT_REG: SWM_SEL (Bitfield-Mask: 0x01)              */
#define LRA_LRA_DFT_REG_SPARE_Pos             (29UL)                    /*!< LRA LRA_DFT_REG: SPARE (Bit 29)                             */
#define LRA_LRA_DFT_REG_SPARE_Msk             (0xe0000000UL)            /*!< LRA LRA_DFT_REG: SPARE (Bitfield-Mask: 0x07)                */
/* ================================================================================ */
/* ================        struct 'MEMCTRL' Position & Mask        ================ */
/* ================================================================================ */
/* ----------------------------  MEMCTRL_MEM_CTRL_REG  ---------------------------- */
#define MEMCTRL_MEM_CTRL_REG_RAM_MARGIN_Pos   (0UL)                     /*!< MEMCTRL MEM_CTRL_REG: RAM_MARGIN (Bit 0)                    */
#define MEMCTRL_MEM_CTRL_REG_RAM_MARGIN_Msk   (0x3UL)                   /*!< MEMCTRL MEM_CTRL_REG: RAM_MARGIN (Bitfield-Mask: 0x03)      */
#define MEMCTRL_MEM_CTRL_REG_RAM_LPMX_Pos     (2UL)                     /*!< MEMCTRL MEM_CTRL_REG: RAM_LPMX (Bit 2)                      */
#define MEMCTRL_MEM_CTRL_REG_RAM_LPMX_Msk     (0x4UL)                   /*!< MEMCTRL MEM_CTRL_REG: RAM_LPMX (Bitfield-Mask: 0x01)        */
#define MEMCTRL_MEM_CTRL_REG_RAM_DST_Pos      (3UL)                     /*!< MEMCTRL MEM_CTRL_REG: RAM_DST (Bit 3)                       */
#define MEMCTRL_MEM_CTRL_REG_RAM_DST_Msk      (0x8UL)                   /*!< MEMCTRL MEM_CTRL_REG: RAM_DST (Bitfield-Mask: 0x01)         */
#define MEMCTRL_MEM_CTRL_REG_ROM_MARGIN_CTRL_Pos (4UL)                  /*!< MEMCTRL MEM_CTRL_REG: ROM_MARGIN_CTRL (Bit 4)               */
#define MEMCTRL_MEM_CTRL_REG_ROM_MARGIN_CTRL_Msk (0xf0UL)               /*!< MEMCTRL MEM_CTRL_REG: ROM_MARGIN_CTRL (Bitfield-Mask: 0x0f) */
#define MEMCTRL_MEM_CTRL_REG_ROM_MARGIN_EN_Pos (8UL)                    /*!< MEMCTRL MEM_CTRL_REG: ROM_MARGIN_EN (Bit 8)                 */
#define MEMCTRL_MEM_CTRL_REG_ROM_MARGIN_EN_Msk (0x100UL)                /*!< MEMCTRL MEM_CTRL_REG: ROM_MARGIN_EN (Bitfield-Mask: 0x01)   */
/* ----------------------------  MEMCTRL_MEM_PRIO_REG  ---------------------------- */
#define MEMCTRL_MEM_PRIO_REG_SNC_PRIO_Pos     (0UL)                     /*!< MEMCTRL MEM_PRIO_REG: SNC_PRIO (Bit 0)                      */
#define MEMCTRL_MEM_PRIO_REG_SNC_PRIO_Msk     (0x3UL)                   /*!< MEMCTRL MEM_PRIO_REG: SNC_PRIO (Bitfield-Mask: 0x03)        */
#define MEMCTRL_MEM_PRIO_REG_AHB2_PRIO_Pos    (2UL)                     /*!< MEMCTRL MEM_PRIO_REG: AHB2_PRIO (Bit 2)                     */
#define MEMCTRL_MEM_PRIO_REG_AHB2_PRIO_Msk    (0xcUL)                   /*!< MEMCTRL MEM_PRIO_REG: AHB2_PRIO (Bitfield-Mask: 0x03)       */
#define MEMCTRL_MEM_PRIO_REG_AHB_PRIO_Pos     (4UL)                     /*!< MEMCTRL MEM_PRIO_REG: AHB_PRIO (Bit 4)                      */
#define MEMCTRL_MEM_PRIO_REG_AHB_PRIO_Msk     (0x30UL)                  /*!< MEMCTRL MEM_PRIO_REG: AHB_PRIO (Bitfield-Mask: 0x03)        */
/* ----------------------------  MEMCTRL_MEM_STALL_REG  --------------------------- */
#define MEMCTRL_MEM_STALL_REG_SNC_MAX_STALL_Pos (0UL)                   /*!< MEMCTRL MEM_STALL_REG: SNC_MAX_STALL (Bit 0)                */
#define MEMCTRL_MEM_STALL_REG_SNC_MAX_STALL_Msk (0xfUL)                 /*!< MEMCTRL MEM_STALL_REG: SNC_MAX_STALL (Bitfield-Mask: 0x0f)  */
#define MEMCTRL_MEM_STALL_REG_AHB2_MAX_STALL_Pos (4UL)                  /*!< MEMCTRL MEM_STALL_REG: AHB2_MAX_STALL (Bit 4)               */
#define MEMCTRL_MEM_STALL_REG_AHB2_MAX_STALL_Msk (0xf0UL)               /*!< MEMCTRL MEM_STALL_REG: AHB2_MAX_STALL (Bitfield-Mask: 0x0f) */
#define MEMCTRL_MEM_STALL_REG_AHB_MAX_STALL_Pos (8UL)                   /*!< MEMCTRL MEM_STALL_REG: AHB_MAX_STALL (Bit 8)                */
#define MEMCTRL_MEM_STALL_REG_AHB_MAX_STALL_Msk (0xf00UL)               /*!< MEMCTRL MEM_STALL_REG: AHB_MAX_STALL (Bitfield-Mask: 0x0f)  */
/* ---------------------------  MEMCTRL_MEM_STATUS_REG  --------------------------- */
#define MEMCTRL_MEM_STATUS_REG_AHB_WRITE_BUFF_Pos (0UL)                 /*!< MEMCTRL MEM_STATUS_REG: AHB_WRITE_BUFF (Bit 0)              */
#define MEMCTRL_MEM_STATUS_REG_AHB_WRITE_BUFF_Msk (0x1UL)               /*!< MEMCTRL MEM_STATUS_REG: AHB_WRITE_BUFF (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS_REG_AHB2_WRITE_BUFF_Pos (1UL)                /*!< MEMCTRL MEM_STATUS_REG: AHB2_WRITE_BUFF (Bit 1)             */
#define MEMCTRL_MEM_STATUS_REG_AHB2_WRITE_BUFF_Msk (0x2UL)              /*!< MEMCTRL MEM_STATUS_REG: AHB2_WRITE_BUFF (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS_REG_AHB_CLR_WR_BUFF_Pos (2UL)                /*!< MEMCTRL MEM_STATUS_REG: AHB_CLR_WR_BUFF (Bit 2)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_CLR_WR_BUFF_Msk (0x4UL)              /*!< MEMCTRL MEM_STATUS_REG: AHB_CLR_WR_BUFF (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS_REG_AHB2_CLR_WR_BUFF_Pos (3UL)               /*!< MEMCTRL MEM_STATUS_REG: AHB2_CLR_WR_BUFF (Bit 3)            */
#define MEMCTRL_MEM_STATUS_REG_AHB2_CLR_WR_BUFF_Msk (0x8UL)             /*!< MEMCTRL MEM_STATUS_REG: AHB2_CLR_WR_BUFF (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS_REG_AHB_WR_BUFF_CNT_Pos (4UL)                /*!< MEMCTRL MEM_STATUS_REG: AHB_WR_BUFF_CNT (Bit 4)             */
#define MEMCTRL_MEM_STATUS_REG_AHB_WR_BUFF_CNT_Msk (0xf0UL)             /*!< MEMCTRL MEM_STATUS_REG: AHB_WR_BUFF_CNT (Bitfield-Mask: 0x0f) */
#define MEMCTRL_MEM_STATUS_REG_AHB2_WR_BUFF_CNT_Pos (8UL)               /*!< MEMCTRL MEM_STATUS_REG: AHB2_WR_BUFF_CNT (Bit 8)            */
#define MEMCTRL_MEM_STATUS_REG_AHB2_WR_BUFF_CNT_Msk (0xf00UL)           /*!< MEMCTRL MEM_STATUS_REG: AHB2_WR_BUFF_CNT (Bitfield-Mask: 0x0f) */
#define MEMCTRL_MEM_STATUS_REG_CMI_NOT_READY_Pos (12UL)                 /*!< MEMCTRL MEM_STATUS_REG: CMI_NOT_READY (Bit 12)              */
#define MEMCTRL_MEM_STATUS_REG_CMI_NOT_READY_Msk (0x1000UL)             /*!< MEMCTRL MEM_STATUS_REG: CMI_NOT_READY (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS_REG_CMI_CLEAR_READY_Pos (13UL)               /*!< MEMCTRL MEM_STATUS_REG: CMI_CLEAR_READY (Bit 13)            */
#define MEMCTRL_MEM_STATUS_REG_CMI_CLEAR_READY_Msk (0x2000UL)           /*!< MEMCTRL MEM_STATUS_REG: CMI_CLEAR_READY (Bitfield-Mask: 0x01) */
/* ---------------------------  MEMCTRL_MEM_STATUS2_REG  -------------------------- */
#define MEMCTRL_MEM_STATUS2_REG_RAM1_OFF_BUT_ACCESS_Pos (0UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM1_OFF_BUT_ACCESS (Bit 0)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM1_OFF_BUT_ACCESS_Msk (0x1UL)         /*!< MEMCTRL MEM_STATUS2_REG: RAM1_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM2_OFF_BUT_ACCESS_Pos (1UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM2_OFF_BUT_ACCESS (Bit 1)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM2_OFF_BUT_ACCESS_Msk (0x2UL)         /*!< MEMCTRL MEM_STATUS2_REG: RAM2_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM3_OFF_BUT_ACCESS_Pos (2UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM3_OFF_BUT_ACCESS (Bit 2)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM3_OFF_BUT_ACCESS_Msk (0x4UL)         /*!< MEMCTRL MEM_STATUS2_REG: RAM3_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM4_OFF_BUT_ACCESS_Pos (3UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM4_OFF_BUT_ACCESS (Bit 3)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM4_OFF_BUT_ACCESS_Msk (0x8UL)         /*!< MEMCTRL MEM_STATUS2_REG: RAM4_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM5_OFF_BUT_ACCESS_Pos (4UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM5_OFF_BUT_ACCESS (Bit 4)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM5_OFF_BUT_ACCESS_Msk (0x10UL)        /*!< MEMCTRL MEM_STATUS2_REG: RAM5_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM6_OFF_BUT_ACCESS_Pos (5UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM6_OFF_BUT_ACCESS (Bit 5)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM6_OFF_BUT_ACCESS_Msk (0x20UL)        /*!< MEMCTRL MEM_STATUS2_REG: RAM6_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM7_OFF_BUT_ACCESS_Pos (6UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM7_OFF_BUT_ACCESS (Bit 6)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM7_OFF_BUT_ACCESS_Msk (0x40UL)        /*!< MEMCTRL MEM_STATUS2_REG: RAM7_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
#define MEMCTRL_MEM_STATUS2_REG_RAM8_OFF_BUT_ACCESS_Pos (7UL)           /*!< MEMCTRL MEM_STATUS2_REG: RAM8_OFF_BUT_ACCESS (Bit 7)        */
#define MEMCTRL_MEM_STATUS2_REG_RAM8_OFF_BUT_ACCESS_Msk (0x80UL)        /*!< MEMCTRL MEM_STATUS2_REG: RAM8_OFF_BUT_ACCESS (Bitfield-Mask: 0x01) */
/* --------------------------  MEMCTRL_CMI_CODE_BASE_REG  ------------------------- */
#define MEMCTRL_CMI_CODE_BASE_REG_CMI_CODE_BASE_ADDR_Pos (10UL)         /*!< MEMCTRL CMI_CODE_BASE_REG: CMI_CODE_BASE_ADDR (Bit 10)      */
#define MEMCTRL_CMI_CODE_BASE_REG_CMI_CODE_BASE_ADDR_Msk (0x7fc00UL)    /*!< MEMCTRL CMI_CODE_BASE_REG: CMI_CODE_BASE_ADDR (Bitfield-Mask: 0x1ff) */
/* --------------------------  MEMCTRL_CMI_DATA_BASE_REG  ------------------------- */
#define MEMCTRL_CMI_DATA_BASE_REG_CMI_DATA_BASE_ADDR_Pos (2UL)          /*!< MEMCTRL CMI_DATA_BASE_REG: CMI_DATA_BASE_ADDR (Bit 2)       */
#define MEMCTRL_CMI_DATA_BASE_REG_CMI_DATA_BASE_ADDR_Msk (0x7fffcUL)    /*!< MEMCTRL CMI_DATA_BASE_REG: CMI_DATA_BASE_ADDR (Bitfield-Mask: 0x1ffff) */
/* -------------------------  MEMCTRL_CMI_SHARED_BASE_REG  ------------------------ */
#define MEMCTRL_CMI_SHARED_BASE_REG_CMI_SHARED_BASE_ADDR_Pos (10UL)     /*!< MEMCTRL CMI_SHARED_BASE_REG: CMI_SHARED_BASE_ADDR (Bit 10)  */
#define MEMCTRL_CMI_SHARED_BASE_REG_CMI_SHARED_BASE_ADDR_Msk (0x7fc00UL) /*!< MEMCTRL CMI_SHARED_BASE_REG: CMI_SHARED_BASE_ADDR (Bitfield-Mask: 0x1ff) */
/* -----------------------------  MEMCTRL_CMI_END_REG  ---------------------------- */
#define MEMCTRL_CMI_END_REG_CMI_END_ADDR_Pos  (10UL)                    /*!< MEMCTRL CMI_END_REG: CMI_END_ADDR (Bit 10)                  */
#define MEMCTRL_CMI_END_REG_CMI_END_ADDR_Msk  (0x7fc00UL)               /*!< MEMCTRL CMI_END_REG: CMI_END_ADDR (Bitfield-Mask: 0x1ff)    */
/* ----------------------------  MEMCTRL_SNC_BASE_REG  ---------------------------- */
#define MEMCTRL_SNC_BASE_REG_SNC_BASE_ADDRESS_Pos (2UL)                 /*!< MEMCTRL SNC_BASE_REG: SNC_BASE_ADDRESS (Bit 2)              */
#define MEMCTRL_SNC_BASE_REG_SNC_BASE_ADDRESS_Msk (0x7fffcUL)           /*!< MEMCTRL SNC_BASE_REG: SNC_BASE_ADDRESS (Bitfield-Mask: 0x1ffff) */
/* ----------------------------  MEMCTRL_BUSY_SET_REG  ---------------------------- */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART_Pos    (0UL)                     /*!< MEMCTRL BUSY_SET_REG: BUSY_UART (Bit 0)                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART_Msk    (0x3UL)                   /*!< MEMCTRL BUSY_SET_REG: BUSY_UART (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART2_Pos   (2UL)                     /*!< MEMCTRL BUSY_SET_REG: BUSY_UART2 (Bit 2)                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART2_Msk   (0xcUL)                   /*!< MEMCTRL BUSY_SET_REG: BUSY_UART2 (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI_Pos     (4UL)                     /*!< MEMCTRL BUSY_SET_REG: BUSY_SPI (Bit 4)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI_Msk     (0x30UL)                  /*!< MEMCTRL BUSY_SET_REG: BUSY_SPI (Bitfield-Mask: 0x03)        */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI2_Pos    (6UL)                     /*!< MEMCTRL BUSY_SET_REG: BUSY_SPI2 (Bit 6)                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPI2_Msk    (0xc0UL)                  /*!< MEMCTRL BUSY_SET_REG: BUSY_SPI2 (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C_Pos     (8UL)                     /*!< MEMCTRL BUSY_SET_REG: BUSY_I2C (Bit 8)                      */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C_Msk     (0x300UL)                 /*!< MEMCTRL BUSY_SET_REG: BUSY_I2C (Bitfield-Mask: 0x03)        */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C2_Pos    (10UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_I2C2 (Bit 10)                    */
#define MEMCTRL_BUSY_SET_REG_BUSY_I2C2_Msk    (0xc00UL)                 /*!< MEMCTRL BUSY_SET_REG: BUSY_I2C2 (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_SET_REG_BUSY_SDADC_Pos   (12UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_SDADC (Bit 12)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_SDADC_Msk   (0x3000UL)                /*!< MEMCTRL BUSY_SET_REG: BUSY_SDADC (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_PCM_Pos     (14UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_PCM (Bit 14)                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_PCM_Msk     (0xc000UL)                /*!< MEMCTRL BUSY_SET_REG: BUSY_PCM (Bitfield-Mask: 0x03)        */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC_Pos     (16UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_SRC (Bit 16)                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_SRC_Msk     (0x30000UL)               /*!< MEMCTRL BUSY_SET_REG: BUSY_SRC (Bitfield-Mask: 0x03)        */
#define MEMCTRL_BUSY_SET_REG_BUSY_PDM_Pos     (18UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_PDM (Bit 18)                     */
#define MEMCTRL_BUSY_SET_REG_BUSY_PDM_Msk     (0xc0000UL)               /*!< MEMCTRL BUSY_SET_REG: BUSY_PDM (Bitfield-Mask: 0x03)        */
#define MEMCTRL_BUSY_SET_REG_BUSY_GPADC_Pos   (20UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_GPADC (Bit 20)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_GPADC_Msk   (0x300000UL)              /*!< MEMCTRL BUSY_SET_REG: BUSY_GPADC (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART3_Pos   (22UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_UART3 (Bit 22)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_UART3_Msk   (0xc00000UL)              /*!< MEMCTRL BUSY_SET_REG: BUSY_UART3 (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_TIMER_Pos   (24UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_TIMER (Bit 24)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_TIMER_Msk   (0x3000000UL)             /*!< MEMCTRL BUSY_SET_REG: BUSY_TIMER (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_TIMER2_Pos  (26UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_TIMER2 (Bit 26)                  */
#define MEMCTRL_BUSY_SET_REG_BUSY_TIMER2_Msk  (0xc000000UL)             /*!< MEMCTRL BUSY_SET_REG: BUSY_TIMER2 (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_SET_REG_BUSY_MOTOR_Pos   (28UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_MOTOR (Bit 28)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_MOTOR_Msk   (0x30000000UL)            /*!< MEMCTRL BUSY_SET_REG: BUSY_MOTOR (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPARE_Pos   (30UL)                    /*!< MEMCTRL BUSY_SET_REG: BUSY_SPARE (Bit 30)                   */
#define MEMCTRL_BUSY_SET_REG_BUSY_SPARE_Msk   (0xc0000000UL)            /*!< MEMCTRL BUSY_SET_REG: BUSY_SPARE (Bitfield-Mask: 0x03)      */
/* ---------------------------  MEMCTRL_BUSY_RESET_REG  --------------------------- */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART_Pos  (0UL)                     /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART (Bit 0)                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART_Msk  (0x3UL)                   /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART2_Pos (2UL)                     /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART2 (Bit 2)                  */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART2_Msk (0xcUL)                   /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART2 (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI_Pos   (4UL)                     /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPI (Bit 4)                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI_Msk   (0x30UL)                  /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPI (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI2_Pos  (6UL)                     /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPI2 (Bit 6)                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPI2_Msk  (0xc0UL)                  /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPI2 (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C_Pos   (8UL)                     /*!< MEMCTRL BUSY_RESET_REG: BUSY_I2C (Bit 8)                    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C_Msk   (0x300UL)                 /*!< MEMCTRL BUSY_RESET_REG: BUSY_I2C (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C2_Pos  (10UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_I2C2 (Bit 10)                  */
#define MEMCTRL_BUSY_RESET_REG_BUSY_I2C2_Msk  (0xc00UL)                 /*!< MEMCTRL BUSY_RESET_REG: BUSY_I2C2 (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SDADC_Pos (12UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_SDADC (Bit 12)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SDADC_Msk (0x3000UL)                /*!< MEMCTRL BUSY_RESET_REG: BUSY_SDADC (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PCM_Pos   (14UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_PCM (Bit 14)                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PCM_Msk   (0xc000UL)                /*!< MEMCTRL BUSY_RESET_REG: BUSY_PCM (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC_Pos   (16UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_SRC (Bit 16)                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SRC_Msk   (0x30000UL)               /*!< MEMCTRL BUSY_RESET_REG: BUSY_SRC (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PDM_Pos   (18UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_PDM (Bit 18)                   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_PDM_Msk   (0xc0000UL)               /*!< MEMCTRL BUSY_RESET_REG: BUSY_PDM (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_RESET_REG_BUSY_GPADC_Pos (20UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_GPADC (Bit 20)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_GPADC_Msk (0x300000UL)              /*!< MEMCTRL BUSY_RESET_REG: BUSY_GPADC (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART3_Pos (22UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART3 (Bit 22)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_UART3_Msk (0xc00000UL)              /*!< MEMCTRL BUSY_RESET_REG: BUSY_UART3 (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_TIMER_Pos (24UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_TIMER (Bit 24)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_TIMER_Msk (0x3000000UL)             /*!< MEMCTRL BUSY_RESET_REG: BUSY_TIMER (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_TIMER2_Pos (26UL)                   /*!< MEMCTRL BUSY_RESET_REG: BUSY_TIMER2 (Bit 26)                */
#define MEMCTRL_BUSY_RESET_REG_BUSY_TIMER2_Msk (0xc000000UL)            /*!< MEMCTRL BUSY_RESET_REG: BUSY_TIMER2 (Bitfield-Mask: 0x03)   */
#define MEMCTRL_BUSY_RESET_REG_BUSY_MOTOR_Pos (28UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_MOTOR (Bit 28)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_MOTOR_Msk (0x30000000UL)            /*!< MEMCTRL BUSY_RESET_REG: BUSY_MOTOR (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPARE_Pos (30UL)                    /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPARE (Bit 30)                 */
#define MEMCTRL_BUSY_RESET_REG_BUSY_SPARE_Msk (0xc0000000UL)            /*!< MEMCTRL BUSY_RESET_REG: BUSY_SPARE (Bitfield-Mask: 0x03)    */
/* ----------------------------  MEMCTRL_BUSY_STAT_REG  --------------------------- */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART_Pos   (0UL)                     /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART (Bit 0)                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART_Msk   (0x3UL)                   /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART2_Pos  (2UL)                     /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART2 (Bit 2)                   */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART2_Msk  (0xcUL)                   /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART2 (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI_Pos    (4UL)                     /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPI (Bit 4)                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI_Msk    (0x30UL)                  /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPI (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI2_Pos   (6UL)                     /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPI2 (Bit 6)                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPI2_Msk   (0xc0UL)                  /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPI2 (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C_Pos    (8UL)                     /*!< MEMCTRL BUSY_STAT_REG: BUSY_I2C (Bit 8)                     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C_Msk    (0x300UL)                 /*!< MEMCTRL BUSY_STAT_REG: BUSY_I2C (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C2_Pos   (10UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_I2C2 (Bit 10)                   */
#define MEMCTRL_BUSY_STAT_REG_BUSY_I2C2_Msk   (0xc00UL)                 /*!< MEMCTRL BUSY_STAT_REG: BUSY_I2C2 (Bitfield-Mask: 0x03)      */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SDADC_Pos  (12UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_SDADC (Bit 12)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SDADC_Msk  (0x3000UL)                /*!< MEMCTRL BUSY_STAT_REG: BUSY_SDADC (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PCM_Pos    (14UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_PCM (Bit 14)                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PCM_Msk    (0xc000UL)                /*!< MEMCTRL BUSY_STAT_REG: BUSY_PCM (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC_Pos    (16UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_SRC (Bit 16)                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SRC_Msk    (0x30000UL)               /*!< MEMCTRL BUSY_STAT_REG: BUSY_SRC (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PDM_Pos    (18UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_PDM (Bit 18)                    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_PDM_Msk    (0xc0000UL)               /*!< MEMCTRL BUSY_STAT_REG: BUSY_PDM (Bitfield-Mask: 0x03)       */
#define MEMCTRL_BUSY_STAT_REG_BUSY_GPADC_Pos  (20UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_GPADC (Bit 20)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_GPADC_Msk  (0x300000UL)              /*!< MEMCTRL BUSY_STAT_REG: BUSY_GPADC (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART3_Pos  (22UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART3 (Bit 22)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_UART3_Msk  (0xc00000UL)              /*!< MEMCTRL BUSY_STAT_REG: BUSY_UART3 (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_TIMER_Pos  (24UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_TIMER (Bit 24)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_TIMER_Msk  (0x3000000UL)             /*!< MEMCTRL BUSY_STAT_REG: BUSY_TIMER (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_TIMER2_Pos (26UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_TIMER2 (Bit 26)                 */
#define MEMCTRL_BUSY_STAT_REG_BUSY_TIMER2_Msk (0xc000000UL)             /*!< MEMCTRL BUSY_STAT_REG: BUSY_TIMER2 (Bitfield-Mask: 0x03)    */
#define MEMCTRL_BUSY_STAT_REG_BUSY_MOTOR_Pos  (28UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_MOTOR (Bit 28)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_MOTOR_Msk  (0x30000000UL)            /*!< MEMCTRL BUSY_STAT_REG: BUSY_MOTOR (Bitfield-Mask: 0x03)     */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPARE_Pos  (30UL)                    /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPARE (Bit 30)                  */
#define MEMCTRL_BUSY_STAT_REG_BUSY_SPARE_Msk  (0xc0000000UL)            /*!< MEMCTRL BUSY_STAT_REG: BUSY_SPARE (Bitfield-Mask: 0x03)     */
/* ================================================================================ */
/* ================          struct 'OTPC' Position & Mask         ================ */
/* ================================================================================ */
/* -----------------------------  OTPC_OTPC_MODE_REG  ----------------------------- */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_MODE_Pos (0UL)                     /*!< OTPC OTPC_MODE_REG: OTPC_MODE_MODE (Bit 0)                  */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_MODE_Msk (0x7UL)                   /*!< OTPC OTPC_MODE_REG: OTPC_MODE_MODE (Bitfield-Mask: 0x07)    */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_USE_TST_ROW_Pos (4UL)              /*!< OTPC OTPC_MODE_REG: OTPC_MODE_USE_TST_ROW (Bit 4)           */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_USE_TST_ROW_Msk (0x10UL)           /*!< OTPC OTPC_MODE_REG: OTPC_MODE_USE_TST_ROW (Bitfield-Mask: 0x01) */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_HT_MARG_EN_Pos (5UL)               /*!< OTPC OTPC_MODE_REG: OTPC_MODE_HT_MARG_EN (Bit 5)            */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_HT_MARG_EN_Msk (0x20UL)            /*!< OTPC OTPC_MODE_REG: OTPC_MODE_HT_MARG_EN (Bitfield-Mask: 0x01) */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_PRG_SEL_Pos (6UL)                  /*!< OTPC OTPC_MODE_REG: OTPC_MODE_PRG_SEL (Bit 6)               */
#define OTPC_OTPC_MODE_REG_OTPC_MODE_PRG_SEL_Msk (0xc0UL)               /*!< OTPC OTPC_MODE_REG: OTPC_MODE_PRG_SEL (Bitfield-Mask: 0x03) */
/* -----------------------------  OTPC_OTPC_STAT_REG  ----------------------------- */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PRDY_Pos (0UL)                     /*!< OTPC OTPC_STAT_REG: OTPC_STAT_PRDY (Bit 0)                  */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PRDY_Msk (0x1UL)                   /*!< OTPC OTPC_STAT_REG: OTPC_STAT_PRDY (Bitfield-Mask: 0x01)    */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PBUF_EMPTY_Pos (1UL)               /*!< OTPC OTPC_STAT_REG: OTPC_STAT_PBUF_EMPTY (Bit 1)            */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_PBUF_EMPTY_Msk (0x2UL)             /*!< OTPC OTPC_STAT_REG: OTPC_STAT_PBUF_EMPTY (Bitfield-Mask: 0x01) */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_MRDY_Pos (2UL)                     /*!< OTPC OTPC_STAT_REG: OTPC_STAT_MRDY (Bit 2)                  */
#define OTPC_OTPC_STAT_REG_OTPC_STAT_MRDY_Msk (0x4UL)                   /*!< OTPC OTPC_STAT_REG: OTPC_STAT_MRDY (Bitfield-Mask: 0x01)    */
/* -----------------------------  OTPC_OTPC_PADDR_REG  ---------------------------- */
#define OTPC_OTPC_PADDR_REG_OTPC_PADDR_Pos    (0UL)                     /*!< OTPC OTPC_PADDR_REG: OTPC_PADDR (Bit 0)                     */
#define OTPC_OTPC_PADDR_REG_OTPC_PADDR_Msk    (0x3ffUL)                 /*!< OTPC OTPC_PADDR_REG: OTPC_PADDR (Bitfield-Mask: 0x3ff)      */
/* -----------------------------  OTPC_OTPC_PWORD_REG  ---------------------------- */
#define OTPC_OTPC_PWORD_REG_OTPC_PWORD_Pos    (0UL)                     /*!< OTPC OTPC_PWORD_REG: OTPC_PWORD (Bit 0)                     */
#define OTPC_OTPC_PWORD_REG_OTPC_PWORD_Msk    (0xffffffffUL)            /*!< OTPC OTPC_PWORD_REG: OTPC_PWORD (Bitfield-Mask: 0xffffffff) */
/* -----------------------------  OTPC_OTPC_TIM1_REG  ----------------------------- */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_1US_Pos (0UL)                 /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_1US (Bit 0)              */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_1US_Msk (0x7fUL)              /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_1US (Bitfield-Mask: 0x7f) */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_20NS_Pos (8UL)                /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_20NS (Bit 8)             */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_20NS_Msk (0x300UL)            /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_20NS (Bitfield-Mask: 0x03) */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_RD_Pos (12UL)                 /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_RD (Bit 12)              */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_CC_T_RD_Msk (0x7000UL)             /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_CC_T_RD (Bitfield-Mask: 0x07) */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_PL_Pos (16UL)                 /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_PL (Bit 16)              */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_PL_Msk (0xf0000UL)            /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_PL (Bitfield-Mask: 0x0f) */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CS_Pos (20UL)                 /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_CS (Bit 20)              */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CS_Msk (0xf00000UL)           /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_CS (Bitfield-Mask: 0x0f) */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CSP_Pos (24UL)                /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_CSP (Bit 24)             */
#define OTPC_OTPC_TIM1_REG_OTPC_TIM1_US_T_CSP_Msk (0x7f000000UL)        /*!< OTPC OTPC_TIM1_REG: OTPC_TIM1_US_T_CSP (Bitfield-Mask: 0x7f) */
/* -----------------------------  OTPC_OTPC_TIM2_REG  ----------------------------- */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PW_Pos (0UL)                  /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PW (Bit 0)               */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PW_Msk (0x1fUL)               /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PW (Bitfield-Mask: 0x1f) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PWI_Pos (5UL)                 /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PWI (Bit 5)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PWI_Msk (0xe0UL)              /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PWI (Bitfield-Mask: 0x07) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPR_Pos (8UL)                 /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPR (Bit 8)              */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPR_Msk (0x7f00UL)            /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPR (Bitfield-Mask: 0x7f) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPS_Pos (16UL)                /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPS (Bit 16)             */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPS_Msk (0x1f0000UL)          /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPS (Bitfield-Mask: 0x1f) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_VDS_Pos (21UL)                /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_VDS (Bit 21)             */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_VDS_Msk (0xe00000UL)          /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_VDS (Bitfield-Mask: 0x07) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPH_Pos (24UL)                /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPH (Bit 24)             */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_PPH_Msk (0x1f000000UL)        /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_PPH (Bitfield-Mask: 0x1f) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_SAS_Pos (29UL)                /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_SAS (Bit 29)             */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_T_SAS_Msk (0x60000000UL)        /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_T_SAS (Bitfield-Mask: 0x03) */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_ADD_CC_EN_Pos (31UL)            /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_ADD_CC_EN (Bit 31)         */
#define OTPC_OTPC_TIM2_REG_OTPC_TIM2_US_ADD_CC_EN_Msk (0x80000000UL)    /*!< OTPC OTPC_TIM2_REG: OTPC_TIM2_US_ADD_CC_EN (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'PATCH' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  PATCH_PATCH_VALID_REG  --------------------------- */
#define PATCH_PATCH_VALID_REG_PATCH_VALID_Pos (0UL)                     /*!< PATCH PATCH_VALID_REG: PATCH_VALID (Bit 0)                  */
#define PATCH_PATCH_VALID_REG_PATCH_VALID_Msk (0x3fffffUL)              /*!< PATCH PATCH_VALID_REG: PATCH_VALID (Bitfield-Mask: 0x3fffff) */
/* ----------------------------  PATCH_PATCH_ADDR0_REG  --------------------------- */
#define PATCH_PATCH_ADDR0_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR0_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR0_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR0_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR1_REG  --------------------------- */
#define PATCH_PATCH_ADDR1_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR1_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR1_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR1_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR2_REG  --------------------------- */
#define PATCH_PATCH_ADDR2_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR2_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR2_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR2_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR3_REG  --------------------------- */
#define PATCH_PATCH_ADDR3_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR3_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR3_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR3_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR4_REG  --------------------------- */
#define PATCH_PATCH_ADDR4_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR4_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR4_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR4_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR5_REG  --------------------------- */
#define PATCH_PATCH_ADDR5_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR5_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR5_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR5_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR6_REG  --------------------------- */
#define PATCH_PATCH_ADDR6_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR6_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR6_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR6_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR7_REG  --------------------------- */
#define PATCH_PATCH_ADDR7_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR7_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR7_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR7_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR8_REG  --------------------------- */
#define PATCH_PATCH_ADDR8_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR8_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR8_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR8_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ----------------------------  PATCH_PATCH_ADDR9_REG  --------------------------- */
#define PATCH_PATCH_ADDR9_REG_PATCH_ADDR_C_Pos (1UL)                    /*!< PATCH PATCH_ADDR9_REG: PATCH_ADDR_C (Bit 1)                 */
#define PATCH_PATCH_ADDR9_REG_PATCH_ADDR_C_Msk (0x1fffeUL)              /*!< PATCH PATCH_ADDR9_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR10_REG  --------------------------- */
#define PATCH_PATCH_ADDR10_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR10_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR10_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR10_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR11_REG  --------------------------- */
#define PATCH_PATCH_ADDR11_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR11_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR11_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR11_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR12_REG  --------------------------- */
#define PATCH_PATCH_ADDR12_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR12_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR12_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR12_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR13_REG  --------------------------- */
#define PATCH_PATCH_ADDR13_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR13_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR13_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR13_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR14_REG  --------------------------- */
#define PATCH_PATCH_ADDR14_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR14_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR14_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR14_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR15_REG  --------------------------- */
#define PATCH_PATCH_ADDR15_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR15_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR15_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR15_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR16_REG  --------------------------- */
#define PATCH_PATCH_ADDR16_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR16_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR16_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR16_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR17_REG  --------------------------- */
#define PATCH_PATCH_ADDR17_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR17_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR17_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR17_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR18_REG  --------------------------- */
#define PATCH_PATCH_ADDR18_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR18_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR18_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR18_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR19_REG  --------------------------- */
#define PATCH_PATCH_ADDR19_REG_PATCH_ADDR_C_Pos (1UL)                   /*!< PATCH PATCH_ADDR19_REG: PATCH_ADDR_C (Bit 1)                */
#define PATCH_PATCH_ADDR19_REG_PATCH_ADDR_C_Msk (0x1fffeUL)             /*!< PATCH PATCH_ADDR19_REG: PATCH_ADDR_C (Bitfield-Mask: 0xffff) */
/* ---------------------------  PATCH_PATCH_ADDR20_REG  --------------------------- */
#define PATCH_PATCH_ADDR20_REG_PATCH_ADDR_D_Pos (2UL)                   /*!< PATCH PATCH_ADDR20_REG: PATCH_ADDR_D (Bit 2)                */
#define PATCH_PATCH_ADDR20_REG_PATCH_ADDR_D_Msk (0x1fffcUL)             /*!< PATCH PATCH_ADDR20_REG: PATCH_ADDR_D (Bitfield-Mask: 0x7fff) */
/* ---------------------------  PATCH_PATCH_DATA20_REG  --------------------------- */
#define PATCH_PATCH_DATA20_REG_PATCH_DATA_Pos (0UL)                     /*!< PATCH PATCH_DATA20_REG: PATCH_DATA (Bit 0)                  */
#define PATCH_PATCH_DATA20_REG_PATCH_DATA_Msk (0xffffffffUL)            /*!< PATCH PATCH_DATA20_REG: PATCH_DATA (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  PATCH_PATCH_ADDR21_REG  --------------------------- */
#define PATCH_PATCH_ADDR21_REG_PATCH_ADDR_D_Pos (2UL)                   /*!< PATCH PATCH_ADDR21_REG: PATCH_ADDR_D (Bit 2)                */
#define PATCH_PATCH_ADDR21_REG_PATCH_ADDR_D_Msk (0x1fffcUL)             /*!< PATCH PATCH_ADDR21_REG: PATCH_ADDR_D (Bitfield-Mask: 0x7fff) */
/* ---------------------------  PATCH_PATCH_DATA21_REG  --------------------------- */
#define PATCH_PATCH_DATA21_REG_PATCH_DATA_Pos (0UL)                     /*!< PATCH PATCH_DATA21_REG: PATCH_DATA (Bit 0)                  */
#define PATCH_PATCH_DATA21_REG_PATCH_DATA_Msk (0xffffffffUL)            /*!< PATCH PATCH_DATA21_REG: PATCH_DATA (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'PDC' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  PDC_PDC_CTRL0_REG  ----------------------------- */
#define PDC_PDC_CTRL0_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL0_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL0_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL0_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL0_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL0_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL0_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL0_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL0_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL0_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL0_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL0_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL0_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL0_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL0_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL0_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL0_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL0_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL0_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL0_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL0_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL0_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL0_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL0_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL0_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL0_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL0_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL0_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL1_REG  ----------------------------- */
#define PDC_PDC_CTRL1_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL1_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL1_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL1_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL1_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL1_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL1_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL1_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL1_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL1_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL1_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL1_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL1_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL1_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL1_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL1_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL1_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL1_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL1_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL1_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL1_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL1_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL1_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL1_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL1_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL1_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL1_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL1_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL2_REG  ----------------------------- */
#define PDC_PDC_CTRL2_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL2_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL2_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL2_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL2_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL2_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL2_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL2_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL2_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL2_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL2_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL2_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL2_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL2_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL2_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL2_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL2_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL2_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL2_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL2_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL2_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL2_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL2_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL2_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL2_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL2_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL2_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL2_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL3_REG  ----------------------------- */
#define PDC_PDC_CTRL3_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL3_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL3_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL3_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL3_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL3_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL3_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL3_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL3_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL3_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL3_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL3_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL3_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL3_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL3_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL3_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL3_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL3_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL3_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL3_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL3_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL3_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL3_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL3_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL3_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL3_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL3_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL3_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL4_REG  ----------------------------- */
#define PDC_PDC_CTRL4_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL4_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL4_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL4_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL4_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL4_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL4_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL4_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL4_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL4_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL4_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL4_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL4_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL4_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL4_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL4_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL4_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL4_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL4_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL4_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL4_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL4_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL4_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL4_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL4_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL4_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL4_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL4_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL5_REG  ----------------------------- */
#define PDC_PDC_CTRL5_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL5_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL5_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL5_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL5_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL5_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL5_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL5_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL5_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL5_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL5_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL5_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL5_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL5_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL5_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL5_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL5_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL5_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL5_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL5_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL5_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL5_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL5_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL5_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL5_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL5_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL5_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL5_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL6_REG  ----------------------------- */
#define PDC_PDC_CTRL6_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL6_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL6_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL6_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL6_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL6_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL6_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL6_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL6_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL6_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL6_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL6_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL6_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL6_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL6_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL6_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL6_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL6_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL6_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL6_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL6_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL6_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL6_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL6_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL6_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL6_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL6_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL6_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL7_REG  ----------------------------- */
#define PDC_PDC_CTRL7_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL7_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL7_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL7_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL7_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL7_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL7_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL7_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL7_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL7_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL7_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL7_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL7_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL7_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL7_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL7_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL7_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL7_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL7_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL7_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL7_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL7_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL7_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL7_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL7_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL7_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL7_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL7_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL8_REG  ----------------------------- */
#define PDC_PDC_CTRL8_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL8_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL8_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL8_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL8_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL8_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL8_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL8_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL8_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL8_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL8_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL8_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL8_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL8_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL8_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL8_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL8_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL8_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL8_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL8_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL8_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL8_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL8_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL8_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL8_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL8_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL8_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL8_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* ------------------------------  PDC_PDC_CTRL9_REG  ----------------------------- */
#define PDC_PDC_CTRL9_REG_TRIG_SELECT_Pos     (0UL)                     /*!< PDC PDC_CTRL9_REG: TRIG_SELECT (Bit 0)                      */
#define PDC_PDC_CTRL9_REG_TRIG_SELECT_Msk     (0x3UL)                   /*!< PDC PDC_CTRL9_REG: TRIG_SELECT (Bitfield-Mask: 0x03)        */
#define PDC_PDC_CTRL9_REG_TRIG_ID_Pos         (2UL)                     /*!< PDC PDC_CTRL9_REG: TRIG_ID (Bit 2)                          */
#define PDC_PDC_CTRL9_REG_TRIG_ID_Msk         (0x7cUL)                  /*!< PDC PDC_CTRL9_REG: TRIG_ID (Bitfield-Mask: 0x1f)            */
#define PDC_PDC_CTRL9_REG_EN_XTAL_Pos         (7UL)                     /*!< PDC PDC_CTRL9_REG: EN_XTAL (Bit 7)                          */
#define PDC_PDC_CTRL9_REG_EN_XTAL_Msk         (0x80UL)                  /*!< PDC PDC_CTRL9_REG: EN_XTAL (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL9_REG_EN_TMR_Pos          (8UL)                     /*!< PDC PDC_CTRL9_REG: EN_TMR (Bit 8)                           */
#define PDC_PDC_CTRL9_REG_EN_TMR_Msk          (0x100UL)                 /*!< PDC PDC_CTRL9_REG: EN_TMR (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL9_REG_EN_PER_Pos          (9UL)                     /*!< PDC PDC_CTRL9_REG: EN_PER (Bit 9)                           */
#define PDC_PDC_CTRL9_REG_EN_PER_Msk          (0x200UL)                 /*!< PDC PDC_CTRL9_REG: EN_PER (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL9_REG_EN_COM_Pos          (10UL)                    /*!< PDC PDC_CTRL9_REG: EN_COM (Bit 10)                          */
#define PDC_PDC_CTRL9_REG_EN_COM_Msk          (0x400UL)                 /*!< PDC PDC_CTRL9_REG: EN_COM (Bitfield-Mask: 0x01)             */
#define PDC_PDC_CTRL9_REG_PDC_MASTER_Pos      (11UL)                    /*!< PDC PDC_CTRL9_REG: PDC_MASTER (Bit 11)                      */
#define PDC_PDC_CTRL9_REG_PDC_MASTER_Msk      (0x1800UL)                /*!< PDC PDC_CTRL9_REG: PDC_MASTER (Bitfield-Mask: 0x03)         */
/* -----------------------------  PDC_PDC_CTRL10_REG  ----------------------------- */
#define PDC_PDC_CTRL10_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL10_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL10_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL10_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL10_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL10_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL10_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL10_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL10_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL10_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL10_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL10_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL10_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL10_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL10_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL10_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL10_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL10_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL10_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL10_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL10_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL10_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL10_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL10_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL10_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL10_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL10_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL10_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* -----------------------------  PDC_PDC_CTRL11_REG  ----------------------------- */
#define PDC_PDC_CTRL11_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL11_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL11_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL11_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL11_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL11_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL11_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL11_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL11_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL11_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL11_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL11_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL11_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL11_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL11_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL11_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL11_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL11_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL11_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL11_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL11_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL11_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL11_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL11_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL11_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL11_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL11_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL11_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* -----------------------------  PDC_PDC_CTRL12_REG  ----------------------------- */
#define PDC_PDC_CTRL12_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL12_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL12_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL12_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL12_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL12_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL12_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL12_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL12_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL12_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL12_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL12_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL12_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL12_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL12_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL12_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL12_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL12_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL12_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL12_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL12_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL12_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL12_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL12_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL12_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL12_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL12_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL12_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* -----------------------------  PDC_PDC_CTRL13_REG  ----------------------------- */
#define PDC_PDC_CTRL13_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL13_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL13_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL13_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL13_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL13_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL13_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL13_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL13_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL13_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL13_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL13_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL13_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL13_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL13_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL13_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL13_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL13_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL13_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL13_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL13_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL13_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL13_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL13_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL13_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL13_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL13_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL13_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* -----------------------------  PDC_PDC_CTRL14_REG  ----------------------------- */
#define PDC_PDC_CTRL14_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL14_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL14_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL14_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL14_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL14_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL14_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL14_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL14_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL14_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL14_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL14_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL14_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL14_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL14_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL14_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL14_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL14_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL14_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL14_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL14_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL14_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL14_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL14_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL14_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL14_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL14_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL14_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* -----------------------------  PDC_PDC_CTRL15_REG  ----------------------------- */
#define PDC_PDC_CTRL15_REG_TRIG_SELECT_Pos    (0UL)                     /*!< PDC PDC_CTRL15_REG: TRIG_SELECT (Bit 0)                     */
#define PDC_PDC_CTRL15_REG_TRIG_SELECT_Msk    (0x3UL)                   /*!< PDC PDC_CTRL15_REG: TRIG_SELECT (Bitfield-Mask: 0x03)       */
#define PDC_PDC_CTRL15_REG_TRIG_ID_Pos        (2UL)                     /*!< PDC PDC_CTRL15_REG: TRIG_ID (Bit 2)                         */
#define PDC_PDC_CTRL15_REG_TRIG_ID_Msk        (0x7cUL)                  /*!< PDC PDC_CTRL15_REG: TRIG_ID (Bitfield-Mask: 0x1f)           */
#define PDC_PDC_CTRL15_REG_EN_XTAL_Pos        (7UL)                     /*!< PDC PDC_CTRL15_REG: EN_XTAL (Bit 7)                         */
#define PDC_PDC_CTRL15_REG_EN_XTAL_Msk        (0x80UL)                  /*!< PDC PDC_CTRL15_REG: EN_XTAL (Bitfield-Mask: 0x01)           */
#define PDC_PDC_CTRL15_REG_EN_TMR_Pos         (8UL)                     /*!< PDC PDC_CTRL15_REG: EN_TMR (Bit 8)                          */
#define PDC_PDC_CTRL15_REG_EN_TMR_Msk         (0x100UL)                 /*!< PDC PDC_CTRL15_REG: EN_TMR (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL15_REG_EN_PER_Pos         (9UL)                     /*!< PDC PDC_CTRL15_REG: EN_PER (Bit 9)                          */
#define PDC_PDC_CTRL15_REG_EN_PER_Msk         (0x200UL)                 /*!< PDC PDC_CTRL15_REG: EN_PER (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL15_REG_EN_COM_Pos         (10UL)                    /*!< PDC PDC_CTRL15_REG: EN_COM (Bit 10)                         */
#define PDC_PDC_CTRL15_REG_EN_COM_Msk         (0x400UL)                 /*!< PDC PDC_CTRL15_REG: EN_COM (Bitfield-Mask: 0x01)            */
#define PDC_PDC_CTRL15_REG_PDC_MASTER_Pos     (11UL)                    /*!< PDC PDC_CTRL15_REG: PDC_MASTER (Bit 11)                     */
#define PDC_PDC_CTRL15_REG_PDC_MASTER_Msk     (0x1800UL)                /*!< PDC PDC_CTRL15_REG: PDC_MASTER (Bitfield-Mask: 0x03)        */
/* ---------------------------  PDC_PDC_ACKNOWLEDGE_REG  -------------------------- */
#define PDC_PDC_ACKNOWLEDGE_REG_PDC_ACKNOWLEDGE_Pos (0UL)               /*!< PDC PDC_ACKNOWLEDGE_REG: PDC_ACKNOWLEDGE (Bit 0)            */
#define PDC_PDC_ACKNOWLEDGE_REG_PDC_ACKNOWLEDGE_Msk (0x1fUL)            /*!< PDC PDC_ACKNOWLEDGE_REG: PDC_ACKNOWLEDGE (Bitfield-Mask: 0x1f) */
/* -----------------------------  PDC_PDC_PENDING_REG  ---------------------------- */
#define PDC_PDC_PENDING_REG_PDC_PENDING_Pos   (0UL)                     /*!< PDC PDC_PENDING_REG: PDC_PENDING (Bit 0)                    */
#define PDC_PDC_PENDING_REG_PDC_PENDING_Msk   (0xffffUL)                /*!< PDC PDC_PENDING_REG: PDC_PENDING (Bitfield-Mask: 0xffff)    */
/* ---------------------------  PDC_PDC_PENDING_SNC_REG  -------------------------- */
#define PDC_PDC_PENDING_SNC_REG_PDC_PENDING_Pos (0UL)                   /*!< PDC PDC_PENDING_SNC_REG: PDC_PENDING (Bit 0)                */
#define PDC_PDC_PENDING_SNC_REG_PDC_PENDING_Msk (0xffffUL)              /*!< PDC PDC_PENDING_SNC_REG: PDC_PENDING (Bitfield-Mask: 0xffff) */
/* --------------------------  PDC_PDC_PENDING_CM33_REG  -------------------------- */
#define PDC_PDC_PENDING_CM33_REG_PDC_PENDING_Pos (0UL)                  /*!< PDC PDC_PENDING_CM33_REG: PDC_PENDING (Bit 0)               */
#define PDC_PDC_PENDING_CM33_REG_PDC_PENDING_Msk (0xffffUL)             /*!< PDC PDC_PENDING_CM33_REG: PDC_PENDING (Bitfield-Mask: 0xffff) */
/* --------------------------  PDC_PDC_PENDING_CMAC_REG  -------------------------- */
#define PDC_PDC_PENDING_CMAC_REG_PDC_PENDING_Pos (0UL)                  /*!< PDC PDC_PENDING_CMAC_REG: PDC_PENDING (Bit 0)               */
#define PDC_PDC_PENDING_CMAC_REG_PDC_PENDING_Msk (0xffffUL)             /*!< PDC PDC_PENDING_CMAC_REG: PDC_PENDING (Bitfield-Mask: 0xffff) */
/* ---------------------------  PDC_PDC_SET_PENDING_REG  -------------------------- */
#define PDC_PDC_SET_PENDING_REG_PDC_SET_PENDING_Pos (0UL)               /*!< PDC PDC_SET_PENDING_REG: PDC_SET_PENDING (Bit 0)            */
#define PDC_PDC_SET_PENDING_REG_PDC_SET_PENDING_Msk (0x1fUL)            /*!< PDC PDC_SET_PENDING_REG: PDC_SET_PENDING (Bitfield-Mask: 0x1f) */
/* ================================================================================ */
/* ================         struct 'PWMLED' Position & Mask        ================ */
/* ================================================================================ */
/* ----------------------  PWMLED_PWMLED_DUTY_CYCLE_LED1_REG  --------------------- */
#define PWMLED_PWMLED_DUTY_CYCLE_LED1_REG_LED1_PWM_END_CYCLE_Pos (0UL)  /*!< PWMLED PWMLED_DUTY_CYCLE_LED1_REG: LED1_PWM_END_CYCLE (Bit 0) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED1_REG_LED1_PWM_END_CYCLE_Msk (0xffUL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED1_REG: LED1_PWM_END_CYCLE (Bitfield-Mask: 0xff) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED1_REG_LED1_PWM_START_CYCLE_Pos (8UL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED1_REG: LED1_PWM_START_CYCLE (Bit 8) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED1_REG_LED1_PWM_START_CYCLE_Msk (0xff00UL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED1_REG: LED1_PWM_START_CYCLE (Bitfield-Mask: 0xff) */
/* ----------------------  PWMLED_PWMLED_DUTY_CYCLE_LED2_REG  --------------------- */
#define PWMLED_PWMLED_DUTY_CYCLE_LED2_REG_LED2_PWM_END_CYCLE_Pos (0UL)  /*!< PWMLED PWMLED_DUTY_CYCLE_LED2_REG: LED2_PWM_END_CYCLE (Bit 0) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED2_REG_LED2_PWM_END_CYCLE_Msk (0xffUL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED2_REG: LED2_PWM_END_CYCLE (Bitfield-Mask: 0xff) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED2_REG_LED2_PWM_START_CYCLE_Pos (8UL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED2_REG: LED2_PWM_START_CYCLE (Bit 8) */
#define PWMLED_PWMLED_DUTY_CYCLE_LED2_REG_LED2_PWM_START_CYCLE_Msk (0xff00UL) /*!< PWMLED PWMLED_DUTY_CYCLE_LED2_REG: LED2_PWM_START_CYCLE (Bitfield-Mask: 0xff) */
/* -------------------------  PWMLED_PWMLED_FREQUENCY_REG  ------------------------ */
#define PWMLED_PWMLED_FREQUENCY_REG_LED_PWM_FREQUENCY_Pos (0UL)         /*!< PWMLED PWMLED_FREQUENCY_REG: LED_PWM_FREQUENCY (Bit 0)      */
#define PWMLED_PWMLED_FREQUENCY_REG_LED_PWM_FREQUENCY_Msk (0xffUL)      /*!< PWMLED PWMLED_FREQUENCY_REG: LED_PWM_FREQUENCY (Bitfield-Mask: 0xff) */
/* ---------------------------  PWMLED_PWMLED_CTRL_REG  --------------------------- */
#define PWMLED_PWMLED_CTRL_REG_PWM_ENABLE_Pos (0UL)                     /*!< PWMLED PWMLED_CTRL_REG: PWM_ENABLE (Bit 0)                  */
#define PWMLED_PWMLED_CTRL_REG_PWM_ENABLE_Msk (0x1UL)                   /*!< PWMLED PWMLED_CTRL_REG: PWM_ENABLE (Bitfield-Mask: 0x01)    */
#define PWMLED_PWMLED_CTRL_REG_SW_PAUSE_EN_Pos (1UL)                    /*!< PWMLED PWMLED_CTRL_REG: SW_PAUSE_EN (Bit 1)                 */
#define PWMLED_PWMLED_CTRL_REG_SW_PAUSE_EN_Msk (0x2UL)                  /*!< PWMLED PWMLED_CTRL_REG: SW_PAUSE_EN (Bitfield-Mask: 0x01)   */
#define PWMLED_PWMLED_CTRL_REG_LED_TRIM_Pos   (2UL)                     /*!< PWMLED PWMLED_CTRL_REG: LED_TRIM (Bit 2)                    */
#define PWMLED_PWMLED_CTRL_REG_LED_TRIM_Msk   (0x3cUL)                  /*!< PWMLED PWMLED_CTRL_REG: LED_TRIM (Bitfield-Mask: 0x0f)      */
#define PWMLED_PWMLED_CTRL_REG_LED1_EN_Pos    (6UL)                     /*!< PWMLED PWMLED_CTRL_REG: LED1_EN (Bit 6)                     */
#define PWMLED_PWMLED_CTRL_REG_LED1_EN_Msk    (0x40UL)                  /*!< PWMLED PWMLED_CTRL_REG: LED1_EN (Bitfield-Mask: 0x01)       */
#define PWMLED_PWMLED_CTRL_REG_LED2_EN_Pos    (7UL)                     /*!< PWMLED PWMLED_CTRL_REG: LED2_EN (Bit 7)                     */
#define PWMLED_PWMLED_CTRL_REG_LED2_EN_Msk    (0x80UL)                  /*!< PWMLED PWMLED_CTRL_REG: LED2_EN (Bitfield-Mask: 0x01)       */
#define PWMLED_PWMLED_CTRL_REG_LED1_LOAD_SEL_Pos (8UL)                  /*!< PWMLED PWMLED_CTRL_REG: LED1_LOAD_SEL (Bit 8)               */
#define PWMLED_PWMLED_CTRL_REG_LED1_LOAD_SEL_Msk (0x700UL)              /*!< PWMLED PWMLED_CTRL_REG: LED1_LOAD_SEL (Bitfield-Mask: 0x07) */
#define PWMLED_PWMLED_CTRL_REG_LED2_LOAD_SEL_Pos (11UL)                 /*!< PWMLED PWMLED_CTRL_REG: LED2_LOAD_SEL (Bit 11)              */
#define PWMLED_PWMLED_CTRL_REG_LED2_LOAD_SEL_Msk (0x3800UL)             /*!< PWMLED PWMLED_CTRL_REG: LED2_LOAD_SEL (Bitfield-Mask: 0x07) */
/* ================================================================================ */
/* ================         struct 'QSPIC' Position & Mask         ================ */
/* ================================================================================ */
/* ---------------------------  QSPIC_QSPIC_CTRLBUS_REG  -------------------------- */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_SINGLE_Pos (0UL)              /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_SINGLE (Bit 0)           */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_SINGLE_Msk (0x1UL)            /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_SINGLE (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_DUAL_Pos (1UL)                /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_DUAL (Bit 1)             */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_DUAL_Msk (0x2UL)              /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_DUAL (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_QUAD_Pos (2UL)                /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_QUAD (Bit 2)             */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_SET_QUAD_Msk (0x4UL)              /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_SET_QUAD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_EN_CS_Pos (3UL)                   /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_EN_CS (Bit 3)                */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_EN_CS_Msk (0x8UL)                 /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_EN_CS (Bitfield-Mask: 0x01)  */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_DIS_CS_Pos (4UL)                  /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_DIS_CS (Bit 4)               */
#define QSPIC_QSPIC_CTRLBUS_REG_QSPIC_DIS_CS_Msk (0x10UL)               /*!< QSPIC QSPIC_CTRLBUS_REG: QSPIC_DIS_CS (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC_QSPIC_CTRLMODE_REG  -------------------------- */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_AUTO_MD_Pos (0UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_AUTO_MD (Bit 0)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_AUTO_MD_Msk (0x1UL)              /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_AUTO_MD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_MD_Pos (1UL)                 /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_CLK_MD (Bit 1)              */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_CLK_MD_Msk (0x2UL)               /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_CLK_MD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_OEN_Pos (2UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO2_OEN (Bit 2)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_OEN_Msk (0x4UL)              /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO2_OEN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_OEN_Pos (3UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO3_OEN (Bit 3)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_OEN_Msk (0x8UL)              /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO3_OEN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_DAT_Pos (4UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO2_DAT (Bit 4)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO2_DAT_Msk (0x10UL)             /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO2_DAT (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_DAT_Pos (5UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO3_DAT (Bit 5)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_IO3_DAT_Msk (0x20UL)             /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_IO3_DAT (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_HRDY_MD_Pos (6UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_HRDY_MD (Bit 6)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_HRDY_MD_Msk (0x40UL)             /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_HRDY_MD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RXD_NEG_Pos (7UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_RXD_NEG (Bit 7)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RXD_NEG_Msk (0x80UL)             /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_RXD_NEG (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RPIPE_EN_Pos (8UL)               /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_RPIPE_EN (Bit 8)            */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_RPIPE_EN_Msk (0x100UL)           /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_RPIPE_EN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_PCLK_MD_Pos (9UL)                /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_PCLK_MD (Bit 9)             */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_PCLK_MD_Msk (0xe00UL)            /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_PCLK_MD (Bitfield-Mask: 0x07) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_BUF_LIM_EN_Pos (12UL)            /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_BUF_LIM_EN (Bit 12)         */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_BUF_LIM_EN_Msk (0x1000UL)        /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_BUF_LIM_EN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_USE_32BA_Pos (13UL)              /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_USE_32BA (Bit 13)           */
#define QSPIC_QSPIC_CTRLMODE_REG_QSPIC_USE_32BA_Msk (0x2000UL)          /*!< QSPIC QSPIC_CTRLMODE_REG: QSPIC_USE_32BA (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC_QSPIC_RECVDATA_REG  -------------------------- */
#define QSPIC_QSPIC_RECVDATA_REG_QSPIC_RECVDATA_Pos (0UL)               /*!< QSPIC QSPIC_RECVDATA_REG: QSPIC_RECVDATA (Bit 0)            */
#define QSPIC_QSPIC_RECVDATA_REG_QSPIC_RECVDATA_Msk (0xffffffffUL)      /*!< QSPIC QSPIC_RECVDATA_REG: QSPIC_RECVDATA (Bitfield-Mask: 0xffffffff) */
/* --------------------------  QSPIC_QSPIC_BURSTCMDA_REG  ------------------------- */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_Pos (0UL)                  /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST (Bit 0)               */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_Msk (0xffUL)               /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_WB_Pos (8UL)               /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST_WB (Bit 8)            */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_WB_Msk (0xff00UL)          /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST_WB (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_BYTE_Pos (16UL)             /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_EXT_BYTE (Bit 16)          */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_BYTE_Msk (0xff0000UL)       /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_EXT_BYTE (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_TX_MD_Pos (24UL)           /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST_TX_MD (Bit 24)        */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_INST_TX_MD_Msk (0x3000000UL)    /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_INST_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Pos (26UL)            /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_ADR_TX_MD (Bit 26)         */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Msk (0xc000000UL)     /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_ADR_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Pos (28UL)            /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_EXT_TX_MD (Bit 28)         */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Msk (0x30000000UL)    /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_EXT_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Pos (30UL)            /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_DMY_TX_MD (Bit 30)         */
#define QSPIC_QSPIC_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Msk (0xc0000000UL)    /*!< QSPIC QSPIC_BURSTCMDA_REG: QSPIC_DMY_TX_MD (Bitfield-Mask: 0x03) */
/* --------------------------  QSPIC_QSPIC_BURSTCMDB_REG  ------------------------- */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Pos (0UL)             /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DAT_RX_MD (Bit 0)          */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Msk (0x3UL)           /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DAT_RX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Pos (2UL)           /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_EXT_BYTE_EN (Bit 2)        */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Msk (0x4UL)         /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_EXT_BYTE_EN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Pos (3UL)             /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_EXT_HF_DS (Bit 3)          */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Msk (0x8UL)           /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_EXT_HF_DS (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_NUM_Pos (4UL)               /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DMY_NUM (Bit 4)            */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_NUM_Msk (0x30UL)            /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DMY_NUM (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_INST_MD_Pos (6UL)               /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_INST_MD (Bit 6)            */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_INST_MD_Msk (0x40UL)            /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_INST_MD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_MD_Pos (7UL)               /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_MD (Bit 7)            */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_MD_Msk (0x80UL)            /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_MD (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_LEN_Pos (8UL)              /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_LEN (Bit 8)           */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_LEN_Msk (0x300UL)          /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_LEN (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Pos (10UL)            /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_SIZE (Bit 10)         */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Msk (0xc00UL)         /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_WRAP_SIZE (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Pos (12UL)          /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_CS_HIGH_MIN (Bit 12)       */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Msk (0x7000UL)      /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_CS_HIGH_MIN (Bitfield-Mask: 0x07) */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_FORCE_Pos (15UL)            /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DMY_FORCE (Bit 15)         */
#define QSPIC_QSPIC_BURSTCMDB_REG_QSPIC_DMY_FORCE_Msk (0x8000UL)        /*!< QSPIC QSPIC_BURSTCMDB_REG: QSPIC_DMY_FORCE (Bitfield-Mask: 0x01) */
/* ---------------------------  QSPIC_QSPIC_STATUS_REG  --------------------------- */
#define QSPIC_QSPIC_STATUS_REG_QSPIC_BUSY_Pos (0UL)                     /*!< QSPIC QSPIC_STATUS_REG: QSPIC_BUSY (Bit 0)                  */
#define QSPIC_QSPIC_STATUS_REG_QSPIC_BUSY_Msk (0x1UL)                   /*!< QSPIC QSPIC_STATUS_REG: QSPIC_BUSY (Bitfield-Mask: 0x01)    */
/* --------------------------  QSPIC_QSPIC_WRITEDATA_REG  ------------------------- */
#define QSPIC_QSPIC_WRITEDATA_REG_QSPIC_WRITEDATA_Pos (0UL)             /*!< QSPIC QSPIC_WRITEDATA_REG: QSPIC_WRITEDATA (Bit 0)          */
#define QSPIC_QSPIC_WRITEDATA_REG_QSPIC_WRITEDATA_Msk (0xffffffffUL)    /*!< QSPIC QSPIC_WRITEDATA_REG: QSPIC_WRITEDATA (Bitfield-Mask: 0xffffffff) */
/* --------------------------  QSPIC_QSPIC_READDATA_REG  -------------------------- */
#define QSPIC_QSPIC_READDATA_REG_QSPIC_READDATA_Pos (0UL)               /*!< QSPIC QSPIC_READDATA_REG: QSPIC_READDATA (Bit 0)            */
#define QSPIC_QSPIC_READDATA_REG_QSPIC_READDATA_Msk (0xffffffffUL)      /*!< QSPIC QSPIC_READDATA_REG: QSPIC_READDATA (Bitfield-Mask: 0xffffffff) */
/* --------------------------  QSPIC_QSPIC_DUMMYDATA_REG  ------------------------- */
#define QSPIC_QSPIC_DUMMYDATA_REG_QSPIC_DUMMYDATA_Pos (0UL)             /*!< QSPIC QSPIC_DUMMYDATA_REG: QSPIC_DUMMYDATA (Bit 0)          */
#define QSPIC_QSPIC_DUMMYDATA_REG_QSPIC_DUMMYDATA_Msk (0xffffffffUL)    /*!< QSPIC QSPIC_DUMMYDATA_REG: QSPIC_DUMMYDATA (Bitfield-Mask: 0xffffffff) */
/* --------------------------  QSPIC_QSPIC_ERASECTRL_REG  ------------------------- */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_ADDR_Pos (4UL)              /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERS_ADDR (Bit 4)           */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_ADDR_Msk (0xfffff0UL)       /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERS_ADDR (Bitfield-Mask: 0xfffff) */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERASE_EN_Pos (24UL)             /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERASE_EN (Bit 24)          */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERASE_EN_Msk (0x1000000UL)      /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERASE_EN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_STATE_Pos (25UL)            /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERS_STATE (Bit 25)         */
#define QSPIC_QSPIC_ERASECTRL_REG_QSPIC_ERS_STATE_Msk (0xe000000UL)     /*!< QSPIC QSPIC_ERASECTRL_REG: QSPIC_ERS_STATE (Bitfield-Mask: 0x07) */
/* --------------------------  QSPIC_QSPIC_ERASECMDA_REG  ------------------------- */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_ERS_INST_Pos (0UL)              /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_ERS_INST (Bit 0)           */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_ERS_INST_Msk (0xffUL)           /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_ERS_INST (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_WEN_INST_Pos (8UL)              /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_WEN_INST (Bit 8)           */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_WEN_INST_Msk (0xff00UL)         /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_WEN_INST (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_SUS_INST_Pos (16UL)             /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_SUS_INST (Bit 16)          */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_SUS_INST_Msk (0xff0000UL)       /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_SUS_INST (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_RES_INST_Pos (24UL)             /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_RES_INST (Bit 24)          */
#define QSPIC_QSPIC_ERASECMDA_REG_QSPIC_RES_INST_Msk (0xff000000UL)     /*!< QSPIC QSPIC_ERASECMDA_REG: QSPIC_RES_INST (Bitfield-Mask: 0xff) */
/* --------------------------  QSPIC_QSPIC_ERASECMDB_REG  ------------------------- */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_TX_MD_Pos (0UL)             /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERS_TX_MD (Bit 0)          */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_TX_MD_Msk (0x3UL)           /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERS_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_WEN_TX_MD_Pos (2UL)             /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_WEN_TX_MD (Bit 2)          */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_WEN_TX_MD_Msk (0xcUL)           /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_WEN_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_SUS_TX_MD_Pos (4UL)             /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_SUS_TX_MD (Bit 4)          */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_SUS_TX_MD_Msk (0x30UL)          /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_SUS_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RES_TX_MD_Pos (6UL)             /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_RES_TX_MD (Bit 6)          */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RES_TX_MD_Msk (0xc0UL)          /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_RES_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_EAD_TX_MD_Pos (8UL)             /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_EAD_TX_MD (Bit 8)          */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_EAD_TX_MD_Msk (0x300UL)         /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_EAD_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_CS_HI_Pos (10UL)            /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERS_CS_HI (Bit 10)         */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERS_CS_HI_Msk (0x7c00UL)        /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERS_CS_HI (Bitfield-Mask: 0x1f) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERSRES_HLD_Pos (16UL)           /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERSRES_HLD (Bit 16)        */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_ERSRES_HLD_Msk (0xf0000UL)      /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_ERSRES_HLD (Bitfield-Mask: 0x0f) */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RESSUS_DLY_Pos (24UL)           /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_RESSUS_DLY (Bit 24)        */
#define QSPIC_QSPIC_ERASECMDB_REG_QSPIC_RESSUS_DLY_Msk (0x3f000000UL)   /*!< QSPIC QSPIC_ERASECMDB_REG: QSPIC_RESSUS_DLY (Bitfield-Mask: 0x3f) */
/* --------------------------  QSPIC_QSPIC_BURSTBRK_REG  -------------------------- */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_WRD_Pos (0UL)                /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_WRD (Bit 0)             */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_WRD_Msk (0xffffUL)           /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_WRD (Bitfield-Mask: 0xffff) */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_EN_Pos (16UL)                /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_EN (Bit 16)             */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_EN_Msk (0x10000UL)           /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_EN (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_SZ_Pos (17UL)                /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_SZ (Bit 17)             */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_SZ_Msk (0x20000UL)           /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_SZ (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_TX_MD_Pos (18UL)             /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_TX_MD (Bit 18)          */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_BRK_TX_MD_Msk (0xc0000UL)        /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_BRK_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_SEC_HF_DS_Pos (20UL)             /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_SEC_HF_DS (Bit 20)          */
#define QSPIC_QSPIC_BURSTBRK_REG_QSPIC_SEC_HF_DS_Msk (0x100000UL)       /*!< QSPIC QSPIC_BURSTBRK_REG: QSPIC_SEC_HF_DS (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC_QSPIC_STATUSCMD_REG  ------------------------- */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_INST_Pos (0UL)            /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_INST (Bit 0)         */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_INST_Msk (0xffUL)         /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_INST (Bitfield-Mask: 0xff) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Pos (8UL)           /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_TX_MD (Bit 8)        */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Msk (0x300UL)       /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Pos (10UL)          /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_RX_MD (Bit 10)       */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Msk (0xc00UL)       /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RSTAT_RX_MD (Bitfield-Mask: 0x03) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_POS_Pos (12UL)             /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_BUSY_POS (Bit 12)          */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_POS_Msk (0x7000UL)         /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_BUSY_POS (Bitfield-Mask: 0x07) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_VAL_Pos (15UL)             /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_BUSY_VAL (Bit 15)          */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_BUSY_VAL_Msk (0x8000UL)         /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_BUSY_VAL (Bitfield-Mask: 0x01) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RESSTS_DLY_Pos (16UL)           /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RESSTS_DLY (Bit 16)        */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_RESSTS_DLY_Msk (0x3f0000UL)     /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_RESSTS_DLY (Bitfield-Mask: 0x3f) */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_STSDLY_SEL_Pos (22UL)           /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_STSDLY_SEL (Bit 22)        */
#define QSPIC_QSPIC_STATUSCMD_REG_QSPIC_STSDLY_SEL_Msk (0x400000UL)     /*!< QSPIC QSPIC_STATUSCMD_REG: QSPIC_STSDLY_SEL (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC_QSPIC_CHCKERASE_REG  ------------------------- */
#define QSPIC_QSPIC_CHCKERASE_REG_QSPIC_CHCKERASE_Pos (0UL)             /*!< QSPIC QSPIC_CHCKERASE_REG: QSPIC_CHCKERASE (Bit 0)          */
#define QSPIC_QSPIC_CHCKERASE_REG_QSPIC_CHCKERASE_Msk (0xffffffffUL)    /*!< QSPIC QSPIC_CHCKERASE_REG: QSPIC_CHCKERASE (Bitfield-Mask: 0xffffffff) */
/* -----------------------------  QSPIC_QSPIC_GP_REG  ----------------------------- */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_DRV_Pos (1UL)                     /*!< QSPIC QSPIC_GP_REG: QSPIC_PADS_DRV (Bit 1)                  */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_DRV_Msk (0x6UL)                   /*!< QSPIC QSPIC_GP_REG: QSPIC_PADS_DRV (Bitfield-Mask: 0x03)    */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_SLEW_Pos (3UL)                    /*!< QSPIC QSPIC_GP_REG: QSPIC_PADS_SLEW (Bit 3)                 */
#define QSPIC_QSPIC_GP_REG_QSPIC_PADS_SLEW_Msk (0x18UL)                 /*!< QSPIC QSPIC_GP_REG: QSPIC_PADS_SLEW (Bitfield-Mask: 0x03)   */
/* ---------------------------  QSPIC_QSPIC_UCODE_START  -------------------------- */
#define QSPIC_QSPIC_UCODE_START_QSPIC_UCODE_X_Pos (0UL)                 /*!< QSPIC QSPIC_UCODE_START: QSPIC_UCODE_X (Bit 0)              */
#define QSPIC_QSPIC_UCODE_START_QSPIC_UCODE_X_Msk (0xffffffffUL)        /*!< QSPIC QSPIC_UCODE_START: QSPIC_UCODE_X (Bitfield-Mask: 0xffffffff) */
/* --------------------------  QSPIC_QSPIC_CTR_CTRL_REG  -------------------------- */
#define QSPIC_QSPIC_CTR_CTRL_REG_QSPIC_CTR_EN_Pos (0UL)                 /*!< QSPIC QSPIC_CTR_CTRL_REG: QSPIC_CTR_EN (Bit 0)              */
#define QSPIC_QSPIC_CTR_CTRL_REG_QSPIC_CTR_EN_Msk (0x1UL)               /*!< QSPIC QSPIC_CTR_CTRL_REG: QSPIC_CTR_EN (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC_QSPIC_CTR_SADDR_REG  ------------------------- */
#define QSPIC_QSPIC_CTR_SADDR_REG_QSPIC_CTR_SADDR_Pos (10UL)            /*!< QSPIC QSPIC_CTR_SADDR_REG: QSPIC_CTR_SADDR (Bit 10)         */
#define QSPIC_QSPIC_CTR_SADDR_REG_QSPIC_CTR_SADDR_Msk (0xfffffc00UL)    /*!< QSPIC QSPIC_CTR_SADDR_REG: QSPIC_CTR_SADDR (Bitfield-Mask: 0x3fffff) */
/* --------------------------  QSPIC_QSPIC_CTR_EADDR_REG  ------------------------- */
#define QSPIC_QSPIC_CTR_EADDR_REG_QSPIC_CTR_EADDR_Pos (10UL)            /*!< QSPIC QSPIC_CTR_EADDR_REG: QSPIC_CTR_EADDR (Bit 10)         */
#define QSPIC_QSPIC_CTR_EADDR_REG_QSPIC_CTR_EADDR_Msk (0xfffffc00UL)    /*!< QSPIC QSPIC_CTR_EADDR_REG: QSPIC_CTR_EADDR (Bitfield-Mask: 0x3fffff) */
/* ------------------------  QSPIC_QSPIC_CTR_NONCE_0_3_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_NONCE_0_3_REG_QSPIC_CTR_NONCE_0_3_Pos (0UL)     /*!< QSPIC QSPIC_CTR_NONCE_0_3_REG: QSPIC_CTR_NONCE_0_3 (Bit 0)  */
#define QSPIC_QSPIC_CTR_NONCE_0_3_REG_QSPIC_CTR_NONCE_0_3_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_NONCE_0_3_REG: QSPIC_CTR_NONCE_0_3 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_NONCE_4_7_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_NONCE_4_7_REG_QSPIC_CTR_NONCE_4_7_Pos (0UL)     /*!< QSPIC QSPIC_CTR_NONCE_4_7_REG: QSPIC_CTR_NONCE_4_7 (Bit 0)  */
#define QSPIC_QSPIC_CTR_NONCE_4_7_REG_QSPIC_CTR_NONCE_4_7_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_NONCE_4_7_REG: QSPIC_CTR_NONCE_4_7 (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC_QSPIC_CTR_KEY_0_3_REG  ------------------------ */
#define QSPIC_QSPIC_CTR_KEY_0_3_REG_QSPIC_CTR_KEY_0_3_Pos (0UL)         /*!< QSPIC QSPIC_CTR_KEY_0_3_REG: QSPIC_CTR_KEY_0_3 (Bit 0)      */
#define QSPIC_QSPIC_CTR_KEY_0_3_REG_QSPIC_CTR_KEY_0_3_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_0_3_REG: QSPIC_CTR_KEY_0_3 (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC_QSPIC_CTR_KEY_4_7_REG  ------------------------ */
#define QSPIC_QSPIC_CTR_KEY_4_7_REG_QSPIC_CTR_KEY_4_7_Pos (0UL)         /*!< QSPIC QSPIC_CTR_KEY_4_7_REG: QSPIC_CTR_KEY_4_7 (Bit 0)      */
#define QSPIC_QSPIC_CTR_KEY_4_7_REG_QSPIC_CTR_KEY_4_7_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_4_7_REG: QSPIC_CTR_KEY_4_7 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_8_11_REG  ------------------------ */
#define QSPIC_QSPIC_CTR_KEY_8_11_REG_QSPIC_CTR_KEY_8_11_Pos (0UL)       /*!< QSPIC QSPIC_CTR_KEY_8_11_REG: QSPIC_CTR_KEY_8_11 (Bit 0)    */
#define QSPIC_QSPIC_CTR_KEY_8_11_REG_QSPIC_CTR_KEY_8_11_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_8_11_REG: QSPIC_CTR_KEY_8_11 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_12_15_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_KEY_12_15_REG_QSPIC_CTR_KEY_12_15_Pos (0UL)     /*!< QSPIC QSPIC_CTR_KEY_12_15_REG: QSPIC_CTR_KEY_12_15 (Bit 0)  */
#define QSPIC_QSPIC_CTR_KEY_12_15_REG_QSPIC_CTR_KEY_12_15_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_12_15_REG: QSPIC_CTR_KEY_12_15 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_16_19_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_KEY_16_19_REG_QSPIC_CTR_KEY_16_19_Pos (0UL)     /*!< QSPIC QSPIC_CTR_KEY_16_19_REG: QSPIC_CTR_KEY_16_19 (Bit 0)  */
#define QSPIC_QSPIC_CTR_KEY_16_19_REG_QSPIC_CTR_KEY_16_19_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_16_19_REG: QSPIC_CTR_KEY_16_19 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_20_23_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_KEY_20_23_REG_QSPIC_CTR_KEY_20_23_Pos (0UL)     /*!< QSPIC QSPIC_CTR_KEY_20_23_REG: QSPIC_CTR_KEY_20_23 (Bit 0)  */
#define QSPIC_QSPIC_CTR_KEY_20_23_REG_QSPIC_CTR_KEY_20_23_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_20_23_REG: QSPIC_CTR_KEY_20_23 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_24_27_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_KEY_24_27_REG_QSPIC_CTR_KEY_24_27_Pos (0UL)     /*!< QSPIC QSPIC_CTR_KEY_24_27_REG: QSPIC_CTR_KEY_24_27 (Bit 0)  */
#define QSPIC_QSPIC_CTR_KEY_24_27_REG_QSPIC_CTR_KEY_24_27_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_24_27_REG: QSPIC_CTR_KEY_24_27 (Bitfield-Mask: 0xffffffff) */
/* ------------------------  QSPIC_QSPIC_CTR_KEY_28_31_REG  ----------------------- */
#define QSPIC_QSPIC_CTR_KEY_28_31_REG_QSPIC_CTR_KEY_28_31_Pos (0UL)     /*!< QSPIC QSPIC_CTR_KEY_28_31_REG: QSPIC_CTR_KEY_28_31 (Bit 0)  */
#define QSPIC_QSPIC_CTR_KEY_28_31_REG_QSPIC_CTR_KEY_28_31_Msk (0xffffffffUL) /*!< QSPIC QSPIC_CTR_KEY_28_31_REG: QSPIC_CTR_KEY_28_31 (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================         struct 'QSPIC2' Position & Mask        ================ */
/* ================================================================================ */
/* --------------------------  QSPIC2_QSPIC2_CTRLBUS_REG  ------------------------- */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_SINGLE_Pos (0UL)            /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_SINGLE (Bit 0)         */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_SINGLE_Msk (0x1UL)          /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_SINGLE (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_DUAL_Pos (1UL)              /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_DUAL (Bit 1)           */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_DUAL_Msk (0x2UL)            /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_DUAL (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_QUAD_Pos (2UL)              /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_QUAD (Bit 2)           */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_SET_QUAD_Msk (0x4UL)            /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_SET_QUAD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_EN_CS_Pos (3UL)                 /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_EN_CS (Bit 3)              */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_EN_CS_Msk (0x8UL)               /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_EN_CS (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_DIS_CS_Pos (4UL)                /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_DIS_CS (Bit 4)             */
#define QSPIC2_QSPIC2_CTRLBUS_REG_QSPIC_DIS_CS_Msk (0x10UL)             /*!< QSPIC2 QSPIC2_CTRLBUS_REG: QSPIC_DIS_CS (Bitfield-Mask: 0x01) */
/* -------------------------  QSPIC2_QSPIC2_CTRLMODE_REG  ------------------------- */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_AUTO_MD_Pos (0UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_AUTO_MD (Bit 0)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_AUTO_MD_Msk (0x1UL)            /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_AUTO_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_MD_Pos (1UL)               /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CLK_MD (Bit 1)            */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_MD_Msk (0x2UL)             /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CLK_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_OEN_Pos (2UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO2_OEN (Bit 2)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_OEN_Msk (0x4UL)            /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO2_OEN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_OEN_Pos (3UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO3_OEN (Bit 3)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_OEN_Msk (0x8UL)            /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO3_OEN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_DAT_Pos (4UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO2_DAT (Bit 4)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO2_DAT_Msk (0x10UL)           /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO2_DAT (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_DAT_Pos (5UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO3_DAT (Bit 5)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_IO3_DAT_Msk (0x20UL)           /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_IO3_DAT (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_HRDY_MD_Pos (6UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_HRDY_MD (Bit 6)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_HRDY_MD_Msk (0x40UL)           /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_HRDY_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RXD_NEG_Pos (7UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_RXD_NEG (Bit 7)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RXD_NEG_Msk (0x80UL)           /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_RXD_NEG (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RPIPE_EN_Pos (8UL)             /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_RPIPE_EN (Bit 8)          */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_RPIPE_EN_Msk (0x100UL)         /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_RPIPE_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_PCLK_MD_Pos (9UL)              /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_PCLK_MD (Bit 9)           */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_PCLK_MD_Msk (0xe00UL)          /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_PCLK_MD (Bitfield-Mask: 0x07) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Pos (12UL)        /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_FORCENSEQ_EN (Bit 12)     */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_FORCENSEQ_EN_Msk (0x1000UL)    /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_FORCENSEQ_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_USE_32BA_Pos (13UL)            /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_USE_32BA (Bit 13)         */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_USE_32BA_Msk (0x2000UL)        /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_USE_32BA (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_SRAM_EN_Pos (14UL)             /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_SRAM_EN (Bit 14)          */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_SRAM_EN_Msk (0x4000UL)         /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_SRAM_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CS_MD_Pos (15UL)               /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CS_MD (Bit 15)            */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CS_MD_Msk (0x8000UL)           /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CS_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Pos (16UL)         /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CLK_FREE_EN (Bit 16)      */
#define QSPIC2_QSPIC2_CTRLMODE_REG_QSPIC_CLK_FREE_EN_Msk (0x10000UL)    /*!< QSPIC2 QSPIC2_CTRLMODE_REG: QSPIC_CLK_FREE_EN (Bitfield-Mask: 0x01) */
/* -------------------------  QSPIC2_QSPIC2_RECVDATA_REG  ------------------------- */
#define QSPIC2_QSPIC2_RECVDATA_REG_QSPIC_RECVDATA_Pos (0UL)             /*!< QSPIC2 QSPIC2_RECVDATA_REG: QSPIC_RECVDATA (Bit 0)          */
#define QSPIC2_QSPIC2_RECVDATA_REG_QSPIC_RECVDATA_Msk (0xffffffffUL)    /*!< QSPIC2 QSPIC2_RECVDATA_REG: QSPIC_RECVDATA (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC2_QSPIC2_BURSTCMDA_REG  ------------------------ */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_Pos (0UL)                /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST (Bit 0)             */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_Msk (0xffUL)             /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_WB_Pos (8UL)             /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST_WB (Bit 8)          */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_WB_Msk (0xff00UL)        /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST_WB (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_BYTE_Pos (16UL)           /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_EXT_BYTE (Bit 16)        */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_BYTE_Msk (0xff0000UL)     /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_EXT_BYTE (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_TX_MD_Pos (24UL)         /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST_TX_MD (Bit 24)      */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_INST_TX_MD_Msk (0x3000000UL)  /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_INST_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Pos (26UL)          /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_ADR_TX_MD (Bit 26)       */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_ADR_TX_MD_Msk (0xc000000UL)   /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_ADR_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Pos (28UL)          /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_EXT_TX_MD (Bit 28)       */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_EXT_TX_MD_Msk (0x30000000UL)  /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_EXT_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Pos (30UL)          /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_DMY_TX_MD (Bit 30)       */
#define QSPIC2_QSPIC2_BURSTCMDA_REG_QSPIC_DMY_TX_MD_Msk (0xc0000000UL)  /*!< QSPIC2 QSPIC2_BURSTCMDA_REG: QSPIC_DMY_TX_MD (Bitfield-Mask: 0x03) */
/* -------------------------  QSPIC2_QSPIC2_BURSTCMDB_REG  ------------------------ */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Pos (0UL)           /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DAT_RX_MD (Bit 0)        */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DAT_RX_MD_Msk (0x3UL)         /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DAT_RX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Pos (2UL)         /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_EXT_BYTE_EN (Bit 2)      */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_BYTE_EN_Msk (0x4UL)       /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_EXT_BYTE_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Pos (3UL)           /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_EXT_HF_DS (Bit 3)        */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_EXT_HF_DS_Msk (0x8UL)         /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_EXT_HF_DS (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_NUM_Pos (4UL)             /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DMY_NUM (Bit 4)          */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_NUM_Msk (0x30UL)          /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DMY_NUM (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_INST_MD_Pos (6UL)             /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_INST_MD (Bit 6)          */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_INST_MD_Msk (0x40UL)          /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_INST_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_MD_Pos (7UL)             /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_MD (Bit 7)          */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_MD_Msk (0x80UL)          /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_MD (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_LEN_Pos (8UL)            /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_LEN (Bit 8)         */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_LEN_Msk (0x300UL)        /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_LEN (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Pos (10UL)          /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_SIZE (Bit 10)       */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_WRAP_SIZE_Msk (0xc00UL)       /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_WRAP_SIZE (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Pos (12UL)        /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_CS_HIGH_MIN (Bit 12)     */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_CS_HIGH_MIN_Msk (0x7000UL)    /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_CS_HIGH_MIN (Bitfield-Mask: 0x07) */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_FORCE_Pos (15UL)          /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DMY_FORCE (Bit 15)       */
#define QSPIC2_QSPIC2_BURSTCMDB_REG_QSPIC_DMY_FORCE_Msk (0x8000UL)      /*!< QSPIC2 QSPIC2_BURSTCMDB_REG: QSPIC_DMY_FORCE (Bitfield-Mask: 0x01) */
/* --------------------------  QSPIC2_QSPIC2_STATUS_REG  -------------------------- */
#define QSPIC2_QSPIC2_STATUS_REG_QSPIC_BUSY_Pos (0UL)                   /*!< QSPIC2 QSPIC2_STATUS_REG: QSPIC_BUSY (Bit 0)                */
#define QSPIC2_QSPIC2_STATUS_REG_QSPIC_BUSY_Msk (0x1UL)                 /*!< QSPIC2 QSPIC2_STATUS_REG: QSPIC_BUSY (Bitfield-Mask: 0x01)  */
/* -------------------------  QSPIC2_QSPIC2_WRITEDATA_REG  ------------------------ */
#define QSPIC2_QSPIC2_WRITEDATA_REG_QSPIC_WRITEDATA_Pos (0UL)           /*!< QSPIC2 QSPIC2_WRITEDATA_REG: QSPIC_WRITEDATA (Bit 0)        */
#define QSPIC2_QSPIC2_WRITEDATA_REG_QSPIC_WRITEDATA_Msk (0xffffffffUL)  /*!< QSPIC2 QSPIC2_WRITEDATA_REG: QSPIC_WRITEDATA (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC2_QSPIC2_READDATA_REG  ------------------------- */
#define QSPIC2_QSPIC2_READDATA_REG_QSPIC_READDATA_Pos (0UL)             /*!< QSPIC2 QSPIC2_READDATA_REG: QSPIC_READDATA (Bit 0)          */
#define QSPIC2_QSPIC2_READDATA_REG_QSPIC_READDATA_Msk (0xffffffffUL)    /*!< QSPIC2 QSPIC2_READDATA_REG: QSPIC_READDATA (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC2_QSPIC2_DUMMYDATA_REG  ------------------------ */
#define QSPIC2_QSPIC2_DUMMYDATA_REG_QSPIC_DUMMYDATA_Pos (0UL)           /*!< QSPIC2 QSPIC2_DUMMYDATA_REG: QSPIC_DUMMYDATA (Bit 0)        */
#define QSPIC2_QSPIC2_DUMMYDATA_REG_QSPIC_DUMMYDATA_Msk (0xffffffffUL)  /*!< QSPIC2 QSPIC2_DUMMYDATA_REG: QSPIC_DUMMYDATA (Bitfield-Mask: 0xffffffff) */
/* -------------------------  QSPIC2_QSPIC2_ERASECTRL_REG  ------------------------ */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_ADDR_Pos (4UL)            /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERS_ADDR (Bit 4)         */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_ADDR_Msk (0xfffff0UL)     /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERS_ADDR (Bitfield-Mask: 0xfffff) */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERASE_EN_Pos (24UL)           /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERASE_EN (Bit 24)        */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERASE_EN_Msk (0x1000000UL)    /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERASE_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_STATE_Pos (25UL)          /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERS_STATE (Bit 25)       */
#define QSPIC2_QSPIC2_ERASECTRL_REG_QSPIC_ERS_STATE_Msk (0xe000000UL)   /*!< QSPIC2 QSPIC2_ERASECTRL_REG: QSPIC_ERS_STATE (Bitfield-Mask: 0x07) */
/* -------------------------  QSPIC2_QSPIC2_ERASECMDA_REG  ------------------------ */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_ERS_INST_Pos (0UL)            /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_ERS_INST (Bit 0)         */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_ERS_INST_Msk (0xffUL)         /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_ERS_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_WEN_INST_Pos (8UL)            /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_WEN_INST (Bit 8)         */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_WEN_INST_Msk (0xff00UL)       /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_WEN_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_SUS_INST_Pos (16UL)           /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_SUS_INST (Bit 16)        */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_SUS_INST_Msk (0xff0000UL)     /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_SUS_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_RES_INST_Pos (24UL)           /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_RES_INST (Bit 24)        */
#define QSPIC2_QSPIC2_ERASECMDA_REG_QSPIC_RES_INST_Msk (0xff000000UL)   /*!< QSPIC2 QSPIC2_ERASECMDA_REG: QSPIC_RES_INST (Bitfield-Mask: 0xff) */
/* -------------------------  QSPIC2_QSPIC2_ERASECMDB_REG  ------------------------ */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_TX_MD_Pos (0UL)           /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERS_TX_MD (Bit 0)        */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_TX_MD_Msk (0x3UL)         /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERS_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_WEN_TX_MD_Pos (2UL)           /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_WEN_TX_MD (Bit 2)        */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_WEN_TX_MD_Msk (0xcUL)         /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_WEN_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_SUS_TX_MD_Pos (4UL)           /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_SUS_TX_MD (Bit 4)        */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_SUS_TX_MD_Msk (0x30UL)        /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_SUS_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RES_TX_MD_Pos (6UL)           /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_RES_TX_MD (Bit 6)        */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RES_TX_MD_Msk (0xc0UL)        /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_RES_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_EAD_TX_MD_Pos (8UL)           /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_EAD_TX_MD (Bit 8)        */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_EAD_TX_MD_Msk (0x300UL)       /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_EAD_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_CS_HI_Pos (10UL)          /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERS_CS_HI (Bit 10)       */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERS_CS_HI_Msk (0x7c00UL)      /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERS_CS_HI (Bitfield-Mask: 0x1f) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERSRES_HLD_Pos (16UL)         /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERSRES_HLD (Bit 16)      */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_ERSRES_HLD_Msk (0xf0000UL)    /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_ERSRES_HLD (Bitfield-Mask: 0x0f) */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RESSUS_DLY_Pos (24UL)         /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_RESSUS_DLY (Bit 24)      */
#define QSPIC2_QSPIC2_ERASECMDB_REG_QSPIC_RESSUS_DLY_Msk (0x3f000000UL) /*!< QSPIC2 QSPIC2_ERASECMDB_REG: QSPIC_RESSUS_DLY (Bitfield-Mask: 0x3f) */
/* -------------------------  QSPIC2_QSPIC2_BURSTBRK_REG  ------------------------- */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_WRD_Pos (0UL)              /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_WRD (Bit 0)           */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_WRD_Msk (0xffffUL)         /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_WRD (Bitfield-Mask: 0xffff) */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_EN_Pos (16UL)              /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_EN (Bit 16)           */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_EN_Msk (0x10000UL)         /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_SZ_Pos (17UL)              /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_SZ (Bit 17)           */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_SZ_Msk (0x20000UL)         /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_SZ (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_TX_MD_Pos (18UL)           /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_TX_MD (Bit 18)        */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_BRK_TX_MD_Msk (0xc0000UL)      /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_BRK_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_SEC_HF_DS_Pos (20UL)           /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_SEC_HF_DS (Bit 20)        */
#define QSPIC2_QSPIC2_BURSTBRK_REG_QSPIC_SEC_HF_DS_Msk (0x100000UL)     /*!< QSPIC2 QSPIC2_BURSTBRK_REG: QSPIC_SEC_HF_DS (Bitfield-Mask: 0x01) */
/* -------------------------  QSPIC2_QSPIC2_STATUSCMD_REG  ------------------------ */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_INST_Pos (0UL)          /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_INST (Bit 0)       */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_INST_Msk (0xffUL)       /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Pos (8UL)         /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_TX_MD (Bit 8)      */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_TX_MD_Msk (0x300UL)     /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Pos (10UL)        /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_RX_MD (Bit 10)     */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RSTAT_RX_MD_Msk (0xc00UL)     /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RSTAT_RX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_POS_Pos (12UL)           /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_BUSY_POS (Bit 12)        */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_POS_Msk (0x7000UL)       /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_BUSY_POS (Bitfield-Mask: 0x07) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_VAL_Pos (15UL)           /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_BUSY_VAL (Bit 15)        */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_BUSY_VAL_Msk (0x8000UL)       /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_BUSY_VAL (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RESSTS_DLY_Pos (16UL)         /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RESSTS_DLY (Bit 16)      */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_RESSTS_DLY_Msk (0x3f0000UL)   /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_RESSTS_DLY (Bitfield-Mask: 0x3f) */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_STSDLY_SEL_Pos (22UL)         /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_STSDLY_SEL (Bit 22)      */
#define QSPIC2_QSPIC2_STATUSCMD_REG_QSPIC_STSDLY_SEL_Msk (0x400000UL)   /*!< QSPIC2 QSPIC2_STATUSCMD_REG: QSPIC_STSDLY_SEL (Bitfield-Mask: 0x01) */
/* -------------------------  QSPIC2_QSPIC2_CHCKERASE_REG  ------------------------ */
#define QSPIC2_QSPIC2_CHCKERASE_REG_QSPIC_CHCKERASE_Pos (0UL)           /*!< QSPIC2 QSPIC2_CHCKERASE_REG: QSPIC_CHCKERASE (Bit 0)        */
#define QSPIC2_QSPIC2_CHCKERASE_REG_QSPIC_CHCKERASE_Msk (0xffffffffUL)  /*!< QSPIC2 QSPIC2_CHCKERASE_REG: QSPIC_CHCKERASE (Bitfield-Mask: 0xffffffff) */
/* ----------------------------  QSPIC2_QSPIC2_GP_REG  ---------------------------- */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_DRV_Pos (1UL)                   /*!< QSPIC2 QSPIC2_GP_REG: QSPIC_PADS_DRV (Bit 1)                */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_DRV_Msk (0x6UL)                 /*!< QSPIC2 QSPIC2_GP_REG: QSPIC_PADS_DRV (Bitfield-Mask: 0x03)  */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_SLEW_Pos (3UL)                  /*!< QSPIC2 QSPIC2_GP_REG: QSPIC_PADS_SLEW (Bit 3)               */
#define QSPIC2_QSPIC2_GP_REG_QSPIC_PADS_SLEW_Msk (0x18UL)               /*!< QSPIC2 QSPIC2_GP_REG: QSPIC_PADS_SLEW (Bitfield-Mask: 0x03) */
/* -------------------------  QSPIC2_QSPIC2_AWRITECMD_REG  ------------------------ */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_Pos (0UL)             /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_INST (Bit 0)          */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_Msk (0xffUL)          /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_INST (Bitfield-Mask: 0xff) */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Pos (8UL)       /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_INST_TX_MD (Bit 8)    */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_INST_TX_MD_Msk (0x300UL)   /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_INST_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Pos (10UL)       /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_ADR_TX_MD (Bit 10)    */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_ADR_TX_MD_Msk (0xc00UL)    /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_ADR_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Pos (12UL)       /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_DAT_TX_MD (Bit 12)    */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_DAT_TX_MD_Msk (0x3000UL)   /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_DAT_TX_MD (Bitfield-Mask: 0x03) */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Pos (14UL)     /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_CS_HIGH_MIN (Bit 14)  */
#define QSPIC2_QSPIC2_AWRITECMD_REG_QSPIC_WR_CS_HIGH_MIN_Msk (0x7c000UL) /*!< QSPIC2 QSPIC2_AWRITECMD_REG: QSPIC_WR_CS_HIGH_MIN (Bitfield-Mask: 0x1f) */
/* --------------------------  QSPIC2_QSPIC2_MEMBLEN_REG  ------------------------- */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_MEMBLEN_Pos (0UL)               /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_MEMBLEN (Bit 0)            */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_MEMBLEN_Msk (0x7UL)             /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_MEMBLEN (Bitfield-Mask: 0x07) */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_EN_Pos (3UL)              /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_T_CEM_EN (Bit 3)           */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_EN_Msk (0x8UL)            /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_T_CEM_EN (Bitfield-Mask: 0x01) */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_CC_Pos (4UL)              /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_T_CEM_CC (Bit 4)           */
#define QSPIC2_QSPIC2_MEMBLEN_REG_QSPIC_T_CEM_CC_Msk (0x3ff0UL)         /*!< QSPIC2 QSPIC2_MEMBLEN_REG: QSPIC_T_CEM_CC (Bitfield-Mask: 0x3ff) */
/* ================================================================================ */
/* ================          struct 'RFCU' Position & Mask         ================ */
/* ================================================================================ */
/* ------------------------------  RFCU_RF_ATTR_REG  ------------------------------ */
#define RFCU_RF_ATTR_REG_TIA_IF_MODE_Pos      (0UL)                     /*!< RFCU RF_ATTR_REG: TIA_IF_MODE (Bit 0)                       */
#define RFCU_RF_ATTR_REG_TIA_IF_MODE_Msk      (0x1UL)                   /*!< RFCU RF_ATTR_REG: TIA_IF_MODE (Bitfield-Mask: 0x01)         */
#define RFCU_RF_ATTR_REG_IFF_IF_MODE_Pos      (1UL)                     /*!< RFCU RF_ATTR_REG: IFF_IF_MODE (Bit 1)                       */
#define RFCU_RF_ATTR_REG_IFF_IF_MODE_Msk      (0x2UL)                   /*!< RFCU RF_ATTR_REG: IFF_IF_MODE (Bitfield-Mask: 0x01)         */
#define RFCU_RF_ATTR_REG_IFF_POLARITY_Pos     (3UL)                     /*!< RFCU RF_ATTR_REG: IFF_POLARITY (Bit 3)                      */
#define RFCU_RF_ATTR_REG_IFF_POLARITY_Msk     (0x8UL)                   /*!< RFCU RF_ATTR_REG: IFF_POLARITY (Bitfield-Mask: 0x01)        */
#define RFCU_RF_ATTR_REG_LNA_PWR_MODE_Pos     (5UL)                     /*!< RFCU RF_ATTR_REG: LNA_PWR_MODE (Bit 5)                      */
#define RFCU_RF_ATTR_REG_LNA_PWR_MODE_Msk     (0x20UL)                  /*!< RFCU RF_ATTR_REG: LNA_PWR_MODE (Bitfield-Mask: 0x01)        */
#define RFCU_RF_ATTR_REG_MIX_BIAS_Pos         (8UL)                     /*!< RFCU RF_ATTR_REG: MIX_BIAS (Bit 8)                          */
#define RFCU_RF_ATTR_REG_MIX_BIAS_Msk         (0xf00UL)                 /*!< RFCU RF_ATTR_REG: MIX_BIAS (Bitfield-Mask: 0x0f)            */
#define RFCU_RF_ATTR_REG_TIA_BIAS_Pos         (12UL)                    /*!< RFCU RF_ATTR_REG: TIA_BIAS (Bit 12)                         */
#define RFCU_RF_ATTR_REG_TIA_BIAS_Msk         (0xf000UL)                /*!< RFCU RF_ATTR_REG: TIA_BIAS (Bitfield-Mask: 0x0f)            */
#define RFCU_RF_ATTR_REG_IFF_BIAS_Pos         (16UL)                    /*!< RFCU RF_ATTR_REG: IFF_BIAS (Bit 16)                         */
#define RFCU_RF_ATTR_REG_IFF_BIAS_Msk         (0x1f0000UL)              /*!< RFCU RF_ATTR_REG: IFF_BIAS (Bitfield-Mask: 0x1f)            */
#define RFCU_RF_ATTR_REG_PA_POWER_SETTING_Pos (24UL)                    /*!< RFCU RF_ATTR_REG: PA_POWER_SETTING (Bit 24)                 */
#define RFCU_RF_ATTR_REG_PA_POWER_SETTING_Msk (0xf000000UL)             /*!< RFCU RF_ATTR_REG: PA_POWER_SETTING (Bitfield-Mask: 0x0f)    */
/* ---------------------------  RFCU_RF_RADIO_INIT_REG  --------------------------- */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_Pos (0UL)                   /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN (Bit 0)                */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_Msk (0x1UL)                 /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN (Bitfield-Mask: 0x01)  */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_SEL_Pos (1UL)               /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN_SEL (Bit 1)            */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_SEL_Msk (0x2UL)             /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_WR_Pos (2UL)                /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN_WR (Bit 2)             */
#define RFCU_RF_RADIO_INIT_REG_RADIO_LDO_EN_WR_Msk (0x4UL)              /*!< RFCU RF_RADIO_INIT_REG: RADIO_LDO_EN_WR (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_Pos (3UL)                /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN (Bit 3)             */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_Msk (0x8UL)              /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_SEL_Pos (4UL)            /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN_SEL (Bit 4)         */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_SEL_Msk (0x10UL)         /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_WR_Pos (5UL)             /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN_WR (Bit 5)          */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_LDO_EN_WR_Msk (0x20UL)          /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_LDO_EN_WR (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HRESET_N_Pos (8UL)              /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HRESET_N (Bit 8)           */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HRESET_N_Msk (0x100UL)          /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HRESET_N (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HCLK_EN_Pos (9UL)               /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HCLK_EN (Bit 9)            */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HCLK_EN_Msk (0x200UL)           /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HCLK_EN (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_RADIO_REGS_RDY_Pos (16UL)                /*!< RFCU RF_RADIO_INIT_REG: RADIO_REGS_RDY (Bit 16)             */
#define RFCU_RF_RADIO_INIT_REG_RADIO_REGS_RDY_Msk (0x10000UL)           /*!< RFCU RF_RADIO_INIT_REG: RADIO_REGS_RDY (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HCLK_DIS_Pos (17UL)             /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HCLK_DIS (Bit 17)          */
#define RFCU_RF_RADIO_INIT_REG_ADPLLDIG_HCLK_DIS_Msk (0x20000UL)        /*!< RFCU RF_RADIO_INIT_REG: ADPLLDIG_HCLK_DIS (Bitfield-Mask: 0x01) */
#define RFCU_RF_RADIO_INIT_REG_RADIO_INIT_AUTOCLEAR_Pos (24UL)          /*!< RFCU RF_RADIO_INIT_REG: RADIO_INIT_AUTOCLEAR (Bit 24)       */
#define RFCU_RF_RADIO_INIT_REG_RADIO_INIT_AUTOCLEAR_Msk (0x1000000UL)   /*!< RFCU RF_RADIO_INIT_REG: RADIO_INIT_AUTOCLEAR (Bitfield-Mask: 0x01) */
/* ---------------------------  RFCU_RF_LDO_STATUS_REG  --------------------------- */
#define RFCU_RF_LDO_STATUS_REG_RADIO_LDO_EN_RD_Pos (0UL)                /*!< RFCU RF_LDO_STATUS_REG: RADIO_LDO_EN_RD (Bit 0)             */
#define RFCU_RF_LDO_STATUS_REG_RADIO_LDO_EN_RD_Msk (0x1UL)              /*!< RFCU RF_LDO_STATUS_REG: RADIO_LDO_EN_RD (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_STATUS_REG_RADIO_LDO_ZERO_EN_RD_Pos (1UL)           /*!< RFCU RF_LDO_STATUS_REG: RADIO_LDO_ZERO_EN_RD (Bit 1)        */
#define RFCU_RF_LDO_STATUS_REG_RADIO_LDO_ZERO_EN_RD_Msk (0x2UL)         /*!< RFCU RF_LDO_STATUS_REG: RADIO_LDO_ZERO_EN_RD (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_STATUS_REG_ADPLLDIG_LDO_EN_RD_Pos (2UL)             /*!< RFCU RF_LDO_STATUS_REG: ADPLLDIG_LDO_EN_RD (Bit 2)          */
#define RFCU_RF_LDO_STATUS_REG_ADPLLDIG_LDO_EN_RD_Msk (0x4UL)           /*!< RFCU RF_LDO_STATUS_REG: ADPLLDIG_LDO_EN_RD (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_STATUS_REG_ADPLLDIG_LDO_ZERO_EN_RD_Pos (3UL)        /*!< RFCU RF_LDO_STATUS_REG: ADPLLDIG_LDO_ZERO_EN_RD (Bit 3)     */
#define RFCU_RF_LDO_STATUS_REG_ADPLLDIG_LDO_ZERO_EN_RD_Msk (0x8UL)      /*!< RFCU RF_LDO_STATUS_REG: ADPLLDIG_LDO_ZERO_EN_RD (Bitfield-Mask: 0x01) */
/* --------------------------  RFCU_RF_ADPLLDIG_CTRL_REG  ------------------------- */
#define RFCU_RF_ADPLLDIG_CTRL_REG_OPENLOOP_RDY_SEL_Pos (0UL)            /*!< RFCU RF_ADPLLDIG_CTRL_REG: OPENLOOP_RDY_SEL (Bit 0)         */
#define RFCU_RF_ADPLLDIG_CTRL_REG_OPENLOOP_RDY_SEL_Msk (0x1UL)          /*!< RFCU RF_ADPLLDIG_CTRL_REG: OPENLOOP_RDY_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_ADPLLDIG_CTRL_REG_OPENLOOP_RDY_WR_Pos (1UL)             /*!< RFCU RF_ADPLLDIG_CTRL_REG: OPENLOOP_RDY_WR (Bit 1)          */
#define RFCU_RF_ADPLLDIG_CTRL_REG_OPENLOOP_RDY_WR_Msk (0x2UL)           /*!< RFCU RF_ADPLLDIG_CTRL_REG: OPENLOOP_RDY_WR (Bitfield-Mask: 0x01) */
/* ---------------------------  RFCU_RF_AGC_EXT_LUT_REG  -------------------------- */
#define RFCU_RF_AGC_EXT_LUT_REG_AGC_EXT_LUT_Pos (0UL)                   /*!< RFCU RF_AGC_EXT_LUT_REG: AGC_EXT_LUT (Bit 0)                */
#define RFCU_RF_AGC_EXT_LUT_REG_AGC_EXT_LUT_Msk (0x3ffUL)               /*!< RFCU RF_AGC_EXT_LUT_REG: AGC_EXT_LUT (Bitfield-Mask: 0x3ff) */
/* ----------------------------  RFCU_RF_CALSTATE_REG  ---------------------------- */
#define RFCU_RF_CALSTATE_REG_CALSTATE_Pos     (0UL)                     /*!< RFCU RF_CALSTATE_REG: CALSTATE (Bit 0)                      */
#define RFCU_RF_CALSTATE_REG_CALSTATE_Msk     (0xfUL)                   /*!< RFCU RF_CALSTATE_REG: CALSTATE (Bitfield-Mask: 0x0f)        */
/* -----------------------------  RFCU_RF_REF_OSC_REG  ---------------------------- */
#define RFCU_RF_REF_OSC_REG_CNT_RO_Pos        (0UL)                     /*!< RFCU RF_REF_OSC_REG: CNT_RO (Bit 0)                         */
#define RFCU_RF_REF_OSC_REG_CNT_RO_Msk        (0x3fUL)                  /*!< RFCU RF_REF_OSC_REG: CNT_RO (Bitfield-Mask: 0x3f)           */
#define RFCU_RF_REF_OSC_REG_CNT_CLK_Pos       (6UL)                     /*!< RFCU RF_REF_OSC_REG: CNT_CLK (Bit 6)                        */
#define RFCU_RF_REF_OSC_REG_CNT_CLK_Msk       (0x7fc0UL)                /*!< RFCU RF_REF_OSC_REG: CNT_CLK (Bitfield-Mask: 0x1ff)         */
/* ----------------------------  RFCU_RF_CAL_CTRL_REG  ---------------------------- */
#define RFCU_RF_CAL_CTRL_REG_SO_CAL_Pos       (0UL)                     /*!< RFCU RF_CAL_CTRL_REG: SO_CAL (Bit 0)                        */
#define RFCU_RF_CAL_CTRL_REG_SO_CAL_Msk       (0x1UL)                   /*!< RFCU RF_CAL_CTRL_REG: SO_CAL (Bitfield-Mask: 0x01)          */
#define RFCU_RF_CAL_CTRL_REG_EO_CAL_Pos       (1UL)                     /*!< RFCU RF_CAL_CTRL_REG: EO_CAL (Bit 1)                        */
#define RFCU_RF_CAL_CTRL_REG_EO_CAL_Msk       (0x2UL)                   /*!< RFCU RF_CAL_CTRL_REG: EO_CAL (Bitfield-Mask: 0x01)          */
#define RFCU_RF_CAL_CTRL_REG_IFF_CAL_DIS_Pos  (3UL)                     /*!< RFCU RF_CAL_CTRL_REG: IFF_CAL_DIS (Bit 3)                   */
#define RFCU_RF_CAL_CTRL_REG_IFF_CAL_DIS_Msk  (0x8UL)                   /*!< RFCU RF_CAL_CTRL_REG: IFF_CAL_DIS (Bitfield-Mask: 0x01)     */
#define RFCU_RF_CAL_CTRL_REG_DC_OFFSET_CAL_DIS_Pos (4UL)                /*!< RFCU RF_CAL_CTRL_REG: DC_OFFSET_CAL_DIS (Bit 4)             */
#define RFCU_RF_CAL_CTRL_REG_DC_OFFSET_CAL_DIS_Msk (0x10UL)             /*!< RFCU RF_CAL_CTRL_REG: DC_OFFSET_CAL_DIS (Bitfield-Mask: 0x01) */
/* ----------------------------  RFCU_RF_IRQ_CTRL_REG  ---------------------------- */
#define RFCU_RF_IRQ_CTRL_REG_EO_CAL_CLEAR_Pos (0UL)                     /*!< RFCU RF_IRQ_CTRL_REG: EO_CAL_CLEAR (Bit 0)                  */
#define RFCU_RF_IRQ_CTRL_REG_EO_CAL_CLEAR_Msk (0x1UL)                   /*!< RFCU RF_IRQ_CTRL_REG: EO_CAL_CLEAR (Bitfield-Mask: 0x01)    */
/* -------------------------  RFCU_RF_ADCI_DC_OFFSET_REG  ------------------------- */
#define RFCU_RF_ADCI_DC_OFFSET_REG_ADC_OFFP_I_RD_Pos (0UL)              /*!< RFCU RF_ADCI_DC_OFFSET_REG: ADC_OFFP_I_RD (Bit 0)           */
#define RFCU_RF_ADCI_DC_OFFSET_REG_ADC_OFFP_I_RD_Msk (0x1ffUL)          /*!< RFCU RF_ADCI_DC_OFFSET_REG: ADC_OFFP_I_RD (Bitfield-Mask: 0x1ff) */
#define RFCU_RF_ADCI_DC_OFFSET_REG_ADC_OFFN_I_RD_Pos (9UL)              /*!< RFCU RF_ADCI_DC_OFFSET_REG: ADC_OFFN_I_RD (Bit 9)           */
#define RFCU_RF_ADCI_DC_OFFSET_REG_ADC_OFFN_I_RD_Msk (0x3fe00UL)        /*!< RFCU RF_ADCI_DC_OFFSET_REG: ADC_OFFN_I_RD (Bitfield-Mask: 0x1ff) */
/* -------------------------  RFCU_RF_ADCQ_DC_OFFSET_REG  ------------------------- */
#define RFCU_RF_ADCQ_DC_OFFSET_REG_ADC_OFFP_Q_RD_Pos (0UL)              /*!< RFCU RF_ADCQ_DC_OFFSET_REG: ADC_OFFP_Q_RD (Bit 0)           */
#define RFCU_RF_ADCQ_DC_OFFSET_REG_ADC_OFFP_Q_RD_Msk (0x1ffUL)          /*!< RFCU RF_ADCQ_DC_OFFSET_REG: ADC_OFFP_Q_RD (Bitfield-Mask: 0x1ff) */
#define RFCU_RF_ADCQ_DC_OFFSET_REG_ADC_OFFN_Q_RD_Pos (9UL)              /*!< RFCU RF_ADCQ_DC_OFFSET_REG: ADC_OFFN_Q_RD (Bit 9)           */
#define RFCU_RF_ADCQ_DC_OFFSET_REG_ADC_OFFN_Q_RD_Msk (0x3fe00UL)        /*!< RFCU RF_ADCQ_DC_OFFSET_REG: ADC_OFFN_Q_RD (Bitfield-Mask: 0x1ff) */
/* ------------------------------  RFCU_RF_SPARE_REG  ----------------------------- */
#define RFCU_RF_SPARE_REG_RF_SPARE_BITS_Pos   (0UL)                     /*!< RFCU RF_SPARE_REG: RF_SPARE_BITS (Bit 0)                    */
#define RFCU_RF_SPARE_REG_RF_SPARE_BITS_Msk   (0xffffUL)                /*!< RFCU RF_SPARE_REG: RF_SPARE_BITS (Bitfield-Mask: 0xffff)    */
#define RFCU_RF_SPARE_REG_RF_SPARE_BITS_HV_Pos (16UL)                   /*!< RFCU RF_SPARE_REG: RF_SPARE_BITS_HV (Bit 16)                */
#define RFCU_RF_SPARE_REG_RF_SPARE_BITS_HV_Msk (0xff0000UL)             /*!< RFCU RF_SPARE_REG: RF_SPARE_BITS_HV (Bitfield-Mask: 0xff)   */
#define RFCU_RF_SPARE_REG_RF_SPARE_IN_Pos     (24UL)                    /*!< RFCU RF_SPARE_REG: RF_SPARE_IN (Bit 24)                     */
#define RFCU_RF_SPARE_REG_RF_SPARE_IN_Msk     (0xf000000UL)             /*!< RFCU RF_SPARE_REG: RF_SPARE_IN (Bitfield-Mask: 0x0f)        */
#define RFCU_RF_SPARE_REG_RF_SPARE_IN_EN_Pos  (28UL)                    /*!< RFCU RF_SPARE_REG: RF_SPARE_IN_EN (Bit 28)                  */
#define RFCU_RF_SPARE_REG_RF_SPARE_IN_EN_Msk  (0x10000000UL)            /*!< RFCU RF_SPARE_REG: RF_SPARE_IN_EN (Bitfield-Mask: 0x01)     */
/* ----------------------------  RFCU_RF_IFF_CTRL_REG  ---------------------------- */
#define RFCU_RF_IFF_CTRL_REG_IF_CAL_CAP_Pos   (0UL)                     /*!< RFCU RF_IFF_CTRL_REG: IF_CAL_CAP (Bit 0)                    */
#define RFCU_RF_IFF_CTRL_REG_IF_CAL_CAP_Msk   (0xfUL)                   /*!< RFCU RF_IFF_CTRL_REG: IF_CAL_CAP (Bitfield-Mask: 0x0f)      */
#define RFCU_RF_IFF_CTRL_REG_IF_MUTE_Pos      (4UL)                     /*!< RFCU RF_IFF_CTRL_REG: IF_MUTE (Bit 4)                       */
#define RFCU_RF_IFF_CTRL_REG_IF_MUTE_Msk      (0x10UL)                  /*!< RFCU RF_IFF_CTRL_REG: IF_MUTE (Bitfield-Mask: 0x01)         */
#define RFCU_RF_IFF_CTRL_REG_IFF_DCOC_DAC_DIS_Pos (5UL)                 /*!< RFCU RF_IFF_CTRL_REG: IFF_DCOC_DAC_DIS (Bit 5)              */
#define RFCU_RF_IFF_CTRL_REG_IFF_DCOC_DAC_DIS_Msk (0x20UL)              /*!< RFCU RF_IFF_CTRL_REG: IFF_DCOC_DAC_DIS (Bitfield-Mask: 0x01) */
#define RFCU_RF_IFF_CTRL_REG_RO_TO_PINS_Pos   (6UL)                     /*!< RFCU RF_IFF_CTRL_REG: RO_TO_PINS (Bit 6)                    */
#define RFCU_RF_IFF_CTRL_REG_RO_TO_PINS_Msk   (0x40UL)                  /*!< RFCU RF_IFF_CTRL_REG: RO_TO_PINS (Bitfield-Mask: 0x01)      */
#define RFCU_RF_IFF_CTRL_REG_IF_SEL_SET2_GT_Pos (7UL)                   /*!< RFCU RF_IFF_CTRL_REG: IF_SEL_SET2_GT (Bit 7)                */
#define RFCU_RF_IFF_CTRL_REG_IF_SEL_SET2_GT_Msk (0x780UL)               /*!< RFCU RF_IFF_CTRL_REG: IF_SEL_SET2_GT (Bitfield-Mask: 0x0f)  */
#define RFCU_RF_IFF_CTRL_REG_IF_SELECT_FSM_Pos (11UL)                   /*!< RFCU RF_IFF_CTRL_REG: IF_SELECT_FSM (Bit 11)                */
#define RFCU_RF_IFF_CTRL_REG_IF_SELECT_FSM_Msk (0x800UL)                /*!< RFCU RF_IFF_CTRL_REG: IF_SELECT_FSM (Bitfield-Mask: 0x01)   */
#define RFCU_RF_IFF_CTRL_REG_IFF_COMPLEX_DIS_Pos (12UL)                 /*!< RFCU RF_IFF_CTRL_REG: IFF_COMPLEX_DIS (Bit 12)              */
#define RFCU_RF_IFF_CTRL_REG_IFF_COMPLEX_DIS_Msk (0x1000UL)             /*!< RFCU RF_IFF_CTRL_REG: IFF_COMPLEX_DIS (Bitfield-Mask: 0x01) */
#define RFCU_RF_IFF_CTRL_REG_IFF_DCOC_DAC_REFCUR_CTRL_Pos (13UL)        /*!< RFCU RF_IFF_CTRL_REG: IFF_DCOC_DAC_REFCUR_CTRL (Bit 13)     */
#define RFCU_RF_IFF_CTRL_REG_IFF_DCOC_DAC_REFCUR_CTRL_Msk (0x6000UL)    /*!< RFCU RF_IFF_CTRL_REG: IFF_DCOC_DAC_REFCUR_CTRL (Bitfield-Mask: 0x03) */
/* ----------------------------  RFCU_RF_ADC_CTRL1_REG  --------------------------- */
#define RFCU_RF_ADC_CTRL1_REG_ADC_DC_OFFSET_SEL_Pos (0UL)               /*!< RFCU RF_ADC_CTRL1_REG: ADC_DC_OFFSET_SEL (Bit 0)            */
#define RFCU_RF_ADC_CTRL1_REG_ADC_DC_OFFSET_SEL_Msk (0x1UL)             /*!< RFCU RF_ADC_CTRL1_REG: ADC_DC_OFFSET_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_ADC_CTRL1_REG_ADC_MUTE_Pos    (13UL)                    /*!< RFCU RF_ADC_CTRL1_REG: ADC_MUTE (Bit 13)                    */
#define RFCU_RF_ADC_CTRL1_REG_ADC_MUTE_Msk    (0x2000UL)                /*!< RFCU RF_ADC_CTRL1_REG: ADC_MUTE (Bitfield-Mask: 0x01)       */
#define RFCU_RF_ADC_CTRL1_REG_ADC_SIGN_Pos    (14UL)                    /*!< RFCU RF_ADC_CTRL1_REG: ADC_SIGN (Bit 14)                    */
#define RFCU_RF_ADC_CTRL1_REG_ADC_SIGN_Msk    (0x4000UL)                /*!< RFCU RF_ADC_CTRL1_REG: ADC_SIGN (Bitfield-Mask: 0x01)       */
/* ----------------------------  RFCU_RF_ADC_CTRL2_REG  --------------------------- */
#define RFCU_RF_ADC_CTRL2_REG_ADC_OFFP_I_WR_Pos (0UL)                   /*!< RFCU RF_ADC_CTRL2_REG: ADC_OFFP_I_WR (Bit 0)                */
#define RFCU_RF_ADC_CTRL2_REG_ADC_OFFP_I_WR_Msk (0x1ffUL)               /*!< RFCU RF_ADC_CTRL2_REG: ADC_OFFP_I_WR (Bitfield-Mask: 0x1ff) */
#define RFCU_RF_ADC_CTRL2_REG_ADC_OFFN_I_WR_Pos (9UL)                   /*!< RFCU RF_ADC_CTRL2_REG: ADC_OFFN_I_WR (Bit 9)                */
#define RFCU_RF_ADC_CTRL2_REG_ADC_OFFN_I_WR_Msk (0x3fe00UL)             /*!< RFCU RF_ADC_CTRL2_REG: ADC_OFFN_I_WR (Bitfield-Mask: 0x1ff) */
/* ----------------------------  RFCU_RF_ADC_CTRL3_REG  --------------------------- */
#define RFCU_RF_ADC_CTRL3_REG_ADC_OFFP_Q_WR_Pos (0UL)                   /*!< RFCU RF_ADC_CTRL3_REG: ADC_OFFP_Q_WR (Bit 0)                */
#define RFCU_RF_ADC_CTRL3_REG_ADC_OFFP_Q_WR_Msk (0x1ffUL)               /*!< RFCU RF_ADC_CTRL3_REG: ADC_OFFP_Q_WR (Bitfield-Mask: 0x1ff) */
#define RFCU_RF_ADC_CTRL3_REG_ADC_OFFN_Q_WR_Pos (9UL)                   /*!< RFCU RF_ADC_CTRL3_REG: ADC_OFFN_Q_WR (Bit 9)                */
#define RFCU_RF_ADC_CTRL3_REG_ADC_OFFN_Q_WR_Msk (0x3fe00UL)             /*!< RFCU RF_ADC_CTRL3_REG: ADC_OFFN_Q_WR (Bitfield-Mask: 0x1ff) */
/* -----------------------------  RFCU_RF_PA_CTRL_REG  ---------------------------- */
#define RFCU_RF_PA_CTRL_REG_TRIM_DUTY_POS_Pos (0UL)                     /*!< RFCU RF_PA_CTRL_REG: TRIM_DUTY_POS (Bit 0)                  */
#define RFCU_RF_PA_CTRL_REG_TRIM_DUTY_POS_Msk (0x7UL)                   /*!< RFCU RF_PA_CTRL_REG: TRIM_DUTY_POS (Bitfield-Mask: 0x07)    */
#define RFCU_RF_PA_CTRL_REG_TRIM_DUTY_NEG_Pos (3UL)                     /*!< RFCU RF_PA_CTRL_REG: TRIM_DUTY_NEG (Bit 3)                  */
#define RFCU_RF_PA_CTRL_REG_TRIM_DUTY_NEG_Msk (0x38UL)                  /*!< RFCU RF_PA_CTRL_REG: TRIM_DUTY_NEG (Bitfield-Mask: 0x07)    */
#define RFCU_RF_PA_CTRL_REG_PA_RAMP_STEP_SPEED_Pos (8UL)                /*!< RFCU RF_PA_CTRL_REG: PA_RAMP_STEP_SPEED (Bit 8)             */
#define RFCU_RF_PA_CTRL_REG_PA_RAMP_STEP_SPEED_Msk (0x300UL)            /*!< RFCU RF_PA_CTRL_REG: PA_RAMP_STEP_SPEED (Bitfield-Mask: 0x03) */
/* --------------------------  RFCU_RF_LDO_VREF_SEL_REG  -------------------------- */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_RADIO_VREF_SEL_Pos (0UL)        /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_RADIO_VREF_SEL (Bit 0)     */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_RADIO_VREF_SEL_Msk (0x1UL)      /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_RADIO_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_RFIO_VREF_SEL_Pos (1UL)         /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_RFIO_VREF_SEL (Bit 1)      */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_RFIO_VREF_SEL_Msk (0x2UL)       /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_RFIO_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_PA_VREF_SEL_Pos (2UL)           /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_PA_VREF_SEL (Bit 2)        */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_PA_VREF_SEL_Msk (0x4UL)         /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_PA_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_LNA_VREF_SEL_Pos (3UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_LNA_VREF_SEL (Bit 3)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_LNA_VREF_SEL_Msk (0x8UL)        /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_LNA_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_MIX_VREF_SEL_Pos (4UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_MIX_VREF_SEL (Bit 4)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_MIX_VREF_SEL_Msk (0x10UL)       /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_MIX_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_IFF_VREF_SEL_Pos (5UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_IFF_VREF_SEL (Bit 5)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_IFF_VREF_SEL_Msk (0x20UL)       /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_IFF_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_IFADC_VREF_SEL_Pos (6UL)        /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_IFADC_VREF_SEL (Bit 6)     */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_IFADC_VREF_SEL_Msk (0x40UL)     /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_IFADC_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_TDC_VREF_SEL_Pos (7UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_TDC_VREF_SEL (Bit 7)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_TDC_VREF_SEL_Msk (0x80UL)       /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_TDC_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_DTC_VREF_SEL_Pos (8UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_DTC_VREF_SEL (Bit 8)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_DTC_VREF_SEL_Msk (0x100UL)      /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_DTC_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_DCO_VREF_SEL_Pos (9UL)          /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_DCO_VREF_SEL (Bit 9)       */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_DCO_VREF_SEL_Msk (0x200UL)      /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_DCO_VREF_SEL (Bitfield-Mask: 0x01) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_ADPLLDIG_VREF_SEL_Pos (10UL)    /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_ADPLLDIG_VREF_SEL (Bit 10) */
#define RFCU_RF_LDO_VREF_SEL_REG_RF_LDO_ADPLLDIG_VREF_SEL_Msk (0x400UL) /*!< RFCU RF_LDO_VREF_SEL_REG: RF_LDO_ADPLLDIG_VREF_SEL (Bitfield-Mask: 0x01) */
/* ---------------------------  RFCU_RF_MIXER_CTRL1_REG  -------------------------- */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_QN_TRIM_Pos (0UL)         /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_QN_TRIM (Bit 0)      */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_QN_TRIM_Msk (0x3fUL)      /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_QN_TRIM (Bitfield-Mask: 0x3f) */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_QP_TRIM_Pos (8UL)         /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_QP_TRIM (Bit 8)      */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_QP_TRIM_Msk (0x3f00UL)    /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_QP_TRIM (Bitfield-Mask: 0x3f) */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_IN_TRIM_Pos (16UL)        /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_IN_TRIM (Bit 16)     */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_IN_TRIM_Msk (0x3f0000UL)  /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_IN_TRIM (Bitfield-Mask: 0x3f) */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_IP_TRIM_Pos (24UL)        /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_IP_TRIM (Bit 24)     */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_IP_TRIM_Msk (0x3f000000UL) /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_IP_TRIM (Bitfield-Mask: 0x3f) */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_EXTEND_Pos (30UL)         /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_EXTEND (Bit 30)      */
#define RFCU_RF_MIXER_CTRL1_REG_MIXER_IP2_DAC_EXTEND_Msk (0x40000000UL) /*!< RFCU RF_MIXER_CTRL1_REG: MIXER_IP2_DAC_EXTEND (Bitfield-Mask: 0x01) */
/* ---------------------------  RFCU_RF_MIXER_CTRL2_REG  -------------------------- */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_CAP_WR_1M_Pos (0UL)             /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_CAP_WR_1M (Bit 0)          */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_CAP_WR_1M_Msk (0xfUL)           /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_CAP_WR_1M (Bitfield-Mask: 0x0f) */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_CAP_WR_2M_Pos (8UL)             /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_CAP_WR_2M (Bit 8)          */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_CAP_WR_2M_Msk (0xf00UL)         /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_CAP_WR_2M (Bitfield-Mask: 0x0f) */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_SELECT_Pos (16UL)               /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_SELECT (Bit 16)            */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_CAL_SELECT_Msk (0x10000UL)          /*!< RFCU RF_MIXER_CTRL2_REG: MIX_CAL_SELECT (Bitfield-Mask: 0x01) */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_SPARE_Pos (24UL)                    /*!< RFCU RF_MIXER_CTRL2_REG: MIX_SPARE (Bit 24)                 */
#define RFCU_RF_MIXER_CTRL2_REG_MIX_SPARE_Msk (0xf000000UL)             /*!< RFCU RF_MIXER_CTRL2_REG: MIX_SPARE (Bitfield-Mask: 0x0f)    */
/* -----------------------------  RFCU_RF_IO_CTRL_REG  ---------------------------- */
#define RFCU_RF_IO_CTRL_REG_RFIO_RX_TUNE_CAP_TRIM_RX_Pos (0UL)          /*!< RFCU RF_IO_CTRL_REG: RFIO_RX_TUNE_CAP_TRIM_RX (Bit 0)       */
#define RFCU_RF_IO_CTRL_REG_RFIO_RX_TUNE_CAP_TRIM_RX_Msk (0xfUL)        /*!< RFCU RF_IO_CTRL_REG: RFIO_RX_TUNE_CAP_TRIM_RX (Bitfield-Mask: 0x0f) */
#define RFCU_RF_IO_CTRL_REG_RFIO_TX_TUNE_CAP_TRIM_RX_Pos (4UL)          /*!< RFCU RF_IO_CTRL_REG: RFIO_TX_TUNE_CAP_TRIM_RX (Bit 4)       */
#define RFCU_RF_IO_CTRL_REG_RFIO_TX_TUNE_CAP_TRIM_RX_Msk (0x70UL)       /*!< RFCU RF_IO_CTRL_REG: RFIO_TX_TUNE_CAP_TRIM_RX (Bitfield-Mask: 0x07) */
#define RFCU_RF_IO_CTRL_REG_RFIO_RX_TUNE_CAP_TRIM_TX_Pos (8UL)          /*!< RFCU RF_IO_CTRL_REG: RFIO_RX_TUNE_CAP_TRIM_TX (Bit 8)       */
#define RFCU_RF_IO_CTRL_REG_RFIO_RX_TUNE_CAP_TRIM_TX_Msk (0xf00UL)      /*!< RFCU RF_IO_CTRL_REG: RFIO_RX_TUNE_CAP_TRIM_TX (Bitfield-Mask: 0x0f) */
#define RFCU_RF_IO_CTRL_REG_RFIO_TX_TUNE_CAP_TRIM_TX_Pos (12UL)         /*!< RFCU RF_IO_CTRL_REG: RFIO_TX_TUNE_CAP_TRIM_TX (Bit 12)      */
#define RFCU_RF_IO_CTRL_REG_RFIO_TX_TUNE_CAP_TRIM_TX_Msk (0x7000UL)     /*!< RFCU RF_IO_CTRL_REG: RFIO_TX_TUNE_CAP_TRIM_TX (Bitfield-Mask: 0x07) */
/* ----------------------------  RFCU_RF_LNA_CTRL1_REG  --------------------------- */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN0_HP_Pos (0UL)               /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN0_HP (Bit 0)            */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN0_HP_Msk (0x1fUL)            /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN0_HP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN1_HP_Pos (5UL)               /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN1_HP (Bit 5)            */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN1_HP_Msk (0x3e0UL)           /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN1_HP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN2_HP_Pos (10UL)              /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN2_HP (Bit 10)           */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN2_HP_Msk (0x7c00UL)          /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN2_HP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN3_HP_Pos (15UL)              /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN3_HP (Bit 15)           */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN3_HP_Msk (0xf8000UL)         /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN3_HP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN4_HP_Pos (20UL)              /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN4_HP (Bit 20)           */
#define RFCU_RF_LNA_CTRL1_REG_LNA_TRIM_GAIN4_HP_Msk (0x1f00000UL)       /*!< RFCU RF_LNA_CTRL1_REG: LNA_TRIM_GAIN4_HP (Bitfield-Mask: 0x1f) */
/* ----------------------------  RFCU_RF_LNA_CTRL2_REG  --------------------------- */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN0_LP_Pos (0UL)               /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN0_LP (Bit 0)            */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN0_LP_Msk (0x1fUL)            /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN0_LP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN1_LP_Pos (5UL)               /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN1_LP (Bit 5)            */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN1_LP_Msk (0x3e0UL)           /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN1_LP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN2_LP_Pos (10UL)              /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN2_LP (Bit 10)           */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN2_LP_Msk (0x7c00UL)          /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN2_LP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN3_LP_Pos (15UL)              /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN3_LP (Bit 15)           */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN3_LP_Msk (0xf8000UL)         /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN3_LP (Bitfield-Mask: 0x1f) */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN4_LP_Pos (20UL)              /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN4_LP (Bit 20)           */
#define RFCU_RF_LNA_CTRL2_REG_LNA_TRIM_GAIN4_LP_Msk (0x1f00000UL)       /*!< RFCU RF_LNA_CTRL2_REG: LNA_TRIM_GAIN4_LP (Bitfield-Mask: 0x1f) */
/* ----------------------------  RFCU_RF_LNA_CTRL3_REG  --------------------------- */
#define RFCU_RF_LNA_CTRL3_REG_LNA_TRIM_CASC_Pos (0UL)                   /*!< RFCU RF_LNA_CTRL3_REG: LNA_TRIM_CASC (Bit 0)                */
#define RFCU_RF_LNA_CTRL3_REG_LNA_TRIM_CASC_Msk (0x7UL)                 /*!< RFCU RF_LNA_CTRL3_REG: LNA_TRIM_CASC (Bitfield-Mask: 0x07)  */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN0_LP_Pos (4UL)               /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN0_LP (Bit 4)            */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN0_LP_Msk (0x30UL)            /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN0_LP (Bitfield-Mask: 0x03) */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN1_LP_Pos (8UL)               /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN1_LP (Bit 8)            */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN1_LP_Msk (0x300UL)           /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN1_LP (Bitfield-Mask: 0x03) */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN2_LP_Pos (12UL)              /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN2_LP (Bit 12)           */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN2_LP_Msk (0x3000UL)          /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN2_LP (Bitfield-Mask: 0x03) */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN3_LP_Pos (16UL)              /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN3_LP (Bit 16)           */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN3_LP_Msk (0x30000UL)         /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN3_LP (Bitfield-Mask: 0x03) */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN4_LP_Pos (20UL)              /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN4_LP (Bit 20)           */
#define RFCU_RF_LNA_CTRL3_REG_LNA_MODE_GAIN4_LP_Msk (0x300000UL)        /*!< RFCU RF_LNA_CTRL3_REG: LNA_MODE_GAIN4_LP (Bitfield-Mask: 0x03) */
#define RFCU_RF_LNA_CTRL3_REG_LNA_SPARE_Pos   (24UL)                    /*!< RFCU RF_LNA_CTRL3_REG: LNA_SPARE (Bit 24)                   */
#define RFCU_RF_LNA_CTRL3_REG_LNA_SPARE_Msk   (0x3000000UL)             /*!< RFCU RF_LNA_CTRL3_REG: LNA_SPARE (Bitfield-Mask: 0x03)      */
/* ---------------------------  RFCU_RF_IFF_RESULT_REG  --------------------------- */
#define RFCU_RF_IFF_RESULT_REG_IF_CAL_CAP_RD_Pos (0UL)                  /*!< RFCU RF_IFF_RESULT_REG: IF_CAL_CAP_RD (Bit 0)               */
#define RFCU_RF_IFF_RESULT_REG_IF_CAL_CAP_RD_Msk (0xfUL)                /*!< RFCU RF_IFF_RESULT_REG: IF_CAL_CAP_RD (Bitfield-Mask: 0x0f) */
/* ---------------------------  RFCU_RF_IFF_CC_SET_REG  --------------------------- */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_1M_SET1_Pos (0UL)             /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_1M_SET1 (Bit 0)          */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_1M_SET1_Msk (0xfUL)           /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_1M_SET1 (Bitfield-Mask: 0x0f) */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_1M_SET2_Pos (8UL)             /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_1M_SET2 (Bit 8)          */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_1M_SET2_Msk (0xf00UL)         /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_1M_SET2 (Bitfield-Mask: 0x0f) */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_2M_SET1_Pos (16UL)            /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_2M_SET1 (Bit 16)         */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_2M_SET1_Msk (0xf0000UL)       /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_2M_SET1 (Bitfield-Mask: 0x0f) */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_2M_SET2_Pos (24UL)            /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_2M_SET2 (Bit 24)         */
#define RFCU_RF_IFF_CC_SET_REG_IF_CAL_CAP_2M_SET2_Msk (0xf000000UL)     /*!< RFCU RF_IFF_CC_SET_REG: IF_CAL_CAP_2M_SET2 (Bitfield-Mask: 0x0f) */
/* ------------------------  RFCU_RF_IFF_CAL_CAP_STAT_REG  ------------------------ */
#define RFCU_RF_IFF_CAL_CAP_STAT_REG_IF_CAL_CAP_RD_Pos (0UL)            /*!< RFCU RF_IFF_CAL_CAP_STAT_REG: IF_CAL_CAP_RD (Bit 0)         */
#define RFCU_RF_IFF_CAL_CAP_STAT_REG_IF_CAL_CAP_RD_Msk (0xfUL)          /*!< RFCU RF_IFF_CAL_CAP_STAT_REG: IF_CAL_CAP_RD (Bitfield-Mask: 0x0f) */
/* ------------------------  RFCU_RF_MIX_CAL_CAP_STAT_REG  ------------------------ */
#define RFCU_RF_MIX_CAL_CAP_STAT_REG_MIX_CAL_CAP_RD_Pos (0UL)           /*!< RFCU RF_MIX_CAL_CAP_STAT_REG: MIX_CAL_CAP_RD (Bit 0)        */
#define RFCU_RF_MIX_CAL_CAP_STAT_REG_MIX_CAL_CAP_RD_Msk (0xfUL)         /*!< RFCU RF_MIX_CAL_CAP_STAT_REG: MIX_CAL_CAP_RD (Bitfield-Mask: 0x0f) */
/* -----------------------  RFCU_RF_ADPLLDIG_RFMON_CTRL_REG  ---------------------- */
#define RFCU_RF_ADPLLDIG_RFMON_CTRL_REG_ADPLLDIG_SYNC_CLK_INV_Pos (0UL) /*!< RFCU RF_ADPLLDIG_RFMON_CTRL_REG: ADPLLDIG_SYNC_CLK_INV (Bit 0) */
#define RFCU_RF_ADPLLDIG_RFMON_CTRL_REG_ADPLLDIG_SYNC_CLK_INV_Msk (0x1UL) /*!< RFCU RF_ADPLLDIG_RFMON_CTRL_REG: ADPLLDIG_SYNC_CLK_INV (Bitfield-Mask: 0x01) */
#define RFCU_RF_ADPLLDIG_RFMON_CTRL_REG_ADPLLDIG_RFMON_MUX_SEL_Pos (1UL) /*!< RFCU RF_ADPLLDIG_RFMON_CTRL_REG: ADPLLDIG_RFMON_MUX_SEL (Bit 1) */
#define RFCU_RF_ADPLLDIG_RFMON_CTRL_REG_ADPLLDIG_RFMON_MUX_SEL_Msk (0xeUL) /*!< RFCU RF_ADPLLDIG_RFMON_CTRL_REG: ADPLLDIG_RFMON_MUX_SEL (Bitfield-Mask: 0x07) */
/* ----------------------------  RFCU_RF_RDP_CTRL_REG  ---------------------------- */
#define RFCU_RF_RDP_CTRL_REG_RDP_RFCU_SEL_Pos (0UL)                     /*!< RFCU RF_RDP_CTRL_REG: RDP_RFCU_SEL (Bit 0)                  */
#define RFCU_RF_RDP_CTRL_REG_RDP_RFCU_SEL_Msk (0x1UL)                   /*!< RFCU RF_RDP_CTRL_REG: RDP_RFCU_SEL (Bitfield-Mask: 0x01)    */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_SEL1_Pos (1UL)                     /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_SEL1 (Bit 1)                  */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_SEL1_Msk (0x2UL)                   /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_SEL1 (Bitfield-Mask: 0x01)    */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_SEL2_Pos (2UL)                     /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_SEL2 (Bit 2)                  */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_SEL2_Msk (0xcUL)                   /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_SEL2 (Bitfield-Mask: 0x03)    */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_RATE_Pos (4UL)                     /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_RATE (Bit 4)                  */
#define RFCU_RF_RDP_CTRL_REG_RDP_MOD_RATE_Msk (0x30UL)                  /*!< RFCU RF_RDP_CTRL_REG: RDP_MOD_RATE (Bitfield-Mask: 0x03)    */
/* ----------------------------  RFCU_RF_RFCU_CTRL_REG  --------------------------- */
#define RFCU_RF_RFCU_CTRL_REG_RF_RFCU_CLK_DIV_Pos (0UL)                 /*!< RFCU RF_RFCU_CTRL_REG: RF_RFCU_CLK_DIV (Bit 0)              */
#define RFCU_RF_RFCU_CTRL_REG_RF_RFCU_CLK_DIV_Msk (0x1UL)               /*!< RFCU RF_RFCU_CTRL_REG: RF_RFCU_CLK_DIV (Bitfield-Mask: 0x01) */
/* ----------------------------  RFCU_RF_OVERRULE_REG  ---------------------------- */
#define RFCU_RF_OVERRULE_REG_TX_EN_OVR_Pos    (0UL)                     /*!< RFCU RF_OVERRULE_REG: TX_EN_OVR (Bit 0)                     */
#define RFCU_RF_OVERRULE_REG_TX_EN_OVR_Msk    (0x3UL)                   /*!< RFCU RF_OVERRULE_REG: TX_EN_OVR (Bitfield-Mask: 0x03)       */
#define RFCU_RF_OVERRULE_REG_RX_EN_OVR_Pos    (2UL)                     /*!< RFCU RF_OVERRULE_REG: RX_EN_OVR (Bit 2)                     */
#define RFCU_RF_OVERRULE_REG_RX_EN_OVR_Msk    (0xcUL)                   /*!< RFCU RF_OVERRULE_REG: RX_EN_OVR (Bitfield-Mask: 0x03)       */
/* ================================================================================ */
/* ================       struct 'RFCU_POWER' Position & Mask      ================ */
/* ================================================================================ */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG0_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG0_REG_RFIO_LDO_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG0_REG: RFIO_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG0_REG_RFIO_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG0_REG: RFIO_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG0_REG_RFIO_LDO_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG0_REG: RFIO_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG0_REG_RFIO_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG0_REG: RFIO_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG1_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG1_REG_PA_LDO_EN_DCF_RX_Pos (0UL)     /*!< RFCU_POWER RF_ENABLE_CONFIG1_REG: PA_LDO_EN_DCF_RX (Bit 0)  */
#define RFCU_POWER_RF_ENABLE_CONFIG1_REG_PA_LDO_EN_DCF_RX_Msk (0x1fUL)  /*!< RFCU_POWER RF_ENABLE_CONFIG1_REG: PA_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG1_REG_PA_LDO_EN_DCF_TX_Pos (5UL)     /*!< RFCU_POWER RF_ENABLE_CONFIG1_REG: PA_LDO_EN_DCF_TX (Bit 5)  */
#define RFCU_POWER_RF_ENABLE_CONFIG1_REG_PA_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG1_REG: PA_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG2_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG2_REG_LNA_LDO_EN_DCF_RX_Pos (0UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG2_REG: LNA_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG2_REG_LNA_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG2_REG: LNA_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG2_REG_LNA_LDO_EN_DCF_TX_Pos (5UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG2_REG: LNA_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG2_REG_LNA_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG2_REG: LNA_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG3_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG3_REG_MIX_LDO_EN_DCF_RX_Pos (0UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG3_REG: MIX_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG3_REG_MIX_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG3_REG: MIX_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG3_REG_MIX_LDO_EN_DCF_TX_Pos (5UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG3_REG: MIX_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG3_REG_MIX_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG3_REG: MIX_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG4_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG4_REG_IFF_LDO_EN_DCF_RX_Pos (0UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG4_REG: IFF_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG4_REG_IFF_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG4_REG: IFF_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG4_REG_IFF_LDO_EN_DCF_TX_Pos (5UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG4_REG: IFF_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG4_REG_IFF_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG4_REG: IFF_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG5_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG5_REG_IFFADC_LDO_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG5_REG: IFFADC_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG5_REG_IFFADC_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG5_REG: IFFADC_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG5_REG_IFFADC_LDO_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG5_REG: IFFADC_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG5_REG_IFFADC_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG5_REG: IFFADC_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG6_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG6_REG_ADPLL_TDC_LDO_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG6_REG: ADPLL_TDC_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG6_REG_ADPLL_TDC_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG6_REG: ADPLL_TDC_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG6_REG_ADPLL_TDC_LDO_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG6_REG: ADPLL_TDC_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG6_REG_ADPLL_TDC_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG6_REG: ADPLL_TDC_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG7_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG7_REG_ADPLL_DTC_LDO_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG7_REG: ADPLL_DTC_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG7_REG_ADPLL_DTC_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG7_REG: ADPLL_DTC_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG7_REG_ADPLL_DTC_LDO_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG7_REG: ADPLL_DTC_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG7_REG_ADPLL_DTC_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG7_REG: ADPLL_DTC_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG8_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG8_REG_ADPLL_DCO_LDO_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG8_REG: ADPLL_DCO_LDO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG8_REG_ADPLL_DCO_LDO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG8_REG: ADPLL_DCO_LDO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG8_REG_ADPLL_DCO_LDO_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG8_REG: ADPLL_DCO_LDO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG8_REG_ADPLL_DCO_LDO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG8_REG: ADPLL_DCO_LDO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG9_REG  ---------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG9_REG_LDO_ZERO_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG9_REG: LDO_ZERO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG9_REG_LDO_ZERO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG9_REG: LDO_ZERO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG9_REG_LDO_ZERO_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG9_REG: LDO_ZERO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG9_REG_LDO_ZERO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG9_REG: LDO_ZERO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG10_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG10_REG_LNA_LDO_ZERO_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG10_REG: LNA_LDO_ZERO_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG10_REG_LNA_LDO_ZERO_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG10_REG: LNA_LDO_ZERO_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG10_REG_LNA_LDO_ZERO_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG10_REG: LNA_LDO_ZERO_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG10_REG_LNA_LDO_ZERO_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG10_REG: LNA_LDO_ZERO_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG11_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG11_REG_ADPLLDIG_LDO_ACTIVERDY_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG11_REG: ADPLLDIG_LDO_ACTIVERDY_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG11_REG_ADPLLDIG_LDO_ACTIVERDY_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG11_REG: ADPLLDIG_LDO_ACTIVERDY_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG11_REG_ADPLLDIG_LDO_ACTIVERDY_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG11_REG: ADPLLDIG_LDO_ACTIVERDY_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG11_REG_ADPLLDIG_LDO_ACTIVERDY_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG11_REG: ADPLLDIG_LDO_ACTIVERDY_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG12_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG12_REG_ADPLLDIG_LDO_LP_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG12_REG: ADPLLDIG_LDO_LP_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG12_REG_ADPLLDIG_LDO_LP_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG12_REG: ADPLLDIG_LDO_LP_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG12_REG_ADPLLDIG_LDO_LP_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG12_REG: ADPLLDIG_LDO_LP_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG12_REG_ADPLLDIG_LDO_LP_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG12_REG: ADPLLDIG_LDO_LP_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG13_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG13_REG_RFIO_RX_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG13_REG: RFIO_RX_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG13_REG_RFIO_RX_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG13_REG: RFIO_RX_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG13_REG_RFIO_RX_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG13_REG: RFIO_RX_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG13_REG_RFIO_RX_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG13_REG: RFIO_RX_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG14_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG14_REG_RFIO_TX_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG14_REG: RFIO_TX_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG14_REG_RFIO_TX_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG14_REG: RFIO_TX_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG14_REG_RFIO_TX_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG14_REG: RFIO_TX_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG14_REG_RFIO_TX_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG14_REG: RFIO_TX_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG15_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG15_REG_RFIO_TX_HARM_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG15_REG: RFIO_TX_HARM_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG15_REG_RFIO_TX_HARM_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG15_REG: RFIO_TX_HARM_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG15_REG_RFIO_TX_HARM_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG15_REG: RFIO_TX_HARM_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG15_REG_RFIO_TX_HARM_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG15_REG: RFIO_TX_HARM_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG16_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG16_REG_RFIO_BIAS_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG16_REG: RFIO_BIAS_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG16_REG_RFIO_BIAS_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG16_REG: RFIO_BIAS_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG16_REG_RFIO_BIAS_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG16_REG: RFIO_BIAS_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG16_REG_RFIO_BIAS_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG16_REG: RFIO_BIAS_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG17_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG17_REG_RFIO_BIAS_SH_OPEN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG17_REG: RFIO_BIAS_SH_OPEN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG17_REG_RFIO_BIAS_SH_OPEN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG17_REG: RFIO_BIAS_SH_OPEN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG17_REG_RFIO_BIAS_SH_OPEN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG17_REG: RFIO_BIAS_SH_OPEN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG17_REG_RFIO_BIAS_SH_OPEN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG17_REG: RFIO_BIAS_SH_OPEN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG18_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG18_REG_PA_RAMP_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG18_REG: PA_RAMP_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG18_REG_PA_RAMP_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG18_REG: PA_RAMP_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG18_REG_PA_RAMP_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG18_REG: PA_RAMP_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG18_REG_PA_RAMP_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG18_REG: PA_RAMP_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG19_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG19_REG_PA_EN_DCF_RX_Pos (0UL)        /*!< RFCU_POWER RF_ENABLE_CONFIG19_REG: PA_EN_DCF_RX (Bit 0)     */
#define RFCU_POWER_RF_ENABLE_CONFIG19_REG_PA_EN_DCF_RX_Msk (0x1fUL)     /*!< RFCU_POWER RF_ENABLE_CONFIG19_REG: PA_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG19_REG_PA_EN_DCF_TX_Pos (5UL)        /*!< RFCU_POWER RF_ENABLE_CONFIG19_REG: PA_EN_DCF_TX (Bit 5)     */
#define RFCU_POWER_RF_ENABLE_CONFIG19_REG_PA_EN_DCF_TX_Msk (0x3e0UL)    /*!< RFCU_POWER RF_ENABLE_CONFIG19_REG: PA_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG20_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG20_REG_LNA_CORE_EN_DCF_RX_Pos (0UL)  /*!< RFCU_POWER RF_ENABLE_CONFIG20_REG: LNA_CORE_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG20_REG_LNA_CORE_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG20_REG: LNA_CORE_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG20_REG_LNA_CORE_EN_DCF_TX_Pos (5UL)  /*!< RFCU_POWER RF_ENABLE_CONFIG20_REG: LNA_CORE_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG20_REG_LNA_CORE_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG20_REG: LNA_CORE_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG21_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG21_REG_LNA_CGM_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG21_REG: LNA_CGM_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG21_REG_LNA_CGM_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG21_REG: LNA_CGM_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG21_REG_LNA_CGM_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG21_REG: LNA_CGM_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG21_REG_LNA_CGM_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG21_REG: LNA_CGM_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG22_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG22_REG_MIX_EN_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG22_REG: MIX_EN_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG22_REG_MIX_EN_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG22_REG: MIX_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG22_REG_MIX_EN_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG22_REG: MIX_EN_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG22_REG_MIX_EN_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG22_REG: MIX_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG23_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG23_REG_MIX_BIAS_SH_OPEN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG23_REG: MIX_BIAS_SH_OPEN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG23_REG_MIX_BIAS_SH_OPEN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG23_REG: MIX_BIAS_SH_OPEN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG23_REG_MIX_BIAS_SH_OPEN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG23_REG: MIX_BIAS_SH_OPEN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG23_REG_MIX_BIAS_SH_OPEN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG23_REG: MIX_BIAS_SH_OPEN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG24_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG24_REG_IFF_EN_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG24_REG: IFF_EN_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG24_REG_IFF_EN_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG24_REG: IFF_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG24_REG_IFF_EN_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG24_REG: IFF_EN_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG24_REG_IFF_EN_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG24_REG: IFF_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG25_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG25_REG_IFF_BIAS_SH_OPEN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG25_REG: IFF_BIAS_SH_OPEN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG25_REG_IFF_BIAS_SH_OPEN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG25_REG: IFF_BIAS_SH_OPEN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG25_REG_IFF_BIAS_SH_OPEN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG25_REG: IFF_BIAS_SH_OPEN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG25_REG_IFF_BIAS_SH_OPEN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG25_REG: IFF_BIAS_SH_OPEN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG26_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG26_REG_ADC_CLK_EN_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG26_REG: ADC_CLK_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG26_REG_ADC_CLK_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG26_REG: ADC_CLK_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG26_REG_ADC_CLK_EN_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG26_REG: ADC_CLK_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG26_REG_ADC_CLK_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG26_REG: ADC_CLK_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG27_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG27_REG_ADC_EN_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG27_REG: ADC_EN_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG27_REG_ADC_EN_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG27_REG: ADC_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG27_REG_ADC_EN_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG27_REG: ADC_EN_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG27_REG_ADC_EN_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG27_REG: ADC_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG28_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG28_REG_ADPLL_DCO_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG28_REG: ADPLL_DCO_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG28_REG_ADPLL_DCO_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG28_REG: ADPLL_DCO_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG28_REG_ADPLL_DCO_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG28_REG: ADPLL_DCO_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG28_REG_ADPLL_DCO_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG28_REG: ADPLL_DCO_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG29_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG29_REG_ADPLL_CLK_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG29_REG: ADPLL_CLK_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG29_REG_ADPLL_CLK_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG29_REG: ADPLL_CLK_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG29_REG_ADPLL_CLK_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG29_REG: ADPLL_CLK_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG29_REG_ADPLL_CLK_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG29_REG: ADPLL_CLK_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG30_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG30_REG_ADPLLDIG_RST_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG30_REG: ADPLLDIG_RST_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG30_REG_ADPLLDIG_RST_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG30_REG: ADPLLDIG_RST_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG30_REG_ADPLLDIG_RST_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG30_REG: ADPLLDIG_RST_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG30_REG_ADPLLDIG_RST_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG30_REG: ADPLLDIG_RST_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG31_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG31_REG_ADPLLDIG_EN_DCF_RX_Pos (0UL)  /*!< RFCU_POWER RF_ENABLE_CONFIG31_REG: ADPLLDIG_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG31_REG_ADPLLDIG_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG31_REG: ADPLLDIG_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG31_REG_ADPLLDIG_EN_DCF_TX_Pos (5UL)  /*!< RFCU_POWER RF_ENABLE_CONFIG31_REG: ADPLLDIG_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG31_REG_ADPLLDIG_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG31_REG: ADPLLDIG_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG32_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG32_REG_ADPLLDIG_RX_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG32_REG: ADPLLDIG_RX_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG32_REG_ADPLLDIG_RX_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG32_REG: ADPLLDIG_RX_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG32_REG_ADPLLDIG_RX_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG32_REG: ADPLLDIG_RX_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG32_REG_ADPLLDIG_RX_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG32_REG: ADPLLDIG_RX_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG33_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG33_REG_ADPLLDIG_PAIN_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG33_REG: ADPLLDIG_PAIN_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG33_REG_ADPLLDIG_PAIN_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG33_REG: ADPLLDIG_PAIN_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG33_REG_ADPLLDIG_PAIN_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG33_REG: ADPLLDIG_PAIN_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG33_REG_ADPLLDIG_PAIN_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG33_REG: ADPLLDIG_PAIN_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG34_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG34_REG_ADPLL_LOBUF_PA_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG34_REG: ADPLL_LOBUF_PA_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG34_REG_ADPLL_LOBUF_PA_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG34_REG: ADPLL_LOBUF_PA_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG34_REG_ADPLL_LOBUF_PA_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG34_REG: ADPLL_LOBUF_PA_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG34_REG_ADPLL_LOBUF_PA_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG34_REG: ADPLL_LOBUF_PA_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG35_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG35_REG_CAL_EN_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG35_REG: CAL_EN_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG35_REG_CAL_EN_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG35_REG: CAL_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG35_REG_CAL_EN_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG35_REG: CAL_EN_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG35_REG_CAL_EN_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG35_REG: CAL_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG36_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG36_REG_DEM_EN_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG36_REG: DEM_EN_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG36_REG_DEM_EN_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG36_REG: DEM_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG36_REG_DEM_EN_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG36_REG: DEM_EN_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG36_REG_DEM_EN_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG36_REG: DEM_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG37_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG37_REG_DEM_DC_PARCAL_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG37_REG: DEM_DC_PARCAL_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG37_REG_DEM_DC_PARCAL_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG37_REG: DEM_DC_PARCAL_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG37_REG_SPARE_DEM_DC_PARCAL_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG37_REG: SPARE_DEM_DC_PARCAL_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG37_REG_SPARE_DEM_DC_PARCAL_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG37_REG: SPARE_DEM_DC_PARCAL_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG38_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG38_REG_DEM_AGC_UNFREEZE_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG38_REG: DEM_AGC_UNFREEZE_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG38_REG_DEM_AGC_UNFREEZE_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG38_REG: DEM_AGC_UNFREEZE_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG38_REG_SPARE_DEM_AGC_UNFREEZE_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG38_REG: SPARE_DEM_AGC_UNFREEZE_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG38_REG_SPARE_DEM_AGC_UNFREEZE_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG38_REG: SPARE_DEM_AGC_UNFREEZE_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG39_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG39_REG_DEM_SIGDETECT_EN_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG39_REG: DEM_SIGDETECT_EN_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG39_REG_DEM_SIGDETECT_EN_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG39_REG: DEM_SIGDETECT_EN_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG39_REG_SPARE_DEM_SIGDETECT_EN_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG39_REG: SPARE_DEM_SIGDETECT_EN_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG39_REG_SPARE_DEM_SIGDETECT_EN_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG39_REG: SPARE_DEM_SIGDETECT_EN_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG40_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG40_REG_PHY_RDY4BS_DCF_RX_Pos (0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG40_REG: PHY_RDY4BS_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG40_REG_PHY_RDY4BS_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG40_REG: PHY_RDY4BS_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG40_REG_PHY_RDY4BS_DCF_TX_Pos (5UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG40_REG: PHY_RDY4BS_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG40_REG_PHY_RDY4BS_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG40_REG: PHY_RDY4BS_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG41_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG41_REG_ADPLL_RDY_FOR_DIV_DCF_RX_Pos (0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG41_REG: ADPLL_RDY_FOR_DIV_DCF_RX (Bit 0) */
#define RFCU_POWER_RF_ENABLE_CONFIG41_REG_ADPLL_RDY_FOR_DIV_DCF_RX_Msk (0x1fUL) /*!< RFCU_POWER RF_ENABLE_CONFIG41_REG: ADPLL_RDY_FOR_DIV_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG41_REG_ADPLL_RDY_FOR_DIV_DCF_TX_Pos (5UL) /*!< RFCU_POWER RF_ENABLE_CONFIG41_REG: ADPLL_RDY_FOR_DIV_DCF_TX (Bit 5) */
#define RFCU_POWER_RF_ENABLE_CONFIG41_REG_ADPLL_RDY_FOR_DIV_DCF_TX_Msk (0x3e0UL) /*!< RFCU_POWER RF_ENABLE_CONFIG41_REG: ADPLL_RDY_FOR_DIV_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG42_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG42_REG_SPARE1_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG42_REG: SPARE1_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG42_REG_SPARE1_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG42_REG: SPARE1_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG42_REG_SPARE1_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG42_REG: SPARE1_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG42_REG_SPARE1_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG42_REG: SPARE1_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG43_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG43_REG_SPARE2_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG43_REG: SPARE2_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG43_REG_SPARE2_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG43_REG: SPARE2_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG43_REG_SPARE2_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG43_REG: SPARE2_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG43_REG_SPARE2_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG43_REG: SPARE2_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG44_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG44_REG_SPARE3_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG44_REG: SPARE3_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG44_REG_SPARE3_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG44_REG: SPARE3_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG44_REG_SPARE3_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG44_REG: SPARE3_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG44_REG_SPARE3_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG44_REG: SPARE3_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG45_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG45_REG_SPARE4_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG45_REG: SPARE4_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG45_REG_SPARE4_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG45_REG: SPARE4_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG45_REG_SPARE4_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG45_REG: SPARE4_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG45_REG_SPARE4_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG45_REG: SPARE4_DCF_TX (Bitfield-Mask: 0x1f) */
/* ----------------------  RFCU_POWER_RF_ENABLE_CONFIG46_REG  --------------------- */
#define RFCU_POWER_RF_ENABLE_CONFIG46_REG_SPARE5_DCF_RX_Pos (0UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG46_REG: SPARE5_DCF_RX (Bit 0)    */
#define RFCU_POWER_RF_ENABLE_CONFIG46_REG_SPARE5_DCF_RX_Msk (0x1fUL)    /*!< RFCU_POWER RF_ENABLE_CONFIG46_REG: SPARE5_DCF_RX (Bitfield-Mask: 0x1f) */
#define RFCU_POWER_RF_ENABLE_CONFIG46_REG_SPARE5_DCF_TX_Pos (5UL)       /*!< RFCU_POWER RF_ENABLE_CONFIG46_REG: SPARE5_DCF_TX (Bit 5)    */
#define RFCU_POWER_RF_ENABLE_CONFIG46_REG_SPARE5_DCF_TX_Msk (0x3e0UL)   /*!< RFCU_POWER RF_ENABLE_CONFIG46_REG: SPARE5_DCF_TX (Bitfield-Mask: 0x1f) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_1_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_1_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_1_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_1_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_1_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_1_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_1_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_1_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_1_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_2_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_2_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_2_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_2_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_2_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_2_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_2_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_2_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_2_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_3_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_3_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_3_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_3_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_3_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_3_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_3_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_3_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_3_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_4_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_4_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_4_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_4_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_4_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_4_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_4_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_4_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_4_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_5_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_5_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_5_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_5_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_5_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_5_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_5_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_5_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_5_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_6_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_6_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_6_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_6_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_6_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_6_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_6_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_6_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_6_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_7_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_7_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_7_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_7_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_7_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_7_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_7_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_7_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_7_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_8_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_8_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_8_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_8_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_8_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_8_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_8_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_8_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_8_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* -----------------------  RFCU_POWER_RF_CNTRL_TIMER_9_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_9_REG_SET_OFFSET_Pos (0UL)            /*!< RFCU_POWER RF_CNTRL_TIMER_9_REG: SET_OFFSET (Bit 0)         */
#define RFCU_POWER_RF_CNTRL_TIMER_9_REG_SET_OFFSET_Msk (0xffUL)         /*!< RFCU_POWER RF_CNTRL_TIMER_9_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_9_REG_RESET_OFFSET_Pos (8UL)          /*!< RFCU_POWER RF_CNTRL_TIMER_9_REG: RESET_OFFSET (Bit 8)       */
#define RFCU_POWER_RF_CNTRL_TIMER_9_REG_RESET_OFFSET_Msk (0xff00UL)     /*!< RFCU_POWER RF_CNTRL_TIMER_9_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_10_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_10_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_10_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_10_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_10_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_10_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_10_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_10_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_10_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_11_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_11_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_11_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_11_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_11_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_11_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_11_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_11_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_11_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_12_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_12_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_12_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_12_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_12_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_12_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_12_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_12_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_12_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_13_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_13_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_13_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_13_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_13_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_13_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_13_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_13_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_13_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_14_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_14_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_14_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_14_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_14_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_14_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_14_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_14_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_14_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_15_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_15_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_15_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_15_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_15_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_15_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_15_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_15_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_15_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_16_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_16_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_16_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_16_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_16_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_16_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_16_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_16_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_16_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_17_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_17_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_17_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_17_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_17_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_17_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_17_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_17_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_17_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_18_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_18_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_18_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_18_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_18_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_18_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_18_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_18_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_18_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_19_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_19_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_19_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_19_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_19_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_19_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_19_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_19_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_19_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_20_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_20_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_20_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_20_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_20_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_20_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_20_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_20_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_20_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_21_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_21_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_21_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_21_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_21_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_21_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_21_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_21_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_21_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_22_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_22_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_22_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_22_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_22_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_22_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_22_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_22_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_22_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_23_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_23_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_23_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_23_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_23_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_23_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_23_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_23_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_23_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_24_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_24_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_24_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_24_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_24_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_24_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_24_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_24_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_24_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_25_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_25_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_25_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_25_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_25_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_25_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_25_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_25_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_25_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_26_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_26_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_26_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_26_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_26_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_26_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_26_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_26_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_26_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_27_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_27_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_27_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_27_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_27_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_27_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_27_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_27_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_27_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_28_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_28_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_28_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_28_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_28_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_28_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_28_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_28_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_28_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_29_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_29_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_29_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_29_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_29_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_29_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_29_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_29_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_29_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_30_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_30_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_30_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_30_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_30_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_30_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_30_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_30_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_30_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ----------------------  RFCU_POWER_RF_CNTRL_TIMER_31_REG  ---------------------- */
#define RFCU_POWER_RF_CNTRL_TIMER_31_REG_SET_OFFSET_Pos (0UL)           /*!< RFCU_POWER RF_CNTRL_TIMER_31_REG: SET_OFFSET (Bit 0)        */
#define RFCU_POWER_RF_CNTRL_TIMER_31_REG_SET_OFFSET_Msk (0xffUL)        /*!< RFCU_POWER RF_CNTRL_TIMER_31_REG: SET_OFFSET (Bitfield-Mask: 0xff) */
#define RFCU_POWER_RF_CNTRL_TIMER_31_REG_RESET_OFFSET_Pos (8UL)         /*!< RFCU_POWER RF_CNTRL_TIMER_31_REG: RESET_OFFSET (Bit 8)      */
#define RFCU_POWER_RF_CNTRL_TIMER_31_REG_RESET_OFFSET_Msk (0xff00UL)    /*!< RFCU_POWER RF_CNTRL_TIMER_31_REG: RESET_OFFSET (Bitfield-Mask: 0xff) */
/* ------------------------  RFCU_POWER_RF_ALWAYS_EN1_REG  ------------------------ */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_LDO_EN_Pos (0UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_LDO_EN (Bit 0)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_LDO_EN_Msk (0x1UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_LDO_EN_Pos (1UL)         /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_LDO_EN (Bit 1)      */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_LDO_EN_Msk (0x2UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_LDO_EN_Pos (2UL)        /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_LDO_EN (Bit 2)     */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_LDO_EN_Msk (0x4UL)      /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_LDO_EN_Pos (3UL)        /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_LDO_EN (Bit 3)     */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_LDO_EN_Msk (0x8UL)      /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_LDO_EN_Pos (4UL)        /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_LDO_EN (Bit 4)     */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_LDO_EN_Msk (0x10UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFFADC_LDO_EN_Pos (5UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFFADC_LDO_EN (Bit 5)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFFADC_LDO_EN_Msk (0x20UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFFADC_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_TDC_LDO_EN_Pos (6UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_TDC_LDO_EN (Bit 6) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_TDC_LDO_EN_Msk (0x40UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_TDC_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DTC_LDO_EN_Pos (7UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DTC_LDO_EN (Bit 7) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DTC_LDO_EN_Msk (0x80UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DTC_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DCO_LDO_EN_Pos (8UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DCO_LDO_EN (Bit 8) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DCO_LDO_EN_Msk (0x100UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DCO_LDO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LDO_ZERO_EN_Pos (9UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LDO_ZERO_EN (Bit 9)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LDO_ZERO_EN_Msk (0x200UL)   /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LDO_ZERO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_LDO_ZERO_Pos (10UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_LDO_ZERO (Bit 10)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_LDO_ZERO_Msk (0x400UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_LDO_ZERO (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_LDO_ACTIVERDY_Pos (11UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_LDO_ACTIVERDY (Bit 11) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_LDO_ACTIVERDY_Msk (0x800UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_LDO_ACTIVERDY (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_LDO_LP_Pos (12UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_LDO_LP (Bit 12) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_LDO_LP_Msk (0x1000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_LDO_LP (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_RX_EN_Pos (13UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_RX_EN (Bit 13)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_RX_EN_Msk (0x2000UL)   /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_RX_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_TX_EN_Pos (14UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_TX_EN (Bit 14)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_TX_EN_Msk (0x4000UL)   /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_TX_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_TX_HARM_EN_Pos (15UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_TX_HARM_EN (Bit 15) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_TX_HARM_EN_Msk (0x8000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_TX_HARM_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_BIAS_EN_Pos (16UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_BIAS_EN (Bit 16)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_BIAS_EN_Msk (0x10000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_BIAS_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_BIAS_SH_OPEN_Pos (17UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_BIAS_SH_OPEN (Bit 17) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_RFIO_BIAS_SH_OPEN_Msk (0x20000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_RFIO_BIAS_SH_OPEN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_RAMP_EN_Pos (18UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_RAMP_EN (Bit 18)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_RAMP_EN_Msk (0x40000UL)  /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_RAMP_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_EN_Pos (19UL)            /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_EN (Bit 19)         */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_PA_EN_Msk (0x80000UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_PA_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_CORE_EN_Pos (20UL)      /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_CORE_EN (Bit 20)   */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_CORE_EN_Msk (0x100000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_CORE_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_CGM_EN_Pos (21UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_CGM_EN (Bit 21)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_LNA_CGM_EN_Msk (0x200000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_LNA_CGM_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_EN_Pos (22UL)           /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_EN (Bit 22)        */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_EN_Msk (0x400000UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_BIAS_SH_OPEN_Pos (23UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_BIAS_SH_OPEN (Bit 23) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_MIX_BIAS_SH_OPEN_Msk (0x800000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_MIX_BIAS_SH_OPEN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_EN_Pos (24UL)           /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_EN (Bit 24)        */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_EN_Msk (0x1000000UL)    /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_BIAS_SH_OPEN_Pos (25UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_BIAS_SH_OPEN (Bit 25) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_IFF_BIAS_SH_OPEN_Msk (0x2000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_IFF_BIAS_SH_OPEN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADC_CLK_EN_Pos (26UL)       /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADC_CLK_EN (Bit 26)    */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADC_CLK_EN_Msk (0x4000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADC_CLK_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADC_EN_Pos (27UL)           /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADC_EN (Bit 27)        */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADC_EN_Msk (0x8000000UL)    /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADC_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DCO_EN_Pos (28UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DCO_EN (Bit 28)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_DCO_EN_Msk (0x10000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_DCO_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_CLK_EN_Pos (29UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_CLK_EN (Bit 29)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLL_CLK_EN_Msk (0x20000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLL_CLK_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_RST_Pos (30UL)     /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_RST (Bit 30)  */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_RST_Msk (0x40000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_RST (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_EN_Pos (31UL)      /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_EN (Bit 31)   */
#define RFCU_POWER_RF_ALWAYS_EN1_REG_ALW_EN_ADPLLDIG_EN_Msk (0x80000000UL) /*!< RFCU_POWER RF_ALWAYS_EN1_REG: ALW_EN_ADPLLDIG_EN (Bitfield-Mask: 0x01) */
/* ------------------------  RFCU_POWER_RF_ALWAYS_EN2_REG  ------------------------ */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLLDIG_RX_EN_Pos (0UL)    /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLLDIG_RX_EN (Bit 0) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLLDIG_RX_EN_Msk (0x1UL)  /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLLDIG_RX_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_PAIN_EN_Pos (1UL)     /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_PAIN_EN (Bit 1)  */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_PAIN_EN_Msk (0x2UL)   /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_PAIN_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_LOBUF_PA_EN_Pos (2UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_LOBUF_PA_EN (Bit 2) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_LOBUF_PA_EN_Msk (0x4UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_LOBUF_PA_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_CAL_EN_Pos (3UL)            /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_CAL_EN (Bit 3)         */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_CAL_EN_Msk (0x8UL)          /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_CAL_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_EN_Pos (4UL)            /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_EN (Bit 4)         */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_EN_Msk (0x10UL)         /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_DC_PARCAL_EN_Pos (5UL)  /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_DC_PARCAL_EN (Bit 5) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_DC_PARCAL_EN_Msk (0x20UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_DC_PARCAL_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_AGC_UNFREEZE_EN_Pos (6UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_AGC_UNFREEZE_EN (Bit 6) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_AGC_UNFREEZE_EN_Msk (0x40UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_AGC_UNFREEZE_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_SIGDETECT_EN_Pos (7UL)  /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_SIGDETECT_EN (Bit 7) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_DEM_SIGDETECT_EN_Msk (0x80UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_DEM_SIGDETECT_EN (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_PHY_RDY4BS_Pos (8UL)        /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_PHY_RDY4BS (Bit 8)     */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_PHY_RDY4BS_Msk (0x100UL)    /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_PHY_RDY4BS (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_RDY_FOR_DIV_Pos (9UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_RDY_FOR_DIV (Bit 9) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_ADPLL_RDY_FOR_DIV_Msk (0x200UL) /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_ADPLL_RDY_FOR_DIV (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE1_Pos (10UL)           /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE1 (Bit 10)        */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE1_Msk (0x400UL)        /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE1 (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE2_Pos (11UL)           /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE2 (Bit 11)        */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE2_Msk (0x800UL)        /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE2 (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE3_Pos (12UL)           /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE3 (Bit 12)        */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE3_Msk (0x1000UL)       /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE3 (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE4_Pos (13UL)           /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE4 (Bit 13)        */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE4_Msk (0x2000UL)       /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE4 (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE5_Pos (14UL)           /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE5 (Bit 14)        */
#define RFCU_POWER_RF_ALWAYS_EN2_REG_ALW_EN_SPARE5_Msk (0x4000UL)       /*!< RFCU_POWER RF_ALWAYS_EN2_REG: ALW_EN_SPARE5 (Bitfield-Mask: 0x01) */
/* --------------------------  RFCU_POWER_RF_PORT_EN_REG  ------------------------- */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT0_RX_Pos (0UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT0_RX (Bit 0)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT0_RX_Msk (0x1UL)               /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT0_RX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT0_TX_Pos (1UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT0_TX (Bit 1)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT0_TX_Msk (0x2UL)               /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT0_TX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT1_RX_Pos (2UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT1_RX (Bit 2)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT1_RX_Msk (0x4UL)               /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT1_RX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT1_TX_Pos (3UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT1_TX (Bit 3)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT1_TX_Msk (0x8UL)               /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT1_TX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT2_RX_Pos (4UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT2_RX (Bit 4)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT2_RX_Msk (0x10UL)              /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT2_RX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT2_TX_Pos (5UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT2_TX (Bit 5)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT2_TX_Msk (0x20UL)              /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT2_TX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT3_RX_Pos (6UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT3_RX (Bit 6)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT3_RX_Msk (0x40UL)              /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT3_RX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT3_TX_Pos (7UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT3_TX (Bit 7)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT3_TX_Msk (0x80UL)              /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT3_TX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT4_RX_Pos (8UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT4_RX (Bit 8)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT4_RX_Msk (0x100UL)             /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT4_RX (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT4_TX_Pos (9UL)                 /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT4_TX (Bit 9)              */
#define RFCU_POWER_RF_PORT_EN_REG_RF_PORT4_TX_Msk (0x200UL)             /*!< RFCU_POWER RF_PORT_EN_REG: RF_PORT4_TX (Bitfield-Mask: 0x01) */
/* -------------------------  RFCU_POWER_RF_PORT_POL_REG  ------------------------- */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT0_POL_Pos (0UL)               /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT0_POL (Bit 0)            */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT0_POL_Msk (0x1UL)             /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT0_POL (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT1_POL_Pos (1UL)               /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT1_POL (Bit 1)            */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT1_POL_Msk (0x2UL)             /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT1_POL (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT2_POL_Pos (2UL)               /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT2_POL (Bit 2)            */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT2_POL_Msk (0x4UL)             /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT2_POL (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT3_POL_Pos (3UL)               /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT3_POL (Bit 3)            */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT3_POL_Msk (0x8UL)             /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT3_POL (Bitfield-Mask: 0x01) */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT4_POL_Pos (4UL)               /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT4_POL (Bit 4)            */
#define RFCU_POWER_RF_PORT_POL_REG_RF_PORT4_POL_Msk (0x10UL)            /*!< RFCU_POWER RF_PORT_POL_REG: RF_PORT4_POL (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'RFMON' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  RFMON_RFMON_CTRL_REG  ---------------------------- */
#define RFMON_RFMON_CTRL_REG_RFMON_PACK_EN_Pos (0UL)                    /*!< RFMON RFMON_CTRL_REG: RFMON_PACK_EN (Bit 0)                 */
#define RFMON_RFMON_CTRL_REG_RFMON_PACK_EN_Msk (0x1UL)                  /*!< RFMON RFMON_CTRL_REG: RFMON_PACK_EN (Bitfield-Mask: 0x01)   */
#define RFMON_RFMON_CTRL_REG_RFMON_CIRC_EN_Pos (1UL)                    /*!< RFMON RFMON_CTRL_REG: RFMON_CIRC_EN (Bit 1)                 */
#define RFMON_RFMON_CTRL_REG_RFMON_CIRC_EN_Msk (0x2UL)                  /*!< RFMON RFMON_CTRL_REG: RFMON_CIRC_EN (Bitfield-Mask: 0x01)   */
#define RFMON_RFMON_CTRL_REG_RFMON_BREQ_FORCE_Pos (2UL)                 /*!< RFMON RFMON_CTRL_REG: RFMON_BREQ_FORCE (Bit 2)              */
#define RFMON_RFMON_CTRL_REG_RFMON_BREQ_FORCE_Msk (0x4UL)               /*!< RFMON RFMON_CTRL_REG: RFMON_BREQ_FORCE (Bitfield-Mask: 0x01) */
/* ----------------------------  RFMON_RFMON_ADDR_REG  ---------------------------- */
#define RFMON_RFMON_ADDR_REG_RFMON_ADDR_Pos   (2UL)                     /*!< RFMON RFMON_ADDR_REG: RFMON_ADDR (Bit 2)                    */
#define RFMON_RFMON_ADDR_REG_RFMON_ADDR_Msk   (0xfffffffcUL)            /*!< RFMON RFMON_ADDR_REG: RFMON_ADDR (Bitfield-Mask: 0x3fffffff) */
/* -----------------------------  RFMON_RFMON_LEN_REG  ---------------------------- */
#define RFMON_RFMON_LEN_REG_RFMON_LEN_Pos     (0UL)                     /*!< RFMON RFMON_LEN_REG: RFMON_LEN (Bit 0)                      */
#define RFMON_RFMON_LEN_REG_RFMON_LEN_Msk     (0x1ffffUL)               /*!< RFMON RFMON_LEN_REG: RFMON_LEN (Bitfield-Mask: 0x1ffff)     */
/* ----------------------------  RFMON_RFMON_STAT_REG  ---------------------------- */
#define RFMON_RFMON_STAT_REG_RFMON_ACTIVE_Pos (0UL)                     /*!< RFMON RFMON_STAT_REG: RFMON_ACTIVE (Bit 0)                  */
#define RFMON_RFMON_STAT_REG_RFMON_ACTIVE_Msk (0x1UL)                   /*!< RFMON RFMON_STAT_REG: RFMON_ACTIVE (Bitfield-Mask: 0x01)    */
#define RFMON_RFMON_STAT_REG_RFMON_OFLOW_STK_Pos (1UL)                  /*!< RFMON RFMON_STAT_REG: RFMON_OFLOW_STK (Bit 1)               */
#define RFMON_RFMON_STAT_REG_RFMON_OFLOW_STK_Msk (0x2UL)                /*!< RFMON RFMON_STAT_REG: RFMON_OFLOW_STK (Bitfield-Mask: 0x01) */
/* --------------------------  RFMON_RFMON_CRV_ADDR_REG  -------------------------- */
#define RFMON_RFMON_CRV_ADDR_REG_RFMON_CRV_ADDR_Pos (2UL)               /*!< RFMON RFMON_CRV_ADDR_REG: RFMON_CRV_ADDR (Bit 2)            */
#define RFMON_RFMON_CRV_ADDR_REG_RFMON_CRV_ADDR_Msk (0xfffffffcUL)      /*!< RFMON RFMON_CRV_ADDR_REG: RFMON_CRV_ADDR (Bitfield-Mask: 0x3fffffff) */
/* ---------------------------  RFMON_RFMON_CRV_LEN_REG  -------------------------- */
#define RFMON_RFMON_CRV_LEN_REG_RFMON_CRV_LEN_Pos (0UL)                 /*!< RFMON RFMON_CRV_LEN_REG: RFMON_CRV_LEN (Bit 0)              */
#define RFMON_RFMON_CRV_LEN_REG_RFMON_CRV_LEN_Msk (0x1ffffUL)           /*!< RFMON RFMON_CRV_LEN_REG: RFMON_CRV_LEN (Bitfield-Mask: 0x1ffff) */
/* ================================================================================ */
/* ================          struct 'RTC' Position & Mask          ================ */
/* ================================================================================ */
/* -----------------------------  RTC_RTC_CONTROL_REG  ---------------------------- */
#define RTC_RTC_CONTROL_REG_RTC_TIME_DISABLE_Pos (0UL)                  /*!< RTC RTC_CONTROL_REG: RTC_TIME_DISABLE (Bit 0)               */
#define RTC_RTC_CONTROL_REG_RTC_TIME_DISABLE_Msk (0x1UL)                /*!< RTC RTC_CONTROL_REG: RTC_TIME_DISABLE (Bitfield-Mask: 0x01) */
#define RTC_RTC_CONTROL_REG_RTC_CAL_DISABLE_Pos (1UL)                   /*!< RTC RTC_CONTROL_REG: RTC_CAL_DISABLE (Bit 1)                */
#define RTC_RTC_CONTROL_REG_RTC_CAL_DISABLE_Msk (0x2UL)                 /*!< RTC RTC_CONTROL_REG: RTC_CAL_DISABLE (Bitfield-Mask: 0x01)  */
/* ----------------------------  RTC_RTC_HOUR_MODE_REG  --------------------------- */
#define RTC_RTC_HOUR_MODE_REG_RTC_HMS_Pos     (0UL)                     /*!< RTC RTC_HOUR_MODE_REG: RTC_HMS (Bit 0)                      */
#define RTC_RTC_HOUR_MODE_REG_RTC_HMS_Msk     (0x1UL)                   /*!< RTC RTC_HOUR_MODE_REG: RTC_HMS (Bitfield-Mask: 0x01)        */
/* ------------------------------  RTC_RTC_TIME_REG  ------------------------------ */
#define RTC_RTC_TIME_REG_RTC_TIME_H_U_Pos     (0UL)                     /*!< RTC RTC_TIME_REG: RTC_TIME_H_U (Bit 0)                      */
#define RTC_RTC_TIME_REG_RTC_TIME_H_U_Msk     (0xfUL)                   /*!< RTC RTC_TIME_REG: RTC_TIME_H_U (Bitfield-Mask: 0x0f)        */
#define RTC_RTC_TIME_REG_RTC_TIME_H_T_Pos     (4UL)                     /*!< RTC RTC_TIME_REG: RTC_TIME_H_T (Bit 4)                      */
#define RTC_RTC_TIME_REG_RTC_TIME_H_T_Msk     (0xf0UL)                  /*!< RTC RTC_TIME_REG: RTC_TIME_H_T (Bitfield-Mask: 0x0f)        */
#define RTC_RTC_TIME_REG_RTC_TIME_S_U_Pos     (8UL)                     /*!< RTC RTC_TIME_REG: RTC_TIME_S_U (Bit 8)                      */
#define RTC_RTC_TIME_REG_RTC_TIME_S_U_Msk     (0xf00UL)                 /*!< RTC RTC_TIME_REG: RTC_TIME_S_U (Bitfield-Mask: 0x0f)        */
#define RTC_RTC_TIME_REG_RTC_TIME_S_T_Pos     (12UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_S_T (Bit 12)                     */
#define RTC_RTC_TIME_REG_RTC_TIME_S_T_Msk     (0x7000UL)                /*!< RTC RTC_TIME_REG: RTC_TIME_S_T (Bitfield-Mask: 0x07)        */
#define RTC_RTC_TIME_REG_RTC_TIME_M_U_Pos     (16UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_M_U (Bit 16)                     */
#define RTC_RTC_TIME_REG_RTC_TIME_M_U_Msk     (0xf0000UL)               /*!< RTC RTC_TIME_REG: RTC_TIME_M_U (Bitfield-Mask: 0x0f)        */
#define RTC_RTC_TIME_REG_RTC_TIME_M_T_Pos     (20UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_M_T (Bit 20)                     */
#define RTC_RTC_TIME_REG_RTC_TIME_M_T_Msk     (0x700000UL)              /*!< RTC RTC_TIME_REG: RTC_TIME_M_T (Bitfield-Mask: 0x07)        */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_U_Pos    (24UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_HR_U (Bit 24)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_U_Msk    (0xf000000UL)             /*!< RTC RTC_TIME_REG: RTC_TIME_HR_U (Bitfield-Mask: 0x0f)       */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_T_Pos    (28UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_HR_T (Bit 28)                    */
#define RTC_RTC_TIME_REG_RTC_TIME_HR_T_Msk    (0x30000000UL)            /*!< RTC RTC_TIME_REG: RTC_TIME_HR_T (Bitfield-Mask: 0x03)       */
#define RTC_RTC_TIME_REG_RTC_TIME_PM_Pos      (30UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_PM (Bit 30)                      */
#define RTC_RTC_TIME_REG_RTC_TIME_PM_Msk      (0x40000000UL)            /*!< RTC RTC_TIME_REG: RTC_TIME_PM (Bitfield-Mask: 0x01)         */
#define RTC_RTC_TIME_REG_RTC_TIME_CH_Pos      (31UL)                    /*!< RTC RTC_TIME_REG: RTC_TIME_CH (Bit 31)                      */
#define RTC_RTC_TIME_REG_RTC_TIME_CH_Msk      (0x80000000UL)            /*!< RTC RTC_TIME_REG: RTC_TIME_CH (Bitfield-Mask: 0x01)         */
/* ----------------------------  RTC_RTC_CALENDAR_REG  ---------------------------- */
#define RTC_RTC_CALENDAR_REG_RTC_DAY_Pos      (0UL)                     /*!< RTC RTC_CALENDAR_REG: RTC_DAY (Bit 0)                       */
#define RTC_RTC_CALENDAR_REG_RTC_DAY_Msk      (0x7UL)                   /*!< RTC RTC_CALENDAR_REG: RTC_DAY (Bitfield-Mask: 0x07)         */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_U_Pos  (3UL)                     /*!< RTC RTC_CALENDAR_REG: RTC_CAL_M_U (Bit 3)                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_U_Msk  (0x78UL)                  /*!< RTC RTC_CALENDAR_REG: RTC_CAL_M_U (Bitfield-Mask: 0x0f)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_T_Pos  (7UL)                     /*!< RTC RTC_CALENDAR_REG: RTC_CAL_M_T (Bit 7)                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_M_T_Msk  (0x80UL)                  /*!< RTC RTC_CALENDAR_REG: RTC_CAL_M_T (Bitfield-Mask: 0x01)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_U_Pos  (8UL)                     /*!< RTC RTC_CALENDAR_REG: RTC_CAL_D_U (Bit 8)                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_U_Msk  (0xf00UL)                 /*!< RTC RTC_CALENDAR_REG: RTC_CAL_D_U (Bitfield-Mask: 0x0f)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_T_Pos  (12UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_D_T (Bit 12)                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_D_T_Msk  (0x3000UL)                /*!< RTC RTC_CALENDAR_REG: RTC_CAL_D_T (Bitfield-Mask: 0x03)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_U_Pos  (16UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_Y_U (Bit 16)                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_U_Msk  (0xf0000UL)               /*!< RTC RTC_CALENDAR_REG: RTC_CAL_Y_U (Bitfield-Mask: 0x0f)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_T_Pos  (20UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_Y_T (Bit 20)                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_Y_T_Msk  (0xf00000UL)              /*!< RTC RTC_CALENDAR_REG: RTC_CAL_Y_T (Bitfield-Mask: 0x0f)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_U_Pos  (24UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_C_U (Bit 24)                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_U_Msk  (0xf000000UL)             /*!< RTC RTC_CALENDAR_REG: RTC_CAL_C_U (Bitfield-Mask: 0x0f)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_T_Pos  (28UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_C_T (Bit 28)                  */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_C_T_Msk  (0x30000000UL)            /*!< RTC RTC_CALENDAR_REG: RTC_CAL_C_T (Bitfield-Mask: 0x03)     */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_CH_Pos   (31UL)                    /*!< RTC RTC_CALENDAR_REG: RTC_CAL_CH (Bit 31)                   */
#define RTC_RTC_CALENDAR_REG_RTC_CAL_CH_Msk   (0x80000000UL)            /*!< RTC RTC_CALENDAR_REG: RTC_CAL_CH (Bitfield-Mask: 0x01)      */
/* ---------------------------  RTC_RTC_TIME_ALARM_REG  --------------------------- */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_U_Pos (0UL)                   /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_H_U (Bit 0)                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_U_Msk (0xfUL)                 /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_H_U (Bitfield-Mask: 0x0f)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_T_Pos (4UL)                   /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_H_T (Bit 4)                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_H_T_Msk (0xf0UL)                /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_H_T (Bitfield-Mask: 0x0f)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_U_Pos (8UL)                   /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_S_U (Bit 8)                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_U_Msk (0xf00UL)               /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_S_U (Bitfield-Mask: 0x0f)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_T_Pos (12UL)                  /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_S_T (Bit 12)               */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_S_T_Msk (0x7000UL)              /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_S_T (Bitfield-Mask: 0x07)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_U_Pos (16UL)                  /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_M_U (Bit 16)               */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_U_Msk (0xf0000UL)             /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_M_U (Bitfield-Mask: 0x0f)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_T_Pos (20UL)                  /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_M_T (Bit 20)               */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_M_T_Msk (0x700000UL)            /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_M_T (Bitfield-Mask: 0x07)  */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_U_Pos (24UL)                 /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_HR_U (Bit 24)              */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_U_Msk (0xf000000UL)          /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_HR_U (Bitfield-Mask: 0x0f) */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_T_Pos (28UL)                 /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_HR_T (Bit 28)              */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_HR_T_Msk (0x30000000UL)         /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_HR_T (Bitfield-Mask: 0x03) */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_PM_Pos (30UL)                   /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_PM (Bit 30)                */
#define RTC_RTC_TIME_ALARM_REG_RTC_TIME_PM_Msk (0x40000000UL)           /*!< RTC RTC_TIME_ALARM_REG: RTC_TIME_PM (Bitfield-Mask: 0x01)   */
/* -------------------------  RTC_RTC_CALENDAR_ALARM_REG  ------------------------- */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_U_Pos (3UL)                /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_M_U (Bit 3)             */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_U_Msk (0x78UL)             /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_M_U (Bitfield-Mask: 0x0f) */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_T_Pos (7UL)                /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_M_T (Bit 7)             */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_M_T_Msk (0x80UL)             /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_M_T (Bitfield-Mask: 0x01) */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_U_Pos (8UL)                /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_D_U (Bit 8)             */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_U_Msk (0xf00UL)            /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_D_U (Bitfield-Mask: 0x0f) */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_T_Pos (12UL)               /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_D_T (Bit 12)            */
#define RTC_RTC_CALENDAR_ALARM_REG_RTC_CAL_D_T_Msk (0x3000UL)           /*!< RTC RTC_CALENDAR_ALARM_REG: RTC_CAL_D_T (Bitfield-Mask: 0x03) */
/* --------------------------  RTC_RTC_ALARM_ENABLE_REG  -------------------------- */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOS_EN_Pos (0UL)             /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_HOS_EN (Bit 0)          */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOS_EN_Msk (0x1UL)           /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_HOS_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_SEC_EN_Pos (1UL)             /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_SEC_EN (Bit 1)          */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_SEC_EN_Msk (0x2UL)           /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_SEC_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MIN_EN_Pos (2UL)             /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_MIN_EN (Bit 2)          */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MIN_EN_Msk (0x4UL)           /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_MIN_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOUR_EN_Pos (3UL)            /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_HOUR_EN (Bit 3)         */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_HOUR_EN_Msk (0x8UL)          /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_HOUR_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_DATE_EN_Pos (4UL)            /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_DATE_EN (Bit 4)         */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_DATE_EN_Msk (0x10UL)         /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_DATE_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MNTH_EN_Pos (5UL)            /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_MNTH_EN (Bit 5)         */
#define RTC_RTC_ALARM_ENABLE_REG_RTC_ALARM_MNTH_EN_Msk (0x20UL)         /*!< RTC RTC_ALARM_ENABLE_REG: RTC_ALARM_MNTH_EN (Bitfield-Mask: 0x01) */
/* ---------------------------  RTC_RTC_EVENT_FLAGS_REG  -------------------------- */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOS_Pos (0UL)                 /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_HOS (Bit 0)              */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOS_Msk (0x1UL)               /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_HOS (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_SEC_Pos (1UL)                 /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_SEC (Bit 1)              */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_SEC_Msk (0x2UL)               /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_SEC (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MIN_Pos (2UL)                 /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_MIN (Bit 2)              */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MIN_Msk (0x4UL)               /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_MIN (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOUR_Pos (3UL)                /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_HOUR (Bit 3)             */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_HOUR_Msk (0x8UL)              /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_HOUR (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_DATE_Pos (4UL)                /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_DATE (Bit 4)             */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_DATE_Msk (0x10UL)             /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_DATE (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MNTH_Pos (5UL)                /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_MNTH (Bit 5)             */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_MNTH_Msk (0x20UL)             /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_MNTH (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_ALRM_Pos (6UL)                /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_ALRM (Bit 6)             */
#define RTC_RTC_EVENT_FLAGS_REG_RTC_EVENT_ALRM_Msk (0x40UL)             /*!< RTC RTC_EVENT_FLAGS_REG: RTC_EVENT_ALRM (Bitfield-Mask: 0x01) */
/* ------------------------  RTC_RTC_INTERRUPT_ENABLE_REG  ------------------------ */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOS_INT_EN_Pos (0UL)           /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_HOS_INT_EN (Bit 0)        */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOS_INT_EN_Msk (0x1UL)         /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_HOS_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_SEC_INT_EN_Pos (1UL)           /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_SEC_INT_EN (Bit 1)        */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_SEC_INT_EN_Msk (0x2UL)         /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_SEC_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MIN_INT_EN_Pos (2UL)           /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_MIN_INT_EN (Bit 2)        */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MIN_INT_EN_Msk (0x4UL)         /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_MIN_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOUR_INT_EN_Pos (3UL)          /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_HOUR_INT_EN (Bit 3)       */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_HOUR_INT_EN_Msk (0x8UL)        /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_HOUR_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_DATE_INT_EN_Pos (4UL)          /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_DATE_INT_EN (Bit 4)       */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_DATE_INT_EN_Msk (0x10UL)       /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_DATE_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MNTH_INT_EN_Pos (5UL)          /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_MNTH_INT_EN (Bit 5)       */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_MNTH_INT_EN_Msk (0x20UL)       /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_MNTH_INT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_ALRM_INT_EN_Pos (6UL)          /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_ALRM_INT_EN (Bit 6)       */
#define RTC_RTC_INTERRUPT_ENABLE_REG_RTC_ALRM_INT_EN_Msk (0x40UL)       /*!< RTC RTC_INTERRUPT_ENABLE_REG: RTC_ALRM_INT_EN (Bitfield-Mask: 0x01) */
/* ------------------------  RTC_RTC_INTERRUPT_DISABLE_REG  ----------------------- */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOS_INT_DIS_Pos (0UL)         /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_HOS_INT_DIS (Bit 0)      */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOS_INT_DIS_Msk (0x1UL)       /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_HOS_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_SEC_INT_DIS_Pos (1UL)         /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_SEC_INT_DIS (Bit 1)      */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_SEC_INT_DIS_Msk (0x2UL)       /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_SEC_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MIN_INT_DIS_Pos (2UL)         /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_MIN_INT_DIS (Bit 2)      */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MIN_INT_DIS_Msk (0x4UL)       /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_MIN_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOUR_INT_DIS_Pos (3UL)        /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_HOUR_INT_DIS (Bit 3)     */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_HOUR_INT_DIS_Msk (0x8UL)      /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_HOUR_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_DATE_INT_DIS_Pos (4UL)        /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_DATE_INT_DIS (Bit 4)     */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_DATE_INT_DIS_Msk (0x10UL)     /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_DATE_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MNTH_INT_DIS_Pos (5UL)        /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_MNTH_INT_DIS (Bit 5)     */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_MNTH_INT_DIS_Msk (0x20UL)     /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_MNTH_INT_DIS (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_ALRM_INT_DIS_Pos (6UL)        /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_ALRM_INT_DIS (Bit 6)     */
#define RTC_RTC_INTERRUPT_DISABLE_REG_RTC_ALRM_INT_DIS_Msk (0x40UL)     /*!< RTC RTC_INTERRUPT_DISABLE_REG: RTC_ALRM_INT_DIS (Bitfield-Mask: 0x01) */
/* -------------------------  RTC_RTC_INTERRUPT_MASK_REG  ------------------------- */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOS_INT_MSK_Pos (0UL)            /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_HOS_INT_MSK (Bit 0)         */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOS_INT_MSK_Msk (0x1UL)          /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_HOS_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_SEC_INT_MSK_Pos (1UL)            /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_SEC_INT_MSK (Bit 1)         */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_SEC_INT_MSK_Msk (0x2UL)          /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_SEC_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MIN_INT_MSK_Pos (2UL)            /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_MIN_INT_MSK (Bit 2)         */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MIN_INT_MSK_Msk (0x4UL)          /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_MIN_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOUR_INT_MSK_Pos (3UL)           /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_HOUR_INT_MSK (Bit 3)        */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_HOUR_INT_MSK_Msk (0x8UL)         /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_HOUR_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_DATE_INT_MSK_Pos (4UL)           /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_DATE_INT_MSK (Bit 4)        */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_DATE_INT_MSK_Msk (0x10UL)        /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_DATE_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MNTH_INT_MSK_Pos (5UL)           /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_MNTH_INT_MSK (Bit 5)        */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_MNTH_INT_MSK_Msk (0x20UL)        /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_MNTH_INT_MSK (Bitfield-Mask: 0x01) */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_ALRM_INT_MSK_Pos (6UL)           /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_ALRM_INT_MSK (Bit 6)        */
#define RTC_RTC_INTERRUPT_MASK_REG_RTC_ALRM_INT_MSK_Msk (0x40UL)        /*!< RTC RTC_INTERRUPT_MASK_REG: RTC_ALRM_INT_MSK (Bitfield-Mask: 0x01) */
/* -----------------------------  RTC_RTC_STATUS_REG  ----------------------------- */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_Pos (0UL)                     /*!< RTC RTC_STATUS_REG: RTC_VALID_TIME (Bit 0)                  */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_Msk (0x1UL)                   /*!< RTC RTC_STATUS_REG: RTC_VALID_TIME (Bitfield-Mask: 0x01)    */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_Pos  (1UL)                     /*!< RTC RTC_STATUS_REG: RTC_VALID_CAL (Bit 1)                   */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_Msk  (0x2UL)                   /*!< RTC RTC_STATUS_REG: RTC_VALID_CAL (Bitfield-Mask: 0x01)     */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_ALM_Pos (2UL)                 /*!< RTC RTC_STATUS_REG: RTC_VALID_TIME_ALM (Bit 2)              */
#define RTC_RTC_STATUS_REG_RTC_VALID_TIME_ALM_Msk (0x4UL)               /*!< RTC RTC_STATUS_REG: RTC_VALID_TIME_ALM (Bitfield-Mask: 0x01) */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_ALM_Pos (3UL)                  /*!< RTC RTC_STATUS_REG: RTC_VALID_CAL_ALM (Bit 3)               */
#define RTC_RTC_STATUS_REG_RTC_VALID_CAL_ALM_Msk (0x8UL)                /*!< RTC RTC_STATUS_REG: RTC_VALID_CAL_ALM (Bitfield-Mask: 0x01) */
/* ----------------------------  RTC_RTC_KEEP_RTC_REG  ---------------------------- */
#define RTC_RTC_KEEP_RTC_REG_RTC_KEEP_Pos     (0UL)                     /*!< RTC RTC_KEEP_RTC_REG: RTC_KEEP (Bit 0)                      */
#define RTC_RTC_KEEP_RTC_REG_RTC_KEEP_Msk     (0x1UL)                   /*!< RTC RTC_KEEP_RTC_REG: RTC_KEEP (Bitfield-Mask: 0x01)        */
/* ---------------------------  RTC_RTC_EVENT_CTRL_REG  --------------------------- */
#define RTC_RTC_EVENT_CTRL_REG_RTC_MOTOR_EVENT_EN_Pos (0UL)             /*!< RTC RTC_EVENT_CTRL_REG: RTC_MOTOR_EVENT_EN (Bit 0)          */
#define RTC_RTC_EVENT_CTRL_REG_RTC_MOTOR_EVENT_EN_Msk (0x1UL)           /*!< RTC RTC_EVENT_CTRL_REG: RTC_MOTOR_EVENT_EN (Bitfield-Mask: 0x01) */
#define RTC_RTC_EVENT_CTRL_REG_RTC_PDC_EVENT_EN_Pos (1UL)               /*!< RTC RTC_EVENT_CTRL_REG: RTC_PDC_EVENT_EN (Bit 1)            */
#define RTC_RTC_EVENT_CTRL_REG_RTC_PDC_EVENT_EN_Msk (0x2UL)             /*!< RTC RTC_EVENT_CTRL_REG: RTC_PDC_EVENT_EN (Bitfield-Mask: 0x01) */
/* -----------------------  RTC_RTC_MOTOR_EVENT_PERIOD_REG  ----------------------- */
#define RTC_RTC_MOTOR_EVENT_PERIOD_REG_RTC_MOTOR_EVENT_PERIOD_Pos (0UL) /*!< RTC RTC_MOTOR_EVENT_PERIOD_REG: RTC_MOTOR_EVENT_PERIOD (Bit 0) */
#define RTC_RTC_MOTOR_EVENT_PERIOD_REG_RTC_MOTOR_EVENT_PERIOD_Msk (0xfffUL) /*!< RTC RTC_MOTOR_EVENT_PERIOD_REG: RTC_MOTOR_EVENT_PERIOD (Bitfield-Mask: 0xfff) */
/* ------------------------  RTC_RTC_PDC_EVENT_PERIOD_REG  ------------------------ */
#define RTC_RTC_PDC_EVENT_PERIOD_REG_RTC_PDC_EVENT_PERIOD_Pos (0UL)     /*!< RTC RTC_PDC_EVENT_PERIOD_REG: RTC_PDC_EVENT_PERIOD (Bit 0)  */
#define RTC_RTC_PDC_EVENT_PERIOD_REG_RTC_PDC_EVENT_PERIOD_Msk (0x1fffUL) /*!< RTC RTC_PDC_EVENT_PERIOD_REG: RTC_PDC_EVENT_PERIOD (Bitfield-Mask: 0x1fff) */
/* -------------------------  RTC_RTC_PDC_EVENT_CLEAR_REG  ------------------------ */
#define RTC_RTC_PDC_EVENT_CLEAR_REG_PDC_EVENT_CLEAR_Pos (0UL)           /*!< RTC RTC_PDC_EVENT_CLEAR_REG: PDC_EVENT_CLEAR (Bit 0)        */
#define RTC_RTC_PDC_EVENT_CLEAR_REG_PDC_EVENT_CLEAR_Msk (0x1UL)         /*!< RTC RTC_PDC_EVENT_CLEAR_REG: PDC_EVENT_CLEAR (Bitfield-Mask: 0x01) */
/* -------------------------  RTC_RTC_MOTOR_EVENT_CNT_REG  ------------------------ */
#define RTC_RTC_MOTOR_EVENT_CNT_REG_RTC_MOTOR_EVENT_CNT_Pos (0UL)       /*!< RTC RTC_MOTOR_EVENT_CNT_REG: RTC_MOTOR_EVENT_CNT (Bit 0)    */
#define RTC_RTC_MOTOR_EVENT_CNT_REG_RTC_MOTOR_EVENT_CNT_Msk (0xfffUL)   /*!< RTC RTC_MOTOR_EVENT_CNT_REG: RTC_MOTOR_EVENT_CNT (Bitfield-Mask: 0xfff) */
/* --------------------------  RTC_RTC_PDC_EVENT_CNT_REG  ------------------------- */
#define RTC_RTC_PDC_EVENT_CNT_REG_RTC_PDC_EVENT_CNT_Pos (0UL)           /*!< RTC RTC_PDC_EVENT_CNT_REG: RTC_PDC_EVENT_CNT (Bit 0)        */
#define RTC_RTC_PDC_EVENT_CNT_REG_RTC_PDC_EVENT_CNT_Msk (0x1fffUL)      /*!< RTC RTC_PDC_EVENT_CNT_REG: RTC_PDC_EVENT_CNT (Bitfield-Mask: 0x1fff) */
/* ================================================================================ */
/* ================         struct 'SMOTOR' Position & Mask        ================ */
/* ================================================================================ */
/* ---------------------------  SMOTOR_SMOTOR_CTRL_REG  --------------------------- */
#define SMOTOR_SMOTOR_CTRL_REG_CYCLIC_MODE_Pos (0UL)                    /*!< SMOTOR SMOTOR_CTRL_REG: CYCLIC_MODE (Bit 0)                 */
#define SMOTOR_SMOTOR_CTRL_REG_CYCLIC_MODE_Msk (0x1UL)                  /*!< SMOTOR SMOTOR_CTRL_REG: CYCLIC_MODE (Bitfield-Mask: 0x01)   */
#define SMOTOR_SMOTOR_CTRL_REG_CYCLIC_SIZE_Pos (1UL)                    /*!< SMOTOR SMOTOR_CTRL_REG: CYCLIC_SIZE (Bit 1)                 */
#define SMOTOR_SMOTOR_CTRL_REG_CYCLIC_SIZE_Msk (0x7eUL)                 /*!< SMOTOR SMOTOR_CTRL_REG: CYCLIC_SIZE (Bitfield-Mask: 0x3f)   */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_MOI_Pos (7UL)                     /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_MOI (Bit 7)                  */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_MOI_Msk (0x1ff80UL)               /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_MOI (Bitfield-Mask: 0x3ff)   */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_GENSTART_IRQ_EN_Pos (17UL)        /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_GENSTART_IRQ_EN (Bit 17)     */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_GENSTART_IRQ_EN_Msk (0x20000UL)   /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_GENSTART_IRQ_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_GENEND_IRQ_EN_Pos (18UL)          /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_GENEND_IRQ_EN (Bit 18)       */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_GENEND_IRQ_EN_Msk (0x40000UL)     /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_GENEND_IRQ_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_FIFO_OVF_IRQ_EN_Pos (19UL)        /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_FIFO_OVF_IRQ_EN (Bit 19)     */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_FIFO_OVF_IRQ_EN_Msk (0x80000UL)   /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_FIFO_OVF_IRQ_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_FIFO_UNR_IRQ_EN_Pos (20UL)        /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_FIFO_UNR_IRQ_EN (Bit 20)     */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_FIFO_UNR_IRQ_EN_Msk (0x100000UL)  /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_FIFO_UNR_IRQ_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_THRESHOLD_Pos (21UL)              /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_THRESHOLD (Bit 21)           */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_THRESHOLD_Msk (0x3e00000UL)       /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_THRESHOLD (Bitfield-Mask: 0x1f) */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_THRESHOLD_IRQ_EN_Pos (26UL)       /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_THRESHOLD_IRQ_EN (Bit 26)    */
#define SMOTOR_SMOTOR_CTRL_REG_SMOTOR_THRESHOLD_IRQ_EN_Msk (0x4000000UL) /*!< SMOTOR SMOTOR_CTRL_REG: SMOTOR_THRESHOLD_IRQ_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_MC_LP_CLK_TRIG_EN_Pos (27UL)             /*!< SMOTOR SMOTOR_CTRL_REG: MC_LP_CLK_TRIG_EN (Bit 27)          */
#define SMOTOR_SMOTOR_CTRL_REG_MC_LP_CLK_TRIG_EN_Msk (0x8000000UL)      /*!< SMOTOR SMOTOR_CTRL_REG: MC_LP_CLK_TRIG_EN (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_CTRL_REG_TRIG_RTC_EVENT_EN_Pos (28UL)             /*!< SMOTOR SMOTOR_CTRL_REG: TRIG_RTC_EVENT_EN (Bit 28)          */
#define SMOTOR_SMOTOR_CTRL_REG_TRIG_RTC_EVENT_EN_Msk (0x10000000UL)     /*!< SMOTOR SMOTOR_CTRL_REG: TRIG_RTC_EVENT_EN (Bitfield-Mask: 0x01) */
/* -----------------------------  SMOTOR_PG0_CTRL_REG  ---------------------------- */
#define SMOTOR_PG0_CTRL_REG_OUT0_SIG_Pos      (0UL)                     /*!< SMOTOR PG0_CTRL_REG: OUT0_SIG (Bit 0)                       */
#define SMOTOR_PG0_CTRL_REG_OUT0_SIG_Msk      (0x3UL)                   /*!< SMOTOR PG0_CTRL_REG: OUT0_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG0_CTRL_REG_OUT1_SIG_Pos      (2UL)                     /*!< SMOTOR PG0_CTRL_REG: OUT1_SIG (Bit 2)                       */
#define SMOTOR_PG0_CTRL_REG_OUT1_SIG_Msk      (0xcUL)                   /*!< SMOTOR PG0_CTRL_REG: OUT1_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG0_CTRL_REG_OUT2_SIG_Pos      (4UL)                     /*!< SMOTOR PG0_CTRL_REG: OUT2_SIG (Bit 4)                       */
#define SMOTOR_PG0_CTRL_REG_OUT2_SIG_Msk      (0x30UL)                  /*!< SMOTOR PG0_CTRL_REG: OUT2_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG0_CTRL_REG_OUT3_SIG_Pos      (6UL)                     /*!< SMOTOR PG0_CTRL_REG: OUT3_SIG (Bit 6)                       */
#define SMOTOR_PG0_CTRL_REG_OUT3_SIG_Msk      (0xc0UL)                  /*!< SMOTOR PG0_CTRL_REG: OUT3_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG0_CTRL_REG_SIG0_EN_Pos       (8UL)                     /*!< SMOTOR PG0_CTRL_REG: SIG0_EN (Bit 8)                        */
#define SMOTOR_PG0_CTRL_REG_SIG0_EN_Msk       (0x100UL)                 /*!< SMOTOR PG0_CTRL_REG: SIG0_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG0_CTRL_REG_SIG1_EN_Pos       (9UL)                     /*!< SMOTOR PG0_CTRL_REG: SIG1_EN (Bit 9)                        */
#define SMOTOR_PG0_CTRL_REG_SIG1_EN_Msk       (0x200UL)                 /*!< SMOTOR PG0_CTRL_REG: SIG1_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG0_CTRL_REG_SIG2_EN_Pos       (10UL)                    /*!< SMOTOR PG0_CTRL_REG: SIG2_EN (Bit 10)                       */
#define SMOTOR_PG0_CTRL_REG_SIG2_EN_Msk       (0x400UL)                 /*!< SMOTOR PG0_CTRL_REG: SIG2_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG0_CTRL_REG_SIG3_EN_Pos       (11UL)                    /*!< SMOTOR PG0_CTRL_REG: SIG3_EN (Bit 11)                       */
#define SMOTOR_PG0_CTRL_REG_SIG3_EN_Msk       (0x800UL)                 /*!< SMOTOR PG0_CTRL_REG: SIG3_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG0_CTRL_REG_PG_MODE_Pos       (12UL)                    /*!< SMOTOR PG0_CTRL_REG: PG_MODE (Bit 12)                       */
#define SMOTOR_PG0_CTRL_REG_PG_MODE_Msk       (0x1000UL)                /*!< SMOTOR PG0_CTRL_REG: PG_MODE (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG0_CTRL_REG_PG_START_MODE_Pos (13UL)                    /*!< SMOTOR PG0_CTRL_REG: PG_START_MODE (Bit 13)                 */
#define SMOTOR_PG0_CTRL_REG_PG_START_MODE_Msk (0x2000UL)                /*!< SMOTOR PG0_CTRL_REG: PG_START_MODE (Bitfield-Mask: 0x01)    */
#define SMOTOR_PG0_CTRL_REG_GENSTART_IRQ_EN_Pos (14UL)                  /*!< SMOTOR PG0_CTRL_REG: GENSTART_IRQ_EN (Bit 14)               */
#define SMOTOR_PG0_CTRL_REG_GENSTART_IRQ_EN_Msk (0x4000UL)              /*!< SMOTOR PG0_CTRL_REG: GENSTART_IRQ_EN (Bitfield-Mask: 0x01)  */
#define SMOTOR_PG0_CTRL_REG_GENEND_IRQ_EN_Pos (15UL)                    /*!< SMOTOR PG0_CTRL_REG: GENEND_IRQ_EN (Bit 15)                 */
#define SMOTOR_PG0_CTRL_REG_GENEND_IRQ_EN_Msk (0x8000UL)                /*!< SMOTOR PG0_CTRL_REG: GENEND_IRQ_EN (Bitfield-Mask: 0x01)    */
/* -----------------------------  SMOTOR_PG1_CTRL_REG  ---------------------------- */
#define SMOTOR_PG1_CTRL_REG_OUT0_SIG_Pos      (0UL)                     /*!< SMOTOR PG1_CTRL_REG: OUT0_SIG (Bit 0)                       */
#define SMOTOR_PG1_CTRL_REG_OUT0_SIG_Msk      (0x3UL)                   /*!< SMOTOR PG1_CTRL_REG: OUT0_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG1_CTRL_REG_OUT1_SIG_Pos      (2UL)                     /*!< SMOTOR PG1_CTRL_REG: OUT1_SIG (Bit 2)                       */
#define SMOTOR_PG1_CTRL_REG_OUT1_SIG_Msk      (0xcUL)                   /*!< SMOTOR PG1_CTRL_REG: OUT1_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG1_CTRL_REG_OUT2_SIG_Pos      (4UL)                     /*!< SMOTOR PG1_CTRL_REG: OUT2_SIG (Bit 4)                       */
#define SMOTOR_PG1_CTRL_REG_OUT2_SIG_Msk      (0x30UL)                  /*!< SMOTOR PG1_CTRL_REG: OUT2_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG1_CTRL_REG_OUT3_SIG_Pos      (6UL)                     /*!< SMOTOR PG1_CTRL_REG: OUT3_SIG (Bit 6)                       */
#define SMOTOR_PG1_CTRL_REG_OUT3_SIG_Msk      (0xc0UL)                  /*!< SMOTOR PG1_CTRL_REG: OUT3_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG1_CTRL_REG_SIG0_EN_Pos       (8UL)                     /*!< SMOTOR PG1_CTRL_REG: SIG0_EN (Bit 8)                        */
#define SMOTOR_PG1_CTRL_REG_SIG0_EN_Msk       (0x100UL)                 /*!< SMOTOR PG1_CTRL_REG: SIG0_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG1_CTRL_REG_SIG1_EN_Pos       (9UL)                     /*!< SMOTOR PG1_CTRL_REG: SIG1_EN (Bit 9)                        */
#define SMOTOR_PG1_CTRL_REG_SIG1_EN_Msk       (0x200UL)                 /*!< SMOTOR PG1_CTRL_REG: SIG1_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG1_CTRL_REG_SIG2_EN_Pos       (10UL)                    /*!< SMOTOR PG1_CTRL_REG: SIG2_EN (Bit 10)                       */
#define SMOTOR_PG1_CTRL_REG_SIG2_EN_Msk       (0x400UL)                 /*!< SMOTOR PG1_CTRL_REG: SIG2_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG1_CTRL_REG_SIG3_EN_Pos       (11UL)                    /*!< SMOTOR PG1_CTRL_REG: SIG3_EN (Bit 11)                       */
#define SMOTOR_PG1_CTRL_REG_SIG3_EN_Msk       (0x800UL)                 /*!< SMOTOR PG1_CTRL_REG: SIG3_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG1_CTRL_REG_PG_MODE_Pos       (12UL)                    /*!< SMOTOR PG1_CTRL_REG: PG_MODE (Bit 12)                       */
#define SMOTOR_PG1_CTRL_REG_PG_MODE_Msk       (0x1000UL)                /*!< SMOTOR PG1_CTRL_REG: PG_MODE (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG1_CTRL_REG_PG_START_MODE_Pos (13UL)                    /*!< SMOTOR PG1_CTRL_REG: PG_START_MODE (Bit 13)                 */
#define SMOTOR_PG1_CTRL_REG_PG_START_MODE_Msk (0x2000UL)                /*!< SMOTOR PG1_CTRL_REG: PG_START_MODE (Bitfield-Mask: 0x01)    */
#define SMOTOR_PG1_CTRL_REG_GENSTART_IRQ_EN_Pos (14UL)                  /*!< SMOTOR PG1_CTRL_REG: GENSTART_IRQ_EN (Bit 14)               */
#define SMOTOR_PG1_CTRL_REG_GENSTART_IRQ_EN_Msk (0x4000UL)              /*!< SMOTOR PG1_CTRL_REG: GENSTART_IRQ_EN (Bitfield-Mask: 0x01)  */
#define SMOTOR_PG1_CTRL_REG_GENEND_IRQ_EN_Pos (15UL)                    /*!< SMOTOR PG1_CTRL_REG: GENEND_IRQ_EN (Bit 15)                 */
#define SMOTOR_PG1_CTRL_REG_GENEND_IRQ_EN_Msk (0x8000UL)                /*!< SMOTOR PG1_CTRL_REG: GENEND_IRQ_EN (Bitfield-Mask: 0x01)    */
/* -----------------------------  SMOTOR_PG2_CTRL_REG  ---------------------------- */
#define SMOTOR_PG2_CTRL_REG_OUT0_SIG_Pos      (0UL)                     /*!< SMOTOR PG2_CTRL_REG: OUT0_SIG (Bit 0)                       */
#define SMOTOR_PG2_CTRL_REG_OUT0_SIG_Msk      (0x3UL)                   /*!< SMOTOR PG2_CTRL_REG: OUT0_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG2_CTRL_REG_OUT1_SIG_Pos      (2UL)                     /*!< SMOTOR PG2_CTRL_REG: OUT1_SIG (Bit 2)                       */
#define SMOTOR_PG2_CTRL_REG_OUT1_SIG_Msk      (0xcUL)                   /*!< SMOTOR PG2_CTRL_REG: OUT1_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG2_CTRL_REG_OUT2_SIG_Pos      (4UL)                     /*!< SMOTOR PG2_CTRL_REG: OUT2_SIG (Bit 4)                       */
#define SMOTOR_PG2_CTRL_REG_OUT2_SIG_Msk      (0x30UL)                  /*!< SMOTOR PG2_CTRL_REG: OUT2_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG2_CTRL_REG_OUT3_SIG_Pos      (6UL)                     /*!< SMOTOR PG2_CTRL_REG: OUT3_SIG (Bit 6)                       */
#define SMOTOR_PG2_CTRL_REG_OUT3_SIG_Msk      (0xc0UL)                  /*!< SMOTOR PG2_CTRL_REG: OUT3_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG2_CTRL_REG_SIG0_EN_Pos       (8UL)                     /*!< SMOTOR PG2_CTRL_REG: SIG0_EN (Bit 8)                        */
#define SMOTOR_PG2_CTRL_REG_SIG0_EN_Msk       (0x100UL)                 /*!< SMOTOR PG2_CTRL_REG: SIG0_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG2_CTRL_REG_SIG1_EN_Pos       (9UL)                     /*!< SMOTOR PG2_CTRL_REG: SIG1_EN (Bit 9)                        */
#define SMOTOR_PG2_CTRL_REG_SIG1_EN_Msk       (0x200UL)                 /*!< SMOTOR PG2_CTRL_REG: SIG1_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG2_CTRL_REG_SIG2_EN_Pos       (10UL)                    /*!< SMOTOR PG2_CTRL_REG: SIG2_EN (Bit 10)                       */
#define SMOTOR_PG2_CTRL_REG_SIG2_EN_Msk       (0x400UL)                 /*!< SMOTOR PG2_CTRL_REG: SIG2_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG2_CTRL_REG_SIG3_EN_Pos       (11UL)                    /*!< SMOTOR PG2_CTRL_REG: SIG3_EN (Bit 11)                       */
#define SMOTOR_PG2_CTRL_REG_SIG3_EN_Msk       (0x800UL)                 /*!< SMOTOR PG2_CTRL_REG: SIG3_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG2_CTRL_REG_PG_MODE_Pos       (12UL)                    /*!< SMOTOR PG2_CTRL_REG: PG_MODE (Bit 12)                       */
#define SMOTOR_PG2_CTRL_REG_PG_MODE_Msk       (0x1000UL)                /*!< SMOTOR PG2_CTRL_REG: PG_MODE (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG2_CTRL_REG_PG_START_MODE_Pos (13UL)                    /*!< SMOTOR PG2_CTRL_REG: PG_START_MODE (Bit 13)                 */
#define SMOTOR_PG2_CTRL_REG_PG_START_MODE_Msk (0x2000UL)                /*!< SMOTOR PG2_CTRL_REG: PG_START_MODE (Bitfield-Mask: 0x01)    */
#define SMOTOR_PG2_CTRL_REG_GENSTART_IRQ_EN_Pos (14UL)                  /*!< SMOTOR PG2_CTRL_REG: GENSTART_IRQ_EN (Bit 14)               */
#define SMOTOR_PG2_CTRL_REG_GENSTART_IRQ_EN_Msk (0x4000UL)              /*!< SMOTOR PG2_CTRL_REG: GENSTART_IRQ_EN (Bitfield-Mask: 0x01)  */
#define SMOTOR_PG2_CTRL_REG_GENEND_IRQ_EN_Pos (15UL)                    /*!< SMOTOR PG2_CTRL_REG: GENEND_IRQ_EN (Bit 15)                 */
#define SMOTOR_PG2_CTRL_REG_GENEND_IRQ_EN_Msk (0x8000UL)                /*!< SMOTOR PG2_CTRL_REG: GENEND_IRQ_EN (Bitfield-Mask: 0x01)    */
/* -----------------------------  SMOTOR_PG3_CTRL_REG  ---------------------------- */
#define SMOTOR_PG3_CTRL_REG_OUT0_SIG_Pos      (0UL)                     /*!< SMOTOR PG3_CTRL_REG: OUT0_SIG (Bit 0)                       */
#define SMOTOR_PG3_CTRL_REG_OUT0_SIG_Msk      (0x3UL)                   /*!< SMOTOR PG3_CTRL_REG: OUT0_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG3_CTRL_REG_OUT1_SIG_Pos      (2UL)                     /*!< SMOTOR PG3_CTRL_REG: OUT1_SIG (Bit 2)                       */
#define SMOTOR_PG3_CTRL_REG_OUT1_SIG_Msk      (0xcUL)                   /*!< SMOTOR PG3_CTRL_REG: OUT1_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG3_CTRL_REG_OUT2_SIG_Pos      (4UL)                     /*!< SMOTOR PG3_CTRL_REG: OUT2_SIG (Bit 4)                       */
#define SMOTOR_PG3_CTRL_REG_OUT2_SIG_Msk      (0x30UL)                  /*!< SMOTOR PG3_CTRL_REG: OUT2_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG3_CTRL_REG_OUT3_SIG_Pos      (6UL)                     /*!< SMOTOR PG3_CTRL_REG: OUT3_SIG (Bit 6)                       */
#define SMOTOR_PG3_CTRL_REG_OUT3_SIG_Msk      (0xc0UL)                  /*!< SMOTOR PG3_CTRL_REG: OUT3_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG3_CTRL_REG_SIG0_EN_Pos       (8UL)                     /*!< SMOTOR PG3_CTRL_REG: SIG0_EN (Bit 8)                        */
#define SMOTOR_PG3_CTRL_REG_SIG0_EN_Msk       (0x100UL)                 /*!< SMOTOR PG3_CTRL_REG: SIG0_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG3_CTRL_REG_SIG1_EN_Pos       (9UL)                     /*!< SMOTOR PG3_CTRL_REG: SIG1_EN (Bit 9)                        */
#define SMOTOR_PG3_CTRL_REG_SIG1_EN_Msk       (0x200UL)                 /*!< SMOTOR PG3_CTRL_REG: SIG1_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG3_CTRL_REG_SIG2_EN_Pos       (10UL)                    /*!< SMOTOR PG3_CTRL_REG: SIG2_EN (Bit 10)                       */
#define SMOTOR_PG3_CTRL_REG_SIG2_EN_Msk       (0x400UL)                 /*!< SMOTOR PG3_CTRL_REG: SIG2_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG3_CTRL_REG_SIG3_EN_Pos       (11UL)                    /*!< SMOTOR PG3_CTRL_REG: SIG3_EN (Bit 11)                       */
#define SMOTOR_PG3_CTRL_REG_SIG3_EN_Msk       (0x800UL)                 /*!< SMOTOR PG3_CTRL_REG: SIG3_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG3_CTRL_REG_PG_MODE_Pos       (12UL)                    /*!< SMOTOR PG3_CTRL_REG: PG_MODE (Bit 12)                       */
#define SMOTOR_PG3_CTRL_REG_PG_MODE_Msk       (0x1000UL)                /*!< SMOTOR PG3_CTRL_REG: PG_MODE (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG3_CTRL_REG_PG_START_MODE_Pos (13UL)                    /*!< SMOTOR PG3_CTRL_REG: PG_START_MODE (Bit 13)                 */
#define SMOTOR_PG3_CTRL_REG_PG_START_MODE_Msk (0x2000UL)                /*!< SMOTOR PG3_CTRL_REG: PG_START_MODE (Bitfield-Mask: 0x01)    */
#define SMOTOR_PG3_CTRL_REG_GENSTART_IRQ_EN_Pos (14UL)                  /*!< SMOTOR PG3_CTRL_REG: GENSTART_IRQ_EN (Bit 14)               */
#define SMOTOR_PG3_CTRL_REG_GENSTART_IRQ_EN_Msk (0x4000UL)              /*!< SMOTOR PG3_CTRL_REG: GENSTART_IRQ_EN (Bitfield-Mask: 0x01)  */
#define SMOTOR_PG3_CTRL_REG_GENEND_IRQ_EN_Pos (15UL)                    /*!< SMOTOR PG3_CTRL_REG: GENEND_IRQ_EN (Bit 15)                 */
#define SMOTOR_PG3_CTRL_REG_GENEND_IRQ_EN_Msk (0x8000UL)                /*!< SMOTOR PG3_CTRL_REG: GENEND_IRQ_EN (Bitfield-Mask: 0x01)    */
/* -----------------------------  SMOTOR_PG4_CTRL_REG  ---------------------------- */
#define SMOTOR_PG4_CTRL_REG_OUT0_SIG_Pos      (0UL)                     /*!< SMOTOR PG4_CTRL_REG: OUT0_SIG (Bit 0)                       */
#define SMOTOR_PG4_CTRL_REG_OUT0_SIG_Msk      (0x3UL)                   /*!< SMOTOR PG4_CTRL_REG: OUT0_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG4_CTRL_REG_OUT1_SIG_Pos      (2UL)                     /*!< SMOTOR PG4_CTRL_REG: OUT1_SIG (Bit 2)                       */
#define SMOTOR_PG4_CTRL_REG_OUT1_SIG_Msk      (0xcUL)                   /*!< SMOTOR PG4_CTRL_REG: OUT1_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG4_CTRL_REG_OUT2_SIG_Pos      (4UL)                     /*!< SMOTOR PG4_CTRL_REG: OUT2_SIG (Bit 4)                       */
#define SMOTOR_PG4_CTRL_REG_OUT2_SIG_Msk      (0x30UL)                  /*!< SMOTOR PG4_CTRL_REG: OUT2_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG4_CTRL_REG_OUT3_SIG_Pos      (6UL)                     /*!< SMOTOR PG4_CTRL_REG: OUT3_SIG (Bit 6)                       */
#define SMOTOR_PG4_CTRL_REG_OUT3_SIG_Msk      (0xc0UL)                  /*!< SMOTOR PG4_CTRL_REG: OUT3_SIG (Bitfield-Mask: 0x03)         */
#define SMOTOR_PG4_CTRL_REG_SIG0_EN_Pos       (8UL)                     /*!< SMOTOR PG4_CTRL_REG: SIG0_EN (Bit 8)                        */
#define SMOTOR_PG4_CTRL_REG_SIG0_EN_Msk       (0x100UL)                 /*!< SMOTOR PG4_CTRL_REG: SIG0_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG4_CTRL_REG_SIG1_EN_Pos       (9UL)                     /*!< SMOTOR PG4_CTRL_REG: SIG1_EN (Bit 9)                        */
#define SMOTOR_PG4_CTRL_REG_SIG1_EN_Msk       (0x200UL)                 /*!< SMOTOR PG4_CTRL_REG: SIG1_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG4_CTRL_REG_SIG2_EN_Pos       (10UL)                    /*!< SMOTOR PG4_CTRL_REG: SIG2_EN (Bit 10)                       */
#define SMOTOR_PG4_CTRL_REG_SIG2_EN_Msk       (0x400UL)                 /*!< SMOTOR PG4_CTRL_REG: SIG2_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG4_CTRL_REG_SIG3_EN_Pos       (11UL)                    /*!< SMOTOR PG4_CTRL_REG: SIG3_EN (Bit 11)                       */
#define SMOTOR_PG4_CTRL_REG_SIG3_EN_Msk       (0x800UL)                 /*!< SMOTOR PG4_CTRL_REG: SIG3_EN (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG4_CTRL_REG_PG_MODE_Pos       (12UL)                    /*!< SMOTOR PG4_CTRL_REG: PG_MODE (Bit 12)                       */
#define SMOTOR_PG4_CTRL_REG_PG_MODE_Msk       (0x1000UL)                /*!< SMOTOR PG4_CTRL_REG: PG_MODE (Bitfield-Mask: 0x01)          */
#define SMOTOR_PG4_CTRL_REG_PG_START_MODE_Pos (13UL)                    /*!< SMOTOR PG4_CTRL_REG: PG_START_MODE (Bit 13)                 */
#define SMOTOR_PG4_CTRL_REG_PG_START_MODE_Msk (0x2000UL)                /*!< SMOTOR PG4_CTRL_REG: PG_START_MODE (Bitfield-Mask: 0x01)    */
#define SMOTOR_PG4_CTRL_REG_GENSTART_IRQ_EN_Pos (14UL)                  /*!< SMOTOR PG4_CTRL_REG: GENSTART_IRQ_EN (Bit 14)               */
#define SMOTOR_PG4_CTRL_REG_GENSTART_IRQ_EN_Msk (0x4000UL)              /*!< SMOTOR PG4_CTRL_REG: GENSTART_IRQ_EN (Bitfield-Mask: 0x01)  */
#define SMOTOR_PG4_CTRL_REG_GENEND_IRQ_EN_Pos (15UL)                    /*!< SMOTOR PG4_CTRL_REG: GENEND_IRQ_EN (Bit 15)                 */
#define SMOTOR_PG4_CTRL_REG_GENEND_IRQ_EN_Msk (0x8000UL)                /*!< SMOTOR PG4_CTRL_REG: GENEND_IRQ_EN (Bitfield-Mask: 0x01)    */
/* --------------------------  SMOTOR_SMOTOR_TRIGGER_REG  ------------------------- */
#define SMOTOR_SMOTOR_TRIGGER_REG_POP_CMD_Pos (0UL)                     /*!< SMOTOR SMOTOR_TRIGGER_REG: POP_CMD (Bit 0)                  */
#define SMOTOR_SMOTOR_TRIGGER_REG_POP_CMD_Msk (0x1UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: POP_CMD (Bitfield-Mask: 0x01)    */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG0_START_Pos (1UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: PG0_START (Bit 1)                */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG0_START_Msk (0x2UL)                 /*!< SMOTOR SMOTOR_TRIGGER_REG: PG0_START (Bitfield-Mask: 0x01)  */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG1_START_Pos (2UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: PG1_START (Bit 2)                */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG1_START_Msk (0x4UL)                 /*!< SMOTOR SMOTOR_TRIGGER_REG: PG1_START (Bitfield-Mask: 0x01)  */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG2_START_Pos (3UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: PG2_START (Bit 3)                */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG2_START_Msk (0x8UL)                 /*!< SMOTOR SMOTOR_TRIGGER_REG: PG2_START (Bitfield-Mask: 0x01)  */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG3_START_Pos (4UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: PG3_START (Bit 4)                */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG3_START_Msk (0x10UL)                /*!< SMOTOR SMOTOR_TRIGGER_REG: PG3_START (Bitfield-Mask: 0x01)  */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG4_START_Pos (5UL)                   /*!< SMOTOR SMOTOR_TRIGGER_REG: PG4_START (Bit 5)                */
#define SMOTOR_SMOTOR_TRIGGER_REG_PG4_START_Msk (0x20UL)                /*!< SMOTOR SMOTOR_TRIGGER_REG: PG4_START (Bitfield-Mask: 0x01)  */
/* -------------------------  SMOTOR_SMOTOR_CMD_FIFO_REG  ------------------------- */
#define SMOTOR_SMOTOR_CMD_FIFO_REG_SMOTOR_CMD_FIFO_Pos (0UL)            /*!< SMOTOR SMOTOR_CMD_FIFO_REG: SMOTOR_CMD_FIFO (Bit 0)         */
#define SMOTOR_SMOTOR_CMD_FIFO_REG_SMOTOR_CMD_FIFO_Msk (0xffffUL)       /*!< SMOTOR SMOTOR_CMD_FIFO_REG: SMOTOR_CMD_FIFO (Bitfield-Mask: 0xffff) */
/* -----------------------  SMOTOR_SMOTOR_CMD_READ_PTR_REG  ----------------------- */
#define SMOTOR_SMOTOR_CMD_READ_PTR_REG_SMOTOR_CMD_READ_PTR_Pos (0UL)    /*!< SMOTOR SMOTOR_CMD_READ_PTR_REG: SMOTOR_CMD_READ_PTR (Bit 0) */
#define SMOTOR_SMOTOR_CMD_READ_PTR_REG_SMOTOR_CMD_READ_PTR_Msk (0x3fUL) /*!< SMOTOR SMOTOR_CMD_READ_PTR_REG: SMOTOR_CMD_READ_PTR (Bitfield-Mask: 0x3f) */
/* -----------------------  SMOTOR_SMOTOR_CMD_WRITE_PTR_REG  ---------------------- */
#define SMOTOR_SMOTOR_CMD_WRITE_PTR_REG_SMOTOR_CMD_WRITE_PTR_Pos (0UL)  /*!< SMOTOR SMOTOR_CMD_WRITE_PTR_REG: SMOTOR_CMD_WRITE_PTR (Bit 0) */
#define SMOTOR_SMOTOR_CMD_WRITE_PTR_REG_SMOTOR_CMD_WRITE_PTR_Msk (0x3fUL) /*!< SMOTOR SMOTOR_CMD_WRITE_PTR_REG: SMOTOR_CMD_WRITE_PTR (Bitfield-Mask: 0x3f) */
/* --------------------------  SMOTOR_SMOTOR_STATUS_REG  -------------------------- */
#define SMOTOR_SMOTOR_STATUS_REG_GENSTART_IRQ_STATUS_Pos (0UL)          /*!< SMOTOR SMOTOR_STATUS_REG: GENSTART_IRQ_STATUS (Bit 0)       */
#define SMOTOR_SMOTOR_STATUS_REG_GENSTART_IRQ_STATUS_Msk (0x1UL)        /*!< SMOTOR SMOTOR_STATUS_REG: GENSTART_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_STATUS_REG_GENEND_IRQ_STATUS_Pos (1UL)            /*!< SMOTOR SMOTOR_STATUS_REG: GENEND_IRQ_STATUS (Bit 1)         */
#define SMOTOR_SMOTOR_STATUS_REG_GENEND_IRQ_STATUS_Msk (0x2UL)          /*!< SMOTOR SMOTOR_STATUS_REG: GENEND_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_STATUS_REG_FIFO_OVF_IRQ_STATUS_Pos (2UL)          /*!< SMOTOR SMOTOR_STATUS_REG: FIFO_OVF_IRQ_STATUS (Bit 2)       */
#define SMOTOR_SMOTOR_STATUS_REG_FIFO_OVF_IRQ_STATUS_Msk (0x4UL)        /*!< SMOTOR SMOTOR_STATUS_REG: FIFO_OVF_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_STATUS_REG_FIFO_UNR_IRQ_STATUS_Pos (3UL)          /*!< SMOTOR SMOTOR_STATUS_REG: FIFO_UNR_IRQ_STATUS (Bit 3)       */
#define SMOTOR_SMOTOR_STATUS_REG_FIFO_UNR_IRQ_STATUS_Msk (0x8UL)        /*!< SMOTOR SMOTOR_STATUS_REG: FIFO_UNR_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_STATUS_REG_THRESHOLD_IRQ_STATUS_Pos (4UL)         /*!< SMOTOR SMOTOR_STATUS_REG: THRESHOLD_IRQ_STATUS (Bit 4)      */
#define SMOTOR_SMOTOR_STATUS_REG_THRESHOLD_IRQ_STATUS_Msk (0x10UL)      /*!< SMOTOR SMOTOR_STATUS_REG: THRESHOLD_IRQ_STATUS (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_STATUS_REG_PG0_BUSY_Pos (5UL)                     /*!< SMOTOR SMOTOR_STATUS_REG: PG0_BUSY (Bit 5)                  */
#define SMOTOR_SMOTOR_STATUS_REG_PG0_BUSY_Msk (0x20UL)                  /*!< SMOTOR SMOTOR_STATUS_REG: PG0_BUSY (Bitfield-Mask: 0x01)    */
#define SMOTOR_SMOTOR_STATUS_REG_PG1_BUSY_Pos (6UL)                     /*!< SMOTOR SMOTOR_STATUS_REG: PG1_BUSY (Bit 6)                  */
#define SMOTOR_SMOTOR_STATUS_REG_PG1_BUSY_Msk (0x40UL)                  /*!< SMOTOR SMOTOR_STATUS_REG: PG1_BUSY (Bitfield-Mask: 0x01)    */
#define SMOTOR_SMOTOR_STATUS_REG_PG2_BUSY_Pos (7UL)                     /*!< SMOTOR SMOTOR_STATUS_REG: PG2_BUSY (Bit 7)                  */
#define SMOTOR_SMOTOR_STATUS_REG_PG2_BUSY_Msk (0x80UL)                  /*!< SMOTOR SMOTOR_STATUS_REG: PG2_BUSY (Bitfield-Mask: 0x01)    */
#define SMOTOR_SMOTOR_STATUS_REG_PG3_BUSY_Pos (8UL)                     /*!< SMOTOR SMOTOR_STATUS_REG: PG3_BUSY (Bit 8)                  */
#define SMOTOR_SMOTOR_STATUS_REG_PG3_BUSY_Msk (0x100UL)                 /*!< SMOTOR SMOTOR_STATUS_REG: PG3_BUSY (Bitfield-Mask: 0x01)    */
#define SMOTOR_SMOTOR_STATUS_REG_PG4_BUSY_Pos (9UL)                     /*!< SMOTOR SMOTOR_STATUS_REG: PG4_BUSY (Bit 9)                  */
#define SMOTOR_SMOTOR_STATUS_REG_PG4_BUSY_Msk (0x200UL)                 /*!< SMOTOR SMOTOR_STATUS_REG: PG4_BUSY (Bitfield-Mask: 0x01)    */
/* -------------------------  SMOTOR_SMOTOR_IRQ_CLEAR_REG  ------------------------ */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_GENSTART_IRQ_CLEAR_Pos (0UL)        /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: GENSTART_IRQ_CLEAR (Bit 0)     */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_GENSTART_IRQ_CLEAR_Msk (0x1UL)      /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: GENSTART_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_GENEND_IRQ_CLEAR_Pos (1UL)          /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: GENEND_IRQ_CLEAR (Bit 1)       */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_GENEND_IRQ_CLEAR_Msk (0x2UL)        /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: GENEND_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_FIFO_OVF_IRQ_CLEAR_Pos (2UL)        /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: FIFO_OVF_IRQ_CLEAR (Bit 2)     */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_FIFO_OVF_IRQ_CLEAR_Msk (0x4UL)      /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: FIFO_OVF_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_FIFO_UNR_IRQ_CLEAR_Pos (3UL)        /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: FIFO_UNR_IRQ_CLEAR (Bit 3)     */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_FIFO_UNR_IRQ_CLEAR_Msk (0x8UL)      /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: FIFO_UNR_IRQ_CLEAR (Bitfield-Mask: 0x01) */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_THRESHOLD_IRQ_CLEAR_Pos (4UL)       /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: THRESHOLD_IRQ_CLEAR (Bit 4)    */
#define SMOTOR_SMOTOR_IRQ_CLEAR_REG_THRESHOLD_IRQ_CLEAR_Msk (0x10UL)    /*!< SMOTOR SMOTOR_IRQ_CLEAR_REG: THRESHOLD_IRQ_CLEAR (Bitfield-Mask: 0x01) */
/* ----------------------------  SMOTOR_WAVETABLE_BASE  --------------------------- */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B0_Pos (0UL)             /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B0 (Bit 0)          */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B0_Msk (0x1fUL)          /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B0 (Bitfield-Mask: 0x1f) */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B1_Pos (8UL)             /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B1 (Bit 8)          */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B1_Msk (0x1f00UL)        /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B1 (Bitfield-Mask: 0x1f) */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B2_Pos (16UL)            /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B2 (Bit 16)         */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B2_Msk (0x1f0000UL)      /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B2 (Bitfield-Mask: 0x1f) */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B3_Pos (24UL)            /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B3 (Bit 24)         */
#define SMOTOR_WAVETABLE_BASE_WAVETABLE_BASE_X_B3_Msk (0x1f000000UL)    /*!< SMOTOR WAVETABLE_BASE: WAVETABLE_BASE_X_B3 (Bitfield-Mask: 0x1f) */
/* ----------------------------  SMOTOR_CMD_TABLE_BASE  --------------------------- */
#define SMOTOR_CMD_TABLE_BASE_CMD_TABLE_BASE_X_Pos (0UL)                /*!< SMOTOR CMD_TABLE_BASE: CMD_TABLE_BASE_X (Bit 0)             */
#define SMOTOR_CMD_TABLE_BASE_CMD_TABLE_BASE_X_Msk (0xffffffffUL)       /*!< SMOTOR CMD_TABLE_BASE: CMD_TABLE_BASE_X (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'SNC' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  SNC_SNC_CTRL_REG  ------------------------------ */
#define SNC_SNC_CTRL_REG_SNC_EN_Pos           (0UL)                     /*!< SNC SNC_CTRL_REG: SNC_EN (Bit 0)                            */
#define SNC_SNC_CTRL_REG_SNC_EN_Msk           (0x1UL)                   /*!< SNC SNC_CTRL_REG: SNC_EN (Bitfield-Mask: 0x01)              */
#define SNC_SNC_CTRL_REG_SNC_SW_CTRL_Pos      (1UL)                     /*!< SNC SNC_CTRL_REG: SNC_SW_CTRL (Bit 1)                       */
#define SNC_SNC_CTRL_REG_SNC_SW_CTRL_Msk      (0x2UL)                   /*!< SNC SNC_CTRL_REG: SNC_SW_CTRL (Bitfield-Mask: 0x01)         */
#define SNC_SNC_CTRL_REG_BUS_ERROR_DETECT_EN_Pos (2UL)                  /*!< SNC SNC_CTRL_REG: BUS_ERROR_DETECT_EN (Bit 2)               */
#define SNC_SNC_CTRL_REG_BUS_ERROR_DETECT_EN_Msk (0x4UL)                /*!< SNC SNC_CTRL_REG: BUS_ERROR_DETECT_EN (Bitfield-Mask: 0x01) */
#define SNC_SNC_CTRL_REG_SNC_RESET_Pos        (3UL)                     /*!< SNC SNC_CTRL_REG: SNC_RESET (Bit 3)                         */
#define SNC_SNC_CTRL_REG_SNC_RESET_Msk        (0x8UL)                   /*!< SNC SNC_CTRL_REG: SNC_RESET (Bitfield-Mask: 0x01)           */
#define SNC_SNC_CTRL_REG_SNC_BRANCH_LOOP_INIT_Pos (4UL)                 /*!< SNC SNC_CTRL_REG: SNC_BRANCH_LOOP_INIT (Bit 4)              */
#define SNC_SNC_CTRL_REG_SNC_BRANCH_LOOP_INIT_Msk (0x10UL)              /*!< SNC SNC_CTRL_REG: SNC_BRANCH_LOOP_INIT (Bitfield-Mask: 0x01) */
#define SNC_SNC_CTRL_REG_SNC_IRQ_EN_Pos       (5UL)                     /*!< SNC SNC_CTRL_REG: SNC_IRQ_EN (Bit 5)                        */
#define SNC_SNC_CTRL_REG_SNC_IRQ_EN_Msk       (0x20UL)                  /*!< SNC SNC_CTRL_REG: SNC_IRQ_EN (Bitfield-Mask: 0x01)          */
#define SNC_SNC_CTRL_REG_SNC_IRQ_CONFIG_Pos   (6UL)                     /*!< SNC SNC_CTRL_REG: SNC_IRQ_CONFIG (Bit 6)                    */
#define SNC_SNC_CTRL_REG_SNC_IRQ_CONFIG_Msk   (0xc0UL)                  /*!< SNC SNC_CTRL_REG: SNC_IRQ_CONFIG (Bitfield-Mask: 0x03)      */
#define SNC_SNC_CTRL_REG_SNC_IRQ_ACK_Pos      (8UL)                     /*!< SNC SNC_CTRL_REG: SNC_IRQ_ACK (Bit 8)                       */
#define SNC_SNC_CTRL_REG_SNC_IRQ_ACK_Msk      (0x100UL)                 /*!< SNC SNC_CTRL_REG: SNC_IRQ_ACK (Bitfield-Mask: 0x01)         */
/* -----------------------------  SNC_SNC_STATUS_REG  ----------------------------- */
#define SNC_SNC_STATUS_REG_EQ_FLAG_Pos        (0UL)                     /*!< SNC SNC_STATUS_REG: EQ_FLAG (Bit 0)                         */
#define SNC_SNC_STATUS_REG_EQ_FLAG_Msk        (0x1UL)                   /*!< SNC SNC_STATUS_REG: EQ_FLAG (Bitfield-Mask: 0x01)           */
#define SNC_SNC_STATUS_REG_GR_FLAG_Pos        (1UL)                     /*!< SNC SNC_STATUS_REG: GR_FLAG (Bit 1)                         */
#define SNC_SNC_STATUS_REG_GR_FLAG_Msk        (0x2UL)                   /*!< SNC SNC_STATUS_REG: GR_FLAG (Bitfield-Mask: 0x01)           */
#define SNC_SNC_STATUS_REG_SNC_DONE_STATUS_Pos (2UL)                    /*!< SNC SNC_STATUS_REG: SNC_DONE_STATUS (Bit 2)                 */
#define SNC_SNC_STATUS_REG_SNC_DONE_STATUS_Msk (0x4UL)                  /*!< SNC SNC_STATUS_REG: SNC_DONE_STATUS (Bitfield-Mask: 0x01)   */
#define SNC_SNC_STATUS_REG_BUS_ERROR_STATUS_Pos (3UL)                   /*!< SNC SNC_STATUS_REG: BUS_ERROR_STATUS (Bit 3)                */
#define SNC_SNC_STATUS_REG_BUS_ERROR_STATUS_Msk (0x8UL)                 /*!< SNC SNC_STATUS_REG: BUS_ERROR_STATUS (Bitfield-Mask: 0x01)  */
#define SNC_SNC_STATUS_REG_HARD_FAULT_STATUS_Pos (4UL)                  /*!< SNC SNC_STATUS_REG: HARD_FAULT_STATUS (Bit 4)               */
#define SNC_SNC_STATUS_REG_HARD_FAULT_STATUS_Msk (0x10UL)               /*!< SNC SNC_STATUS_REG: HARD_FAULT_STATUS (Bitfield-Mask: 0x01) */
#define SNC_SNC_STATUS_REG_SNC_IS_STOPPED_Pos (5UL)                     /*!< SNC SNC_STATUS_REG: SNC_IS_STOPPED (Bit 5)                  */
#define SNC_SNC_STATUS_REG_SNC_IS_STOPPED_Msk (0x20UL)                  /*!< SNC SNC_STATUS_REG: SNC_IS_STOPPED (Bitfield-Mask: 0x01)    */
#define SNC_SNC_STATUS_REG_SNC_PC_LOADED_Pos  (6UL)                     /*!< SNC SNC_STATUS_REG: SNC_PC_LOADED (Bit 6)                   */
#define SNC_SNC_STATUS_REG_SNC_PC_LOADED_Msk  (0x40UL)                  /*!< SNC SNC_STATUS_REG: SNC_PC_LOADED (Bitfield-Mask: 0x01)     */
/* ----------------------------  SNC_SNC_LP_TIMER_REG  ---------------------------- */
#define SNC_SNC_LP_TIMER_REG_LP_TIMER_Pos     (0UL)                     /*!< SNC SNC_LP_TIMER_REG: LP_TIMER (Bit 0)                      */
#define SNC_SNC_LP_TIMER_REG_LP_TIMER_Msk     (0xffUL)                  /*!< SNC SNC_LP_TIMER_REG: LP_TIMER (Bitfield-Mask: 0xff)        */
/* -------------------------------  SNC_SNC_PC_REG  ------------------------------- */
#define SNC_SNC_PC_REG_PC_REG_Pos             (2UL)                     /*!< SNC SNC_PC_REG: PC_REG (Bit 2)                              */
#define SNC_SNC_PC_REG_PC_REG_Msk             (0x7fffcUL)               /*!< SNC SNC_PC_REG: PC_REG (Bitfield-Mask: 0x1ffff)             */
/* -------------------------------  SNC_SNC_R1_REG  ------------------------------- */
#define SNC_SNC_R1_REG_R1_REG_Pos             (0UL)                     /*!< SNC SNC_R1_REG: R1_REG (Bit 0)                              */
#define SNC_SNC_R1_REG_R1_REG_Msk             (0xffffffffUL)            /*!< SNC SNC_R1_REG: R1_REG (Bitfield-Mask: 0xffffffff)          */
/* -------------------------------  SNC_SNC_R2_REG  ------------------------------- */
#define SNC_SNC_R2_REG_R2_REG_Pos             (0UL)                     /*!< SNC SNC_R2_REG: R2_REG (Bit 0)                              */
#define SNC_SNC_R2_REG_R2_REG_Msk             (0xffffffffUL)            /*!< SNC SNC_R2_REG: R2_REG (Bitfield-Mask: 0xffffffff)          */
/* ------------------------------  SNC_SNC_TMP1_REG  ------------------------------ */
#define SNC_SNC_TMP1_REG_TMP1_REG_Pos         (0UL)                     /*!< SNC SNC_TMP1_REG: TMP1_REG (Bit 0)                          */
#define SNC_SNC_TMP1_REG_TMP1_REG_Msk         (0xffffffffUL)            /*!< SNC SNC_TMP1_REG: TMP1_REG (Bitfield-Mask: 0xffffffff)      */
/* ------------------------------  SNC_SNC_TMP2_REG  ------------------------------ */
#define SNC_SNC_TMP2_REG_TMP2_REG_Pos         (0UL)                     /*!< SNC SNC_TMP2_REG: TMP2_REG (Bit 0)                          */
#define SNC_SNC_TMP2_REG_TMP2_REG_Msk         (0xffffffffUL)            /*!< SNC SNC_TMP2_REG: TMP2_REG (Bitfield-Mask: 0xffffffff)      */
/* ================================================================================ */
/* ================          struct 'SPI' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  SPI_SPI_CTRL_REG  ------------------------------ */
#define SPI_SPI_CTRL_REG_SPI_ON_Pos           (0UL)                     /*!< SPI SPI_CTRL_REG: SPI_ON (Bit 0)                            */
#define SPI_SPI_CTRL_REG_SPI_ON_Msk           (0x1UL)                   /*!< SPI SPI_CTRL_REG: SPI_ON (Bitfield-Mask: 0x01)              */
#define SPI_SPI_CTRL_REG_SPI_PHA_Pos          (1UL)                     /*!< SPI SPI_CTRL_REG: SPI_PHA (Bit 1)                           */
#define SPI_SPI_CTRL_REG_SPI_PHA_Msk          (0x2UL)                   /*!< SPI SPI_CTRL_REG: SPI_PHA (Bitfield-Mask: 0x01)             */
#define SPI_SPI_CTRL_REG_SPI_POL_Pos          (2UL)                     /*!< SPI SPI_CTRL_REG: SPI_POL (Bit 2)                           */
#define SPI_SPI_CTRL_REG_SPI_POL_Msk          (0x4UL)                   /*!< SPI SPI_CTRL_REG: SPI_POL (Bitfield-Mask: 0x01)             */
#define SPI_SPI_CTRL_REG_SPI_CLK_Pos          (3UL)                     /*!< SPI SPI_CTRL_REG: SPI_CLK (Bit 3)                           */
#define SPI_SPI_CTRL_REG_SPI_CLK_Msk          (0x18UL)                  /*!< SPI SPI_CTRL_REG: SPI_CLK (Bitfield-Mask: 0x03)             */
#define SPI_SPI_CTRL_REG_SPI_DO_Pos           (5UL)                     /*!< SPI SPI_CTRL_REG: SPI_DO (Bit 5)                            */
#define SPI_SPI_CTRL_REG_SPI_DO_Msk           (0x20UL)                  /*!< SPI SPI_CTRL_REG: SPI_DO (Bitfield-Mask: 0x01)              */
#define SPI_SPI_CTRL_REG_SPI_SMN_Pos          (6UL)                     /*!< SPI SPI_CTRL_REG: SPI_SMN (Bit 6)                           */
#define SPI_SPI_CTRL_REG_SPI_SMN_Msk          (0x40UL)                  /*!< SPI SPI_CTRL_REG: SPI_SMN (Bitfield-Mask: 0x01)             */
#define SPI_SPI_CTRL_REG_SPI_RST_Pos          (7UL)                     /*!< SPI SPI_CTRL_REG: SPI_RST (Bit 7)                           */
#define SPI_SPI_CTRL_REG_SPI_RST_Msk          (0x80UL)                  /*!< SPI SPI_CTRL_REG: SPI_RST (Bitfield-Mask: 0x01)             */
#define SPI_SPI_CTRL_REG_SPI_WORD_Pos         (8UL)                     /*!< SPI SPI_CTRL_REG: SPI_WORD (Bit 8)                          */
#define SPI_SPI_CTRL_REG_SPI_WORD_Msk         (0x300UL)                 /*!< SPI SPI_CTRL_REG: SPI_WORD (Bitfield-Mask: 0x03)            */
#define SPI_SPI_CTRL_REG_SPI_FORCE_DO_Pos     (10UL)                    /*!< SPI SPI_CTRL_REG: SPI_FORCE_DO (Bit 10)                     */
#define SPI_SPI_CTRL_REG_SPI_FORCE_DO_Msk     (0x400UL)                 /*!< SPI SPI_CTRL_REG: SPI_FORCE_DO (Bitfield-Mask: 0x01)        */
#define SPI_SPI_CTRL_REG_SPI_TXH_Pos          (11UL)                    /*!< SPI SPI_CTRL_REG: SPI_TXH (Bit 11)                          */
#define SPI_SPI_CTRL_REG_SPI_TXH_Msk          (0x800UL)                 /*!< SPI SPI_CTRL_REG: SPI_TXH (Bitfield-Mask: 0x01)             */
#define SPI_SPI_CTRL_REG_SPI_DI_Pos           (12UL)                    /*!< SPI SPI_CTRL_REG: SPI_DI (Bit 12)                           */
#define SPI_SPI_CTRL_REG_SPI_DI_Msk           (0x1000UL)                /*!< SPI SPI_CTRL_REG: SPI_DI (Bitfield-Mask: 0x01)              */
#define SPI_SPI_CTRL_REG_SPI_INT_BIT_Pos      (13UL)                    /*!< SPI SPI_CTRL_REG: SPI_INT_BIT (Bit 13)                      */
#define SPI_SPI_CTRL_REG_SPI_INT_BIT_Msk      (0x2000UL)                /*!< SPI SPI_CTRL_REG: SPI_INT_BIT (Bitfield-Mask: 0x01)         */
#define SPI_SPI_CTRL_REG_SPI_MINT_Pos         (14UL)                    /*!< SPI SPI_CTRL_REG: SPI_MINT (Bit 14)                         */
#define SPI_SPI_CTRL_REG_SPI_MINT_Msk         (0x4000UL)                /*!< SPI SPI_CTRL_REG: SPI_MINT (Bitfield-Mask: 0x01)            */
#define SPI_SPI_CTRL_REG_SPI_EN_CTRL_Pos      (15UL)                    /*!< SPI SPI_CTRL_REG: SPI_EN_CTRL (Bit 15)                      */
#define SPI_SPI_CTRL_REG_SPI_EN_CTRL_Msk      (0x8000UL)                /*!< SPI SPI_CTRL_REG: SPI_EN_CTRL (Bitfield-Mask: 0x01)         */
#define SPI_SPI_CTRL_REG_SPI_FIFO_MODE_Pos    (16UL)                    /*!< SPI SPI_CTRL_REG: SPI_FIFO_MODE (Bit 16)                    */
#define SPI_SPI_CTRL_REG_SPI_FIFO_MODE_Msk    (0x30000UL)               /*!< SPI SPI_CTRL_REG: SPI_FIFO_MODE (Bitfield-Mask: 0x03)       */
#define SPI_SPI_CTRL_REG_SPI_PRIORITY_Pos     (18UL)                    /*!< SPI SPI_CTRL_REG: SPI_PRIORITY (Bit 18)                     */
#define SPI_SPI_CTRL_REG_SPI_PRIORITY_Msk     (0x40000UL)               /*!< SPI SPI_CTRL_REG: SPI_PRIORITY (Bitfield-Mask: 0x01)        */
#define SPI_SPI_CTRL_REG_SPI_BUSY_Pos         (19UL)                    /*!< SPI SPI_CTRL_REG: SPI_BUSY (Bit 19)                         */
#define SPI_SPI_CTRL_REG_SPI_BUSY_Msk         (0x80000UL)               /*!< SPI SPI_CTRL_REG: SPI_BUSY (Bitfield-Mask: 0x01)            */
#define SPI_SPI_CTRL_REG_SPI_9BIT_VAL_Pos     (20UL)                    /*!< SPI SPI_CTRL_REG: SPI_9BIT_VAL (Bit 20)                     */
#define SPI_SPI_CTRL_REG_SPI_9BIT_VAL_Msk     (0x100000UL)              /*!< SPI SPI_CTRL_REG: SPI_9BIT_VAL (Bitfield-Mask: 0x01)        */
#define SPI_SPI_CTRL_REG_SPI_RX_FIFO_EMPTY_Pos (21UL)                   /*!< SPI SPI_CTRL_REG: SPI_RX_FIFO_EMPTY (Bit 21)                */
#define SPI_SPI_CTRL_REG_SPI_RX_FIFO_EMPTY_Msk (0x200000UL)             /*!< SPI SPI_CTRL_REG: SPI_RX_FIFO_EMPTY (Bitfield-Mask: 0x01)   */
#define SPI_SPI_CTRL_REG_SPI_RX_FIFO_FULL_Pos (22UL)                    /*!< SPI SPI_CTRL_REG: SPI_RX_FIFO_FULL (Bit 22)                 */
#define SPI_SPI_CTRL_REG_SPI_RX_FIFO_FULL_Msk (0x400000UL)              /*!< SPI SPI_CTRL_REG: SPI_RX_FIFO_FULL (Bitfield-Mask: 0x01)    */
#define SPI_SPI_CTRL_REG_SPI_TX_FIFO_EMPTY_Pos (23UL)                   /*!< SPI SPI_CTRL_REG: SPI_TX_FIFO_EMPTY (Bit 23)                */
#define SPI_SPI_CTRL_REG_SPI_TX_FIFO_EMPTY_Msk (0x800000UL)             /*!< SPI SPI_CTRL_REG: SPI_TX_FIFO_EMPTY (Bitfield-Mask: 0x01)   */
#define SPI_SPI_CTRL_REG_SPI_DMA_TXREQ_MODE_Pos (24UL)                  /*!< SPI SPI_CTRL_REG: SPI_DMA_TXREQ_MODE (Bit 24)               */
#define SPI_SPI_CTRL_REG_SPI_DMA_TXREQ_MODE_Msk (0x1000000UL)           /*!< SPI SPI_CTRL_REG: SPI_DMA_TXREQ_MODE (Bitfield-Mask: 0x01)  */
#define SPI_SPI_CTRL_REG_SPI_TX_FIFO_NOTFULL_MASK_Pos (25UL)            /*!< SPI SPI_CTRL_REG: SPI_TX_FIFO_NOTFULL_MASK (Bit 25)         */
#define SPI_SPI_CTRL_REG_SPI_TX_FIFO_NOTFULL_MASK_Msk (0x2000000UL)     /*!< SPI SPI_CTRL_REG: SPI_TX_FIFO_NOTFULL_MASK (Bitfield-Mask: 0x01) */
/* ------------------------------  SPI_SPI_RX_TX_REG  ----------------------------- */
#define SPI_SPI_RX_TX_REG_SPI_DATA_Pos        (0UL)                     /*!< SPI SPI_RX_TX_REG: SPI_DATA (Bit 0)                         */
#define SPI_SPI_RX_TX_REG_SPI_DATA_Msk        (0xffffffffUL)            /*!< SPI SPI_RX_TX_REG: SPI_DATA (Bitfield-Mask: 0xffffffff)     */
/* ----------------------------  SPI_SPI_CLEAR_INT_REG  --------------------------- */
#define SPI_SPI_CLEAR_INT_REG_SPI_CLEAR_INT_Pos (0UL)                   /*!< SPI SPI_CLEAR_INT_REG: SPI_CLEAR_INT (Bit 0)                */
#define SPI_SPI_CLEAR_INT_REG_SPI_CLEAR_INT_Msk (0xffffffffUL)          /*!< SPI SPI_CLEAR_INT_REG: SPI_CLEAR_INT (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================          struct 'SPI2' Position & Mask         ================ */
/* ================================================================================ */
/* -----------------------------  SPI2_SPI2_CTRL_REG  ----------------------------- */
#define SPI2_SPI2_CTRL_REG_SPI_ON_Pos         (0UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_ON (Bit 0)                          */
#define SPI2_SPI2_CTRL_REG_SPI_ON_Msk         (0x1UL)                   /*!< SPI2 SPI2_CTRL_REG: SPI_ON (Bitfield-Mask: 0x01)            */
#define SPI2_SPI2_CTRL_REG_SPI_PHA_Pos        (1UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_PHA (Bit 1)                         */
#define SPI2_SPI2_CTRL_REG_SPI_PHA_Msk        (0x2UL)                   /*!< SPI2 SPI2_CTRL_REG: SPI_PHA (Bitfield-Mask: 0x01)           */
#define SPI2_SPI2_CTRL_REG_SPI_POL_Pos        (2UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_POL (Bit 2)                         */
#define SPI2_SPI2_CTRL_REG_SPI_POL_Msk        (0x4UL)                   /*!< SPI2 SPI2_CTRL_REG: SPI_POL (Bitfield-Mask: 0x01)           */
#define SPI2_SPI2_CTRL_REG_SPI_CLK_Pos        (3UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_CLK (Bit 3)                         */
#define SPI2_SPI2_CTRL_REG_SPI_CLK_Msk        (0x18UL)                  /*!< SPI2 SPI2_CTRL_REG: SPI_CLK (Bitfield-Mask: 0x03)           */
#define SPI2_SPI2_CTRL_REG_SPI_DO_Pos         (5UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_DO (Bit 5)                          */
#define SPI2_SPI2_CTRL_REG_SPI_DO_Msk         (0x20UL)                  /*!< SPI2 SPI2_CTRL_REG: SPI_DO (Bitfield-Mask: 0x01)            */
#define SPI2_SPI2_CTRL_REG_SPI_SMN_Pos        (6UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_SMN (Bit 6)                         */
#define SPI2_SPI2_CTRL_REG_SPI_SMN_Msk        (0x40UL)                  /*!< SPI2 SPI2_CTRL_REG: SPI_SMN (Bitfield-Mask: 0x01)           */
#define SPI2_SPI2_CTRL_REG_SPI_RST_Pos        (7UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_RST (Bit 7)                         */
#define SPI2_SPI2_CTRL_REG_SPI_RST_Msk        (0x80UL)                  /*!< SPI2 SPI2_CTRL_REG: SPI_RST (Bitfield-Mask: 0x01)           */
#define SPI2_SPI2_CTRL_REG_SPI_WORD_Pos       (8UL)                     /*!< SPI2 SPI2_CTRL_REG: SPI_WORD (Bit 8)                        */
#define SPI2_SPI2_CTRL_REG_SPI_WORD_Msk       (0x300UL)                 /*!< SPI2 SPI2_CTRL_REG: SPI_WORD (Bitfield-Mask: 0x03)          */
#define SPI2_SPI2_CTRL_REG_SPI_FORCE_DO_Pos   (10UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_FORCE_DO (Bit 10)                   */
#define SPI2_SPI2_CTRL_REG_SPI_FORCE_DO_Msk   (0x400UL)                 /*!< SPI2 SPI2_CTRL_REG: SPI_FORCE_DO (Bitfield-Mask: 0x01)      */
#define SPI2_SPI2_CTRL_REG_SPI_TXH_Pos        (11UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_TXH (Bit 11)                        */
#define SPI2_SPI2_CTRL_REG_SPI_TXH_Msk        (0x800UL)                 /*!< SPI2 SPI2_CTRL_REG: SPI_TXH (Bitfield-Mask: 0x01)           */
#define SPI2_SPI2_CTRL_REG_SPI_DI_Pos         (12UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_DI (Bit 12)                         */
#define SPI2_SPI2_CTRL_REG_SPI_DI_Msk         (0x1000UL)                /*!< SPI2 SPI2_CTRL_REG: SPI_DI (Bitfield-Mask: 0x01)            */
#define SPI2_SPI2_CTRL_REG_SPI_INT_BIT_Pos    (13UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_INT_BIT (Bit 13)                    */
#define SPI2_SPI2_CTRL_REG_SPI_INT_BIT_Msk    (0x2000UL)                /*!< SPI2 SPI2_CTRL_REG: SPI_INT_BIT (Bitfield-Mask: 0x01)       */
#define SPI2_SPI2_CTRL_REG_SPI_MINT_Pos       (14UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_MINT (Bit 14)                       */
#define SPI2_SPI2_CTRL_REG_SPI_MINT_Msk       (0x4000UL)                /*!< SPI2 SPI2_CTRL_REG: SPI_MINT (Bitfield-Mask: 0x01)          */
#define SPI2_SPI2_CTRL_REG_SPI_EN_CTRL_Pos    (15UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_EN_CTRL (Bit 15)                    */
#define SPI2_SPI2_CTRL_REG_SPI_EN_CTRL_Msk    (0x8000UL)                /*!< SPI2 SPI2_CTRL_REG: SPI_EN_CTRL (Bitfield-Mask: 0x01)       */
#define SPI2_SPI2_CTRL_REG_SPI_FIFO_MODE_Pos  (16UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_FIFO_MODE (Bit 16)                  */
#define SPI2_SPI2_CTRL_REG_SPI_FIFO_MODE_Msk  (0x30000UL)               /*!< SPI2 SPI2_CTRL_REG: SPI_FIFO_MODE (Bitfield-Mask: 0x03)     */
#define SPI2_SPI2_CTRL_REG_SPI_PRIORITY_Pos   (18UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_PRIORITY (Bit 18)                   */
#define SPI2_SPI2_CTRL_REG_SPI_PRIORITY_Msk   (0x40000UL)               /*!< SPI2 SPI2_CTRL_REG: SPI_PRIORITY (Bitfield-Mask: 0x01)      */
#define SPI2_SPI2_CTRL_REG_SPI_BUSY_Pos       (19UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_BUSY (Bit 19)                       */
#define SPI2_SPI2_CTRL_REG_SPI_BUSY_Msk       (0x80000UL)               /*!< SPI2 SPI2_CTRL_REG: SPI_BUSY (Bitfield-Mask: 0x01)          */
#define SPI2_SPI2_CTRL_REG_SPI_9BIT_VAL_Pos   (20UL)                    /*!< SPI2 SPI2_CTRL_REG: SPI_9BIT_VAL (Bit 20)                   */
#define SPI2_SPI2_CTRL_REG_SPI_9BIT_VAL_Msk   (0x100000UL)              /*!< SPI2 SPI2_CTRL_REG: SPI_9BIT_VAL (Bitfield-Mask: 0x01)      */
#define SPI2_SPI2_CTRL_REG_SPI_RX_FIFO_EMPTY_Pos (21UL)                 /*!< SPI2 SPI2_CTRL_REG: SPI_RX_FIFO_EMPTY (Bit 21)              */
#define SPI2_SPI2_CTRL_REG_SPI_RX_FIFO_EMPTY_Msk (0x200000UL)           /*!< SPI2 SPI2_CTRL_REG: SPI_RX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define SPI2_SPI2_CTRL_REG_SPI_RX_FIFO_FULL_Pos (22UL)                  /*!< SPI2 SPI2_CTRL_REG: SPI_RX_FIFO_FULL (Bit 22)               */
#define SPI2_SPI2_CTRL_REG_SPI_RX_FIFO_FULL_Msk (0x400000UL)            /*!< SPI2 SPI2_CTRL_REG: SPI_RX_FIFO_FULL (Bitfield-Mask: 0x01)  */
#define SPI2_SPI2_CTRL_REG_SPI_TX_FIFO_EMPTY_Pos (23UL)                 /*!< SPI2 SPI2_CTRL_REG: SPI_TX_FIFO_EMPTY (Bit 23)              */
#define SPI2_SPI2_CTRL_REG_SPI_TX_FIFO_EMPTY_Msk (0x800000UL)           /*!< SPI2 SPI2_CTRL_REG: SPI_TX_FIFO_EMPTY (Bitfield-Mask: 0x01) */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_TXREQ_MODE_Pos (24UL)                /*!< SPI2 SPI2_CTRL_REG: SPI_DMA_TXREQ_MODE (Bit 24)             */
#define SPI2_SPI2_CTRL_REG_SPI_DMA_TXREQ_MODE_Msk (0x1000000UL)         /*!< SPI2 SPI2_CTRL_REG: SPI_DMA_TXREQ_MODE (Bitfield-Mask: 0x01) */
#define SPI2_SPI2_CTRL_REG_SPI_TX_FIFO_NOTFULL_MASK_Pos (25UL)          /*!< SPI2 SPI2_CTRL_REG: SPI_TX_FIFO_NOTFULL_MASK (Bit 25)       */
#define SPI2_SPI2_CTRL_REG_SPI_TX_FIFO_NOTFULL_MASK_Msk (0x2000000UL)   /*!< SPI2 SPI2_CTRL_REG: SPI_TX_FIFO_NOTFULL_MASK (Bitfield-Mask: 0x01) */
/* -----------------------------  SPI2_SPI2_RX_TX_REG  ---------------------------- */
#define SPI2_SPI2_RX_TX_REG_SPI_DATA_Pos      (0UL)                     /*!< SPI2 SPI2_RX_TX_REG: SPI_DATA (Bit 0)                       */
#define SPI2_SPI2_RX_TX_REG_SPI_DATA_Msk      (0xffffffffUL)            /*!< SPI2 SPI2_RX_TX_REG: SPI_DATA (Bitfield-Mask: 0xffffffff)   */
/* ---------------------------  SPI2_SPI2_CLEAR_INT_REG  -------------------------- */
#define SPI2_SPI2_CLEAR_INT_REG_SPI_CLEAR_INT_Pos (0UL)                 /*!< SPI2 SPI2_CLEAR_INT_REG: SPI_CLEAR_INT (Bit 0)              */
#define SPI2_SPI2_CLEAR_INT_REG_SPI_CLEAR_INT_Msk (0xffffffffUL)        /*!< SPI2 SPI2_CLEAR_INT_REG: SPI_CLEAR_INT (Bitfield-Mask: 0xffffffff) */
/* ================================================================================ */
/* ================        struct 'SYS_WDOG' Position & Mask       ================ */
/* ================================================================================ */
/* ----------------------------  SYS_WDOG_WATCHDOG_REG  --------------------------- */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_Pos    (0UL)                     /*!< SYS_WDOG WATCHDOG_REG: WDOG_VAL (Bit 0)                     */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_Msk    (0x1fffUL)                /*!< SYS_WDOG WATCHDOG_REG: WDOG_VAL (Bitfield-Mask: 0x1fff)     */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_NEG_Pos (13UL)                   /*!< SYS_WDOG WATCHDOG_REG: WDOG_VAL_NEG (Bit 13)                */
#define SYS_WDOG_WATCHDOG_REG_WDOG_VAL_NEG_Msk (0x2000UL)               /*!< SYS_WDOG WATCHDOG_REG: WDOG_VAL_NEG (Bitfield-Mask: 0x01)   */
#define SYS_WDOG_WATCHDOG_REG_WDOG_WEN_Pos    (14UL)                    /*!< SYS_WDOG WATCHDOG_REG: WDOG_WEN (Bit 14)                    */
#define SYS_WDOG_WATCHDOG_REG_WDOG_WEN_Msk    (0xffffc000UL)            /*!< SYS_WDOG WATCHDOG_REG: WDOG_WEN (Bitfield-Mask: 0x3ffff)    */
/* -------------------------  SYS_WDOG_WATCHDOG_CTRL_REG  ------------------------- */
#define SYS_WDOG_WATCHDOG_CTRL_REG_NMI_RST_Pos (0UL)                    /*!< SYS_WDOG WATCHDOG_CTRL_REG: NMI_RST (Bit 0)                 */
#define SYS_WDOG_WATCHDOG_CTRL_REG_NMI_RST_Msk (0x1UL)                  /*!< SYS_WDOG WATCHDOG_CTRL_REG: NMI_RST (Bitfield-Mask: 0x01)   */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WDOG_FREEZE_EN_Pos (2UL)             /*!< SYS_WDOG WATCHDOG_CTRL_REG: WDOG_FREEZE_EN (Bit 2)          */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WDOG_FREEZE_EN_Msk (0x4UL)           /*!< SYS_WDOG WATCHDOG_CTRL_REG: WDOG_FREEZE_EN (Bitfield-Mask: 0x01) */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WRITE_BUSY_Pos (3UL)                 /*!< SYS_WDOG WATCHDOG_CTRL_REG: WRITE_BUSY (Bit 3)              */
#define SYS_WDOG_WATCHDOG_CTRL_REG_WRITE_BUSY_Msk (0x8UL)               /*!< SYS_WDOG WATCHDOG_CTRL_REG: WRITE_BUSY (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'TIMER' Position & Mask         ================ */
/* ================================================================================ */
/* ----------------------------  TIMER_TIMER_CTRL_REG  ---------------------------- */
#define TIMER_TIMER_CTRL_REG_TIM_EN_Pos       (0UL)                     /*!< TIMER TIMER_CTRL_REG: TIM_EN (Bit 0)                        */
#define TIMER_TIMER_CTRL_REG_TIM_EN_Msk       (0x1UL)                   /*!< TIMER TIMER_CTRL_REG: TIM_EN (Bitfield-Mask: 0x01)          */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)              /*!< TIMER TIMER_CTRL_REG: TIM_ONESHOT_MODE_EN (Bit 1)           */
#define TIMER_TIMER_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)            /*!< TIMER TIMER_CTRL_REG: TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)                /*!< TIMER TIMER_CTRL_REG: TIM_COUNT_DOWN_EN (Bit 2)             */
#define TIMER_TIMER_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)              /*!< TIMER TIMER_CTRL_REG: TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)            /*!< TIMER TIMER_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bit 3)         */
#define TIMER_TIMER_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)          /*!< TIMER TIMER_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)            /*!< TIMER TIMER_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bit 4)         */
#define TIMER_TIMER_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)         /*!< TIMER TIMER_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_IRQ_EN_Pos   (5UL)                     /*!< TIMER TIMER_CTRL_REG: TIM_IRQ_EN (Bit 5)                    */
#define TIMER_TIMER_CTRL_REG_TIM_IRQ_EN_Msk   (0x20UL)                  /*!< TIMER TIMER_CTRL_REG: TIM_IRQ_EN (Bitfield-Mask: 0x01)      */
#define TIMER_TIMER_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)             /*!< TIMER TIMER_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bit 6)          */
#define TIMER_TIMER_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)          /*!< TIMER TIMER_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)                   /*!< TIMER TIMER_CTRL_REG: TIM_SYS_CLK_EN (Bit 7)                */
#define TIMER_TIMER_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)                /*!< TIMER TIMER_CTRL_REG: TIM_SYS_CLK_EN (Bitfield-Mask: 0x01)  */
#define TIMER_TIMER_CTRL_REG_TIM_CLK_EN_Pos   (8UL)                     /*!< TIMER TIMER_CTRL_REG: TIM_CLK_EN (Bit 8)                    */
#define TIMER_TIMER_CTRL_REG_TIM_CLK_EN_Msk   (0x100UL)                 /*!< TIMER TIMER_CTRL_REG: TIM_CLK_EN (Bitfield-Mask: 0x01)      */
#define TIMER_TIMER_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Pos (9UL)            /*!< TIMER TIMER_CTRL_REG: TIM_IN3_EVENT_FALL_EN (Bit 9)         */
#define TIMER_TIMER_CTRL_REG_TIM_IN3_EVENT_FALL_EN_Msk (0x200UL)        /*!< TIMER TIMER_CTRL_REG: TIM_IN3_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Pos (10UL)           /*!< TIMER TIMER_CTRL_REG: TIM_IN4_EVENT_FALL_EN (Bit 10)        */
#define TIMER_TIMER_CTRL_REG_TIM_IN4_EVENT_FALL_EN_Msk (0x400UL)        /*!< TIMER TIMER_CTRL_REG: TIM_IN4_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO1_IRQ_EN_Pos (11UL)            /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO1_IRQ_EN (Bit 11)         */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO1_IRQ_EN_Msk (0x800UL)         /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO1_IRQ_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO2_IRQ_EN_Pos (12UL)            /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO2_IRQ_EN (Bit 12)         */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO2_IRQ_EN_Msk (0x1000UL)        /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO2_IRQ_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO3_IRQ_EN_Pos (13UL)            /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO3_IRQ_EN (Bit 13)         */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO3_IRQ_EN_Msk (0x2000UL)        /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO3_IRQ_EN (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO4_IRQ_EN_Pos (14UL)            /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO4_IRQ_EN (Bit 14)         */
#define TIMER_TIMER_CTRL_REG_TIM_CAP_GPIO4_IRQ_EN_Msk (0x4000UL)        /*!< TIMER TIMER_CTRL_REG: TIM_CAP_GPIO4_IRQ_EN (Bitfield-Mask: 0x01) */
/* --------------------------  TIMER_TIMER_TIMER_VAL_REG  ------------------------- */
#define TIMER_TIMER_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)             /*!< TIMER TIMER_TIMER_VAL_REG: TIM_TIMER_VALUE (Bit 0)          */
#define TIMER_TIMER_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL)      /*!< TIMER TIMER_TIMER_VAL_REG: TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff) */
/* ---------------------------  TIMER_TIMER_STATUS_REG  --------------------------- */
#define TIMER_TIMER_STATUS_REG_TIM_IN1_STATE_Pos (0UL)                  /*!< TIMER TIMER_STATUS_REG: TIM_IN1_STATE (Bit 0)               */
#define TIMER_TIMER_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)                /*!< TIMER TIMER_STATUS_REG: TIM_IN1_STATE (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_STATUS_REG_TIM_IN2_STATE_Pos (1UL)                  /*!< TIMER TIMER_STATUS_REG: TIM_IN2_STATE (Bit 1)               */
#define TIMER_TIMER_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)                /*!< TIMER TIMER_STATUS_REG: TIM_IN2_STATE (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)              /*!< TIMER TIMER_STATUS_REG: TIM_ONESHOT_PHASE (Bit 2)           */
#define TIMER_TIMER_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)            /*!< TIMER TIMER_STATUS_REG: TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03) */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO1_EVENT_PENDING_Pos (4UL)        /*!< TIMER TIMER_STATUS_REG: TIM_GPIO1_EVENT_PENDING (Bit 4)     */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO1_EVENT_PENDING_Msk (0x10UL)     /*!< TIMER TIMER_STATUS_REG: TIM_GPIO1_EVENT_PENDING (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO2_EVENT_PENDING_Pos (5UL)        /*!< TIMER TIMER_STATUS_REG: TIM_GPIO2_EVENT_PENDING (Bit 5)     */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO2_EVENT_PENDING_Msk (0x20UL)     /*!< TIMER TIMER_STATUS_REG: TIM_GPIO2_EVENT_PENDING (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO3_EVENT_PENDING_Pos (6UL)        /*!< TIMER TIMER_STATUS_REG: TIM_GPIO3_EVENT_PENDING (Bit 6)     */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO3_EVENT_PENDING_Msk (0x40UL)     /*!< TIMER TIMER_STATUS_REG: TIM_GPIO3_EVENT_PENDING (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO4_EVENT_PENDING_Pos (7UL)        /*!< TIMER TIMER_STATUS_REG: TIM_GPIO4_EVENT_PENDING (Bit 7)     */
#define TIMER_TIMER_STATUS_REG_TIM_GPIO4_EVENT_PENDING_Msk (0x80UL)     /*!< TIMER TIMER_STATUS_REG: TIM_GPIO4_EVENT_PENDING (Bitfield-Mask: 0x01) */
/* -------------------------  TIMER_TIMER_GPIO1_CONF_REG  ------------------------- */
#define TIMER_TIMER_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)             /*!< TIMER TIMER_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bit 0)          */
#define TIMER_TIMER_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)          /*!< TIMER TIMER_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bitfield-Mask: 0x3f) */
/* -------------------------  TIMER_TIMER_GPIO2_CONF_REG  ------------------------- */
#define TIMER_TIMER_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)             /*!< TIMER TIMER_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bit 0)          */
#define TIMER_TIMER_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)          /*!< TIMER TIMER_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bitfield-Mask: 0x3f) */
/* ---------------------------  TIMER_TIMER_RELOAD_REG  --------------------------- */
#define TIMER_TIMER_RELOAD_REG_TIM_RELOAD_Pos (0UL)                     /*!< TIMER TIMER_RELOAD_REG: TIM_RELOAD (Bit 0)                  */
#define TIMER_TIMER_RELOAD_REG_TIM_RELOAD_Msk (0xffffffUL)              /*!< TIMER TIMER_RELOAD_REG: TIM_RELOAD (Bitfield-Mask: 0xffffff) */
/* --------------------------  TIMER_TIMER_SHOTWIDTH_REG  ------------------------- */
#define TIMER_TIMER_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)               /*!< TIMER TIMER_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bit 0)            */
#define TIMER_TIMER_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)        /*!< TIMER TIMER_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff) */
/* --------------------------  TIMER_TIMER_PRESCALER_REG  ------------------------- */
#define TIMER_TIMER_PRESCALER_REG_TIM_PRESCALER_Pos (0UL)               /*!< TIMER TIMER_PRESCALER_REG: TIM_PRESCALER (Bit 0)            */
#define TIMER_TIMER_PRESCALER_REG_TIM_PRESCALER_Msk (0x1fUL)            /*!< TIMER TIMER_PRESCALER_REG: TIM_PRESCALER (Bitfield-Mask: 0x1f) */
/* ------------------------  TIMER_TIMER_CAPTURE_GPIO1_REG  ----------------------- */
#define TIMER_TIMER_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL)       /*!< TIMER TIMER_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bit 0)    */
#define TIMER_TIMER_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIMER TIMER_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff) */
/* ------------------------  TIMER_TIMER_CAPTURE_GPIO2_REG  ----------------------- */
#define TIMER_TIMER_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL)       /*!< TIMER TIMER_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bit 0)    */
#define TIMER_TIMER_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIMER TIMER_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff) */
/* ------------------------  TIMER_TIMER_PRESCALER_VAL_REG  ----------------------- */
#define TIMER_TIMER_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL)       /*!< TIMER TIMER_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bit 0)    */
#define TIMER_TIMER_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL)    /*!< TIMER TIMER_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f) */
/* --------------------------  TIMER_TIMER_PWM_FREQ_REG  -------------------------- */
#define TIMER_TIMER_PWM_FREQ_REG_TIM_PWM_FREQ_Pos (0UL)                 /*!< TIMER TIMER_PWM_FREQ_REG: TIM_PWM_FREQ (Bit 0)              */
#define TIMER_TIMER_PWM_FREQ_REG_TIM_PWM_FREQ_Msk (0xffffUL)            /*!< TIMER TIMER_PWM_FREQ_REG: TIM_PWM_FREQ (Bitfield-Mask: 0xffff) */
/* ---------------------------  TIMER_TIMER_PWM_DC_REG  --------------------------- */
#define TIMER_TIMER_PWM_DC_REG_TIM_PWM_DC_Pos (0UL)                     /*!< TIMER TIMER_PWM_DC_REG: TIM_PWM_DC (Bit 0)                  */
#define TIMER_TIMER_PWM_DC_REG_TIM_PWM_DC_Msk (0xffffUL)                /*!< TIMER TIMER_PWM_DC_REG: TIM_PWM_DC (Bitfield-Mask: 0xffff)  */
/* -------------------------  TIMER_TIMER_GPIO3_CONF_REG  ------------------------- */
#define TIMER_TIMER_GPIO3_CONF_REG_TIM_GPIO3_CONF_Pos (0UL)             /*!< TIMER TIMER_GPIO3_CONF_REG: TIM_GPIO3_CONF (Bit 0)          */
#define TIMER_TIMER_GPIO3_CONF_REG_TIM_GPIO3_CONF_Msk (0x3fUL)          /*!< TIMER TIMER_GPIO3_CONF_REG: TIM_GPIO3_CONF (Bitfield-Mask: 0x3f) */
/* -------------------------  TIMER_TIMER_GPIO4_CONF_REG  ------------------------- */
#define TIMER_TIMER_GPIO4_CONF_REG_TIM_GPIO4_CONF_Pos (0UL)             /*!< TIMER TIMER_GPIO4_CONF_REG: TIM_GPIO4_CONF (Bit 0)          */
#define TIMER_TIMER_GPIO4_CONF_REG_TIM_GPIO4_CONF_Msk (0x3fUL)          /*!< TIMER TIMER_GPIO4_CONF_REG: TIM_GPIO4_CONF (Bitfield-Mask: 0x3f) */
/* ------------------------  TIMER_TIMER_CAPTURE_GPIO3_REG  ----------------------- */
#define TIMER_TIMER_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Pos (0UL)       /*!< TIMER TIMER_CAPTURE_GPIO3_REG: TIM_CAPTURE_GPIO3 (Bit 0)    */
#define TIMER_TIMER_CAPTURE_GPIO3_REG_TIM_CAPTURE_GPIO3_Msk (0xffffffUL) /*!< TIMER TIMER_CAPTURE_GPIO3_REG: TIM_CAPTURE_GPIO3 (Bitfield-Mask: 0xffffff) */
/* ------------------------  TIMER_TIMER_CAPTURE_GPIO4_REG  ----------------------- */
#define TIMER_TIMER_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Pos (0UL)       /*!< TIMER TIMER_CAPTURE_GPIO4_REG: TIM_CAPTURE_GPIO4 (Bit 0)    */
#define TIMER_TIMER_CAPTURE_GPIO4_REG_TIM_CAPTURE_GPIO4_Msk (0xffffffUL) /*!< TIMER TIMER_CAPTURE_GPIO4_REG: TIM_CAPTURE_GPIO4 (Bitfield-Mask: 0xffffff) */
/* ----------------------  TIMER_TIMER_CLEAR_GPIO_EVENT_REG  ---------------------- */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO1_EVENT_Pos (0UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO1_EVENT (Bit 0) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO1_EVENT_Msk (0x1UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO1_EVENT (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO2_EVENT_Pos (1UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO2_EVENT (Bit 1) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO2_EVENT_Msk (0x2UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO2_EVENT (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO3_EVENT_Pos (2UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO3_EVENT (Bit 2) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO3_EVENT_Msk (0x4UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO3_EVENT (Bitfield-Mask: 0x01) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO4_EVENT_Pos (3UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO4_EVENT (Bit 3) */
#define TIMER_TIMER_CLEAR_GPIO_EVENT_REG_TIM_CLEAR_GPIO4_EVENT_Msk (0x8UL) /*!< TIMER TIMER_CLEAR_GPIO_EVENT_REG: TIM_CLEAR_GPIO4_EVENT (Bitfield-Mask: 0x01) */
/* --------------------------  TIMER_TIMER_CLEAR_IRQ_REG  ------------------------- */
#define TIMER_TIMER_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)               /*!< TIMER TIMER_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bit 0)            */
#define TIMER_TIMER_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)             /*!< TIMER TIMER_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'TIMER2' Position & Mask        ================ */
/* ================================================================================ */
/* ---------------------------  TIMER2_TIMER2_CTRL_REG  --------------------------- */
#define TIMER2_TIMER2_CTRL_REG_TIM_EN_Pos     (0UL)                     /*!< TIMER2 TIMER2_CTRL_REG: TIM_EN (Bit 0)                      */
#define TIMER2_TIMER2_CTRL_REG_TIM_EN_Msk     (0x1UL)                   /*!< TIMER2 TIMER2_CTRL_REG: TIM_EN (Bitfield-Mask: 0x01)        */
#define TIMER2_TIMER2_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)            /*!< TIMER2 TIMER2_CTRL_REG: TIM_ONESHOT_MODE_EN (Bit 1)         */
#define TIMER2_TIMER2_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)          /*!< TIMER2 TIMER2_CTRL_REG: TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)              /*!< TIMER2 TIMER2_CTRL_REG: TIM_COUNT_DOWN_EN (Bit 2)           */
#define TIMER2_TIMER2_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)            /*!< TIMER2 TIMER2_CTRL_REG: TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)          /*!< TIMER2 TIMER2_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bit 3)       */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)        /*!< TIMER2 TIMER2_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)          /*!< TIMER2 TIMER2_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bit 4)       */
#define TIMER2_TIMER2_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)       /*!< TIMER2 TIMER2_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                     /*!< TIMER2 TIMER2_CTRL_REG: TIM_IRQ_EN (Bit 5)                  */
#define TIMER2_TIMER2_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)                  /*!< TIMER2 TIMER2_CTRL_REG: TIM_IRQ_EN (Bitfield-Mask: 0x01)    */
#define TIMER2_TIMER2_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)           /*!< TIMER2 TIMER2_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bit 6)        */
#define TIMER2_TIMER2_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)        /*!< TIMER2 TIMER2_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)                 /*!< TIMER2 TIMER2_CTRL_REG: TIM_SYS_CLK_EN (Bit 7)              */
#define TIMER2_TIMER2_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)              /*!< TIMER2 TIMER2_CTRL_REG: TIM_SYS_CLK_EN (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_CTRL_REG_TIM_CLK_EN_Pos (8UL)                     /*!< TIMER2 TIMER2_CTRL_REG: TIM_CLK_EN (Bit 8)                  */
#define TIMER2_TIMER2_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)                 /*!< TIMER2 TIMER2_CTRL_REG: TIM_CLK_EN (Bitfield-Mask: 0x01)    */
/* -------------------------  TIMER2_TIMER2_TIMER_VAL_REG  ------------------------ */
#define TIMER2_TIMER2_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)           /*!< TIMER2 TIMER2_TIMER_VAL_REG: TIM_TIMER_VALUE (Bit 0)        */
#define TIMER2_TIMER2_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL)    /*!< TIMER2 TIMER2_TIMER_VAL_REG: TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff) */
/* --------------------------  TIMER2_TIMER2_STATUS_REG  -------------------------- */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN1_STATE_Pos (0UL)                /*!< TIMER2 TIMER2_STATUS_REG: TIM_IN1_STATE (Bit 0)             */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)              /*!< TIMER2 TIMER2_STATUS_REG: TIM_IN1_STATE (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN2_STATE_Pos (1UL)                /*!< TIMER2 TIMER2_STATUS_REG: TIM_IN2_STATE (Bit 1)             */
#define TIMER2_TIMER2_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)              /*!< TIMER2 TIMER2_STATUS_REG: TIM_IN2_STATE (Bitfield-Mask: 0x01) */
#define TIMER2_TIMER2_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)            /*!< TIMER2 TIMER2_STATUS_REG: TIM_ONESHOT_PHASE (Bit 2)         */
#define TIMER2_TIMER2_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)          /*!< TIMER2 TIMER2_STATUS_REG: TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03) */
/* ------------------------  TIMER2_TIMER2_GPIO1_CONF_REG  ------------------------ */
#define TIMER2_TIMER2_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)           /*!< TIMER2 TIMER2_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bit 0)        */
#define TIMER2_TIMER2_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)        /*!< TIMER2 TIMER2_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bitfield-Mask: 0x3f) */
/* ------------------------  TIMER2_TIMER2_GPIO2_CONF_REG  ------------------------ */
#define TIMER2_TIMER2_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)           /*!< TIMER2 TIMER2_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bit 0)        */
#define TIMER2_TIMER2_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)        /*!< TIMER2 TIMER2_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bitfield-Mask: 0x3f) */
/* --------------------------  TIMER2_TIMER2_RELOAD_REG  -------------------------- */
#define TIMER2_TIMER2_RELOAD_REG_TIM_RELOAD_Pos (0UL)                   /*!< TIMER2 TIMER2_RELOAD_REG: TIM_RELOAD (Bit 0)                */
#define TIMER2_TIMER2_RELOAD_REG_TIM_RELOAD_Msk (0xffffffUL)            /*!< TIMER2 TIMER2_RELOAD_REG: TIM_RELOAD (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER2_TIMER2_SHOTWIDTH_REG  ------------------------ */
#define TIMER2_TIMER2_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)             /*!< TIMER2 TIMER2_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bit 0)          */
#define TIMER2_TIMER2_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)      /*!< TIMER2 TIMER2_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER2_TIMER2_PRESCALER_REG  ------------------------ */
#define TIMER2_TIMER2_PRESCALER_REG_TIM_PRESCALER_Pos (0UL)             /*!< TIMER2 TIMER2_PRESCALER_REG: TIM_PRESCALER (Bit 0)          */
#define TIMER2_TIMER2_PRESCALER_REG_TIM_PRESCALER_Msk (0x1fUL)          /*!< TIMER2 TIMER2_PRESCALER_REG: TIM_PRESCALER (Bitfield-Mask: 0x1f) */
/* -----------------------  TIMER2_TIMER2_CAPTURE_GPIO1_REG  ---------------------- */
#define TIMER2_TIMER2_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL)     /*!< TIMER2 TIMER2_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bit 0)  */
#define TIMER2_TIMER2_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIMER2 TIMER2_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER2_TIMER2_CAPTURE_GPIO2_REG  ---------------------- */
#define TIMER2_TIMER2_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL)     /*!< TIMER2 TIMER2_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bit 0)  */
#define TIMER2_TIMER2_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIMER2 TIMER2_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER2_TIMER2_PRESCALER_VAL_REG  ---------------------- */
#define TIMER2_TIMER2_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL)     /*!< TIMER2 TIMER2_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bit 0)  */
#define TIMER2_TIMER2_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL)  /*!< TIMER2 TIMER2_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f) */
/* -------------------------  TIMER2_TIMER2_PWM_FREQ_REG  ------------------------- */
#define TIMER2_TIMER2_PWM_FREQ_REG_TIM_PWM_FREQ_Pos (0UL)               /*!< TIMER2 TIMER2_PWM_FREQ_REG: TIM_PWM_FREQ (Bit 0)            */
#define TIMER2_TIMER2_PWM_FREQ_REG_TIM_PWM_FREQ_Msk (0xffffUL)          /*!< TIMER2 TIMER2_PWM_FREQ_REG: TIM_PWM_FREQ (Bitfield-Mask: 0xffff) */
/* --------------------------  TIMER2_TIMER2_PWM_DC_REG  -------------------------- */
#define TIMER2_TIMER2_PWM_DC_REG_TIM_PWM_DC_Pos (0UL)                   /*!< TIMER2 TIMER2_PWM_DC_REG: TIM_PWM_DC (Bit 0)                */
#define TIMER2_TIMER2_PWM_DC_REG_TIM_PWM_DC_Msk (0xffffUL)              /*!< TIMER2 TIMER2_PWM_DC_REG: TIM_PWM_DC (Bitfield-Mask: 0xffff) */
/* -------------------------  TIMER2_TIMER2_CLEAR_IRQ_REG  ------------------------ */
#define TIMER2_TIMER2_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)             /*!< TIMER2 TIMER2_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bit 0)          */
#define TIMER2_TIMER2_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)           /*!< TIMER2 TIMER2_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'TIMER3' Position & Mask        ================ */
/* ================================================================================ */
/* ---------------------------  TIMER3_TIMER3_CTRL_REG  --------------------------- */
#define TIMER3_TIMER3_CTRL_REG_TIM_EN_Pos     (0UL)                     /*!< TIMER3 TIMER3_CTRL_REG: TIM_EN (Bit 0)                      */
#define TIMER3_TIMER3_CTRL_REG_TIM_EN_Msk     (0x1UL)                   /*!< TIMER3 TIMER3_CTRL_REG: TIM_EN (Bitfield-Mask: 0x01)        */
#define TIMER3_TIMER3_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)            /*!< TIMER3 TIMER3_CTRL_REG: TIM_ONESHOT_MODE_EN (Bit 1)         */
#define TIMER3_TIMER3_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)          /*!< TIMER3 TIMER3_CTRL_REG: TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)              /*!< TIMER3 TIMER3_CTRL_REG: TIM_COUNT_DOWN_EN (Bit 2)           */
#define TIMER3_TIMER3_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)            /*!< TIMER3 TIMER3_CTRL_REG: TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)          /*!< TIMER3 TIMER3_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bit 3)       */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)        /*!< TIMER3 TIMER3_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)          /*!< TIMER3 TIMER3_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bit 4)       */
#define TIMER3_TIMER3_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)       /*!< TIMER3 TIMER3_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                     /*!< TIMER3 TIMER3_CTRL_REG: TIM_IRQ_EN (Bit 5)                  */
#define TIMER3_TIMER3_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)                  /*!< TIMER3 TIMER3_CTRL_REG: TIM_IRQ_EN (Bitfield-Mask: 0x01)    */
#define TIMER3_TIMER3_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)           /*!< TIMER3 TIMER3_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bit 6)        */
#define TIMER3_TIMER3_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)        /*!< TIMER3 TIMER3_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)                 /*!< TIMER3 TIMER3_CTRL_REG: TIM_SYS_CLK_EN (Bit 7)              */
#define TIMER3_TIMER3_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)              /*!< TIMER3 TIMER3_CTRL_REG: TIM_SYS_CLK_EN (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_CTRL_REG_TIM_CLK_EN_Pos (8UL)                     /*!< TIMER3 TIMER3_CTRL_REG: TIM_CLK_EN (Bit 8)                  */
#define TIMER3_TIMER3_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)                 /*!< TIMER3 TIMER3_CTRL_REG: TIM_CLK_EN (Bitfield-Mask: 0x01)    */
/* -------------------------  TIMER3_TIMER3_TIMER_VAL_REG  ------------------------ */
#define TIMER3_TIMER3_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)           /*!< TIMER3 TIMER3_TIMER_VAL_REG: TIM_TIMER_VALUE (Bit 0)        */
#define TIMER3_TIMER3_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL)    /*!< TIMER3 TIMER3_TIMER_VAL_REG: TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff) */
/* --------------------------  TIMER3_TIMER3_STATUS_REG  -------------------------- */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN1_STATE_Pos (0UL)                /*!< TIMER3 TIMER3_STATUS_REG: TIM_IN1_STATE (Bit 0)             */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)              /*!< TIMER3 TIMER3_STATUS_REG: TIM_IN1_STATE (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN2_STATE_Pos (1UL)                /*!< TIMER3 TIMER3_STATUS_REG: TIM_IN2_STATE (Bit 1)             */
#define TIMER3_TIMER3_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)              /*!< TIMER3 TIMER3_STATUS_REG: TIM_IN2_STATE (Bitfield-Mask: 0x01) */
#define TIMER3_TIMER3_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)            /*!< TIMER3 TIMER3_STATUS_REG: TIM_ONESHOT_PHASE (Bit 2)         */
#define TIMER3_TIMER3_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)          /*!< TIMER3 TIMER3_STATUS_REG: TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03) */
/* ------------------------  TIMER3_TIMER3_GPIO1_CONF_REG  ------------------------ */
#define TIMER3_TIMER3_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)           /*!< TIMER3 TIMER3_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bit 0)        */
#define TIMER3_TIMER3_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)        /*!< TIMER3 TIMER3_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bitfield-Mask: 0x3f) */
/* ------------------------  TIMER3_TIMER3_GPIO2_CONF_REG  ------------------------ */
#define TIMER3_TIMER3_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)           /*!< TIMER3 TIMER3_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bit 0)        */
#define TIMER3_TIMER3_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)        /*!< TIMER3 TIMER3_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bitfield-Mask: 0x3f) */
/* --------------------------  TIMER3_TIMER3_RELOAD_REG  -------------------------- */
#define TIMER3_TIMER3_RELOAD_REG_TIM_RELOAD_Pos (0UL)                   /*!< TIMER3 TIMER3_RELOAD_REG: TIM_RELOAD (Bit 0)                */
#define TIMER3_TIMER3_RELOAD_REG_TIM_RELOAD_Msk (0xffffffUL)            /*!< TIMER3 TIMER3_RELOAD_REG: TIM_RELOAD (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER3_TIMER3_SHOTWIDTH_REG  ------------------------ */
#define TIMER3_TIMER3_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)             /*!< TIMER3 TIMER3_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bit 0)          */
#define TIMER3_TIMER3_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)      /*!< TIMER3 TIMER3_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER3_TIMER3_PRESCALER_REG  ------------------------ */
#define TIMER3_TIMER3_PRESCALER_REG_TIM_PRESCALER_Pos (0UL)             /*!< TIMER3 TIMER3_PRESCALER_REG: TIM_PRESCALER (Bit 0)          */
#define TIMER3_TIMER3_PRESCALER_REG_TIM_PRESCALER_Msk (0x1fUL)          /*!< TIMER3 TIMER3_PRESCALER_REG: TIM_PRESCALER (Bitfield-Mask: 0x1f) */
/* -----------------------  TIMER3_TIMER3_CAPTURE_GPIO1_REG  ---------------------- */
#define TIMER3_TIMER3_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL)     /*!< TIMER3 TIMER3_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bit 0)  */
#define TIMER3_TIMER3_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIMER3 TIMER3_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER3_TIMER3_CAPTURE_GPIO2_REG  ---------------------- */
#define TIMER3_TIMER3_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL)     /*!< TIMER3 TIMER3_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bit 0)  */
#define TIMER3_TIMER3_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIMER3 TIMER3_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER3_TIMER3_PRESCALER_VAL_REG  ---------------------- */
#define TIMER3_TIMER3_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL)     /*!< TIMER3 TIMER3_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bit 0)  */
#define TIMER3_TIMER3_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL)  /*!< TIMER3 TIMER3_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f) */
/* -------------------------  TIMER3_TIMER3_PWM_FREQ_REG  ------------------------- */
#define TIMER3_TIMER3_PWM_FREQ_REG_TIM_PWM_FREQ_Pos (0UL)               /*!< TIMER3 TIMER3_PWM_FREQ_REG: TIM_PWM_FREQ (Bit 0)            */
#define TIMER3_TIMER3_PWM_FREQ_REG_TIM_PWM_FREQ_Msk (0xffffUL)          /*!< TIMER3 TIMER3_PWM_FREQ_REG: TIM_PWM_FREQ (Bitfield-Mask: 0xffff) */
/* --------------------------  TIMER3_TIMER3_PWM_DC_REG  -------------------------- */
#define TIMER3_TIMER3_PWM_DC_REG_TIM_PWM_DC_Pos (0UL)                   /*!< TIMER3 TIMER3_PWM_DC_REG: TIM_PWM_DC (Bit 0)                */
#define TIMER3_TIMER3_PWM_DC_REG_TIM_PWM_DC_Msk (0xffffUL)              /*!< TIMER3 TIMER3_PWM_DC_REG: TIM_PWM_DC (Bitfield-Mask: 0xffff) */
/* -------------------------  TIMER3_TIMER3_CLEAR_IRQ_REG  ------------------------ */
#define TIMER3_TIMER3_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)             /*!< TIMER3 TIMER3_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bit 0)          */
#define TIMER3_TIMER3_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)           /*!< TIMER3 TIMER3_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'TIMER4' Position & Mask        ================ */
/* ================================================================================ */
/* ---------------------------  TIMER4_TIMER4_CTRL_REG  --------------------------- */
#define TIMER4_TIMER4_CTRL_REG_TIM_EN_Pos     (0UL)                     /*!< TIMER4 TIMER4_CTRL_REG: TIM_EN (Bit 0)                      */
#define TIMER4_TIMER4_CTRL_REG_TIM_EN_Msk     (0x1UL)                   /*!< TIMER4 TIMER4_CTRL_REG: TIM_EN (Bitfield-Mask: 0x01)        */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_MODE_EN_Pos (1UL)            /*!< TIMER4 TIMER4_CTRL_REG: TIM_ONESHOT_MODE_EN (Bit 1)         */
#define TIMER4_TIMER4_CTRL_REG_TIM_ONESHOT_MODE_EN_Msk (0x2UL)          /*!< TIMER4 TIMER4_CTRL_REG: TIM_ONESHOT_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_COUNT_DOWN_EN_Pos (2UL)              /*!< TIMER4 TIMER4_CTRL_REG: TIM_COUNT_DOWN_EN (Bit 2)           */
#define TIMER4_TIMER4_CTRL_REG_TIM_COUNT_DOWN_EN_Msk (0x4UL)            /*!< TIMER4 TIMER4_CTRL_REG: TIM_COUNT_DOWN_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Pos (3UL)          /*!< TIMER4 TIMER4_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bit 3)       */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN1_EVENT_FALL_EN_Msk (0x8UL)        /*!< TIMER4 TIMER4_CTRL_REG: TIM_IN1_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Pos (4UL)          /*!< TIMER4 TIMER4_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bit 4)       */
#define TIMER4_TIMER4_CTRL_REG_TIM_IN2_EVENT_FALL_EN_Msk (0x10UL)       /*!< TIMER4 TIMER4_CTRL_REG: TIM_IN2_EVENT_FALL_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_IRQ_EN_Pos (5UL)                     /*!< TIMER4 TIMER4_CTRL_REG: TIM_IRQ_EN (Bit 5)                  */
#define TIMER4_TIMER4_CTRL_REG_TIM_IRQ_EN_Msk (0x20UL)                  /*!< TIMER4 TIMER4_CTRL_REG: TIM_IRQ_EN (Bitfield-Mask: 0x01)    */
#define TIMER4_TIMER4_CTRL_REG_TIM_FREE_RUN_MODE_EN_Pos (6UL)           /*!< TIMER4 TIMER4_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bit 6)        */
#define TIMER4_TIMER4_CTRL_REG_TIM_FREE_RUN_MODE_EN_Msk (0x40UL)        /*!< TIMER4 TIMER4_CTRL_REG: TIM_FREE_RUN_MODE_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_SYS_CLK_EN_Pos (7UL)                 /*!< TIMER4 TIMER4_CTRL_REG: TIM_SYS_CLK_EN (Bit 7)              */
#define TIMER4_TIMER4_CTRL_REG_TIM_SYS_CLK_EN_Msk (0x80UL)              /*!< TIMER4 TIMER4_CTRL_REG: TIM_SYS_CLK_EN (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_CTRL_REG_TIM_CLK_EN_Pos (8UL)                     /*!< TIMER4 TIMER4_CTRL_REG: TIM_CLK_EN (Bit 8)                  */
#define TIMER4_TIMER4_CTRL_REG_TIM_CLK_EN_Msk (0x100UL)                 /*!< TIMER4 TIMER4_CTRL_REG: TIM_CLK_EN (Bitfield-Mask: 0x01)    */
/* -------------------------  TIMER4_TIMER4_TIMER_VAL_REG  ------------------------ */
#define TIMER4_TIMER4_TIMER_VAL_REG_TIM_TIMER_VALUE_Pos (0UL)           /*!< TIMER4 TIMER4_TIMER_VAL_REG: TIM_TIMER_VALUE (Bit 0)        */
#define TIMER4_TIMER4_TIMER_VAL_REG_TIM_TIMER_VALUE_Msk (0xffffffUL)    /*!< TIMER4 TIMER4_TIMER_VAL_REG: TIM_TIMER_VALUE (Bitfield-Mask: 0xffffff) */
/* --------------------------  TIMER4_TIMER4_STATUS_REG  -------------------------- */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN1_STATE_Pos (0UL)                /*!< TIMER4 TIMER4_STATUS_REG: TIM_IN1_STATE (Bit 0)             */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN1_STATE_Msk (0x1UL)              /*!< TIMER4 TIMER4_STATUS_REG: TIM_IN1_STATE (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN2_STATE_Pos (1UL)                /*!< TIMER4 TIMER4_STATUS_REG: TIM_IN2_STATE (Bit 1)             */
#define TIMER4_TIMER4_STATUS_REG_TIM_IN2_STATE_Msk (0x2UL)              /*!< TIMER4 TIMER4_STATUS_REG: TIM_IN2_STATE (Bitfield-Mask: 0x01) */
#define TIMER4_TIMER4_STATUS_REG_TIM_ONESHOT_PHASE_Pos (2UL)            /*!< TIMER4 TIMER4_STATUS_REG: TIM_ONESHOT_PHASE (Bit 2)         */
#define TIMER4_TIMER4_STATUS_REG_TIM_ONESHOT_PHASE_Msk (0xcUL)          /*!< TIMER4 TIMER4_STATUS_REG: TIM_ONESHOT_PHASE (Bitfield-Mask: 0x03) */
/* ------------------------  TIMER4_TIMER4_GPIO1_CONF_REG  ------------------------ */
#define TIMER4_TIMER4_GPIO1_CONF_REG_TIM_GPIO1_CONF_Pos (0UL)           /*!< TIMER4 TIMER4_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bit 0)        */
#define TIMER4_TIMER4_GPIO1_CONF_REG_TIM_GPIO1_CONF_Msk (0x3fUL)        /*!< TIMER4 TIMER4_GPIO1_CONF_REG: TIM_GPIO1_CONF (Bitfield-Mask: 0x3f) */
/* ------------------------  TIMER4_TIMER4_GPIO2_CONF_REG  ------------------------ */
#define TIMER4_TIMER4_GPIO2_CONF_REG_TIM_GPIO2_CONF_Pos (0UL)           /*!< TIMER4 TIMER4_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bit 0)        */
#define TIMER4_TIMER4_GPIO2_CONF_REG_TIM_GPIO2_CONF_Msk (0x3fUL)        /*!< TIMER4 TIMER4_GPIO2_CONF_REG: TIM_GPIO2_CONF (Bitfield-Mask: 0x3f) */
/* --------------------------  TIMER4_TIMER4_RELOAD_REG  -------------------------- */
#define TIMER4_TIMER4_RELOAD_REG_TIM_RELOAD_Pos (0UL)                   /*!< TIMER4 TIMER4_RELOAD_REG: TIM_RELOAD (Bit 0)                */
#define TIMER4_TIMER4_RELOAD_REG_TIM_RELOAD_Msk (0xffffffUL)            /*!< TIMER4 TIMER4_RELOAD_REG: TIM_RELOAD (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER4_TIMER4_SHOTWIDTH_REG  ------------------------ */
#define TIMER4_TIMER4_SHOTWIDTH_REG_TIM_SHOTWIDTH_Pos (0UL)             /*!< TIMER4 TIMER4_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bit 0)          */
#define TIMER4_TIMER4_SHOTWIDTH_REG_TIM_SHOTWIDTH_Msk (0xffffffUL)      /*!< TIMER4 TIMER4_SHOTWIDTH_REG: TIM_SHOTWIDTH (Bitfield-Mask: 0xffffff) */
/* -------------------------  TIMER4_TIMER4_PRESCALER_REG  ------------------------ */
#define TIMER4_TIMER4_PRESCALER_REG_TIM_PRESCALER_Pos (0UL)             /*!< TIMER4 TIMER4_PRESCALER_REG: TIM_PRESCALER (Bit 0)          */
#define TIMER4_TIMER4_PRESCALER_REG_TIM_PRESCALER_Msk (0x1fUL)          /*!< TIMER4 TIMER4_PRESCALER_REG: TIM_PRESCALER (Bitfield-Mask: 0x1f) */
/* -----------------------  TIMER4_TIMER4_CAPTURE_GPIO1_REG  ---------------------- */
#define TIMER4_TIMER4_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Pos (0UL)     /*!< TIMER4 TIMER4_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bit 0)  */
#define TIMER4_TIMER4_CAPTURE_GPIO1_REG_TIM_CAPTURE_GPIO1_Msk (0xffffffUL) /*!< TIMER4 TIMER4_CAPTURE_GPIO1_REG: TIM_CAPTURE_GPIO1 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER4_TIMER4_CAPTURE_GPIO2_REG  ---------------------- */
#define TIMER4_TIMER4_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Pos (0UL)     /*!< TIMER4 TIMER4_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bit 0)  */
#define TIMER4_TIMER4_CAPTURE_GPIO2_REG_TIM_CAPTURE_GPIO2_Msk (0xffffffUL) /*!< TIMER4 TIMER4_CAPTURE_GPIO2_REG: TIM_CAPTURE_GPIO2 (Bitfield-Mask: 0xffffff) */
/* -----------------------  TIMER4_TIMER4_PRESCALER_VAL_REG  ---------------------- */
#define TIMER4_TIMER4_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Pos (0UL)     /*!< TIMER4 TIMER4_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bit 0)  */
#define TIMER4_TIMER4_PRESCALER_VAL_REG_TIM_PRESCALER_VAL_Msk (0x1fUL)  /*!< TIMER4 TIMER4_PRESCALER_VAL_REG: TIM_PRESCALER_VAL (Bitfield-Mask: 0x1f) */
/* -------------------------  TIMER4_TIMER4_PWM_FREQ_REG  ------------------------- */
#define TIMER4_TIMER4_PWM_FREQ_REG_TIM_PWM_FREQ_Pos (0UL)               /*!< TIMER4 TIMER4_PWM_FREQ_REG: TIM_PWM_FREQ (Bit 0)            */
#define TIMER4_TIMER4_PWM_FREQ_REG_TIM_PWM_FREQ_Msk (0xffffUL)          /*!< TIMER4 TIMER4_PWM_FREQ_REG: TIM_PWM_FREQ (Bitfield-Mask: 0xffff) */
/* --------------------------  TIMER4_TIMER4_PWM_DC_REG  -------------------------- */
#define TIMER4_TIMER4_PWM_DC_REG_TIM_PWM_DC_Pos (0UL)                   /*!< TIMER4 TIMER4_PWM_DC_REG: TIM_PWM_DC (Bit 0)                */
#define TIMER4_TIMER4_PWM_DC_REG_TIM_PWM_DC_Msk (0xffffUL)              /*!< TIMER4 TIMER4_PWM_DC_REG: TIM_PWM_DC (Bitfield-Mask: 0xffff) */
/* -------------------------  TIMER4_TIMER4_CLEAR_IRQ_REG  ------------------------ */
#define TIMER4_TIMER4_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Pos (0UL)             /*!< TIMER4 TIMER4_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bit 0)          */
#define TIMER4_TIMER4_CLEAR_IRQ_REG_TIM_CLEAR_IRQ_Msk (0x1UL)           /*!< TIMER4 TIMER4_CLEAR_IRQ_REG: TIM_CLEAR_IRQ (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================          struct 'TRNG' Position & Mask         ================ */
/* ================================================================================ */
/* -----------------------------  TRNG_TRNG_CTRL_REG  ----------------------------- */
#define TRNG_TRNG_CTRL_REG_TRNG_ENABLE_Pos    (0UL)                     /*!< TRNG TRNG_CTRL_REG: TRNG_ENABLE (Bit 0)                     */
#define TRNG_TRNG_CTRL_REG_TRNG_ENABLE_Msk    (0x1UL)                   /*!< TRNG TRNG_CTRL_REG: TRNG_ENABLE (Bitfield-Mask: 0x01)       */
/* ----------------------------  TRNG_TRNG_FIFOLVL_REG  --------------------------- */
#define TRNG_TRNG_FIFOLVL_REG_TRNG_FIFOLVL_Pos (0UL)                    /*!< TRNG TRNG_FIFOLVL_REG: TRNG_FIFOLVL (Bit 0)                 */
#define TRNG_TRNG_FIFOLVL_REG_TRNG_FIFOLVL_Msk (0x1fUL)                 /*!< TRNG TRNG_FIFOLVL_REG: TRNG_FIFOLVL (Bitfield-Mask: 0x1f)   */
#define TRNG_TRNG_FIFOLVL_REG_TRNG_FIFOFULL_Pos (5UL)                   /*!< TRNG TRNG_FIFOLVL_REG: TRNG_FIFOFULL (Bit 5)                */
#define TRNG_TRNG_FIFOLVL_REG_TRNG_FIFOFULL_Msk (0x20UL)                /*!< TRNG TRNG_FIFOLVL_REG: TRNG_FIFOFULL (Bitfield-Mask: 0x01)  */
/* ------------------------------  TRNG_TRNG_VER_REG  ----------------------------- */
#define TRNG_TRNG_VER_REG_TRNG_SVN_Pos        (0UL)                     /*!< TRNG TRNG_VER_REG: TRNG_SVN (Bit 0)                         */
#define TRNG_TRNG_VER_REG_TRNG_SVN_Msk        (0xffffUL)                /*!< TRNG TRNG_VER_REG: TRNG_SVN (Bitfield-Mask: 0xffff)         */
#define TRNG_TRNG_VER_REG_TRNG_MIN_Pos        (16UL)                    /*!< TRNG TRNG_VER_REG: TRNG_MIN (Bit 16)                        */
#define TRNG_TRNG_VER_REG_TRNG_MIN_Msk        (0xff0000UL)              /*!< TRNG TRNG_VER_REG: TRNG_MIN (Bitfield-Mask: 0xff)           */
#define TRNG_TRNG_VER_REG_TRNG_MAJ_Pos        (24UL)                    /*!< TRNG TRNG_VER_REG: TRNG_MAJ (Bit 24)                        */
#define TRNG_TRNG_VER_REG_TRNG_MAJ_Msk        (0xff000000UL)            /*!< TRNG TRNG_VER_REG: TRNG_MAJ (Bitfield-Mask: 0xff)           */
/* ================================================================================ */
/* ================          struct 'UART' Position & Mask         ================ */
/* ================================================================================ */
/* --------------------------  UART_UART_RBR_THR_DLL_REG  ------------------------- */
#define UART_UART_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)                 /*!< UART UART_RBR_THR_DLL_REG: RBR_THR_DLL (Bit 0)              */
#define UART_UART_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)              /*!< UART UART_RBR_THR_DLL_REG: RBR_THR_DLL (Bitfield-Mask: 0xff) */
/* ----------------------------  UART_UART_IER_DLH_REG  --------------------------- */
#define UART_UART_IER_DLH_REG_ERBFI_DLH0_Pos  (0UL)                     /*!< UART UART_IER_DLH_REG: ERBFI_DLH0 (Bit 0)                   */
#define UART_UART_IER_DLH_REG_ERBFI_DLH0_Msk  (0x1UL)                   /*!< UART UART_IER_DLH_REG: ERBFI_DLH0 (Bitfield-Mask: 0x01)     */
#define UART_UART_IER_DLH_REG_ETBEI_DLH1_Pos  (1UL)                     /*!< UART UART_IER_DLH_REG: ETBEI_DLH1 (Bit 1)                   */
#define UART_UART_IER_DLH_REG_ETBEI_DLH1_Msk  (0x2UL)                   /*!< UART UART_IER_DLH_REG: ETBEI_DLH1 (Bitfield-Mask: 0x01)     */
#define UART_UART_IER_DLH_REG_ELSI_DLH2_Pos   (2UL)                     /*!< UART UART_IER_DLH_REG: ELSI_DLH2 (Bit 2)                    */
#define UART_UART_IER_DLH_REG_ELSI_DLH2_Msk   (0x4UL)                   /*!< UART UART_IER_DLH_REG: ELSI_DLH2 (Bitfield-Mask: 0x01)      */
#define UART_UART_IER_DLH_REG_EDSSI_DLH3_Pos  (3UL)                     /*!< UART UART_IER_DLH_REG: EDSSI_DLH3 (Bit 3)                   */
#define UART_UART_IER_DLH_REG_EDSSI_DLH3_Msk  (0x8UL)                   /*!< UART UART_IER_DLH_REG: EDSSI_DLH3 (Bitfield-Mask: 0x01)     */
#define UART_UART_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)                     /*!< UART UART_IER_DLH_REG: ELCOLR_DLH4 (Bit 4)                  */
#define UART_UART_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)                  /*!< UART UART_IER_DLH_REG: ELCOLR_DLH4 (Bitfield-Mask: 0x01)    */
#define UART_UART_IER_DLH_REG_DLH6_5_Pos      (5UL)                     /*!< UART UART_IER_DLH_REG: DLH6_5 (Bit 5)                       */
#define UART_UART_IER_DLH_REG_DLH6_5_Msk      (0x60UL)                  /*!< UART UART_IER_DLH_REG: DLH6_5 (Bitfield-Mask: 0x03)         */
#define UART_UART_IER_DLH_REG_PTIME_DLH7_Pos  (7UL)                     /*!< UART UART_IER_DLH_REG: PTIME_DLH7 (Bit 7)                   */
#define UART_UART_IER_DLH_REG_PTIME_DLH7_Msk  (0x80UL)                  /*!< UART UART_IER_DLH_REG: PTIME_DLH7 (Bitfield-Mask: 0x01)     */
/* ----------------------------  UART_UART_IIR_FCR_REG  --------------------------- */
#define UART_UART_IIR_FCR_REG_IIR_FCR_Pos     (0UL)                     /*!< UART UART_IIR_FCR_REG: IIR_FCR (Bit 0)                      */
#define UART_UART_IIR_FCR_REG_IIR_FCR_Msk     (0xffUL)                  /*!< UART UART_IIR_FCR_REG: IIR_FCR (Bitfield-Mask: 0xff)        */
/* ------------------------------  UART_UART_LCR_REG  ----------------------------- */
#define UART_UART_LCR_REG_UART_DLS_Pos        (0UL)                     /*!< UART UART_LCR_REG: UART_DLS (Bit 0)                         */
#define UART_UART_LCR_REG_UART_DLS_Msk        (0x3UL)                   /*!< UART UART_LCR_REG: UART_DLS (Bitfield-Mask: 0x03)           */
#define UART_UART_LCR_REG_UART_STOP_Pos       (2UL)                     /*!< UART UART_LCR_REG: UART_STOP (Bit 2)                        */
#define UART_UART_LCR_REG_UART_STOP_Msk       (0x4UL)                   /*!< UART UART_LCR_REG: UART_STOP (Bitfield-Mask: 0x01)          */
#define UART_UART_LCR_REG_UART_PEN_Pos        (3UL)                     /*!< UART UART_LCR_REG: UART_PEN (Bit 3)                         */
#define UART_UART_LCR_REG_UART_PEN_Msk        (0x8UL)                   /*!< UART UART_LCR_REG: UART_PEN (Bitfield-Mask: 0x01)           */
#define UART_UART_LCR_REG_UART_EPS_Pos        (4UL)                     /*!< UART UART_LCR_REG: UART_EPS (Bit 4)                         */
#define UART_UART_LCR_REG_UART_EPS_Msk        (0x10UL)                  /*!< UART UART_LCR_REG: UART_EPS (Bitfield-Mask: 0x01)           */
#define UART_UART_LCR_REG_UART_BC_Pos         (6UL)                     /*!< UART UART_LCR_REG: UART_BC (Bit 6)                          */
#define UART_UART_LCR_REG_UART_BC_Msk         (0x40UL)                  /*!< UART UART_LCR_REG: UART_BC (Bitfield-Mask: 0x01)            */
#define UART_UART_LCR_REG_UART_DLAB_Pos       (7UL)                     /*!< UART UART_LCR_REG: UART_DLAB (Bit 7)                        */
#define UART_UART_LCR_REG_UART_DLAB_Msk       (0x80UL)                  /*!< UART UART_LCR_REG: UART_DLAB (Bitfield-Mask: 0x01)          */
/* ------------------------------  UART_UART_MCR_REG  ----------------------------- */
#define UART_UART_MCR_REG_UART_LB_Pos         (4UL)                     /*!< UART UART_MCR_REG: UART_LB (Bit 4)                          */
#define UART_UART_MCR_REG_UART_LB_Msk         (0x10UL)                  /*!< UART UART_MCR_REG: UART_LB (Bitfield-Mask: 0x01)            */
/* ------------------------------  UART_UART_LSR_REG  ----------------------------- */
#define UART_UART_LSR_REG_UART_DR_Pos         (0UL)                     /*!< UART UART_LSR_REG: UART_DR (Bit 0)                          */
#define UART_UART_LSR_REG_UART_DR_Msk         (0x1UL)                   /*!< UART UART_LSR_REG: UART_DR (Bitfield-Mask: 0x01)            */
#define UART_UART_LSR_REG_UART_OE_Pos         (1UL)                     /*!< UART UART_LSR_REG: UART_OE (Bit 1)                          */
#define UART_UART_LSR_REG_UART_OE_Msk         (0x2UL)                   /*!< UART UART_LSR_REG: UART_OE (Bitfield-Mask: 0x01)            */
#define UART_UART_LSR_REG_UART_PE_Pos         (2UL)                     /*!< UART UART_LSR_REG: UART_PE (Bit 2)                          */
#define UART_UART_LSR_REG_UART_PE_Msk         (0x4UL)                   /*!< UART UART_LSR_REG: UART_PE (Bitfield-Mask: 0x01)            */
#define UART_UART_LSR_REG_UART_FE_Pos         (3UL)                     /*!< UART UART_LSR_REG: UART_FE (Bit 3)                          */
#define UART_UART_LSR_REG_UART_FE_Msk         (0x8UL)                   /*!< UART UART_LSR_REG: UART_FE (Bitfield-Mask: 0x01)            */
#define UART_UART_LSR_REG_UART_BI_Pos         (4UL)                     /*!< UART UART_LSR_REG: UART_BI (Bit 4)                          */
#define UART_UART_LSR_REG_UART_BI_Msk         (0x10UL)                  /*!< UART UART_LSR_REG: UART_BI (Bitfield-Mask: 0x01)            */
#define UART_UART_LSR_REG_UART_THRE_Pos       (5UL)                     /*!< UART UART_LSR_REG: UART_THRE (Bit 5)                        */
#define UART_UART_LSR_REG_UART_THRE_Msk       (0x20UL)                  /*!< UART UART_LSR_REG: UART_THRE (Bitfield-Mask: 0x01)          */
#define UART_UART_LSR_REG_UART_TEMT_Pos       (6UL)                     /*!< UART UART_LSR_REG: UART_TEMT (Bit 6)                        */
#define UART_UART_LSR_REG_UART_TEMT_Msk       (0x40UL)                  /*!< UART UART_LSR_REG: UART_TEMT (Bitfield-Mask: 0x01)          */
#define UART_UART_LSR_REG_UART_RFE_Pos        (7UL)                     /*!< UART UART_LSR_REG: UART_RFE (Bit 7)                         */
#define UART_UART_LSR_REG_UART_RFE_Msk        (0x80UL)                  /*!< UART UART_LSR_REG: UART_RFE (Bitfield-Mask: 0x01)           */
/* ------------------------------  UART_UART_SCR_REG  ----------------------------- */
#define UART_UART_SCR_REG_UART_SCRATCH_PAD_Pos (0UL)                    /*!< UART UART_SCR_REG: UART_SCRATCH_PAD (Bit 0)                 */
#define UART_UART_SCR_REG_UART_SCRATCH_PAD_Msk (0xffUL)                 /*!< UART UART_SCR_REG: UART_SCRATCH_PAD (Bitfield-Mask: 0xff)   */
/* --------------------------  UART_UART_SRBR_STHR0_REG  -------------------------- */
#define UART_UART_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR0_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR0_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR1_REG  -------------------------- */
#define UART_UART_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR1_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR1_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR2_REG  -------------------------- */
#define UART_UART_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR2_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR2_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR3_REG  -------------------------- */
#define UART_UART_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR3_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR3_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR4_REG  -------------------------- */
#define UART_UART_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR4_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR4_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR5_REG  -------------------------- */
#define UART_UART_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR5_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR5_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR6_REG  -------------------------- */
#define UART_UART_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR6_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR6_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR7_REG  -------------------------- */
#define UART_UART_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR7_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR7_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR8_REG  -------------------------- */
#define UART_UART_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR8_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR8_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR9_REG  -------------------------- */
#define UART_UART_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)                   /*!< UART UART_SRBR_STHR9_REG: SRBR_STHRx (Bit 0)                */
#define UART_UART_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)                /*!< UART UART_SRBR_STHR9_REG: SRBR_STHRx (Bitfield-Mask: 0xff)  */
/* --------------------------  UART_UART_SRBR_STHR10_REG  ------------------------- */
#define UART_UART_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR10_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR10_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* --------------------------  UART_UART_SRBR_STHR11_REG  ------------------------- */
#define UART_UART_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR11_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR11_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* --------------------------  UART_UART_SRBR_STHR12_REG  ------------------------- */
#define UART_UART_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR12_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR12_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* --------------------------  UART_UART_SRBR_STHR13_REG  ------------------------- */
#define UART_UART_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR13_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR13_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* --------------------------  UART_UART_SRBR_STHR14_REG  ------------------------- */
#define UART_UART_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR14_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR14_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* --------------------------  UART_UART_SRBR_STHR15_REG  ------------------------- */
#define UART_UART_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)                  /*!< UART UART_SRBR_STHR15_REG: SRBR_STHRx (Bit 0)               */
#define UART_UART_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)               /*!< UART UART_SRBR_STHR15_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* ------------------------------  UART_UART_USR_REG  ----------------------------- */
#define UART_UART_USR_REG_UART_BUSY_Pos       (0UL)                     /*!< UART UART_USR_REG: UART_BUSY (Bit 0)                        */
#define UART_UART_USR_REG_UART_BUSY_Msk       (0x1UL)                   /*!< UART UART_USR_REG: UART_BUSY (Bitfield-Mask: 0x01)          */
#define UART_UART_USR_REG_UART_TFNF_Pos       (1UL)                     /*!< UART UART_USR_REG: UART_TFNF (Bit 1)                        */
#define UART_UART_USR_REG_UART_TFNF_Msk       (0x2UL)                   /*!< UART UART_USR_REG: UART_TFNF (Bitfield-Mask: 0x01)          */
#define UART_UART_USR_REG_UART_TFE_Pos        (2UL)                     /*!< UART UART_USR_REG: UART_TFE (Bit 2)                         */
#define UART_UART_USR_REG_UART_TFE_Msk        (0x4UL)                   /*!< UART UART_USR_REG: UART_TFE (Bitfield-Mask: 0x01)           */
#define UART_UART_USR_REG_UART_RFNE_Pos       (3UL)                     /*!< UART UART_USR_REG: UART_RFNE (Bit 3)                        */
#define UART_UART_USR_REG_UART_RFNE_Msk       (0x8UL)                   /*!< UART UART_USR_REG: UART_RFNE (Bitfield-Mask: 0x01)          */
#define UART_UART_USR_REG_UART_RFF_Pos        (4UL)                     /*!< UART UART_USR_REG: UART_RFF (Bit 4)                         */
#define UART_UART_USR_REG_UART_RFF_Msk        (0x10UL)                  /*!< UART UART_USR_REG: UART_RFF (Bitfield-Mask: 0x01)           */
/* ------------------------------  UART_UART_TFL_REG  ----------------------------- */
#define UART_UART_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)            /*!< UART UART_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bit 0)         */
#define UART_UART_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)         /*!< UART UART_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* ------------------------------  UART_UART_RFL_REG  ----------------------------- */
#define UART_UART_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)             /*!< UART UART_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bit 0)          */
#define UART_UART_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)          /*!< UART UART_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* ------------------------------  UART_UART_SRR_REG  ----------------------------- */
#define UART_UART_SRR_REG_UART_UR_Pos         (0UL)                     /*!< UART UART_SRR_REG: UART_UR (Bit 0)                          */
#define UART_UART_SRR_REG_UART_UR_Msk         (0x1UL)                   /*!< UART UART_SRR_REG: UART_UR (Bitfield-Mask: 0x01)            */
#define UART_UART_SRR_REG_UART_RFR_Pos        (1UL)                     /*!< UART UART_SRR_REG: UART_RFR (Bit 1)                         */
#define UART_UART_SRR_REG_UART_RFR_Msk        (0x2UL)                   /*!< UART UART_SRR_REG: UART_RFR (Bitfield-Mask: 0x01)           */
#define UART_UART_SRR_REG_UART_XFR_Pos        (2UL)                     /*!< UART UART_SRR_REG: UART_XFR (Bit 2)                         */
#define UART_UART_SRR_REG_UART_XFR_Msk        (0x4UL)                   /*!< UART UART_SRR_REG: UART_XFR (Bitfield-Mask: 0x01)           */
/* -----------------------------  UART_UART_SBCR_REG  ----------------------------- */
#define UART_UART_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)          /*!< UART UART_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bit 0)       */
#define UART_UART_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)        /*!< UART UART_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01) */
/* -----------------------------  UART_UART_SDMAM_REG  ---------------------------- */
#define UART_UART_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)              /*!< UART UART_SDMAM_REG: UART_SHADOW_DMA_MODE (Bit 0)           */
#define UART_UART_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)            /*!< UART UART_SDMAM_REG: UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01) */
/* ------------------------------  UART_UART_SFE_REG  ----------------------------- */
#define UART_UART_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)             /*!< UART UART_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bit 0)          */
#define UART_UART_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)           /*!< UART UART_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01) */
/* ------------------------------  UART_UART_SRT_REG  ----------------------------- */
#define UART_UART_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)            /*!< UART UART_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bit 0)         */
#define UART_UART_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)          /*!< UART UART_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03) */
/* -----------------------------  UART_UART_STET_REG  ----------------------------- */
#define UART_UART_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL)       /*!< UART UART_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)    */
#define UART_UART_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL)     /*!< UART UART_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03) */
/* ------------------------------  UART_UART_HTX_REG  ----------------------------- */
#define UART_UART_HTX_REG_UART_HALT_TX_Pos    (0UL)                     /*!< UART UART_HTX_REG: UART_HALT_TX (Bit 0)                     */
#define UART_UART_HTX_REG_UART_HALT_TX_Msk    (0x1UL)                   /*!< UART UART_HTX_REG: UART_HALT_TX (Bitfield-Mask: 0x01)       */
/* -----------------------------  UART_UART_DMASA_REG  ---------------------------- */
#define UART_UART_DMASA_REG_UART_DMASA_Pos    (0UL)                     /*!< UART UART_DMASA_REG: UART_DMASA (Bit 0)                     */
#define UART_UART_DMASA_REG_UART_DMASA_Msk    (0x1UL)                   /*!< UART UART_DMASA_REG: UART_DMASA (Bitfield-Mask: 0x01)       */
/* ------------------------------  UART_UART_DLF_REG  ----------------------------- */
#define UART_UART_DLF_REG_UART_DLF_Pos        (0UL)                     /*!< UART UART_DLF_REG: UART_DLF (Bit 0)                         */
#define UART_UART_DLF_REG_UART_DLF_Msk        (0xfUL)                   /*!< UART UART_DLF_REG: UART_DLF (Bitfield-Mask: 0x0f)           */
/* ------------------------------  UART_UART_UCV_REG  ----------------------------- */
#define UART_UART_UCV_REG_UART_UCV_Pos        (0UL)                     /*!< UART UART_UCV_REG: UART_UCV (Bit 0)                         */
#define UART_UART_UCV_REG_UART_UCV_Msk        (0xffffffffUL)            /*!< UART UART_UCV_REG: UART_UCV (Bitfield-Mask: 0xffffffff)     */
/* ------------------------------  UART_UART_CTR_REG  ----------------------------- */
#define UART_UART_CTR_REG_UART_CTR_Pos        (0UL)                     /*!< UART UART_CTR_REG: UART_CTR (Bit 0)                         */
#define UART_UART_CTR_REG_UART_CTR_Msk        (0xffffffffUL)            /*!< UART UART_CTR_REG: UART_CTR (Bitfield-Mask: 0xffffffff)     */
/* ================================================================================ */
/* ================         struct 'UART2' Position & Mask         ================ */
/* ================================================================================ */
/* -------------------------  UART2_UART2_RBR_THR_DLL_REG  ------------------------ */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)               /*!< UART2 UART2_RBR_THR_DLL_REG: RBR_THR_DLL (Bit 0)            */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)            /*!< UART2 UART2_RBR_THR_DLL_REG: RBR_THR_DLL (Bitfield-Mask: 0xff) */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_9BIT_Pos (8UL)              /*!< UART2 UART2_RBR_THR_DLL_REG: RBR_THR_9BIT (Bit 8)           */
#define UART2_UART2_RBR_THR_DLL_REG_RBR_THR_9BIT_Msk (0x100UL)          /*!< UART2 UART2_RBR_THR_DLL_REG: RBR_THR_9BIT (Bitfield-Mask: 0x01) */
/* ---------------------------  UART2_UART2_IER_DLH_REG  -------------------------- */
#define UART2_UART2_IER_DLH_REG_ERBFI_DLH0_Pos (0UL)                    /*!< UART2 UART2_IER_DLH_REG: ERBFI_DLH0 (Bit 0)                 */
#define UART2_UART2_IER_DLH_REG_ERBFI_DLH0_Msk (0x1UL)                  /*!< UART2 UART2_IER_DLH_REG: ERBFI_DLH0 (Bitfield-Mask: 0x01)   */
#define UART2_UART2_IER_DLH_REG_ETBEI_DLH1_Pos (1UL)                    /*!< UART2 UART2_IER_DLH_REG: ETBEI_DLH1 (Bit 1)                 */
#define UART2_UART2_IER_DLH_REG_ETBEI_DLH1_Msk (0x2UL)                  /*!< UART2 UART2_IER_DLH_REG: ETBEI_DLH1 (Bitfield-Mask: 0x01)   */
#define UART2_UART2_IER_DLH_REG_ELSI_DLH2_Pos (2UL)                     /*!< UART2 UART2_IER_DLH_REG: ELSI_DLH2 (Bit 2)                  */
#define UART2_UART2_IER_DLH_REG_ELSI_DLH2_Msk (0x4UL)                   /*!< UART2 UART2_IER_DLH_REG: ELSI_DLH2 (Bitfield-Mask: 0x01)    */
#define UART2_UART2_IER_DLH_REG_EDSSI_DLH3_Pos (3UL)                    /*!< UART2 UART2_IER_DLH_REG: EDSSI_DLH3 (Bit 3)                 */
#define UART2_UART2_IER_DLH_REG_EDSSI_DLH3_Msk (0x8UL)                  /*!< UART2 UART2_IER_DLH_REG: EDSSI_DLH3 (Bitfield-Mask: 0x01)   */
#define UART2_UART2_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)                   /*!< UART2 UART2_IER_DLH_REG: ELCOLR_DLH4 (Bit 4)                */
#define UART2_UART2_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)                /*!< UART2 UART2_IER_DLH_REG: ELCOLR_DLH4 (Bitfield-Mask: 0x01)  */
#define UART2_UART2_IER_DLH_REG_DLH6_5_Pos    (5UL)                     /*!< UART2 UART2_IER_DLH_REG: DLH6_5 (Bit 5)                     */
#define UART2_UART2_IER_DLH_REG_DLH6_5_Msk    (0x60UL)                  /*!< UART2 UART2_IER_DLH_REG: DLH6_5 (Bitfield-Mask: 0x03)       */
#define UART2_UART2_IER_DLH_REG_PTIME_DLH7_Pos (7UL)                    /*!< UART2 UART2_IER_DLH_REG: PTIME_DLH7 (Bit 7)                 */
#define UART2_UART2_IER_DLH_REG_PTIME_DLH7_Msk (0x80UL)                 /*!< UART2 UART2_IER_DLH_REG: PTIME_DLH7 (Bitfield-Mask: 0x01)   */
/* ---------------------------  UART2_UART2_IIR_FCR_REG  -------------------------- */
#define UART2_UART2_IIR_FCR_REG_IIR_FCR_Pos   (0UL)                     /*!< UART2 UART2_IIR_FCR_REG: IIR_FCR (Bit 0)                    */
#define UART2_UART2_IIR_FCR_REG_IIR_FCR_Msk   (0xffUL)                  /*!< UART2 UART2_IIR_FCR_REG: IIR_FCR (Bitfield-Mask: 0xff)      */
/* -----------------------------  UART2_UART2_LCR_REG  ---------------------------- */
#define UART2_UART2_LCR_REG_UART_DLS_Pos      (0UL)                     /*!< UART2 UART2_LCR_REG: UART_DLS (Bit 0)                       */
#define UART2_UART2_LCR_REG_UART_DLS_Msk      (0x3UL)                   /*!< UART2 UART2_LCR_REG: UART_DLS (Bitfield-Mask: 0x03)         */
#define UART2_UART2_LCR_REG_UART_STOP_Pos     (2UL)                     /*!< UART2 UART2_LCR_REG: UART_STOP (Bit 2)                      */
#define UART2_UART2_LCR_REG_UART_STOP_Msk     (0x4UL)                   /*!< UART2 UART2_LCR_REG: UART_STOP (Bitfield-Mask: 0x01)        */
#define UART2_UART2_LCR_REG_UART_PEN_Pos      (3UL)                     /*!< UART2 UART2_LCR_REG: UART_PEN (Bit 3)                       */
#define UART2_UART2_LCR_REG_UART_PEN_Msk      (0x8UL)                   /*!< UART2 UART2_LCR_REG: UART_PEN (Bitfield-Mask: 0x01)         */
#define UART2_UART2_LCR_REG_UART_EPS_Pos      (4UL)                     /*!< UART2 UART2_LCR_REG: UART_EPS (Bit 4)                       */
#define UART2_UART2_LCR_REG_UART_EPS_Msk      (0x10UL)                  /*!< UART2 UART2_LCR_REG: UART_EPS (Bitfield-Mask: 0x01)         */
#define UART2_UART2_LCR_REG_UART_SP_Pos       (5UL)                     /*!< UART2 UART2_LCR_REG: UART_SP (Bit 5)                        */
#define UART2_UART2_LCR_REG_UART_SP_Msk       (0x20UL)                  /*!< UART2 UART2_LCR_REG: UART_SP (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LCR_REG_UART_BC_Pos       (6UL)                     /*!< UART2 UART2_LCR_REG: UART_BC (Bit 6)                        */
#define UART2_UART2_LCR_REG_UART_BC_Msk       (0x40UL)                  /*!< UART2 UART2_LCR_REG: UART_BC (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LCR_REG_UART_DLAB_Pos     (7UL)                     /*!< UART2 UART2_LCR_REG: UART_DLAB (Bit 7)                      */
#define UART2_UART2_LCR_REG_UART_DLAB_Msk     (0x80UL)                  /*!< UART2 UART2_LCR_REG: UART_DLAB (Bitfield-Mask: 0x01)        */
/* -----------------------------  UART2_UART2_MCR_REG  ---------------------------- */
#define UART2_UART2_MCR_REG_UART_RTS_Pos      (1UL)                     /*!< UART2 UART2_MCR_REG: UART_RTS (Bit 1)                       */
#define UART2_UART2_MCR_REG_UART_RTS_Msk      (0x2UL)                   /*!< UART2 UART2_MCR_REG: UART_RTS (Bitfield-Mask: 0x01)         */
#define UART2_UART2_MCR_REG_UART_LB_Pos       (4UL)                     /*!< UART2 UART2_MCR_REG: UART_LB (Bit 4)                        */
#define UART2_UART2_MCR_REG_UART_LB_Msk       (0x10UL)                  /*!< UART2 UART2_MCR_REG: UART_LB (Bitfield-Mask: 0x01)          */
#define UART2_UART2_MCR_REG_UART_AFCE_Pos     (5UL)                     /*!< UART2 UART2_MCR_REG: UART_AFCE (Bit 5)                      */
#define UART2_UART2_MCR_REG_UART_AFCE_Msk     (0x20UL)                  /*!< UART2 UART2_MCR_REG: UART_AFCE (Bitfield-Mask: 0x01)        */
/* -----------------------------  UART2_UART2_LSR_REG  ---------------------------- */
#define UART2_UART2_LSR_REG_UART_DR_Pos       (0UL)                     /*!< UART2 UART2_LSR_REG: UART_DR (Bit 0)                        */
#define UART2_UART2_LSR_REG_UART_DR_Msk       (0x1UL)                   /*!< UART2 UART2_LSR_REG: UART_DR (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LSR_REG_UART_OE_Pos       (1UL)                     /*!< UART2 UART2_LSR_REG: UART_OE (Bit 1)                        */
#define UART2_UART2_LSR_REG_UART_OE_Msk       (0x2UL)                   /*!< UART2 UART2_LSR_REG: UART_OE (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LSR_REG_UART_PE_Pos       (2UL)                     /*!< UART2 UART2_LSR_REG: UART_PE (Bit 2)                        */
#define UART2_UART2_LSR_REG_UART_PE_Msk       (0x4UL)                   /*!< UART2 UART2_LSR_REG: UART_PE (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LSR_REG_UART_FE_Pos       (3UL)                     /*!< UART2 UART2_LSR_REG: UART_FE (Bit 3)                        */
#define UART2_UART2_LSR_REG_UART_FE_Msk       (0x8UL)                   /*!< UART2 UART2_LSR_REG: UART_FE (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LSR_REG_UART_BI_Pos       (4UL)                     /*!< UART2 UART2_LSR_REG: UART_BI (Bit 4)                        */
#define UART2_UART2_LSR_REG_UART_BI_Msk       (0x10UL)                  /*!< UART2 UART2_LSR_REG: UART_BI (Bitfield-Mask: 0x01)          */
#define UART2_UART2_LSR_REG_UART_THRE_Pos     (5UL)                     /*!< UART2 UART2_LSR_REG: UART_THRE (Bit 5)                      */
#define UART2_UART2_LSR_REG_UART_THRE_Msk     (0x20UL)                  /*!< UART2 UART2_LSR_REG: UART_THRE (Bitfield-Mask: 0x01)        */
#define UART2_UART2_LSR_REG_UART_TEMT_Pos     (6UL)                     /*!< UART2 UART2_LSR_REG: UART_TEMT (Bit 6)                      */
#define UART2_UART2_LSR_REG_UART_TEMT_Msk     (0x40UL)                  /*!< UART2 UART2_LSR_REG: UART_TEMT (Bitfield-Mask: 0x01)        */
#define UART2_UART2_LSR_REG_UART_RFE_Pos      (7UL)                     /*!< UART2 UART2_LSR_REG: UART_RFE (Bit 7)                       */
#define UART2_UART2_LSR_REG_UART_RFE_Msk      (0x80UL)                  /*!< UART2 UART2_LSR_REG: UART_RFE (Bitfield-Mask: 0x01)         */
#define UART2_UART2_LSR_REG_UART_ADDR_RCVD_Pos (8UL)                    /*!< UART2 UART2_LSR_REG: UART_ADDR_RCVD (Bit 8)                 */
#define UART2_UART2_LSR_REG_UART_ADDR_RCVD_Msk (0x100UL)                /*!< UART2 UART2_LSR_REG: UART_ADDR_RCVD (Bitfield-Mask: 0x01)   */
/* -----------------------------  UART2_UART2_MSR_REG  ---------------------------- */
#define UART2_UART2_MSR_REG_UART_DCTS_Pos     (0UL)                     /*!< UART2 UART2_MSR_REG: UART_DCTS (Bit 0)                      */
#define UART2_UART2_MSR_REG_UART_DCTS_Msk     (0x1UL)                   /*!< UART2 UART2_MSR_REG: UART_DCTS (Bitfield-Mask: 0x01)        */
#define UART2_UART2_MSR_REG_UART_CTS_Pos      (4UL)                     /*!< UART2 UART2_MSR_REG: UART_CTS (Bit 4)                       */
#define UART2_UART2_MSR_REG_UART_CTS_Msk      (0x10UL)                  /*!< UART2 UART2_MSR_REG: UART_CTS (Bitfield-Mask: 0x01)         */
/* -----------------------------  UART2_UART2_SCR_REG  ---------------------------- */
#define UART2_UART2_SCR_REG_UART_SCRATCH_PAD_Pos (0UL)                  /*!< UART2 UART2_SCR_REG: UART_SCRATCH_PAD (Bit 0)               */
#define UART2_UART2_SCR_REG_UART_SCRATCH_PAD_Msk (0xffUL)               /*!< UART2 UART2_SCR_REG: UART_SCRATCH_PAD (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR0_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR0_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR0_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR1_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR1_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR1_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR2_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR2_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR2_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR3_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR3_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR3_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR4_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR4_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR4_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR5_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR5_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR5_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR6_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR6_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR6_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR7_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR7_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR7_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR8_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR8_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR8_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR9_REG  ------------------------- */
#define UART2_UART2_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART2 UART2_SRBR_STHR9_REG: SRBR_STHRx (Bit 0)              */
#define UART2_UART2_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART2 UART2_SRBR_STHR9_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR10_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR10_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR10_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR11_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR11_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR11_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR12_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR12_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR12_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR13_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR13_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR13_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR14_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR14_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR14_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART2_UART2_SRBR_STHR15_REG  ------------------------ */
#define UART2_UART2_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)                /*!< UART2 UART2_SRBR_STHR15_REG: SRBR_STHRx (Bit 0)             */
#define UART2_UART2_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART2 UART2_SRBR_STHR15_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -----------------------------  UART2_UART2_USR_REG  ---------------------------- */
#define UART2_UART2_USR_REG_UART_BUSY_Pos     (0UL)                     /*!< UART2 UART2_USR_REG: UART_BUSY (Bit 0)                      */
#define UART2_UART2_USR_REG_UART_BUSY_Msk     (0x1UL)                   /*!< UART2 UART2_USR_REG: UART_BUSY (Bitfield-Mask: 0x01)        */
#define UART2_UART2_USR_REG_UART_TFNF_Pos     (1UL)                     /*!< UART2 UART2_USR_REG: UART_TFNF (Bit 1)                      */
#define UART2_UART2_USR_REG_UART_TFNF_Msk     (0x2UL)                   /*!< UART2 UART2_USR_REG: UART_TFNF (Bitfield-Mask: 0x01)        */
#define UART2_UART2_USR_REG_UART_TFE_Pos      (2UL)                     /*!< UART2 UART2_USR_REG: UART_TFE (Bit 2)                       */
#define UART2_UART2_USR_REG_UART_TFE_Msk      (0x4UL)                   /*!< UART2 UART2_USR_REG: UART_TFE (Bitfield-Mask: 0x01)         */
#define UART2_UART2_USR_REG_UART_RFNE_Pos     (3UL)                     /*!< UART2 UART2_USR_REG: UART_RFNE (Bit 3)                      */
#define UART2_UART2_USR_REG_UART_RFNE_Msk     (0x8UL)                   /*!< UART2 UART2_USR_REG: UART_RFNE (Bitfield-Mask: 0x01)        */
#define UART2_UART2_USR_REG_UART_RFF_Pos      (4UL)                     /*!< UART2 UART2_USR_REG: UART_RFF (Bit 4)                       */
#define UART2_UART2_USR_REG_UART_RFF_Msk      (0x10UL)                  /*!< UART2 UART2_USR_REG: UART_RFF (Bitfield-Mask: 0x01)         */
/* -----------------------------  UART2_UART2_TFL_REG  ---------------------------- */
#define UART2_UART2_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)          /*!< UART2 UART2_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bit 0)       */
#define UART2_UART2_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)       /*!< UART2 UART2_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* -----------------------------  UART2_UART2_RFL_REG  ---------------------------- */
#define UART2_UART2_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)           /*!< UART2 UART2_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bit 0)        */
#define UART2_UART2_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)        /*!< UART2 UART2_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* -----------------------------  UART2_UART2_SRR_REG  ---------------------------- */
#define UART2_UART2_SRR_REG_UART_UR_Pos       (0UL)                     /*!< UART2 UART2_SRR_REG: UART_UR (Bit 0)                        */
#define UART2_UART2_SRR_REG_UART_UR_Msk       (0x1UL)                   /*!< UART2 UART2_SRR_REG: UART_UR (Bitfield-Mask: 0x01)          */
#define UART2_UART2_SRR_REG_UART_RFR_Pos      (1UL)                     /*!< UART2 UART2_SRR_REG: UART_RFR (Bit 1)                       */
#define UART2_UART2_SRR_REG_UART_RFR_Msk      (0x2UL)                   /*!< UART2 UART2_SRR_REG: UART_RFR (Bitfield-Mask: 0x01)         */
#define UART2_UART2_SRR_REG_UART_XFR_Pos      (2UL)                     /*!< UART2 UART2_SRR_REG: UART_XFR (Bit 2)                       */
#define UART2_UART2_SRR_REG_UART_XFR_Msk      (0x4UL)                   /*!< UART2 UART2_SRR_REG: UART_XFR (Bitfield-Mask: 0x01)         */
/* ----------------------------  UART2_UART2_SRTS_REG  ---------------------------- */
#define UART2_UART2_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Pos (0UL)      /*!< UART2 UART2_SRTS_REG: UART_SHADOW_REQUEST_TO_SEND (Bit 0)   */
#define UART2_UART2_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Msk (0x1UL)    /*!< UART2 UART2_SRTS_REG: UART_SHADOW_REQUEST_TO_SEND (Bitfield-Mask: 0x01) */
/* ----------------------------  UART2_UART2_SBCR_REG  ---------------------------- */
#define UART2_UART2_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)        /*!< UART2 UART2_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bit 0)     */
#define UART2_UART2_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)      /*!< UART2 UART2_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01) */
/* ----------------------------  UART2_UART2_SDMAM_REG  --------------------------- */
#define UART2_UART2_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)            /*!< UART2 UART2_SDMAM_REG: UART_SHADOW_DMA_MODE (Bit 0)         */
#define UART2_UART2_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)          /*!< UART2 UART2_SDMAM_REG: UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01) */
/* -----------------------------  UART2_UART2_SFE_REG  ---------------------------- */
#define UART2_UART2_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)           /*!< UART2 UART2_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bit 0)        */
#define UART2_UART2_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)         /*!< UART2 UART2_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01) */
/* -----------------------------  UART2_UART2_SRT_REG  ---------------------------- */
#define UART2_UART2_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)          /*!< UART2 UART2_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bit 0)       */
#define UART2_UART2_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)        /*!< UART2 UART2_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03) */
/* ----------------------------  UART2_UART2_STET_REG  ---------------------------- */
#define UART2_UART2_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL)     /*!< UART2 UART2_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)  */
#define UART2_UART2_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL)   /*!< UART2 UART2_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03) */
/* -----------------------------  UART2_UART2_HTX_REG  ---------------------------- */
#define UART2_UART2_HTX_REG_UART_HALT_TX_Pos  (0UL)                     /*!< UART2 UART2_HTX_REG: UART_HALT_TX (Bit 0)                   */
#define UART2_UART2_HTX_REG_UART_HALT_TX_Msk  (0x1UL)                   /*!< UART2 UART2_HTX_REG: UART_HALT_TX (Bitfield-Mask: 0x01)     */
/* ----------------------------  UART2_UART2_DMASA_REG  --------------------------- */
#define UART2_UART2_DMASA_REG_UART_DMASA_Pos  (0UL)                     /*!< UART2 UART2_DMASA_REG: UART_DMASA (Bit 0)                   */
#define UART2_UART2_DMASA_REG_UART_DMASA_Msk  (0x1UL)                   /*!< UART2 UART2_DMASA_REG: UART_DMASA (Bitfield-Mask: 0x01)     */
/* -----------------------------  UART2_UART2_DLF_REG  ---------------------------- */
#define UART2_UART2_DLF_REG_UART_DLF_Pos      (0UL)                     /*!< UART2 UART2_DLF_REG: UART_DLF (Bit 0)                       */
#define UART2_UART2_DLF_REG_UART_DLF_Msk      (0xfUL)                   /*!< UART2 UART2_DLF_REG: UART_DLF (Bitfield-Mask: 0x0f)         */
/* -----------------------------  UART2_UART2_RAR_REG  ---------------------------- */
#define UART2_UART2_RAR_REG_UART_RAR_Pos      (0UL)                     /*!< UART2 UART2_RAR_REG: UART_RAR (Bit 0)                       */
#define UART2_UART2_RAR_REG_UART_RAR_Msk      (0xffUL)                  /*!< UART2 UART2_RAR_REG: UART_RAR (Bitfield-Mask: 0xff)         */
/* -----------------------------  UART2_UART2_TAR_REG  ---------------------------- */
#define UART2_UART2_TAR_REG_UART_TAR_Pos      (0UL)                     /*!< UART2 UART2_TAR_REG: UART_TAR (Bit 0)                       */
#define UART2_UART2_TAR_REG_UART_TAR_Msk      (0xffUL)                  /*!< UART2 UART2_TAR_REG: UART_TAR (Bitfield-Mask: 0xff)         */
/* -----------------------------  UART2_UART2_LCR_EXT  ---------------------------- */
#define UART2_UART2_LCR_EXT_UART_DLS_E_Pos    (0UL)                     /*!< UART2 UART2_LCR_EXT: UART_DLS_E (Bit 0)                     */
#define UART2_UART2_LCR_EXT_UART_DLS_E_Msk    (0x1UL)                   /*!< UART2 UART2_LCR_EXT: UART_DLS_E (Bitfield-Mask: 0x01)       */
#define UART2_UART2_LCR_EXT_UART_ADDR_MATCH_Pos (1UL)                   /*!< UART2 UART2_LCR_EXT: UART_ADDR_MATCH (Bit 1)                */
#define UART2_UART2_LCR_EXT_UART_ADDR_MATCH_Msk (0x2UL)                 /*!< UART2 UART2_LCR_EXT: UART_ADDR_MATCH (Bitfield-Mask: 0x01)  */
#define UART2_UART2_LCR_EXT_UART_SEND_ADDR_Pos (2UL)                    /*!< UART2 UART2_LCR_EXT: UART_SEND_ADDR (Bit 2)                 */
#define UART2_UART2_LCR_EXT_UART_SEND_ADDR_Msk (0x4UL)                  /*!< UART2 UART2_LCR_EXT: UART_SEND_ADDR (Bitfield-Mask: 0x01)   */
#define UART2_UART2_LCR_EXT_UART_TRANSMIT_MODE_Pos (3UL)                /*!< UART2 UART2_LCR_EXT: UART_TRANSMIT_MODE (Bit 3)             */
#define UART2_UART2_LCR_EXT_UART_TRANSMIT_MODE_Msk (0x8UL)              /*!< UART2 UART2_LCR_EXT: UART_TRANSMIT_MODE (Bitfield-Mask: 0x01) */
/* -----------------------------  UART2_UART2_UCV_REG  ---------------------------- */
#define UART2_UART2_UCV_REG_UART_UCV_Pos      (0UL)                     /*!< UART2 UART2_UCV_REG: UART_UCV (Bit 0)                       */
#define UART2_UART2_UCV_REG_UART_UCV_Msk      (0xffffffffUL)            /*!< UART2 UART2_UCV_REG: UART_UCV (Bitfield-Mask: 0xffffffff)   */
/* -----------------------------  UART2_UART2_CTR_REG  ---------------------------- */
#define UART2_UART2_CTR_REG_UART_CTR_Pos      (0UL)                     /*!< UART2 UART2_CTR_REG: UART_CTR (Bit 0)                       */
#define UART2_UART2_CTR_REG_UART_CTR_Msk      (0xffffffffUL)            /*!< UART2 UART2_CTR_REG: UART_CTR (Bitfield-Mask: 0xffffffff)   */
/* ================================================================================ */
/* ================         struct 'UART3' Position & Mask         ================ */
/* ================================================================================ */
/* -------------------------  UART3_UART3_RBR_THR_DLL_REG  ------------------------ */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_DLL_Pos (0UL)               /*!< UART3 UART3_RBR_THR_DLL_REG: RBR_THR_DLL (Bit 0)            */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_DLL_Msk (0xffUL)            /*!< UART3 UART3_RBR_THR_DLL_REG: RBR_THR_DLL (Bitfield-Mask: 0xff) */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_9BIT_Pos (8UL)              /*!< UART3 UART3_RBR_THR_DLL_REG: RBR_THR_9BIT (Bit 8)           */
#define UART3_UART3_RBR_THR_DLL_REG_RBR_THR_9BIT_Msk (0x100UL)          /*!< UART3 UART3_RBR_THR_DLL_REG: RBR_THR_9BIT (Bitfield-Mask: 0x01) */
/* ---------------------------  UART3_UART3_IER_DLH_REG  -------------------------- */
#define UART3_UART3_IER_DLH_REG_ERBFI_DLH0_Pos (0UL)                    /*!< UART3 UART3_IER_DLH_REG: ERBFI_DLH0 (Bit 0)                 */
#define UART3_UART3_IER_DLH_REG_ERBFI_DLH0_Msk (0x1UL)                  /*!< UART3 UART3_IER_DLH_REG: ERBFI_DLH0 (Bitfield-Mask: 0x01)   */
#define UART3_UART3_IER_DLH_REG_ETBEI_DLH1_Pos (1UL)                    /*!< UART3 UART3_IER_DLH_REG: ETBEI_DLH1 (Bit 1)                 */
#define UART3_UART3_IER_DLH_REG_ETBEI_DLH1_Msk (0x2UL)                  /*!< UART3 UART3_IER_DLH_REG: ETBEI_DLH1 (Bitfield-Mask: 0x01)   */
#define UART3_UART3_IER_DLH_REG_ELSI_DLH2_Pos (2UL)                     /*!< UART3 UART3_IER_DLH_REG: ELSI_DLH2 (Bit 2)                  */
#define UART3_UART3_IER_DLH_REG_ELSI_DLH2_Msk (0x4UL)                   /*!< UART3 UART3_IER_DLH_REG: ELSI_DLH2 (Bitfield-Mask: 0x01)    */
#define UART3_UART3_IER_DLH_REG_EDSSI_DLH3_Pos (3UL)                    /*!< UART3 UART3_IER_DLH_REG: EDSSI_DLH3 (Bit 3)                 */
#define UART3_UART3_IER_DLH_REG_EDSSI_DLH3_Msk (0x8UL)                  /*!< UART3 UART3_IER_DLH_REG: EDSSI_DLH3 (Bitfield-Mask: 0x01)   */
#define UART3_UART3_IER_DLH_REG_ELCOLR_DLH4_Pos (4UL)                   /*!< UART3 UART3_IER_DLH_REG: ELCOLR_DLH4 (Bit 4)                */
#define UART3_UART3_IER_DLH_REG_ELCOLR_DLH4_Msk (0x10UL)                /*!< UART3 UART3_IER_DLH_REG: ELCOLR_DLH4 (Bitfield-Mask: 0x01)  */
#define UART3_UART3_IER_DLH_REG_DLH6_5_Pos    (5UL)                     /*!< UART3 UART3_IER_DLH_REG: DLH6_5 (Bit 5)                     */
#define UART3_UART3_IER_DLH_REG_DLH6_5_Msk    (0x60UL)                  /*!< UART3 UART3_IER_DLH_REG: DLH6_5 (Bitfield-Mask: 0x03)       */
#define UART3_UART3_IER_DLH_REG_PTIME_DLH7_Pos (7UL)                    /*!< UART3 UART3_IER_DLH_REG: PTIME_DLH7 (Bit 7)                 */
#define UART3_UART3_IER_DLH_REG_PTIME_DLH7_Msk (0x80UL)                 /*!< UART3 UART3_IER_DLH_REG: PTIME_DLH7 (Bitfield-Mask: 0x01)   */
/* ---------------------------  UART3_UART3_IIR_FCR_REG  -------------------------- */
#define UART3_UART3_IIR_FCR_REG_IIR_FCR_Pos   (0UL)                     /*!< UART3 UART3_IIR_FCR_REG: IIR_FCR (Bit 0)                    */
#define UART3_UART3_IIR_FCR_REG_IIR_FCR_Msk   (0xffUL)                  /*!< UART3 UART3_IIR_FCR_REG: IIR_FCR (Bitfield-Mask: 0xff)      */
/* -----------------------------  UART3_UART3_LCR_REG  ---------------------------- */
#define UART3_UART3_LCR_REG_UART_DLS_Pos      (0UL)                     /*!< UART3 UART3_LCR_REG: UART_DLS (Bit 0)                       */
#define UART3_UART3_LCR_REG_UART_DLS_Msk      (0x3UL)                   /*!< UART3 UART3_LCR_REG: UART_DLS (Bitfield-Mask: 0x03)         */
#define UART3_UART3_LCR_REG_UART_STOP_Pos     (2UL)                     /*!< UART3 UART3_LCR_REG: UART_STOP (Bit 2)                      */
#define UART3_UART3_LCR_REG_UART_STOP_Msk     (0x4UL)                   /*!< UART3 UART3_LCR_REG: UART_STOP (Bitfield-Mask: 0x01)        */
#define UART3_UART3_LCR_REG_UART_PEN_Pos      (3UL)                     /*!< UART3 UART3_LCR_REG: UART_PEN (Bit 3)                       */
#define UART3_UART3_LCR_REG_UART_PEN_Msk      (0x8UL)                   /*!< UART3 UART3_LCR_REG: UART_PEN (Bitfield-Mask: 0x01)         */
#define UART3_UART3_LCR_REG_UART_EPS_Pos      (4UL)                     /*!< UART3 UART3_LCR_REG: UART_EPS (Bit 4)                       */
#define UART3_UART3_LCR_REG_UART_EPS_Msk      (0x10UL)                  /*!< UART3 UART3_LCR_REG: UART_EPS (Bitfield-Mask: 0x01)         */
#define UART3_UART3_LCR_REG_UART_SP_Pos       (5UL)                     /*!< UART3 UART3_LCR_REG: UART_SP (Bit 5)                        */
#define UART3_UART3_LCR_REG_UART_SP_Msk       (0x20UL)                  /*!< UART3 UART3_LCR_REG: UART_SP (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LCR_REG_UART_BC_Pos       (6UL)                     /*!< UART3 UART3_LCR_REG: UART_BC (Bit 6)                        */
#define UART3_UART3_LCR_REG_UART_BC_Msk       (0x40UL)                  /*!< UART3 UART3_LCR_REG: UART_BC (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LCR_REG_UART_DLAB_Pos     (7UL)                     /*!< UART3 UART3_LCR_REG: UART_DLAB (Bit 7)                      */
#define UART3_UART3_LCR_REG_UART_DLAB_Msk     (0x80UL)                  /*!< UART3 UART3_LCR_REG: UART_DLAB (Bitfield-Mask: 0x01)        */
/* -----------------------------  UART3_UART3_MCR_REG  ---------------------------- */
#define UART3_UART3_MCR_REG_UART_RTS_Pos      (1UL)                     /*!< UART3 UART3_MCR_REG: UART_RTS (Bit 1)                       */
#define UART3_UART3_MCR_REG_UART_RTS_Msk      (0x2UL)                   /*!< UART3 UART3_MCR_REG: UART_RTS (Bitfield-Mask: 0x01)         */
#define UART3_UART3_MCR_REG_UART_LB_Pos       (4UL)                     /*!< UART3 UART3_MCR_REG: UART_LB (Bit 4)                        */
#define UART3_UART3_MCR_REG_UART_LB_Msk       (0x10UL)                  /*!< UART3 UART3_MCR_REG: UART_LB (Bitfield-Mask: 0x01)          */
#define UART3_UART3_MCR_REG_UART_AFCE_Pos     (5UL)                     /*!< UART3 UART3_MCR_REG: UART_AFCE (Bit 5)                      */
#define UART3_UART3_MCR_REG_UART_AFCE_Msk     (0x20UL)                  /*!< UART3 UART3_MCR_REG: UART_AFCE (Bitfield-Mask: 0x01)        */
/* -----------------------------  UART3_UART3_LSR_REG  ---------------------------- */
#define UART3_UART3_LSR_REG_UART_DR_Pos       (0UL)                     /*!< UART3 UART3_LSR_REG: UART_DR (Bit 0)                        */
#define UART3_UART3_LSR_REG_UART_DR_Msk       (0x1UL)                   /*!< UART3 UART3_LSR_REG: UART_DR (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LSR_REG_UART_OE_Pos       (1UL)                     /*!< UART3 UART3_LSR_REG: UART_OE (Bit 1)                        */
#define UART3_UART3_LSR_REG_UART_OE_Msk       (0x2UL)                   /*!< UART3 UART3_LSR_REG: UART_OE (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LSR_REG_UART_PE_Pos       (2UL)                     /*!< UART3 UART3_LSR_REG: UART_PE (Bit 2)                        */
#define UART3_UART3_LSR_REG_UART_PE_Msk       (0x4UL)                   /*!< UART3 UART3_LSR_REG: UART_PE (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LSR_REG_UART_FE_Pos       (3UL)                     /*!< UART3 UART3_LSR_REG: UART_FE (Bit 3)                        */
#define UART3_UART3_LSR_REG_UART_FE_Msk       (0x8UL)                   /*!< UART3 UART3_LSR_REG: UART_FE (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LSR_REG_UART_BI_Pos       (4UL)                     /*!< UART3 UART3_LSR_REG: UART_BI (Bit 4)                        */
#define UART3_UART3_LSR_REG_UART_BI_Msk       (0x10UL)                  /*!< UART3 UART3_LSR_REG: UART_BI (Bitfield-Mask: 0x01)          */
#define UART3_UART3_LSR_REG_UART_THRE_Pos     (5UL)                     /*!< UART3 UART3_LSR_REG: UART_THRE (Bit 5)                      */
#define UART3_UART3_LSR_REG_UART_THRE_Msk     (0x20UL)                  /*!< UART3 UART3_LSR_REG: UART_THRE (Bitfield-Mask: 0x01)        */
#define UART3_UART3_LSR_REG_UART_TEMT_Pos     (6UL)                     /*!< UART3 UART3_LSR_REG: UART_TEMT (Bit 6)                      */
#define UART3_UART3_LSR_REG_UART_TEMT_Msk     (0x40UL)                  /*!< UART3 UART3_LSR_REG: UART_TEMT (Bitfield-Mask: 0x01)        */
#define UART3_UART3_LSR_REG_UART_RFE_Pos      (7UL)                     /*!< UART3 UART3_LSR_REG: UART_RFE (Bit 7)                       */
#define UART3_UART3_LSR_REG_UART_RFE_Msk      (0x80UL)                  /*!< UART3 UART3_LSR_REG: UART_RFE (Bitfield-Mask: 0x01)         */
#define UART3_UART3_LSR_REG_UART_ADDR_RCVD_Pos (8UL)                    /*!< UART3 UART3_LSR_REG: UART_ADDR_RCVD (Bit 8)                 */
#define UART3_UART3_LSR_REG_UART_ADDR_RCVD_Msk (0x100UL)                /*!< UART3 UART3_LSR_REG: UART_ADDR_RCVD (Bitfield-Mask: 0x01)   */
/* -----------------------------  UART3_UART3_MSR_REG  ---------------------------- */
#define UART3_UART3_MSR_REG_UART_DCTS_Pos     (0UL)                     /*!< UART3 UART3_MSR_REG: UART_DCTS (Bit 0)                      */
#define UART3_UART3_MSR_REG_UART_DCTS_Msk     (0x1UL)                   /*!< UART3 UART3_MSR_REG: UART_DCTS (Bitfield-Mask: 0x01)        */
#define UART3_UART3_MSR_REG_UART_CTS_Pos      (4UL)                     /*!< UART3 UART3_MSR_REG: UART_CTS (Bit 4)                       */
#define UART3_UART3_MSR_REG_UART_CTS_Msk      (0x10UL)                  /*!< UART3 UART3_MSR_REG: UART_CTS (Bitfield-Mask: 0x01)         */
/* ---------------------------  UART3_UART3_CONFIG_REG  --------------------------- */
#define UART3_UART3_CONFIG_REG_ISO7816_CONVENTION_Pos (0UL)             /*!< UART3 UART3_CONFIG_REG: ISO7816_CONVENTION (Bit 0)          */
#define UART3_UART3_CONFIG_REG_ISO7816_CONVENTION_Msk (0x1UL)           /*!< UART3 UART3_CONFIG_REG: ISO7816_CONVENTION (Bitfield-Mask: 0x01) */
#define UART3_UART3_CONFIG_REG_ISO7816_ERR_SIG_EN_Pos (1UL)             /*!< UART3 UART3_CONFIG_REG: ISO7816_ERR_SIG_EN (Bit 1)          */
#define UART3_UART3_CONFIG_REG_ISO7816_ERR_SIG_EN_Msk (0x2UL)           /*!< UART3 UART3_CONFIG_REG: ISO7816_ERR_SIG_EN (Bitfield-Mask: 0x01) */
#define UART3_UART3_CONFIG_REG_ISO7816_ENABLE_Pos (2UL)                 /*!< UART3 UART3_CONFIG_REG: ISO7816_ENABLE (Bit 2)              */
#define UART3_UART3_CONFIG_REG_ISO7816_ENABLE_Msk (0x4UL)               /*!< UART3 UART3_CONFIG_REG: ISO7816_ENABLE (Bitfield-Mask: 0x01) */
#define UART3_UART3_CONFIG_REG_ISO7816_SCRATCH_PAD_Pos (3UL)            /*!< UART3 UART3_CONFIG_REG: ISO7816_SCRATCH_PAD (Bit 3)         */
#define UART3_UART3_CONFIG_REG_ISO7816_SCRATCH_PAD_Msk (0xf8UL)         /*!< UART3 UART3_CONFIG_REG: ISO7816_SCRATCH_PAD (Bitfield-Mask: 0x1f) */
/* -------------------------  UART3_UART3_SRBR_STHR0_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR0_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR0_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR0_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR0_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR1_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR1_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR1_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR1_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR1_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR2_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR2_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR2_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR2_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR2_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR3_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR3_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR3_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR3_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR3_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR4_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR4_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR4_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR4_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR4_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR5_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR5_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR5_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR5_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR5_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR6_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR6_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR6_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR6_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR6_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR7_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR7_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR7_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR7_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR7_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR8_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR8_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR8_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR8_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR8_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR9_REG  ------------------------- */
#define UART3_UART3_SRBR_STHR9_REG_SRBR_STHRx_Pos (0UL)                 /*!< UART3 UART3_SRBR_STHR9_REG: SRBR_STHRx (Bit 0)              */
#define UART3_UART3_SRBR_STHR9_REG_SRBR_STHRx_Msk (0xffUL)              /*!< UART3 UART3_SRBR_STHR9_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR10_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR10_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR10_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR10_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR10_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR11_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR11_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR11_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR11_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR11_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR12_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR12_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR12_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR12_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR12_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR13_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR13_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR13_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR13_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR13_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR14_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR14_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR14_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR14_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR14_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -------------------------  UART3_UART3_SRBR_STHR15_REG  ------------------------ */
#define UART3_UART3_SRBR_STHR15_REG_SRBR_STHRx_Pos (0UL)                /*!< UART3 UART3_SRBR_STHR15_REG: SRBR_STHRx (Bit 0)             */
#define UART3_UART3_SRBR_STHR15_REG_SRBR_STHRx_Msk (0xffUL)             /*!< UART3 UART3_SRBR_STHR15_REG: SRBR_STHRx (Bitfield-Mask: 0xff) */
/* -----------------------------  UART3_UART3_USR_REG  ---------------------------- */
#define UART3_UART3_USR_REG_UART_BUSY_Pos     (0UL)                     /*!< UART3 UART3_USR_REG: UART_BUSY (Bit 0)                      */
#define UART3_UART3_USR_REG_UART_BUSY_Msk     (0x1UL)                   /*!< UART3 UART3_USR_REG: UART_BUSY (Bitfield-Mask: 0x01)        */
#define UART3_UART3_USR_REG_UART_TFNF_Pos     (1UL)                     /*!< UART3 UART3_USR_REG: UART_TFNF (Bit 1)                      */
#define UART3_UART3_USR_REG_UART_TFNF_Msk     (0x2UL)                   /*!< UART3 UART3_USR_REG: UART_TFNF (Bitfield-Mask: 0x01)        */
#define UART3_UART3_USR_REG_UART_TFE_Pos      (2UL)                     /*!< UART3 UART3_USR_REG: UART_TFE (Bit 2)                       */
#define UART3_UART3_USR_REG_UART_TFE_Msk      (0x4UL)                   /*!< UART3 UART3_USR_REG: UART_TFE (Bitfield-Mask: 0x01)         */
#define UART3_UART3_USR_REG_UART_RFNE_Pos     (3UL)                     /*!< UART3 UART3_USR_REG: UART_RFNE (Bit 3)                      */
#define UART3_UART3_USR_REG_UART_RFNE_Msk     (0x8UL)                   /*!< UART3 UART3_USR_REG: UART_RFNE (Bitfield-Mask: 0x01)        */
#define UART3_UART3_USR_REG_UART_RFF_Pos      (4UL)                     /*!< UART3 UART3_USR_REG: UART_RFF (Bit 4)                       */
#define UART3_UART3_USR_REG_UART_RFF_Msk      (0x10UL)                  /*!< UART3 UART3_USR_REG: UART_RFF (Bitfield-Mask: 0x01)         */
/* -----------------------------  UART3_UART3_TFL_REG  ---------------------------- */
#define UART3_UART3_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Pos (0UL)          /*!< UART3 UART3_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bit 0)       */
#define UART3_UART3_TFL_REG_UART_TRANSMIT_FIFO_LEVEL_Msk (0x1fUL)       /*!< UART3 UART3_TFL_REG: UART_TRANSMIT_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* -----------------------------  UART3_UART3_RFL_REG  ---------------------------- */
#define UART3_UART3_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Pos (0UL)           /*!< UART3 UART3_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bit 0)        */
#define UART3_UART3_RFL_REG_UART_RECEIVE_FIFO_LEVEL_Msk (0x1fUL)        /*!< UART3 UART3_RFL_REG: UART_RECEIVE_FIFO_LEVEL (Bitfield-Mask: 0x1f) */
/* -----------------------------  UART3_UART3_SRR_REG  ---------------------------- */
#define UART3_UART3_SRR_REG_UART_UR_Pos       (0UL)                     /*!< UART3 UART3_SRR_REG: UART_UR (Bit 0)                        */
#define UART3_UART3_SRR_REG_UART_UR_Msk       (0x1UL)                   /*!< UART3 UART3_SRR_REG: UART_UR (Bitfield-Mask: 0x01)          */
#define UART3_UART3_SRR_REG_UART_RFR_Pos      (1UL)                     /*!< UART3 UART3_SRR_REG: UART_RFR (Bit 1)                       */
#define UART3_UART3_SRR_REG_UART_RFR_Msk      (0x2UL)                   /*!< UART3 UART3_SRR_REG: UART_RFR (Bitfield-Mask: 0x01)         */
#define UART3_UART3_SRR_REG_UART_XFR_Pos      (2UL)                     /*!< UART3 UART3_SRR_REG: UART_XFR (Bit 2)                       */
#define UART3_UART3_SRR_REG_UART_XFR_Msk      (0x4UL)                   /*!< UART3 UART3_SRR_REG: UART_XFR (Bitfield-Mask: 0x01)         */
/* ----------------------------  UART3_UART3_SRTS_REG  ---------------------------- */
#define UART3_UART3_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Pos (0UL)      /*!< UART3 UART3_SRTS_REG: UART_SHADOW_REQUEST_TO_SEND (Bit 0)   */
#define UART3_UART3_SRTS_REG_UART_SHADOW_REQUEST_TO_SEND_Msk (0x1UL)    /*!< UART3 UART3_SRTS_REG: UART_SHADOW_REQUEST_TO_SEND (Bitfield-Mask: 0x01) */
/* ----------------------------  UART3_UART3_SBCR_REG  ---------------------------- */
#define UART3_UART3_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Pos (0UL)        /*!< UART3 UART3_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bit 0)     */
#define UART3_UART3_SBCR_REG_UART_SHADOW_BREAK_CONTROL_Msk (0x1UL)      /*!< UART3 UART3_SBCR_REG: UART_SHADOW_BREAK_CONTROL (Bitfield-Mask: 0x01) */
/* ----------------------------  UART3_UART3_SDMAM_REG  --------------------------- */
#define UART3_UART3_SDMAM_REG_UART_SHADOW_DMA_MODE_Pos (0UL)            /*!< UART3 UART3_SDMAM_REG: UART_SHADOW_DMA_MODE (Bit 0)         */
#define UART3_UART3_SDMAM_REG_UART_SHADOW_DMA_MODE_Msk (0x1UL)          /*!< UART3 UART3_SDMAM_REG: UART_SHADOW_DMA_MODE (Bitfield-Mask: 0x01) */
/* -----------------------------  UART3_UART3_SFE_REG  ---------------------------- */
#define UART3_UART3_SFE_REG_UART_SHADOW_FIFO_ENABLE_Pos (0UL)           /*!< UART3 UART3_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bit 0)        */
#define UART3_UART3_SFE_REG_UART_SHADOW_FIFO_ENABLE_Msk (0x1UL)         /*!< UART3 UART3_SFE_REG: UART_SHADOW_FIFO_ENABLE (Bitfield-Mask: 0x01) */
/* -----------------------------  UART3_UART3_SRT_REG  ---------------------------- */
#define UART3_UART3_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Pos (0UL)          /*!< UART3 UART3_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bit 0)       */
#define UART3_UART3_SRT_REG_UART_SHADOW_RCVR_TRIGGER_Msk (0x3UL)        /*!< UART3 UART3_SRT_REG: UART_SHADOW_RCVR_TRIGGER (Bitfield-Mask: 0x03) */
/* ----------------------------  UART3_UART3_STET_REG  ---------------------------- */
#define UART3_UART3_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Pos (0UL)     /*!< UART3 UART3_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bit 0)  */
#define UART3_UART3_STET_REG_UART_SHADOW_TX_EMPTY_TRIGGER_Msk (0x3UL)   /*!< UART3 UART3_STET_REG: UART_SHADOW_TX_EMPTY_TRIGGER (Bitfield-Mask: 0x03) */
/* -----------------------------  UART3_UART3_HTX_REG  ---------------------------- */
#define UART3_UART3_HTX_REG_UART_HALT_TX_Pos  (0UL)                     /*!< UART3 UART3_HTX_REG: UART_HALT_TX (Bit 0)                   */
#define UART3_UART3_HTX_REG_UART_HALT_TX_Msk  (0x1UL)                   /*!< UART3 UART3_HTX_REG: UART_HALT_TX (Bitfield-Mask: 0x01)     */
/* ----------------------------  UART3_UART3_DMASA_REG  --------------------------- */
#define UART3_UART3_DMASA_REG_UART_DMASA_Pos  (0UL)                     /*!< UART3 UART3_DMASA_REG: UART_DMASA (Bit 0)                   */
#define UART3_UART3_DMASA_REG_UART_DMASA_Msk  (0x1UL)                   /*!< UART3 UART3_DMASA_REG: UART_DMASA (Bitfield-Mask: 0x01)     */
/* -----------------------------  UART3_UART3_DLF_REG  ---------------------------- */
#define UART3_UART3_DLF_REG_UART_DLF_Pos      (0UL)                     /*!< UART3 UART3_DLF_REG: UART_DLF (Bit 0)                       */
#define UART3_UART3_DLF_REG_UART_DLF_Msk      (0xfUL)                   /*!< UART3 UART3_DLF_REG: UART_DLF (Bitfield-Mask: 0x0f)         */
/* -----------------------------  UART3_UART3_RAR_REG  ---------------------------- */
#define UART3_UART3_RAR_REG_UART_RAR_Pos      (0UL)                     /*!< UART3 UART3_RAR_REG: UART_RAR (Bit 0)                       */
#define UART3_UART3_RAR_REG_UART_RAR_Msk      (0xffUL)                  /*!< UART3 UART3_RAR_REG: UART_RAR (Bitfield-Mask: 0xff)         */
/* -----------------------------  UART3_UART3_TAR_REG  ---------------------------- */
#define UART3_UART3_TAR_REG_UART_TAR_Pos      (0UL)                     /*!< UART3 UART3_TAR_REG: UART_TAR (Bit 0)                       */
#define UART3_UART3_TAR_REG_UART_TAR_Msk      (0xffUL)                  /*!< UART3 UART3_TAR_REG: UART_TAR (Bitfield-Mask: 0xff)         */
/* -----------------------------  UART3_UART3_LCR_EXT  ---------------------------- */
#define UART3_UART3_LCR_EXT_UART_DLS_E_Pos    (0UL)                     /*!< UART3 UART3_LCR_EXT: UART_DLS_E (Bit 0)                     */
#define UART3_UART3_LCR_EXT_UART_DLS_E_Msk    (0x1UL)                   /*!< UART3 UART3_LCR_EXT: UART_DLS_E (Bitfield-Mask: 0x01)       */
#define UART3_UART3_LCR_EXT_UART_ADDR_MATCH_Pos (1UL)                   /*!< UART3 UART3_LCR_EXT: UART_ADDR_MATCH (Bit 1)                */
#define UART3_UART3_LCR_EXT_UART_ADDR_MATCH_Msk (0x2UL)                 /*!< UART3 UART3_LCR_EXT: UART_ADDR_MATCH (Bitfield-Mask: 0x01)  */
#define UART3_UART3_LCR_EXT_UART_SEND_ADDR_Pos (2UL)                    /*!< UART3 UART3_LCR_EXT: UART_SEND_ADDR (Bit 2)                 */
#define UART3_UART3_LCR_EXT_UART_SEND_ADDR_Msk (0x4UL)                  /*!< UART3 UART3_LCR_EXT: UART_SEND_ADDR (Bitfield-Mask: 0x01)   */
#define UART3_UART3_LCR_EXT_UART_TRANSMIT_MODE_Pos (3UL)                /*!< UART3 UART3_LCR_EXT: UART_TRANSMIT_MODE (Bit 3)             */
#define UART3_UART3_LCR_EXT_UART_TRANSMIT_MODE_Msk (0x8UL)              /*!< UART3 UART3_LCR_EXT: UART_TRANSMIT_MODE (Bitfield-Mask: 0x01) */
/* ----------------------------  UART3_UART3_CTRL_REG  ---------------------------- */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_DIV_Pos (0UL)                  /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_DIV (Bit 0)               */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_DIV_Msk (0x1fUL)               /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_DIV (Bitfield-Mask: 0x1f) */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_EN_Pos (5UL)                   /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_EN (Bit 5)                */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_EN_Msk (0x20UL)                /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_EN (Bitfield-Mask: 0x01)  */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_LEVEL_Pos (6UL)                /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_LEVEL (Bit 6)             */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_LEVEL_Msk (0x40UL)             /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_LEVEL (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_STATUS_Pos (7UL)               /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_STATUS (Bit 7)            */
#define UART3_UART3_CTRL_REG_ISO7816_CLK_STATUS_Msk (0x80UL)            /*!< UART3 UART3_CTRL_REG: ISO7816_CLK_STATUS (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_TIM_EXPIRED_IRQMASK_Pos (8UL)      /*!< UART3 UART3_CTRL_REG: ISO7816_TIM_EXPIRED_IRQMASK (Bit 8)   */
#define UART3_UART3_CTRL_REG_ISO7816_TIM_EXPIRED_IRQMASK_Msk (0x100UL)  /*!< UART3 UART3_CTRL_REG: ISO7816_TIM_EXPIRED_IRQMASK (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_TIME_IRQMASK_Pos (9UL)      /*!< UART3 UART3_CTRL_REG: ISO7816_ERR_TX_TIME_IRQMASK (Bit 9)   */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_TIME_IRQMASK_Msk (0x200UL)  /*!< UART3 UART3_CTRL_REG: ISO7816_ERR_TX_TIME_IRQMASK (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_VALUE_IRQMASK_Pos (10UL)    /*!< UART3 UART3_CTRL_REG: ISO7816_ERR_TX_VALUE_IRQMASK (Bit 10) */
#define UART3_UART3_CTRL_REG_ISO7816_ERR_TX_VALUE_IRQMASK_Msk (0x400UL) /*!< UART3 UART3_CTRL_REG: ISO7816_ERR_TX_VALUE_IRQMASK (Bitfield-Mask: 0x01) */
#define UART3_UART3_CTRL_REG_ISO7816_AUTO_GT_Pos (11UL)                 /*!< UART3 UART3_CTRL_REG: ISO7816_AUTO_GT (Bit 11)              */
#define UART3_UART3_CTRL_REG_ISO7816_AUTO_GT_Msk (0x800UL)              /*!< UART3 UART3_CTRL_REG: ISO7816_AUTO_GT (Bitfield-Mask: 0x01) */
/* ----------------------------  UART3_UART3_TIMER_REG  --------------------------- */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MAX_Pos (0UL)                 /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_MAX (Bit 0)              */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MAX_Msk (0xffffUL)            /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_MAX (Bitfield-Mask: 0xffff) */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_EN_Pos (16UL)                 /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_EN (Bit 16)              */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_EN_Msk (0x10000UL)            /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_EN (Bitfield-Mask: 0x01) */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MODE_Pos (17UL)               /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_MODE (Bit 17)            */
#define UART3_UART3_TIMER_REG_ISO7816_TIM_MODE_Msk (0x20000UL)          /*!< UART3 UART3_TIMER_REG: ISO7816_TIM_MODE (Bitfield-Mask: 0x01) */
/* --------------------------  UART3_UART3_ERR_CTRL_REG  -------------------------- */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_OFFSET_Pos (0UL)     /*!< UART3 UART3_ERR_CTRL_REG: ISO7816_ERR_PULSE_OFFSET (Bit 0)  */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_OFFSET_Msk (0xfUL)   /*!< UART3 UART3_ERR_CTRL_REG: ISO7816_ERR_PULSE_OFFSET (Bitfield-Mask: 0x0f) */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_WIDTH_Pos (4UL)      /*!< UART3 UART3_ERR_CTRL_REG: ISO7816_ERR_PULSE_WIDTH (Bit 4)   */
#define UART3_UART3_ERR_CTRL_REG_ISO7816_ERR_PULSE_WIDTH_Msk (0x1f0UL)  /*!< UART3 UART3_ERR_CTRL_REG: ISO7816_ERR_PULSE_WIDTH (Bitfield-Mask: 0x1f) */
/* -------------------------  UART3_UART3_IRQ_STATUS_REG  ------------------------- */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_TIM_EXPIRED_IRQ_Pos (0UL)    /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_TIM_EXPIRED_IRQ (Bit 0) */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_TIM_EXPIRED_IRQ_Msk (0x1UL)  /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_TIM_EXPIRED_IRQ (Bitfield-Mask: 0x01) */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_TIME_IRQ_Pos (1UL)    /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_ERR_TX_TIME_IRQ (Bit 1) */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_TIME_IRQ_Msk (0x2UL)  /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_ERR_TX_TIME_IRQ (Bitfield-Mask: 0x01) */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_VALUE_IRQ_Pos (2UL)   /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_ERR_TX_VALUE_IRQ (Bit 2) */
#define UART3_UART3_IRQ_STATUS_REG_ISO7816_ERR_TX_VALUE_IRQ_Msk (0x4UL) /*!< UART3 UART3_IRQ_STATUS_REG: ISO7816_ERR_TX_VALUE_IRQ (Bitfield-Mask: 0x01) */
/* -----------------------------  UART3_UART3_UCV_REG  ---------------------------- */
#define UART3_UART3_UCV_REG_UART_UCV_Pos      (0UL)                     /*!< UART3 UART3_UCV_REG: UART_UCV (Bit 0)                       */
#define UART3_UART3_UCV_REG_UART_UCV_Msk      (0xffffffffUL)            /*!< UART3 UART3_UCV_REG: UART_UCV (Bitfield-Mask: 0xffffffff)   */
/* -----------------------------  UART3_UART3_CTR_REG  ---------------------------- */
#define UART3_UART3_CTR_REG_UART_CTR_Pos      (0UL)                     /*!< UART3 UART3_CTR_REG: UART_CTR (Bit 0)                       */
#define UART3_UART3_CTR_REG_UART_CTR_Msk      (0xffffffffUL)            /*!< UART3 UART3_CTR_REG: UART_CTR (Bitfield-Mask: 0xffffffff)   */
/* ================================================================================ */
/* ================          struct 'USB' Position & Mask          ================ */
/* ================================================================================ */
/* ------------------------------  USB_USB_MCTRL_REG  ----------------------------- */
#define USB_USB_MCTRL_REG_USBEN_Pos           (0UL)                     /*!< USB USB_MCTRL_REG: USBEN (Bit 0)                            */
#define USB_USB_MCTRL_REG_USBEN_Msk           (0x1UL)                   /*!< USB USB_MCTRL_REG: USBEN (Bitfield-Mask: 0x01)              */
#define USB_USB_MCTRL_REG_USB_DBG_Pos         (1UL)                     /*!< USB USB_MCTRL_REG: USB_DBG (Bit 1)                          */
#define USB_USB_MCTRL_REG_USB_DBG_Msk         (0x2UL)                   /*!< USB USB_MCTRL_REG: USB_DBG (Bitfield-Mask: 0x01)            */
#define USB_USB_MCTRL_REG_USB_NAT_Pos         (3UL)                     /*!< USB USB_MCTRL_REG: USB_NAT (Bit 3)                          */
#define USB_USB_MCTRL_REG_USB_NAT_Msk         (0x8UL)                   /*!< USB USB_MCTRL_REG: USB_NAT (Bitfield-Mask: 0x01)            */
#define USB_USB_MCTRL_REG_LSMODE_Pos          (4UL)                     /*!< USB USB_MCTRL_REG: LSMODE (Bit 4)                           */
#define USB_USB_MCTRL_REG_LSMODE_Msk          (0x10UL)                  /*!< USB USB_MCTRL_REG: LSMODE (Bitfield-Mask: 0x01)             */
/* -----------------------------  USB_USB_XCVDIAG_REG  ---------------------------- */
#define USB_USB_XCVDIAG_REG_USB_XCV_TEST_Pos  (0UL)                     /*!< USB USB_XCVDIAG_REG: USB_XCV_TEST (Bit 0)                   */
#define USB_USB_XCVDIAG_REG_USB_XCV_TEST_Msk  (0x1UL)                   /*!< USB USB_XCVDIAG_REG: USB_XCV_TEST (Bitfield-Mask: 0x01)     */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXp_Pos   (1UL)                     /*!< USB USB_XCVDIAG_REG: USB_XCV_TXp (Bit 1)                    */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXp_Msk   (0x2UL)                   /*!< USB USB_XCVDIAG_REG: USB_XCV_TXp (Bitfield-Mask: 0x01)      */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXn_Pos   (2UL)                     /*!< USB USB_XCVDIAG_REG: USB_XCV_TXn (Bit 2)                    */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXn_Msk   (0x4UL)                   /*!< USB USB_XCVDIAG_REG: USB_XCV_TXn (Bitfield-Mask: 0x01)      */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXEN_Pos  (3UL)                     /*!< USB USB_XCVDIAG_REG: USB_XCV_TXEN (Bit 3)                   */
#define USB_USB_XCVDIAG_REG_USB_XCV_TXEN_Msk  (0x8UL)                   /*!< USB USB_XCVDIAG_REG: USB_XCV_TXEN (Bitfield-Mask: 0x01)     */
#define USB_USB_XCVDIAG_REG_USB_RCV_Pos       (5UL)                     /*!< USB USB_XCVDIAG_REG: USB_RCV (Bit 5)                        */
#define USB_USB_XCVDIAG_REG_USB_RCV_Msk       (0x20UL)                  /*!< USB USB_XCVDIAG_REG: USB_RCV (Bitfield-Mask: 0x01)          */
#define USB_USB_XCVDIAG_REG_USB_VMIN_Pos      (6UL)                     /*!< USB USB_XCVDIAG_REG: USB_VMIN (Bit 6)                       */
#define USB_USB_XCVDIAG_REG_USB_VMIN_Msk      (0x40UL)                  /*!< USB USB_XCVDIAG_REG: USB_VMIN (Bitfield-Mask: 0x01)         */
#define USB_USB_XCVDIAG_REG_USB_VPIN_Pos      (7UL)                     /*!< USB USB_XCVDIAG_REG: USB_VPIN (Bit 7)                       */
#define USB_USB_XCVDIAG_REG_USB_VPIN_Msk      (0x80UL)                  /*!< USB USB_XCVDIAG_REG: USB_VPIN (Bitfield-Mask: 0x01)         */
/* -------------------------------  USB_USB_TCR_REG  ------------------------------ */
#define USB_USB_TCR_REG_USB_CADJ_Pos          (0UL)                     /*!< USB USB_TCR_REG: USB_CADJ (Bit 0)                           */
#define USB_USB_TCR_REG_USB_CADJ_Msk          (0x1fUL)                  /*!< USB USB_TCR_REG: USB_CADJ (Bitfield-Mask: 0x1f)             */
#define USB_USB_TCR_REG_USB_VADJ_Pos          (5UL)                     /*!< USB USB_TCR_REG: USB_VADJ (Bit 5)                           */
#define USB_USB_TCR_REG_USB_VADJ_Msk          (0xe0UL)                  /*!< USB USB_TCR_REG: USB_VADJ (Bitfield-Mask: 0x07)             */
/* -------------------------------  USB_USB_UTR_REG  ------------------------------ */
#define USB_USB_UTR_REG_USB_UTR_RES_Pos       (0UL)                     /*!< USB USB_UTR_REG: USB_UTR_RES (Bit 0)                        */
#define USB_USB_UTR_REG_USB_UTR_RES_Msk       (0x1fUL)                  /*!< USB USB_UTR_REG: USB_UTR_RES (Bitfield-Mask: 0x1f)          */
#define USB_USB_UTR_REG_USB_SF_Pos            (5UL)                     /*!< USB USB_UTR_REG: USB_SF (Bit 5)                             */
#define USB_USB_UTR_REG_USB_SF_Msk            (0x20UL)                  /*!< USB USB_UTR_REG: USB_SF (Bitfield-Mask: 0x01)               */
#define USB_USB_UTR_REG_USB_NCRC_Pos          (6UL)                     /*!< USB USB_UTR_REG: USB_NCRC (Bit 6)                           */
#define USB_USB_UTR_REG_USB_NCRC_Msk          (0x40UL)                  /*!< USB USB_UTR_REG: USB_NCRC (Bitfield-Mask: 0x01)             */
#define USB_USB_UTR_REG_USB_DIAG_Pos          (7UL)                     /*!< USB USB_UTR_REG: USB_DIAG (Bit 7)                           */
#define USB_USB_UTR_REG_USB_DIAG_Msk          (0x80UL)                  /*!< USB USB_UTR_REG: USB_DIAG (Bitfield-Mask: 0x01)             */
/* -------------------------------  USB_USB_FAR_REG  ------------------------------ */
#define USB_USB_FAR_REG_USB_AD_Pos            (0UL)                     /*!< USB USB_FAR_REG: USB_AD (Bit 0)                             */
#define USB_USB_FAR_REG_USB_AD_Msk            (0x7fUL)                  /*!< USB USB_FAR_REG: USB_AD (Bitfield-Mask: 0x7f)               */
#define USB_USB_FAR_REG_USB_AD_EN_Pos         (7UL)                     /*!< USB USB_FAR_REG: USB_AD_EN (Bit 7)                          */
#define USB_USB_FAR_REG_USB_AD_EN_Msk         (0x80UL)                  /*!< USB USB_FAR_REG: USB_AD_EN (Bitfield-Mask: 0x01)            */
/* ------------------------------  USB_USB_NFSR_REG  ------------------------------ */
#define USB_USB_NFSR_REG_USB_NFS_Pos          (0UL)                     /*!< USB USB_NFSR_REG: USB_NFS (Bit 0)                           */
#define USB_USB_NFSR_REG_USB_NFS_Msk          (0x3UL)                   /*!< USB USB_NFSR_REG: USB_NFS (Bitfield-Mask: 0x03)             */
/* ------------------------------  USB_USB_MAEV_REG  ------------------------------ */
#define USB_USB_MAEV_REG_USB_WARN_Pos         (0UL)                     /*!< USB USB_MAEV_REG: USB_WARN (Bit 0)                          */
#define USB_USB_MAEV_REG_USB_WARN_Msk         (0x1UL)                   /*!< USB USB_MAEV_REG: USB_WARN (Bitfield-Mask: 0x01)            */
#define USB_USB_MAEV_REG_USB_ALT_Pos          (1UL)                     /*!< USB USB_MAEV_REG: USB_ALT (Bit 1)                           */
#define USB_USB_MAEV_REG_USB_ALT_Msk          (0x2UL)                   /*!< USB USB_MAEV_REG: USB_ALT (Bitfield-Mask: 0x01)             */
#define USB_USB_MAEV_REG_USB_TX_EV_Pos        (2UL)                     /*!< USB USB_MAEV_REG: USB_TX_EV (Bit 2)                         */
#define USB_USB_MAEV_REG_USB_TX_EV_Msk        (0x4UL)                   /*!< USB USB_MAEV_REG: USB_TX_EV (Bitfield-Mask: 0x01)           */
#define USB_USB_MAEV_REG_USB_FRAME_Pos        (3UL)                     /*!< USB USB_MAEV_REG: USB_FRAME (Bit 3)                         */
#define USB_USB_MAEV_REG_USB_FRAME_Msk        (0x8UL)                   /*!< USB USB_MAEV_REG: USB_FRAME (Bitfield-Mask: 0x01)           */
#define USB_USB_MAEV_REG_USB_NAK_Pos          (4UL)                     /*!< USB USB_MAEV_REG: USB_NAK (Bit 4)                           */
#define USB_USB_MAEV_REG_USB_NAK_Msk          (0x10UL)                  /*!< USB USB_MAEV_REG: USB_NAK (Bitfield-Mask: 0x01)             */
#define USB_USB_MAEV_REG_USB_ULD_Pos          (5UL)                     /*!< USB USB_MAEV_REG: USB_ULD (Bit 5)                           */
#define USB_USB_MAEV_REG_USB_ULD_Msk          (0x20UL)                  /*!< USB USB_MAEV_REG: USB_ULD (Bitfield-Mask: 0x01)             */
#define USB_USB_MAEV_REG_USB_RX_EV_Pos        (6UL)                     /*!< USB USB_MAEV_REG: USB_RX_EV (Bit 6)                         */
#define USB_USB_MAEV_REG_USB_RX_EV_Msk        (0x40UL)                  /*!< USB USB_MAEV_REG: USB_RX_EV (Bitfield-Mask: 0x01)           */
#define USB_USB_MAEV_REG_USB_INTR_Pos         (7UL)                     /*!< USB USB_MAEV_REG: USB_INTR (Bit 7)                          */
#define USB_USB_MAEV_REG_USB_INTR_Msk         (0x80UL)                  /*!< USB USB_MAEV_REG: USB_INTR (Bitfield-Mask: 0x01)            */
#define USB_USB_MAEV_REG_USB_EP0_TX_Pos       (8UL)                     /*!< USB USB_MAEV_REG: USB_EP0_TX (Bit 8)                        */
#define USB_USB_MAEV_REG_USB_EP0_TX_Msk       (0x100UL)                 /*!< USB USB_MAEV_REG: USB_EP0_TX (Bitfield-Mask: 0x01)          */
#define USB_USB_MAEV_REG_USB_EP0_RX_Pos       (9UL)                     /*!< USB USB_MAEV_REG: USB_EP0_RX (Bit 9)                        */
#define USB_USB_MAEV_REG_USB_EP0_RX_Msk       (0x200UL)                 /*!< USB USB_MAEV_REG: USB_EP0_RX (Bitfield-Mask: 0x01)          */
#define USB_USB_MAEV_REG_USB_EP0_NAK_Pos      (10UL)                    /*!< USB USB_MAEV_REG: USB_EP0_NAK (Bit 10)                      */
#define USB_USB_MAEV_REG_USB_EP0_NAK_Msk      (0x400UL)                 /*!< USB USB_MAEV_REG: USB_EP0_NAK (Bitfield-Mask: 0x01)         */
#define USB_USB_MAEV_REG_USB_CH_EV_Pos        (11UL)                    /*!< USB USB_MAEV_REG: USB_CH_EV (Bit 11)                        */
#define USB_USB_MAEV_REG_USB_CH_EV_Msk        (0x800UL)                 /*!< USB USB_MAEV_REG: USB_CH_EV (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_MAMSK_REG  ----------------------------- */
#define USB_USB_MAMSK_REG_USB_M_WARN_Pos      (0UL)                     /*!< USB USB_MAMSK_REG: USB_M_WARN (Bit 0)                       */
#define USB_USB_MAMSK_REG_USB_M_WARN_Msk      (0x1UL)                   /*!< USB USB_MAMSK_REG: USB_M_WARN (Bitfield-Mask: 0x01)         */
#define USB_USB_MAMSK_REG_USB_M_ALT_Pos       (1UL)                     /*!< USB USB_MAMSK_REG: USB_M_ALT (Bit 1)                        */
#define USB_USB_MAMSK_REG_USB_M_ALT_Msk       (0x2UL)                   /*!< USB USB_MAMSK_REG: USB_M_ALT (Bitfield-Mask: 0x01)          */
#define USB_USB_MAMSK_REG_USB_M_TX_EV_Pos     (2UL)                     /*!< USB USB_MAMSK_REG: USB_M_TX_EV (Bit 2)                      */
#define USB_USB_MAMSK_REG_USB_M_TX_EV_Msk     (0x4UL)                   /*!< USB USB_MAMSK_REG: USB_M_TX_EV (Bitfield-Mask: 0x01)        */
#define USB_USB_MAMSK_REG_USB_M_FRAME_Pos     (3UL)                     /*!< USB USB_MAMSK_REG: USB_M_FRAME (Bit 3)                      */
#define USB_USB_MAMSK_REG_USB_M_FRAME_Msk     (0x8UL)                   /*!< USB USB_MAMSK_REG: USB_M_FRAME (Bitfield-Mask: 0x01)        */
#define USB_USB_MAMSK_REG_USB_M_NAK_Pos       (4UL)                     /*!< USB USB_MAMSK_REG: USB_M_NAK (Bit 4)                        */
#define USB_USB_MAMSK_REG_USB_M_NAK_Msk       (0x10UL)                  /*!< USB USB_MAMSK_REG: USB_M_NAK (Bitfield-Mask: 0x01)          */
#define USB_USB_MAMSK_REG_USB_M_ULD_Pos       (5UL)                     /*!< USB USB_MAMSK_REG: USB_M_ULD (Bit 5)                        */
#define USB_USB_MAMSK_REG_USB_M_ULD_Msk       (0x20UL)                  /*!< USB USB_MAMSK_REG: USB_M_ULD (Bitfield-Mask: 0x01)          */
#define USB_USB_MAMSK_REG_USB_M_RX_EV_Pos     (6UL)                     /*!< USB USB_MAMSK_REG: USB_M_RX_EV (Bit 6)                      */
#define USB_USB_MAMSK_REG_USB_M_RX_EV_Msk     (0x40UL)                  /*!< USB USB_MAMSK_REG: USB_M_RX_EV (Bitfield-Mask: 0x01)        */
#define USB_USB_MAMSK_REG_USB_M_INTR_Pos      (7UL)                     /*!< USB USB_MAMSK_REG: USB_M_INTR (Bit 7)                       */
#define USB_USB_MAMSK_REG_USB_M_INTR_Msk      (0x80UL)                  /*!< USB USB_MAMSK_REG: USB_M_INTR (Bitfield-Mask: 0x01)         */
#define USB_USB_MAMSK_REG_USB_M_EP0_TX_Pos    (8UL)                     /*!< USB USB_MAMSK_REG: USB_M_EP0_TX (Bit 8)                     */
#define USB_USB_MAMSK_REG_USB_M_EP0_TX_Msk    (0x100UL)                 /*!< USB USB_MAMSK_REG: USB_M_EP0_TX (Bitfield-Mask: 0x01)       */
#define USB_USB_MAMSK_REG_USB_M_EP0_RX_Pos    (9UL)                     /*!< USB USB_MAMSK_REG: USB_M_EP0_RX (Bit 9)                     */
#define USB_USB_MAMSK_REG_USB_M_EP0_RX_Msk    (0x200UL)                 /*!< USB USB_MAMSK_REG: USB_M_EP0_RX (Bitfield-Mask: 0x01)       */
#define USB_USB_MAMSK_REG_USB_M_EP0_NAK_Pos   (10UL)                    /*!< USB USB_MAMSK_REG: USB_M_EP0_NAK (Bit 10)                   */
#define USB_USB_MAMSK_REG_USB_M_EP0_NAK_Msk   (0x400UL)                 /*!< USB USB_MAMSK_REG: USB_M_EP0_NAK (Bitfield-Mask: 0x01)      */
#define USB_USB_MAMSK_REG_USB_M_CH_EV_Pos     (11UL)                    /*!< USB USB_MAMSK_REG: USB_M_CH_EV (Bit 11)                     */
#define USB_USB_MAMSK_REG_USB_M_CH_EV_Msk     (0x800UL)                 /*!< USB USB_MAMSK_REG: USB_M_CH_EV (Bitfield-Mask: 0x01)        */
/* ------------------------------  USB_USB_ALTEV_REG  ----------------------------- */
#define USB_USB_ALTEV_REG_USB_EOP_Pos         (3UL)                     /*!< USB USB_ALTEV_REG: USB_EOP (Bit 3)                          */
#define USB_USB_ALTEV_REG_USB_EOP_Msk         (0x8UL)                   /*!< USB USB_ALTEV_REG: USB_EOP (Bitfield-Mask: 0x01)            */
#define USB_USB_ALTEV_REG_USB_SD3_Pos         (4UL)                     /*!< USB USB_ALTEV_REG: USB_SD3 (Bit 4)                          */
#define USB_USB_ALTEV_REG_USB_SD3_Msk         (0x10UL)                  /*!< USB USB_ALTEV_REG: USB_SD3 (Bitfield-Mask: 0x01)            */
#define USB_USB_ALTEV_REG_USB_SD5_Pos         (5UL)                     /*!< USB USB_ALTEV_REG: USB_SD5 (Bit 5)                          */
#define USB_USB_ALTEV_REG_USB_SD5_Msk         (0x20UL)                  /*!< USB USB_ALTEV_REG: USB_SD5 (Bitfield-Mask: 0x01)            */
#define USB_USB_ALTEV_REG_USB_RESET_Pos       (6UL)                     /*!< USB USB_ALTEV_REG: USB_RESET (Bit 6)                        */
#define USB_USB_ALTEV_REG_USB_RESET_Msk       (0x40UL)                  /*!< USB USB_ALTEV_REG: USB_RESET (Bitfield-Mask: 0x01)          */
#define USB_USB_ALTEV_REG_USB_RESUME_Pos      (7UL)                     /*!< USB USB_ALTEV_REG: USB_RESUME (Bit 7)                       */
#define USB_USB_ALTEV_REG_USB_RESUME_Msk      (0x80UL)                  /*!< USB USB_ALTEV_REG: USB_RESUME (Bitfield-Mask: 0x01)         */
/* -----------------------------  USB_USB_ALTMSK_REG  ----------------------------- */
#define USB_USB_ALTMSK_REG_USB_M_EOP_Pos      (3UL)                     /*!< USB USB_ALTMSK_REG: USB_M_EOP (Bit 3)                       */
#define USB_USB_ALTMSK_REG_USB_M_EOP_Msk      (0x8UL)                   /*!< USB USB_ALTMSK_REG: USB_M_EOP (Bitfield-Mask: 0x01)         */
#define USB_USB_ALTMSK_REG_USB_M_SD3_Pos      (4UL)                     /*!< USB USB_ALTMSK_REG: USB_M_SD3 (Bit 4)                       */
#define USB_USB_ALTMSK_REG_USB_M_SD3_Msk      (0x10UL)                  /*!< USB USB_ALTMSK_REG: USB_M_SD3 (Bitfield-Mask: 0x01)         */
#define USB_USB_ALTMSK_REG_USB_M_SD5_Pos      (5UL)                     /*!< USB USB_ALTMSK_REG: USB_M_SD5 (Bit 5)                       */
#define USB_USB_ALTMSK_REG_USB_M_SD5_Msk      (0x20UL)                  /*!< USB USB_ALTMSK_REG: USB_M_SD5 (Bitfield-Mask: 0x01)         */
#define USB_USB_ALTMSK_REG_USB_M_RESET_Pos    (6UL)                     /*!< USB USB_ALTMSK_REG: USB_M_RESET (Bit 6)                     */
#define USB_USB_ALTMSK_REG_USB_M_RESET_Msk    (0x40UL)                  /*!< USB USB_ALTMSK_REG: USB_M_RESET (Bitfield-Mask: 0x01)       */
#define USB_USB_ALTMSK_REG_USB_M_RESUME_Pos   (7UL)                     /*!< USB USB_ALTMSK_REG: USB_M_RESUME (Bit 7)                    */
#define USB_USB_ALTMSK_REG_USB_M_RESUME_Msk   (0x80UL)                  /*!< USB USB_ALTMSK_REG: USB_M_RESUME (Bitfield-Mask: 0x01)      */
/* ------------------------------  USB_USB_TXEV_REG  ------------------------------ */
#define USB_USB_TXEV_REG_USB_TXFIFO31_Pos     (0UL)                     /*!< USB USB_TXEV_REG: USB_TXFIFO31 (Bit 0)                      */
#define USB_USB_TXEV_REG_USB_TXFIFO31_Msk     (0x7UL)                   /*!< USB USB_TXEV_REG: USB_TXFIFO31 (Bitfield-Mask: 0x07)        */
#define USB_USB_TXEV_REG_USB_TXUDRRN31_Pos    (4UL)                     /*!< USB USB_TXEV_REG: USB_TXUDRRN31 (Bit 4)                     */
#define USB_USB_TXEV_REG_USB_TXUDRRN31_Msk    (0x70UL)                  /*!< USB USB_TXEV_REG: USB_TXUDRRN31 (Bitfield-Mask: 0x07)       */
/* ------------------------------  USB_USB_TXMSK_REG  ----------------------------- */
#define USB_USB_TXMSK_REG_USB_M_TXFIFO31_Pos  (0UL)                     /*!< USB USB_TXMSK_REG: USB_M_TXFIFO31 (Bit 0)                   */
#define USB_USB_TXMSK_REG_USB_M_TXFIFO31_Msk  (0x7UL)                   /*!< USB USB_TXMSK_REG: USB_M_TXFIFO31 (Bitfield-Mask: 0x07)     */
#define USB_USB_TXMSK_REG_USB_M_TXUDRRN31_Pos (4UL)                     /*!< USB USB_TXMSK_REG: USB_M_TXUDRRN31 (Bit 4)                  */
#define USB_USB_TXMSK_REG_USB_M_TXUDRRN31_Msk (0x70UL)                  /*!< USB USB_TXMSK_REG: USB_M_TXUDRRN31 (Bitfield-Mask: 0x07)    */
/* ------------------------------  USB_USB_RXEV_REG  ------------------------------ */
#define USB_USB_RXEV_REG_USB_RXFIFO31_Pos     (0UL)                     /*!< USB USB_RXEV_REG: USB_RXFIFO31 (Bit 0)                      */
#define USB_USB_RXEV_REG_USB_RXFIFO31_Msk     (0x7UL)                   /*!< USB USB_RXEV_REG: USB_RXFIFO31 (Bitfield-Mask: 0x07)        */
#define USB_USB_RXEV_REG_USB_RXOVRRN31_Pos    (4UL)                     /*!< USB USB_RXEV_REG: USB_RXOVRRN31 (Bit 4)                     */
#define USB_USB_RXEV_REG_USB_RXOVRRN31_Msk    (0x70UL)                  /*!< USB USB_RXEV_REG: USB_RXOVRRN31 (Bitfield-Mask: 0x07)       */
/* ------------------------------  USB_USB_RXMSK_REG  ----------------------------- */
#define USB_USB_RXMSK_REG_USB_M_RXFIFO31_Pos  (0UL)                     /*!< USB USB_RXMSK_REG: USB_M_RXFIFO31 (Bit 0)                   */
#define USB_USB_RXMSK_REG_USB_M_RXFIFO31_Msk  (0x7UL)                   /*!< USB USB_RXMSK_REG: USB_M_RXFIFO31 (Bitfield-Mask: 0x07)     */
#define USB_USB_RXMSK_REG_USB_M_RXOVRRN31_Pos (4UL)                     /*!< USB USB_RXMSK_REG: USB_M_RXOVRRN31 (Bit 4)                  */
#define USB_USB_RXMSK_REG_USB_M_RXOVRRN31_Msk (0x70UL)                  /*!< USB USB_RXMSK_REG: USB_M_RXOVRRN31 (Bitfield-Mask: 0x07)    */
/* ------------------------------  USB_USB_NAKEV_REG  ----------------------------- */
#define USB_USB_NAKEV_REG_USB_IN31_Pos        (0UL)                     /*!< USB USB_NAKEV_REG: USB_IN31 (Bit 0)                         */
#define USB_USB_NAKEV_REG_USB_IN31_Msk        (0x7UL)                   /*!< USB USB_NAKEV_REG: USB_IN31 (Bitfield-Mask: 0x07)           */
#define USB_USB_NAKEV_REG_USB_OUT31_Pos       (4UL)                     /*!< USB USB_NAKEV_REG: USB_OUT31 (Bit 4)                        */
#define USB_USB_NAKEV_REG_USB_OUT31_Msk       (0x70UL)                  /*!< USB USB_NAKEV_REG: USB_OUT31 (Bitfield-Mask: 0x07)          */
/* -----------------------------  USB_USB_NAKMSK_REG  ----------------------------- */
#define USB_USB_NAKMSK_REG_USB_M_IN31_Pos     (0UL)                     /*!< USB USB_NAKMSK_REG: USB_M_IN31 (Bit 0)                      */
#define USB_USB_NAKMSK_REG_USB_M_IN31_Msk     (0x7UL)                   /*!< USB USB_NAKMSK_REG: USB_M_IN31 (Bitfield-Mask: 0x07)        */
#define USB_USB_NAKMSK_REG_USB_M_OUT31_Pos    (4UL)                     /*!< USB USB_NAKMSK_REG: USB_M_OUT31 (Bit 4)                     */
#define USB_USB_NAKMSK_REG_USB_M_OUT31_Msk    (0x70UL)                  /*!< USB USB_NAKMSK_REG: USB_M_OUT31 (Bitfield-Mask: 0x07)       */
/* ------------------------------  USB_USB_FWEV_REG  ------------------------------ */
#define USB_USB_FWEV_REG_USB_TXWARN31_Pos     (0UL)                     /*!< USB USB_FWEV_REG: USB_TXWARN31 (Bit 0)                      */
#define USB_USB_FWEV_REG_USB_TXWARN31_Msk     (0x7UL)                   /*!< USB USB_FWEV_REG: USB_TXWARN31 (Bitfield-Mask: 0x07)        */
#define USB_USB_FWEV_REG_USB_RXWARN31_Pos     (4UL)                     /*!< USB USB_FWEV_REG: USB_RXWARN31 (Bit 4)                      */
#define USB_USB_FWEV_REG_USB_RXWARN31_Msk     (0x70UL)                  /*!< USB USB_FWEV_REG: USB_RXWARN31 (Bitfield-Mask: 0x07)        */
/* ------------------------------  USB_USB_FWMSK_REG  ----------------------------- */
#define USB_USB_FWMSK_REG_USB_M_TXWARN31_Pos  (0UL)                     /*!< USB USB_FWMSK_REG: USB_M_TXWARN31 (Bit 0)                   */
#define USB_USB_FWMSK_REG_USB_M_TXWARN31_Msk  (0x7UL)                   /*!< USB USB_FWMSK_REG: USB_M_TXWARN31 (Bitfield-Mask: 0x07)     */
#define USB_USB_FWMSK_REG_USB_M_RXWARN31_Pos  (4UL)                     /*!< USB USB_FWMSK_REG: USB_M_RXWARN31 (Bit 4)                   */
#define USB_USB_FWMSK_REG_USB_M_RXWARN31_Msk  (0x70UL)                  /*!< USB USB_FWMSK_REG: USB_M_RXWARN31 (Bitfield-Mask: 0x07)     */
/* -------------------------------  USB_USB_FNH_REG  ------------------------------ */
#define USB_USB_FNH_REG_USB_FN_10_8_Pos       (0UL)                     /*!< USB USB_FNH_REG: USB_FN_10_8 (Bit 0)                        */
#define USB_USB_FNH_REG_USB_FN_10_8_Msk       (0x7UL)                   /*!< USB USB_FNH_REG: USB_FN_10_8 (Bitfield-Mask: 0x07)          */
#define USB_USB_FNH_REG_USB_RFC_Pos           (5UL)                     /*!< USB USB_FNH_REG: USB_RFC (Bit 5)                            */
#define USB_USB_FNH_REG_USB_RFC_Msk           (0x20UL)                  /*!< USB USB_FNH_REG: USB_RFC (Bitfield-Mask: 0x01)              */
#define USB_USB_FNH_REG_USB_UL_Pos            (6UL)                     /*!< USB USB_FNH_REG: USB_UL (Bit 6)                             */
#define USB_USB_FNH_REG_USB_UL_Msk            (0x40UL)                  /*!< USB USB_FNH_REG: USB_UL (Bitfield-Mask: 0x01)               */
#define USB_USB_FNH_REG_USB_MF_Pos            (7UL)                     /*!< USB USB_FNH_REG: USB_MF (Bit 7)                             */
#define USB_USB_FNH_REG_USB_MF_Msk            (0x80UL)                  /*!< USB USB_FNH_REG: USB_MF (Bitfield-Mask: 0x01)               */
/* -------------------------------  USB_USB_FNL_REG  ------------------------------ */
#define USB_USB_FNL_REG_USB_FN_Pos            (0UL)                     /*!< USB USB_FNL_REG: USB_FN (Bit 0)                             */
#define USB_USB_FNL_REG_USB_FN_Msk            (0xffUL)                  /*!< USB USB_FNL_REG: USB_FN (Bitfield-Mask: 0xff)               */
/* -----------------------------  USB_USB_UX20CDR_REG  ---------------------------- */
#define USB_USB_UX20CDR_REG_RPU_SSPROTEN_Pos  (0UL)                     /*!< USB USB_UX20CDR_REG: RPU_SSPROTEN (Bit 0)                   */
#define USB_USB_UX20CDR_REG_RPU_SSPROTEN_Msk  (0x1UL)                   /*!< USB USB_UX20CDR_REG: RPU_SSPROTEN (Bitfield-Mask: 0x01)     */
#define USB_USB_UX20CDR_REG_RPU_RCDELAY_Pos   (1UL)                     /*!< USB USB_UX20CDR_REG: RPU_RCDELAY (Bit 1)                    */
#define USB_USB_UX20CDR_REG_RPU_RCDELAY_Msk   (0x2UL)                   /*!< USB USB_UX20CDR_REG: RPU_RCDELAY (Bitfield-Mask: 0x01)      */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1DM_Pos (2UL)                    /*!< USB USB_UX20CDR_REG: RPU_TEST_SW1DM (Bit 2)                 */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1DM_Msk (0x4UL)                  /*!< USB USB_UX20CDR_REG: RPU_TEST_SW1DM (Bitfield-Mask: 0x01)   */
#define USB_USB_UX20CDR_REG_RPU_TEST_EN_Pos   (4UL)                     /*!< USB USB_UX20CDR_REG: RPU_TEST_EN (Bit 4)                    */
#define USB_USB_UX20CDR_REG_RPU_TEST_EN_Msk   (0x10UL)                  /*!< USB USB_UX20CDR_REG: RPU_TEST_EN (Bitfield-Mask: 0x01)      */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1_Pos  (5UL)                     /*!< USB USB_UX20CDR_REG: RPU_TEST_SW1 (Bit 5)                   */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW1_Msk  (0x20UL)                  /*!< USB USB_UX20CDR_REG: RPU_TEST_SW1 (Bitfield-Mask: 0x01)     */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW2_Pos  (6UL)                     /*!< USB USB_UX20CDR_REG: RPU_TEST_SW2 (Bit 6)                   */
#define USB_USB_UX20CDR_REG_RPU_TEST_SW2_Msk  (0x40UL)                  /*!< USB USB_UX20CDR_REG: RPU_TEST_SW2 (Bitfield-Mask: 0x01)     */
#define USB_USB_UX20CDR_REG_RPU_TEST7_Pos     (7UL)                     /*!< USB USB_UX20CDR_REG: RPU_TEST7 (Bit 7)                      */
#define USB_USB_UX20CDR_REG_RPU_TEST7_Msk     (0x80UL)                  /*!< USB USB_UX20CDR_REG: RPU_TEST7 (Bitfield-Mask: 0x01)        */
/* ------------------------------  USB_USB_EPC0_REG  ------------------------------ */
#define USB_USB_EPC0_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC0_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC0_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC0_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC0_REG_USB_DEF_Pos          (6UL)                     /*!< USB USB_EPC0_REG: USB_DEF (Bit 6)                           */
#define USB_USB_EPC0_REG_USB_DEF_Msk          (0x40UL)                  /*!< USB USB_EPC0_REG: USB_DEF (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC0_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC0_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC0_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC0_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_TXD0_REG  ------------------------------ */
#define USB_USB_TXD0_REG_USB_TXFD_Pos         (0UL)                     /*!< USB USB_TXD0_REG: USB_TXFD (Bit 0)                          */
#define USB_USB_TXD0_REG_USB_TXFD_Msk         (0xffUL)                  /*!< USB USB_TXD0_REG: USB_TXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_TXS0_REG  ------------------------------ */
#define USB_USB_TXS0_REG_USB_TCOUNT_Pos       (0UL)                     /*!< USB USB_TXS0_REG: USB_TCOUNT (Bit 0)                        */
#define USB_USB_TXS0_REG_USB_TCOUNT_Msk       (0x1fUL)                  /*!< USB USB_TXS0_REG: USB_TCOUNT (Bitfield-Mask: 0x1f)          */
#define USB_USB_TXS0_REG_USB_TX_DONE_Pos      (5UL)                     /*!< USB USB_TXS0_REG: USB_TX_DONE (Bit 5)                       */
#define USB_USB_TXS0_REG_USB_TX_DONE_Msk      (0x20UL)                  /*!< USB USB_TXS0_REG: USB_TX_DONE (Bitfield-Mask: 0x01)         */
#define USB_USB_TXS0_REG_USB_ACK_STAT_Pos     (6UL)                     /*!< USB USB_TXS0_REG: USB_ACK_STAT (Bit 6)                      */
#define USB_USB_TXS0_REG_USB_ACK_STAT_Msk     (0x40UL)                  /*!< USB USB_TXS0_REG: USB_ACK_STAT (Bitfield-Mask: 0x01)        */
/* ------------------------------  USB_USB_TXC0_REG  ------------------------------ */
#define USB_USB_TXC0_REG_USB_TX_EN_Pos        (0UL)                     /*!< USB USB_TXC0_REG: USB_TX_EN (Bit 0)                         */
#define USB_USB_TXC0_REG_USB_TX_EN_Msk        (0x1UL)                   /*!< USB USB_TXC0_REG: USB_TX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC0_REG_USB_TOGGLE_TX0_Pos   (2UL)                     /*!< USB USB_TXC0_REG: USB_TOGGLE_TX0 (Bit 2)                    */
#define USB_USB_TXC0_REG_USB_TOGGLE_TX0_Msk   (0x4UL)                   /*!< USB USB_TXC0_REG: USB_TOGGLE_TX0 (Bitfield-Mask: 0x01)      */
#define USB_USB_TXC0_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_TXC0_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_TXC0_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_TXC0_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC0_REG_USB_IGN_IN_Pos       (4UL)                     /*!< USB USB_TXC0_REG: USB_IGN_IN (Bit 4)                        */
#define USB_USB_TXC0_REG_USB_IGN_IN_Msk       (0x10UL)                  /*!< USB USB_TXC0_REG: USB_IGN_IN (Bitfield-Mask: 0x01)          */
/* -----------------------------  USB_USB_EP0_NAK_REG  ---------------------------- */
#define USB_USB_EP0_NAK_REG_USB_EP0_INNAK_Pos (0UL)                     /*!< USB USB_EP0_NAK_REG: USB_EP0_INNAK (Bit 0)                  */
#define USB_USB_EP0_NAK_REG_USB_EP0_INNAK_Msk (0x1UL)                   /*!< USB USB_EP0_NAK_REG: USB_EP0_INNAK (Bitfield-Mask: 0x01)    */
#define USB_USB_EP0_NAK_REG_USB_EP0_OUTNAK_Pos (1UL)                    /*!< USB USB_EP0_NAK_REG: USB_EP0_OUTNAK (Bit 1)                 */
#define USB_USB_EP0_NAK_REG_USB_EP0_OUTNAK_Msk (0x2UL)                  /*!< USB USB_EP0_NAK_REG: USB_EP0_OUTNAK (Bitfield-Mask: 0x01)   */
/* ------------------------------  USB_USB_RXD0_REG  ------------------------------ */
#define USB_USB_RXD0_REG_USB_RXFD_Pos         (0UL)                     /*!< USB USB_RXD0_REG: USB_RXFD (Bit 0)                          */
#define USB_USB_RXD0_REG_USB_RXFD_Msk         (0xffUL)                  /*!< USB USB_RXD0_REG: USB_RXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_RXS0_REG  ------------------------------ */
#define USB_USB_RXS0_REG_USB_RCOUNT_Pos       (0UL)                     /*!< USB USB_RXS0_REG: USB_RCOUNT (Bit 0)                        */
#define USB_USB_RXS0_REG_USB_RCOUNT_Msk       (0xfUL)                   /*!< USB USB_RXS0_REG: USB_RCOUNT (Bitfield-Mask: 0x0f)          */
#define USB_USB_RXS0_REG_USB_RX_LAST_Pos      (4UL)                     /*!< USB USB_RXS0_REG: USB_RX_LAST (Bit 4)                       */
#define USB_USB_RXS0_REG_USB_RX_LAST_Msk      (0x10UL)                  /*!< USB USB_RXS0_REG: USB_RX_LAST (Bitfield-Mask: 0x01)         */
#define USB_USB_RXS0_REG_USB_TOGGLE_RX0_Pos   (5UL)                     /*!< USB USB_RXS0_REG: USB_TOGGLE_RX0 (Bit 5)                    */
#define USB_USB_RXS0_REG_USB_TOGGLE_RX0_Msk   (0x20UL)                  /*!< USB USB_RXS0_REG: USB_TOGGLE_RX0 (Bitfield-Mask: 0x01)      */
#define USB_USB_RXS0_REG_USB_SETUP_Pos        (6UL)                     /*!< USB USB_RXS0_REG: USB_SETUP (Bit 6)                         */
#define USB_USB_RXS0_REG_USB_SETUP_Msk        (0x40UL)                  /*!< USB USB_RXS0_REG: USB_SETUP (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_RXC0_REG  ------------------------------ */
#define USB_USB_RXC0_REG_USB_RX_EN_Pos        (0UL)                     /*!< USB USB_RXC0_REG: USB_RX_EN (Bit 0)                         */
#define USB_USB_RXC0_REG_USB_RX_EN_Msk        (0x1UL)                   /*!< USB USB_RXC0_REG: USB_RX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC0_REG_USB_IGN_OUT_Pos      (1UL)                     /*!< USB USB_RXC0_REG: USB_IGN_OUT (Bit 1)                       */
#define USB_USB_RXC0_REG_USB_IGN_OUT_Msk      (0x2UL)                   /*!< USB USB_RXC0_REG: USB_IGN_OUT (Bitfield-Mask: 0x01)         */
#define USB_USB_RXC0_REG_USB_IGN_SETUP_Pos    (2UL)                     /*!< USB USB_RXC0_REG: USB_IGN_SETUP (Bit 2)                     */
#define USB_USB_RXC0_REG_USB_IGN_SETUP_Msk    (0x4UL)                   /*!< USB USB_RXC0_REG: USB_IGN_SETUP (Bitfield-Mask: 0x01)       */
#define USB_USB_RXC0_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_RXC0_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_RXC0_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_RXC0_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_EPC1_REG  ------------------------------ */
#define USB_USB_EPC1_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC1_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC1_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC1_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC1_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC1_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC1_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC1_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC1_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC1_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC1_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC1_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC1_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC1_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC1_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC1_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_TXD1_REG  ------------------------------ */
#define USB_USB_TXD1_REG_USB_TXFD_Pos         (0UL)                     /*!< USB USB_TXD1_REG: USB_TXFD (Bit 0)                          */
#define USB_USB_TXD1_REG_USB_TXFD_Msk         (0xffUL)                  /*!< USB USB_TXD1_REG: USB_TXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_TXS1_REG  ------------------------------ */
#define USB_USB_TXS1_REG_USB_TCOUNT_Pos       (0UL)                     /*!< USB USB_TXS1_REG: USB_TCOUNT (Bit 0)                        */
#define USB_USB_TXS1_REG_USB_TCOUNT_Msk       (0x1fUL)                  /*!< USB USB_TXS1_REG: USB_TCOUNT (Bitfield-Mask: 0x1f)          */
#define USB_USB_TXS1_REG_USB_TX_DONE_Pos      (5UL)                     /*!< USB USB_TXS1_REG: USB_TX_DONE (Bit 5)                       */
#define USB_USB_TXS1_REG_USB_TX_DONE_Msk      (0x20UL)                  /*!< USB USB_TXS1_REG: USB_TX_DONE (Bitfield-Mask: 0x01)         */
#define USB_USB_TXS1_REG_USB_ACK_STAT_Pos     (6UL)                     /*!< USB USB_TXS1_REG: USB_ACK_STAT (Bit 6)                      */
#define USB_USB_TXS1_REG_USB_ACK_STAT_Msk     (0x40UL)                  /*!< USB USB_TXS1_REG: USB_ACK_STAT (Bitfield-Mask: 0x01)        */
#define USB_USB_TXS1_REG_USB_TX_URUN_Pos      (7UL)                     /*!< USB USB_TXS1_REG: USB_TX_URUN (Bit 7)                       */
#define USB_USB_TXS1_REG_USB_TX_URUN_Msk      (0x80UL)                  /*!< USB USB_TXS1_REG: USB_TX_URUN (Bitfield-Mask: 0x01)         */
/* ------------------------------  USB_USB_TXC1_REG  ------------------------------ */
#define USB_USB_TXC1_REG_USB_TX_EN_Pos        (0UL)                     /*!< USB USB_TXC1_REG: USB_TX_EN (Bit 0)                         */
#define USB_USB_TXC1_REG_USB_TX_EN_Msk        (0x1UL)                   /*!< USB USB_TXC1_REG: USB_TX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC1_REG_USB_LAST_Pos         (1UL)                     /*!< USB USB_TXC1_REG: USB_LAST (Bit 1)                          */
#define USB_USB_TXC1_REG_USB_LAST_Msk         (0x2UL)                   /*!< USB USB_TXC1_REG: USB_LAST (Bitfield-Mask: 0x01)            */
#define USB_USB_TXC1_REG_USB_TOGGLE_TX_Pos    (2UL)                     /*!< USB USB_TXC1_REG: USB_TOGGLE_TX (Bit 2)                     */
#define USB_USB_TXC1_REG_USB_TOGGLE_TX_Msk    (0x4UL)                   /*!< USB USB_TXC1_REG: USB_TOGGLE_TX (Bitfield-Mask: 0x01)       */
#define USB_USB_TXC1_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_TXC1_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_TXC1_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_TXC1_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC1_REG_USB_RFF_Pos          (4UL)                     /*!< USB USB_TXC1_REG: USB_RFF (Bit 4)                           */
#define USB_USB_TXC1_REG_USB_RFF_Msk          (0x10UL)                  /*!< USB USB_TXC1_REG: USB_RFF (Bitfield-Mask: 0x01)             */
#define USB_USB_TXC1_REG_USB_TFWL_Pos         (5UL)                     /*!< USB USB_TXC1_REG: USB_TFWL (Bit 5)                          */
#define USB_USB_TXC1_REG_USB_TFWL_Msk         (0x60UL)                  /*!< USB USB_TXC1_REG: USB_TFWL (Bitfield-Mask: 0x03)            */
#define USB_USB_TXC1_REG_USB_IGN_ISOMSK_Pos   (7UL)                     /*!< USB USB_TXC1_REG: USB_IGN_ISOMSK (Bit 7)                    */
#define USB_USB_TXC1_REG_USB_IGN_ISOMSK_Msk   (0x80UL)                  /*!< USB USB_TXC1_REG: USB_IGN_ISOMSK (Bitfield-Mask: 0x01)      */
/* ------------------------------  USB_USB_EPC2_REG  ------------------------------ */
#define USB_USB_EPC2_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC2_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC2_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC2_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC2_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC2_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC2_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC2_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC2_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC2_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC2_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC2_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC2_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC2_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC2_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC2_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_RXD1_REG  ------------------------------ */
#define USB_USB_RXD1_REG_USB_RXFD_Pos         (0UL)                     /*!< USB USB_RXD1_REG: USB_RXFD (Bit 0)                          */
#define USB_USB_RXD1_REG_USB_RXFD_Msk         (0xffUL)                  /*!< USB USB_RXD1_REG: USB_RXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_RXS1_REG  ------------------------------ */
#define USB_USB_RXS1_REG_USB_RCOUNT_Pos       (0UL)                     /*!< USB USB_RXS1_REG: USB_RCOUNT (Bit 0)                        */
#define USB_USB_RXS1_REG_USB_RCOUNT_Msk       (0xfUL)                   /*!< USB USB_RXS1_REG: USB_RCOUNT (Bitfield-Mask: 0x0f)          */
#define USB_USB_RXS1_REG_USB_RX_LAST_Pos      (4UL)                     /*!< USB USB_RXS1_REG: USB_RX_LAST (Bit 4)                       */
#define USB_USB_RXS1_REG_USB_RX_LAST_Msk      (0x10UL)                  /*!< USB USB_RXS1_REG: USB_RX_LAST (Bitfield-Mask: 0x01)         */
#define USB_USB_RXS1_REG_USB_TOGGLE_RX_Pos    (5UL)                     /*!< USB USB_RXS1_REG: USB_TOGGLE_RX (Bit 5)                     */
#define USB_USB_RXS1_REG_USB_TOGGLE_RX_Msk    (0x20UL)                  /*!< USB USB_RXS1_REG: USB_TOGGLE_RX (Bitfield-Mask: 0x01)       */
#define USB_USB_RXS1_REG_USB_SETUP_Pos        (6UL)                     /*!< USB USB_RXS1_REG: USB_SETUP (Bit 6)                         */
#define USB_USB_RXS1_REG_USB_SETUP_Msk        (0x40UL)                  /*!< USB USB_RXS1_REG: USB_SETUP (Bitfield-Mask: 0x01)           */
#define USB_USB_RXS1_REG_USB_RX_ERR_Pos       (7UL)                     /*!< USB USB_RXS1_REG: USB_RX_ERR (Bit 7)                        */
#define USB_USB_RXS1_REG_USB_RX_ERR_Msk       (0x80UL)                  /*!< USB USB_RXS1_REG: USB_RX_ERR (Bitfield-Mask: 0x01)          */
#define USB_USB_RXS1_REG_USB_RXCOUNT_Pos      (8UL)                     /*!< USB USB_RXS1_REG: USB_RXCOUNT (Bit 8)                       */
#define USB_USB_RXS1_REG_USB_RXCOUNT_Msk      (0x7f00UL)                /*!< USB USB_RXS1_REG: USB_RXCOUNT (Bitfield-Mask: 0x7f)         */
/* ------------------------------  USB_USB_RXC1_REG  ------------------------------ */
#define USB_USB_RXC1_REG_USB_RX_EN_Pos        (0UL)                     /*!< USB USB_RXC1_REG: USB_RX_EN (Bit 0)                         */
#define USB_USB_RXC1_REG_USB_RX_EN_Msk        (0x1UL)                   /*!< USB USB_RXC1_REG: USB_RX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC1_REG_USB_IGN_SETUP_Pos    (2UL)                     /*!< USB USB_RXC1_REG: USB_IGN_SETUP (Bit 2)                     */
#define USB_USB_RXC1_REG_USB_IGN_SETUP_Msk    (0x4UL)                   /*!< USB USB_RXC1_REG: USB_IGN_SETUP (Bitfield-Mask: 0x01)       */
#define USB_USB_RXC1_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_RXC1_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_RXC1_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_RXC1_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC1_REG_USB_RFWL_Pos         (5UL)                     /*!< USB USB_RXC1_REG: USB_RFWL (Bit 5)                          */
#define USB_USB_RXC1_REG_USB_RFWL_Msk         (0x60UL)                  /*!< USB USB_RXC1_REG: USB_RFWL (Bitfield-Mask: 0x03)            */
/* ------------------------------  USB_USB_EPC3_REG  ------------------------------ */
#define USB_USB_EPC3_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC3_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC3_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC3_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC3_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC3_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC3_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC3_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC3_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC3_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC3_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC3_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC3_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC3_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC3_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC3_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_TXD2_REG  ------------------------------ */
#define USB_USB_TXD2_REG_USB_TXFD_Pos         (0UL)                     /*!< USB USB_TXD2_REG: USB_TXFD (Bit 0)                          */
#define USB_USB_TXD2_REG_USB_TXFD_Msk         (0xffUL)                  /*!< USB USB_TXD2_REG: USB_TXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_TXS2_REG  ------------------------------ */
#define USB_USB_TXS2_REG_USB_TCOUNT_Pos       (0UL)                     /*!< USB USB_TXS2_REG: USB_TCOUNT (Bit 0)                        */
#define USB_USB_TXS2_REG_USB_TCOUNT_Msk       (0x1fUL)                  /*!< USB USB_TXS2_REG: USB_TCOUNT (Bitfield-Mask: 0x1f)          */
#define USB_USB_TXS2_REG_USB_TX_DONE_Pos      (5UL)                     /*!< USB USB_TXS2_REG: USB_TX_DONE (Bit 5)                       */
#define USB_USB_TXS2_REG_USB_TX_DONE_Msk      (0x20UL)                  /*!< USB USB_TXS2_REG: USB_TX_DONE (Bitfield-Mask: 0x01)         */
#define USB_USB_TXS2_REG_USB_ACK_STAT_Pos     (6UL)                     /*!< USB USB_TXS2_REG: USB_ACK_STAT (Bit 6)                      */
#define USB_USB_TXS2_REG_USB_ACK_STAT_Msk     (0x40UL)                  /*!< USB USB_TXS2_REG: USB_ACK_STAT (Bitfield-Mask: 0x01)        */
#define USB_USB_TXS2_REG_USB_TX_URUN_Pos      (7UL)                     /*!< USB USB_TXS2_REG: USB_TX_URUN (Bit 7)                       */
#define USB_USB_TXS2_REG_USB_TX_URUN_Msk      (0x80UL)                  /*!< USB USB_TXS2_REG: USB_TX_URUN (Bitfield-Mask: 0x01)         */
/* ------------------------------  USB_USB_TXC2_REG  ------------------------------ */
#define USB_USB_TXC2_REG_USB_TX_EN_Pos        (0UL)                     /*!< USB USB_TXC2_REG: USB_TX_EN (Bit 0)                         */
#define USB_USB_TXC2_REG_USB_TX_EN_Msk        (0x1UL)                   /*!< USB USB_TXC2_REG: USB_TX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC2_REG_USB_LAST_Pos         (1UL)                     /*!< USB USB_TXC2_REG: USB_LAST (Bit 1)                          */
#define USB_USB_TXC2_REG_USB_LAST_Msk         (0x2UL)                   /*!< USB USB_TXC2_REG: USB_LAST (Bitfield-Mask: 0x01)            */
#define USB_USB_TXC2_REG_USB_TOGGLE_TX_Pos    (2UL)                     /*!< USB USB_TXC2_REG: USB_TOGGLE_TX (Bit 2)                     */
#define USB_USB_TXC2_REG_USB_TOGGLE_TX_Msk    (0x4UL)                   /*!< USB USB_TXC2_REG: USB_TOGGLE_TX (Bitfield-Mask: 0x01)       */
#define USB_USB_TXC2_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_TXC2_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_TXC2_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_TXC2_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC2_REG_USB_RFF_Pos          (4UL)                     /*!< USB USB_TXC2_REG: USB_RFF (Bit 4)                           */
#define USB_USB_TXC2_REG_USB_RFF_Msk          (0x10UL)                  /*!< USB USB_TXC2_REG: USB_RFF (Bitfield-Mask: 0x01)             */
#define USB_USB_TXC2_REG_USB_TFWL_Pos         (5UL)                     /*!< USB USB_TXC2_REG: USB_TFWL (Bit 5)                          */
#define USB_USB_TXC2_REG_USB_TFWL_Msk         (0x60UL)                  /*!< USB USB_TXC2_REG: USB_TFWL (Bitfield-Mask: 0x03)            */
#define USB_USB_TXC2_REG_USB_IGN_ISOMSK_Pos   (7UL)                     /*!< USB USB_TXC2_REG: USB_IGN_ISOMSK (Bit 7)                    */
#define USB_USB_TXC2_REG_USB_IGN_ISOMSK_Msk   (0x80UL)                  /*!< USB USB_TXC2_REG: USB_IGN_ISOMSK (Bitfield-Mask: 0x01)      */
/* ------------------------------  USB_USB_EPC4_REG  ------------------------------ */
#define USB_USB_EPC4_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC4_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC4_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC4_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC4_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC4_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC4_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC4_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC4_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC4_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC4_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC4_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC4_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC4_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC4_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC4_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_RXD2_REG  ------------------------------ */
#define USB_USB_RXD2_REG_USB_RXFD_Pos         (0UL)                     /*!< USB USB_RXD2_REG: USB_RXFD (Bit 0)                          */
#define USB_USB_RXD2_REG_USB_RXFD_Msk         (0xffUL)                  /*!< USB USB_RXD2_REG: USB_RXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_RXS2_REG  ------------------------------ */
#define USB_USB_RXS2_REG_USB_RCOUNT_Pos       (0UL)                     /*!< USB USB_RXS2_REG: USB_RCOUNT (Bit 0)                        */
#define USB_USB_RXS2_REG_USB_RCOUNT_Msk       (0xfUL)                   /*!< USB USB_RXS2_REG: USB_RCOUNT (Bitfield-Mask: 0x0f)          */
#define USB_USB_RXS2_REG_USB_RX_LAST_Pos      (4UL)                     /*!< USB USB_RXS2_REG: USB_RX_LAST (Bit 4)                       */
#define USB_USB_RXS2_REG_USB_RX_LAST_Msk      (0x10UL)                  /*!< USB USB_RXS2_REG: USB_RX_LAST (Bitfield-Mask: 0x01)         */
#define USB_USB_RXS2_REG_USB_TOGGLE_RX_Pos    (5UL)                     /*!< USB USB_RXS2_REG: USB_TOGGLE_RX (Bit 5)                     */
#define USB_USB_RXS2_REG_USB_TOGGLE_RX_Msk    (0x20UL)                  /*!< USB USB_RXS2_REG: USB_TOGGLE_RX (Bitfield-Mask: 0x01)       */
#define USB_USB_RXS2_REG_USB_SETUP_Pos        (6UL)                     /*!< USB USB_RXS2_REG: USB_SETUP (Bit 6)                         */
#define USB_USB_RXS2_REG_USB_SETUP_Msk        (0x40UL)                  /*!< USB USB_RXS2_REG: USB_SETUP (Bitfield-Mask: 0x01)           */
#define USB_USB_RXS2_REG_USB_RX_ERR_Pos       (7UL)                     /*!< USB USB_RXS2_REG: USB_RX_ERR (Bit 7)                        */
#define USB_USB_RXS2_REG_USB_RX_ERR_Msk       (0x80UL)                  /*!< USB USB_RXS2_REG: USB_RX_ERR (Bitfield-Mask: 0x01)          */
#define USB_USB_RXS2_REG_USB_RXCOUNT_Pos      (8UL)                     /*!< USB USB_RXS2_REG: USB_RXCOUNT (Bit 8)                       */
#define USB_USB_RXS2_REG_USB_RXCOUNT_Msk      (0x7f00UL)                /*!< USB USB_RXS2_REG: USB_RXCOUNT (Bitfield-Mask: 0x7f)         */
/* ------------------------------  USB_USB_RXC2_REG  ------------------------------ */
#define USB_USB_RXC2_REG_USB_RX_EN_Pos        (0UL)                     /*!< USB USB_RXC2_REG: USB_RX_EN (Bit 0)                         */
#define USB_USB_RXC2_REG_USB_RX_EN_Msk        (0x1UL)                   /*!< USB USB_RXC2_REG: USB_RX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC2_REG_USB_IGN_SETUP_Pos    (2UL)                     /*!< USB USB_RXC2_REG: USB_IGN_SETUP (Bit 2)                     */
#define USB_USB_RXC2_REG_USB_IGN_SETUP_Msk    (0x4UL)                   /*!< USB USB_RXC2_REG: USB_IGN_SETUP (Bitfield-Mask: 0x01)       */
#define USB_USB_RXC2_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_RXC2_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_RXC2_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_RXC2_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC2_REG_USB_RFWL_Pos         (5UL)                     /*!< USB USB_RXC2_REG: USB_RFWL (Bit 5)                          */
#define USB_USB_RXC2_REG_USB_RFWL_Msk         (0x60UL)                  /*!< USB USB_RXC2_REG: USB_RFWL (Bitfield-Mask: 0x03)            */
/* ------------------------------  USB_USB_EPC5_REG  ------------------------------ */
#define USB_USB_EPC5_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC5_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC5_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC5_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC5_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC5_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC5_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC5_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC5_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC5_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC5_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC5_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC5_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC5_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC5_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC5_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_TXD3_REG  ------------------------------ */
#define USB_USB_TXD3_REG_USB_TXFD_Pos         (0UL)                     /*!< USB USB_TXD3_REG: USB_TXFD (Bit 0)                          */
#define USB_USB_TXD3_REG_USB_TXFD_Msk         (0xffUL)                  /*!< USB USB_TXD3_REG: USB_TXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_TXS3_REG  ------------------------------ */
#define USB_USB_TXS3_REG_USB_TCOUNT_Pos       (0UL)                     /*!< USB USB_TXS3_REG: USB_TCOUNT (Bit 0)                        */
#define USB_USB_TXS3_REG_USB_TCOUNT_Msk       (0x1fUL)                  /*!< USB USB_TXS3_REG: USB_TCOUNT (Bitfield-Mask: 0x1f)          */
#define USB_USB_TXS3_REG_USB_TX_DONE_Pos      (5UL)                     /*!< USB USB_TXS3_REG: USB_TX_DONE (Bit 5)                       */
#define USB_USB_TXS3_REG_USB_TX_DONE_Msk      (0x20UL)                  /*!< USB USB_TXS3_REG: USB_TX_DONE (Bitfield-Mask: 0x01)         */
#define USB_USB_TXS3_REG_USB_ACK_STAT_Pos     (6UL)                     /*!< USB USB_TXS3_REG: USB_ACK_STAT (Bit 6)                      */
#define USB_USB_TXS3_REG_USB_ACK_STAT_Msk     (0x40UL)                  /*!< USB USB_TXS3_REG: USB_ACK_STAT (Bitfield-Mask: 0x01)        */
#define USB_USB_TXS3_REG_USB_TX_URUN_Pos      (7UL)                     /*!< USB USB_TXS3_REG: USB_TX_URUN (Bit 7)                       */
#define USB_USB_TXS3_REG_USB_TX_URUN_Msk      (0x80UL)                  /*!< USB USB_TXS3_REG: USB_TX_URUN (Bitfield-Mask: 0x01)         */
/* ------------------------------  USB_USB_TXC3_REG  ------------------------------ */
#define USB_USB_TXC3_REG_USB_TX_EN_Pos        (0UL)                     /*!< USB USB_TXC3_REG: USB_TX_EN (Bit 0)                         */
#define USB_USB_TXC3_REG_USB_TX_EN_Msk        (0x1UL)                   /*!< USB USB_TXC3_REG: USB_TX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC3_REG_USB_LAST_Pos         (1UL)                     /*!< USB USB_TXC3_REG: USB_LAST (Bit 1)                          */
#define USB_USB_TXC3_REG_USB_LAST_Msk         (0x2UL)                   /*!< USB USB_TXC3_REG: USB_LAST (Bitfield-Mask: 0x01)            */
#define USB_USB_TXC3_REG_USB_TOGGLE_TX_Pos    (2UL)                     /*!< USB USB_TXC3_REG: USB_TOGGLE_TX (Bit 2)                     */
#define USB_USB_TXC3_REG_USB_TOGGLE_TX_Msk    (0x4UL)                   /*!< USB USB_TXC3_REG: USB_TOGGLE_TX (Bitfield-Mask: 0x01)       */
#define USB_USB_TXC3_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_TXC3_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_TXC3_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_TXC3_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_TXC3_REG_USB_RFF_Pos          (4UL)                     /*!< USB USB_TXC3_REG: USB_RFF (Bit 4)                           */
#define USB_USB_TXC3_REG_USB_RFF_Msk          (0x10UL)                  /*!< USB USB_TXC3_REG: USB_RFF (Bitfield-Mask: 0x01)             */
#define USB_USB_TXC3_REG_USB_TFWL_Pos         (5UL)                     /*!< USB USB_TXC3_REG: USB_TFWL (Bit 5)                          */
#define USB_USB_TXC3_REG_USB_TFWL_Msk         (0x60UL)                  /*!< USB USB_TXC3_REG: USB_TFWL (Bitfield-Mask: 0x03)            */
#define USB_USB_TXC3_REG_USB_IGN_ISOMSK_Pos   (7UL)                     /*!< USB USB_TXC3_REG: USB_IGN_ISOMSK (Bit 7)                    */
#define USB_USB_TXC3_REG_USB_IGN_ISOMSK_Msk   (0x80UL)                  /*!< USB USB_TXC3_REG: USB_IGN_ISOMSK (Bitfield-Mask: 0x01)      */
/* ------------------------------  USB_USB_EPC6_REG  ------------------------------ */
#define USB_USB_EPC6_REG_USB_EP_Pos           (0UL)                     /*!< USB USB_EPC6_REG: USB_EP (Bit 0)                            */
#define USB_USB_EPC6_REG_USB_EP_Msk           (0xfUL)                   /*!< USB USB_EPC6_REG: USB_EP (Bitfield-Mask: 0x0f)              */
#define USB_USB_EPC6_REG_USB_EP_EN_Pos        (4UL)                     /*!< USB USB_EPC6_REG: USB_EP_EN (Bit 4)                         */
#define USB_USB_EPC6_REG_USB_EP_EN_Msk        (0x10UL)                  /*!< USB USB_EPC6_REG: USB_EP_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_EPC6_REG_USB_ISO_Pos          (5UL)                     /*!< USB USB_EPC6_REG: USB_ISO (Bit 5)                           */
#define USB_USB_EPC6_REG_USB_ISO_Msk          (0x20UL)                  /*!< USB USB_EPC6_REG: USB_ISO (Bitfield-Mask: 0x01)             */
#define USB_USB_EPC6_REG_USB_STALL_Pos        (7UL)                     /*!< USB USB_EPC6_REG: USB_STALL (Bit 7)                         */
#define USB_USB_EPC6_REG_USB_STALL_Msk        (0x80UL)                  /*!< USB USB_EPC6_REG: USB_STALL (Bitfield-Mask: 0x01)           */
/* ------------------------------  USB_USB_RXD3_REG  ------------------------------ */
#define USB_USB_RXD3_REG_USB_RXFD_Pos         (0UL)                     /*!< USB USB_RXD3_REG: USB_RXFD (Bit 0)                          */
#define USB_USB_RXD3_REG_USB_RXFD_Msk         (0xffUL)                  /*!< USB USB_RXD3_REG: USB_RXFD (Bitfield-Mask: 0xff)            */
/* ------------------------------  USB_USB_RXS3_REG  ------------------------------ */
#define USB_USB_RXS3_REG_USB_RCOUNT_Pos       (0UL)                     /*!< USB USB_RXS3_REG: USB_RCOUNT (Bit 0)                        */
#define USB_USB_RXS3_REG_USB_RCOUNT_Msk       (0xfUL)                   /*!< USB USB_RXS3_REG: USB_RCOUNT (Bitfield-Mask: 0x0f)          */
#define USB_USB_RXS3_REG_USB_RX_LAST_Pos      (4UL)                     /*!< USB USB_RXS3_REG: USB_RX_LAST (Bit 4)                       */
#define USB_USB_RXS3_REG_USB_RX_LAST_Msk      (0x10UL)                  /*!< USB USB_RXS3_REG: USB_RX_LAST (Bitfield-Mask: 0x01)         */
#define USB_USB_RXS3_REG_USB_TOGGLE_RX_Pos    (5UL)                     /*!< USB USB_RXS3_REG: USB_TOGGLE_RX (Bit 5)                     */
#define USB_USB_RXS3_REG_USB_TOGGLE_RX_Msk    (0x20UL)                  /*!< USB USB_RXS3_REG: USB_TOGGLE_RX (Bitfield-Mask: 0x01)       */
#define USB_USB_RXS3_REG_USB_SETUP_Pos        (6UL)                     /*!< USB USB_RXS3_REG: USB_SETUP (Bit 6)                         */
#define USB_USB_RXS3_REG_USB_SETUP_Msk        (0x40UL)                  /*!< USB USB_RXS3_REG: USB_SETUP (Bitfield-Mask: 0x01)           */
#define USB_USB_RXS3_REG_USB_RX_ERR_Pos       (7UL)                     /*!< USB USB_RXS3_REG: USB_RX_ERR (Bit 7)                        */
#define USB_USB_RXS3_REG_USB_RX_ERR_Msk       (0x80UL)                  /*!< USB USB_RXS3_REG: USB_RX_ERR (Bitfield-Mask: 0x01)          */
#define USB_USB_RXS3_REG_USB_RXCOUNT_Pos      (8UL)                     /*!< USB USB_RXS3_REG: USB_RXCOUNT (Bit 8)                       */
#define USB_USB_RXS3_REG_USB_RXCOUNT_Msk      (0x7f00UL)                /*!< USB USB_RXS3_REG: USB_RXCOUNT (Bitfield-Mask: 0x7f)         */
/* ------------------------------  USB_USB_RXC3_REG  ------------------------------ */
#define USB_USB_RXC3_REG_USB_RX_EN_Pos        (0UL)                     /*!< USB USB_RXC3_REG: USB_RX_EN (Bit 0)                         */
#define USB_USB_RXC3_REG_USB_RX_EN_Msk        (0x1UL)                   /*!< USB USB_RXC3_REG: USB_RX_EN (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC3_REG_USB_IGN_SETUP_Pos    (2UL)                     /*!< USB USB_RXC3_REG: USB_IGN_SETUP (Bit 2)                     */
#define USB_USB_RXC3_REG_USB_IGN_SETUP_Msk    (0x4UL)                   /*!< USB USB_RXC3_REG: USB_IGN_SETUP (Bitfield-Mask: 0x01)       */
#define USB_USB_RXC3_REG_USB_FLUSH_Pos        (3UL)                     /*!< USB USB_RXC3_REG: USB_FLUSH (Bit 3)                         */
#define USB_USB_RXC3_REG_USB_FLUSH_Msk        (0x8UL)                   /*!< USB USB_RXC3_REG: USB_FLUSH (Bitfield-Mask: 0x01)           */
#define USB_USB_RXC3_REG_USB_RFWL_Pos         (5UL)                     /*!< USB USB_RXC3_REG: USB_RFWL (Bit 5)                          */
#define USB_USB_RXC3_REG_USB_RFWL_Msk         (0x60UL)                  /*!< USB USB_RXC3_REG: USB_RFWL (Bitfield-Mask: 0x03)            */
/* ----------------------------  USB_USB_DMA_CTRL_REG  ---------------------------- */
#define USB_USB_DMA_CTRL_REG_USB_DMA_RX_Pos   (0UL)                     /*!< USB USB_DMA_CTRL_REG: USB_DMA_RX (Bit 0)                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_RX_Msk   (0x7UL)                   /*!< USB USB_DMA_CTRL_REG: USB_DMA_RX (Bitfield-Mask: 0x07)      */
#define USB_USB_DMA_CTRL_REG_USB_DMA_TX_Pos   (3UL)                     /*!< USB USB_DMA_CTRL_REG: USB_DMA_TX (Bit 3)                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_TX_Msk   (0x38UL)                  /*!< USB USB_DMA_CTRL_REG: USB_DMA_TX (Bitfield-Mask: 0x07)      */
#define USB_USB_DMA_CTRL_REG_USB_DMA_EN_Pos   (6UL)                     /*!< USB USB_DMA_CTRL_REG: USB_DMA_EN (Bit 6)                    */
#define USB_USB_DMA_CTRL_REG_USB_DMA_EN_Msk   (0x40UL)                  /*!< USB USB_DMA_CTRL_REG: USB_DMA_EN (Bitfield-Mask: 0x01)      */
/* --------------------------  USB_USB_CHARGER_CTRL_REG  -------------------------- */
#define USB_USB_CHARGER_CTRL_REG_USB_CHARGE_ON_Pos (0UL)                /*!< USB USB_CHARGER_CTRL_REG: USB_CHARGE_ON (Bit 0)             */
#define USB_USB_CHARGER_CTRL_REG_USB_CHARGE_ON_Msk (0x1UL)              /*!< USB USB_CHARGER_CTRL_REG: USB_CHARGE_ON (Bitfield-Mask: 0x01) */
#define USB_USB_CHARGER_CTRL_REG_IDP_SRC_ON_Pos (1UL)                   /*!< USB USB_CHARGER_CTRL_REG: IDP_SRC_ON (Bit 1)                */
#define USB_USB_CHARGER_CTRL_REG_IDP_SRC_ON_Msk (0x2UL)                 /*!< USB USB_CHARGER_CTRL_REG: IDP_SRC_ON (Bitfield-Mask: 0x01)  */
#define USB_USB_CHARGER_CTRL_REG_VDP_SRC_ON_Pos (2UL)                   /*!< USB USB_CHARGER_CTRL_REG: VDP_SRC_ON (Bit 2)                */
#define USB_USB_CHARGER_CTRL_REG_VDP_SRC_ON_Msk (0x4UL)                 /*!< USB USB_CHARGER_CTRL_REG: VDP_SRC_ON (Bitfield-Mask: 0x01)  */
#define USB_USB_CHARGER_CTRL_REG_VDM_SRC_ON_Pos (3UL)                   /*!< USB USB_CHARGER_CTRL_REG: VDM_SRC_ON (Bit 3)                */
#define USB_USB_CHARGER_CTRL_REG_VDM_SRC_ON_Msk (0x8UL)                 /*!< USB USB_CHARGER_CTRL_REG: VDM_SRC_ON (Bitfield-Mask: 0x01)  */
#define USB_USB_CHARGER_CTRL_REG_IDP_SINK_ON_Pos (4UL)                  /*!< USB USB_CHARGER_CTRL_REG: IDP_SINK_ON (Bit 4)               */
#define USB_USB_CHARGER_CTRL_REG_IDP_SINK_ON_Msk (0x10UL)               /*!< USB USB_CHARGER_CTRL_REG: IDP_SINK_ON (Bitfield-Mask: 0x01) */
#define USB_USB_CHARGER_CTRL_REG_IDM_SINK_ON_Pos (5UL)                  /*!< USB USB_CHARGER_CTRL_REG: IDM_SINK_ON (Bit 5)               */
#define USB_USB_CHARGER_CTRL_REG_IDM_SINK_ON_Msk (0x20UL)               /*!< USB USB_CHARGER_CTRL_REG: IDM_SINK_ON (Bitfield-Mask: 0x01) */
/* --------------------------  USB_USB_CHARGER_STAT_REG  -------------------------- */
#define USB_USB_CHARGER_STAT_REG_USB_DCP_DET_Pos (0UL)                  /*!< USB USB_CHARGER_STAT_REG: USB_DCP_DET (Bit 0)               */
#define USB_USB_CHARGER_STAT_REG_USB_DCP_DET_Msk (0x1UL)                /*!< USB USB_CHARGER_STAT_REG: USB_DCP_DET (Bitfield-Mask: 0x01) */
#define USB_USB_CHARGER_STAT_REG_USB_CHG_DET_Pos (1UL)                  /*!< USB USB_CHARGER_STAT_REG: USB_CHG_DET (Bit 1)               */
#define USB_USB_CHARGER_STAT_REG_USB_CHG_DET_Msk (0x2UL)                /*!< USB USB_CHARGER_STAT_REG: USB_CHG_DET (Bitfield-Mask: 0x01) */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL_Pos (2UL)                   /*!< USB USB_CHARGER_STAT_REG: USB_DP_VAL (Bit 2)                */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL_Msk (0x4UL)                 /*!< USB USB_CHARGER_STAT_REG: USB_DP_VAL (Bitfield-Mask: 0x01)  */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL_Pos (3UL)                   /*!< USB USB_CHARGER_STAT_REG: USB_DM_VAL (Bit 3)                */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL_Msk (0x8UL)                 /*!< USB USB_CHARGER_STAT_REG: USB_DM_VAL (Bitfield-Mask: 0x01)  */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL2_Pos (4UL)                  /*!< USB USB_CHARGER_STAT_REG: USB_DP_VAL2 (Bit 4)               */
#define USB_USB_CHARGER_STAT_REG_USB_DP_VAL2_Msk (0x10UL)               /*!< USB USB_CHARGER_STAT_REG: USB_DP_VAL2 (Bitfield-Mask: 0x01) */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL2_Pos (5UL)                  /*!< USB USB_CHARGER_STAT_REG: USB_DM_VAL2 (Bit 5)               */
#define USB_USB_CHARGER_STAT_REG_USB_DM_VAL2_Msk (0x20UL)               /*!< USB USB_CHARGER_STAT_REG: USB_DM_VAL2 (Bitfield-Mask: 0x01) */
/* ================================================================================ */
/* ================         struct 'WAKEUP' Position & Mask        ================ */
/* ================================================================================ */
/* ----------------------------  WAKEUP_WKUP_CTRL_REG  ---------------------------- */
#define WAKEUP_WKUP_CTRL_REG_WKUP_DEB_VALUE_Pos (0UL)                   /*!< WAKEUP WKUP_CTRL_REG: WKUP_DEB_VALUE (Bit 0)                */
#define WAKEUP_WKUP_CTRL_REG_WKUP_DEB_VALUE_Msk (0x3fUL)                /*!< WAKEUP WKUP_CTRL_REG: WKUP_DEB_VALUE (Bitfield-Mask: 0x3f)  */
#define WAKEUP_WKUP_CTRL_REG_WKUP_SFT_KEYHIT_Pos (6UL)                  /*!< WAKEUP WKUP_CTRL_REG: WKUP_SFT_KEYHIT (Bit 6)               */
#define WAKEUP_WKUP_CTRL_REG_WKUP_SFT_KEYHIT_Msk (0x40UL)               /*!< WAKEUP WKUP_CTRL_REG: WKUP_SFT_KEYHIT (Bitfield-Mask: 0x01) */
#define WAKEUP_WKUP_CTRL_REG_WKUP_ENABLE_IRQ_Pos (7UL)                  /*!< WAKEUP WKUP_CTRL_REG: WKUP_ENABLE_IRQ (Bit 7)               */
#define WAKEUP_WKUP_CTRL_REG_WKUP_ENABLE_IRQ_Msk (0x80UL)               /*!< WAKEUP WKUP_CTRL_REG: WKUP_ENABLE_IRQ (Bitfield-Mask: 0x01) */
/* --------------------------  WAKEUP_WKUP_RESET_IRQ_REG  ------------------------- */
#define WAKEUP_WKUP_RESET_IRQ_REG_WKUP_IRQ_RST_Pos (0UL)                /*!< WAKEUP WKUP_RESET_IRQ_REG: WKUP_IRQ_RST (Bit 0)             */
#define WAKEUP_WKUP_RESET_IRQ_REG_WKUP_IRQ_RST_Msk (0xffffUL)           /*!< WAKEUP WKUP_RESET_IRQ_REG: WKUP_IRQ_RST (Bitfield-Mask: 0xffff) */
/* --------------------------  WAKEUP_WKUP_SELECT_P0_REG  ------------------------- */
#define WAKEUP_WKUP_SELECT_P0_REG_WKUP_SELECT_P0_Pos (0UL)              /*!< WAKEUP WKUP_SELECT_P0_REG: WKUP_SELECT_P0 (Bit 0)           */
#define WAKEUP_WKUP_SELECT_P0_REG_WKUP_SELECT_P0_Msk (0xffffffffUL)     /*!< WAKEUP WKUP_SELECT_P0_REG: WKUP_SELECT_P0 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  WAKEUP_WKUP_SELECT_P1_REG  ------------------------- */
#define WAKEUP_WKUP_SELECT_P1_REG_WKUP_SELECT_P1_Pos (0UL)              /*!< WAKEUP WKUP_SELECT_P1_REG: WKUP_SELECT_P1 (Bit 0)           */
#define WAKEUP_WKUP_SELECT_P1_REG_WKUP_SELECT_P1_Msk (0x7fffffUL)       /*!< WAKEUP WKUP_SELECT_P1_REG: WKUP_SELECT_P1 (Bitfield-Mask: 0x7fffff) */
/* ---------------------------  WAKEUP_WKUP_POL_P0_REG  --------------------------- */
#define WAKEUP_WKUP_POL_P0_REG_WKUP_POL_P0_Pos (0UL)                    /*!< WAKEUP WKUP_POL_P0_REG: WKUP_POL_P0 (Bit 0)                 */
#define WAKEUP_WKUP_POL_P0_REG_WKUP_POL_P0_Msk (0xffffffffUL)           /*!< WAKEUP WKUP_POL_P0_REG: WKUP_POL_P0 (Bitfield-Mask: 0xffffffff) */
/* ---------------------------  WAKEUP_WKUP_POL_P1_REG  --------------------------- */
#define WAKEUP_WKUP_POL_P1_REG_WKUP_POL_P1_Pos (0UL)                    /*!< WAKEUP WKUP_POL_P1_REG: WKUP_POL_P1 (Bit 0)                 */
#define WAKEUP_WKUP_POL_P1_REG_WKUP_POL_P1_Msk (0x7fffffUL)             /*!< WAKEUP WKUP_POL_P1_REG: WKUP_POL_P1 (Bitfield-Mask: 0x7fffff) */
/* --------------------------  WAKEUP_WKUP_STATUS_P0_REG  ------------------------- */
#define WAKEUP_WKUP_STATUS_P0_REG_WKUP_STAT_P0_Pos (0UL)                /*!< WAKEUP WKUP_STATUS_P0_REG: WKUP_STAT_P0 (Bit 0)             */
#define WAKEUP_WKUP_STATUS_P0_REG_WKUP_STAT_P0_Msk (0xffffffffUL)       /*!< WAKEUP WKUP_STATUS_P0_REG: WKUP_STAT_P0 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  WAKEUP_WKUP_STATUS_P1_REG  ------------------------- */
#define WAKEUP_WKUP_STATUS_P1_REG_WKUP_STAT_P1_Pos (0UL)                /*!< WAKEUP WKUP_STATUS_P1_REG: WKUP_STAT_P1 (Bit 0)             */
#define WAKEUP_WKUP_STATUS_P1_REG_WKUP_STAT_P1_Msk (0x7fffffUL)         /*!< WAKEUP WKUP_STATUS_P1_REG: WKUP_STAT_P1 (Bitfield-Mask: 0x7fffff) */
/* --------------------------  WAKEUP_WKUP_CLEAR_P0_REG  -------------------------- */
#define WAKEUP_WKUP_CLEAR_P0_REG_WKUP_CLEAR_P0_Pos (0UL)                /*!< WAKEUP WKUP_CLEAR_P0_REG: WKUP_CLEAR_P0 (Bit 0)             */
#define WAKEUP_WKUP_CLEAR_P0_REG_WKUP_CLEAR_P0_Msk (0xffffffffUL)       /*!< WAKEUP WKUP_CLEAR_P0_REG: WKUP_CLEAR_P0 (Bitfield-Mask: 0xffffffff) */
/* --------------------------  WAKEUP_WKUP_CLEAR_P1_REG  -------------------------- */
#define WAKEUP_WKUP_CLEAR_P1_REG_WKUP_CLEAR_P1_Pos (0UL)                /*!< WAKEUP WKUP_CLEAR_P1_REG: WKUP_CLEAR_P1 (Bit 0)             */
#define WAKEUP_WKUP_CLEAR_P1_REG_WKUP_CLEAR_P1_Msk (0x7fffffUL)         /*!< WAKEUP WKUP_CLEAR_P1_REG: WKUP_CLEAR_P1 (Bitfield-Mask: 0x7fffff) */
/* -------------------------  WAKEUP_WKUP_SEL_GPIO_P0_REG  ------------------------ */
#define WAKEUP_WKUP_SEL_GPIO_P0_REG_WKUP_SEL_GPIO_P0_Pos (0UL)          /*!< WAKEUP WKUP_SEL_GPIO_P0_REG: WKUP_SEL_GPIO_P0 (Bit 0)       */
#define WAKEUP_WKUP_SEL_GPIO_P0_REG_WKUP_SEL_GPIO_P0_Msk (0xffffffffUL) /*!< WAKEUP WKUP_SEL_GPIO_P0_REG: WKUP_SEL_GPIO_P0 (Bitfield-Mask: 0xffffffff) */
/* -------------------------  WAKEUP_WKUP_SEL_GPIO_P1_REG  ------------------------ */
#define WAKEUP_WKUP_SEL_GPIO_P1_REG_WKUP_SEL_GPIO_P1_Pos (0UL)          /*!< WAKEUP WKUP_SEL_GPIO_P1_REG: WKUP_SEL_GPIO_P1 (Bit 0)       */
#define WAKEUP_WKUP_SEL_GPIO_P1_REG_WKUP_SEL_GPIO_P1_Msk (0x7fffffUL)   /*!< WAKEUP WKUP_SEL_GPIO_P1_REG: WKUP_SEL_GPIO_P1 (Bitfield-Mask: 0x7fffff) */
/* ================================================================================ */
/* ================              Peripheral memory map             ================ */
/* ================================================================================ */
#if 0
#define NVIC_BASE                       0xE000E100UL
#define SCB_BASE                        0xE000ED00UL
#define SysTick_BASE                    0xE000E010UL
#endif
#define adc2522_ds_bif_00_BASE          0x50020800UL
#define ADPLL_BASE                      0x40022000UL
#define AES_HASH_BASE                   0x30040000UL
#define ANAMISC_BASE                    0x50030B00UL
#define APU_BASE                        0x50030600UL
#define CACHE_BASE                      0x100C0000UL
#define CHARGER_BASE                    0x50040400UL
#define CHIP_VERSION_BASE               0x50040200UL
#define CMAC_BASE                       0x40000000UL
#define CMAC_TIMER_SLP_BASE             0x50010400UL
#define CRG_COM_BASE                    0x50020900UL
#define CRG_PER_BASE                    0x50030C00UL
#define CRG_SYS_BASE                    0x50040500UL
#define CRG_TOP_BASE                    0x50000000UL
#define CRG_XTAL_BASE                   0x50010000UL
#define DCDC_BASE                       0x50000300UL
#define DEM_BASE                        0x40021000UL
#define DMA_BASE                        0x50040800UL
#define DW_BASE                         0x30020000UL
#define GPADC_BASE                      0x50030900UL
#define GPIO_BASE                       0x50020A00UL
#define GPREG_BASE                      0x50040300UL
#define I2C_BASE                        0x50020600UL
#define I2C2_BASE                       0x50020700UL
#define LCDC_BASE                       0x30030000UL
#define LRA_BASE                        0x50030A00UL
#define MEMCTRL_BASE                    0x50050000UL
#define OTPC_BASE                       0x30070000UL
#define PATCH_BASE                      0x30090000UL
#define PDC_BASE                        0x50000200UL
#define PWMLED_BASE                     0x50030500UL
#define QSPIC_BASE                      0x38000000UL
#define QSPIC2_BASE                     0x34000000UL
#define RFCU_BASE                       0x40020000UL
#define RFCU_POWER_BASE                 0x40020200UL
#define RFMON_BASE                      0x50040600UL
#define RTC_BASE                        0x50000400UL
#define SMOTOR_BASE                     0x50030E00UL
#define SNC_BASE                        0x50020C00UL
#define SPI_BASE                        0x50020300UL
#define SPI2_BASE                       0x50020400UL
#define SYS_WDOG_BASE                   0x50000700UL
#define TIMER_BASE                      0x50010200UL
#define TIMER2_BASE                     0x50010300UL
#define TIMER3_BASE                     0x50040A00UL
#define TIMER4_BASE                     0x50040B00UL
#define TRNG_BASE                       0x50040C00UL
#define UART_BASE                       0x50020000UL
#define UART2_BASE                      0x50020100UL
#define UART3_BASE                      0x50020200UL
#define USB_BASE                        0x50040000UL
#define WAKEUP_BASE                     0x50000100UL
/* ================================================================================ */
/* ================             Peripheral declaration             ================ */
/* ================================================================================ */
#if 0
#define NVIC                            ((NVIC_Type               *) NVIC_BASE)
#define SCB                             ((SCB_Type                *) SCB_BASE)
#define SysTick                         ((SysTick_Type            *) SysTick_BASE)
#endif
#define adc2522_ds_bif_00               ((adc2522_ds_bif_00_Type  *) adc2522_ds_bif_00_BASE)
#define ADPLL                           ((ADPLL_Type              *) ADPLL_BASE)
#define AES_HASH                        ((AES_HASH_Type           *) AES_HASH_BASE)
#define ANAMISC                         ((ANAMISC_Type            *) ANAMISC_BASE)
#define APU                             ((APU_Type                *) APU_BASE)
#define CACHE                           ((CACHE_Type              *) CACHE_BASE)
#define CHARGER                         ((CHARGER_Type            *) CHARGER_BASE)
#define CHIP_VERSION                    ((CHIP_VERSION_Type       *) CHIP_VERSION_BASE)
#define CMAC                            ((CMAC_Type               *) CMAC_BASE)
#define CMAC_TIMER_SLP                  ((CMAC_TIMER_SLP_Type     *) CMAC_TIMER_SLP_BASE)
#define CRG_COM                         ((CRG_COM_Type            *) CRG_COM_BASE)
#define CRG_PER                         ((CRG_PER_Type            *) CRG_PER_BASE)
#define CRG_SYS                         ((CRG_SYS_Type            *) CRG_SYS_BASE)
#define CRG_TOP                         ((CRG_TOP_Type            *) CRG_TOP_BASE)
#define CRG_XTAL                        ((CRG_XTAL_Type           *) CRG_XTAL_BASE)
#define DCDC                            ((DCDC_Type               *) DCDC_BASE)
#define DEM                             ((DEM_Type                *) DEM_BASE)
#define DMA                             ((DMA_Type                *) DMA_BASE)
#define DW                              ((DW_Type                 *) DW_BASE)
#define GPADC                           ((GPADC_Type              *) GPADC_BASE)
#define GPIO                            ((GPIO_Type               *) GPIO_BASE)
#define GPREG                           ((GPREG_Type              *) GPREG_BASE)
#define I2C                             ((I2C_Type                *) I2C_BASE)
#define I2C2                            ((I2C2_Type               *) I2C2_BASE)
#define LCDC                            ((LCDC_Type               *) LCDC_BASE)
#define LRA                             ((LRA_Type                *) LRA_BASE)
#define MEMCTRL                         ((MEMCTRL_Type            *) MEMCTRL_BASE)
#define OTPC                            ((OTPC_Type               *) OTPC_BASE)
#define PATCH                           ((PATCH_Type              *) PATCH_BASE)
#define PDC                             ((PDC_Type                *) PDC_BASE)
#define PWMLED                          ((PWMLED_Type             *) PWMLED_BASE)
#define QSPIC                           ((QSPIC_Type              *) QSPIC_BASE)
#define QSPIC2                          ((QSPIC2_Type             *) QSPIC2_BASE)
#define RFCU                            ((RFCU_Type               *) RFCU_BASE)
#define RFCU_POWER                      ((RFCU_POWER_Type         *) RFCU_POWER_BASE)
#define RFMON                           ((RFMON_Type              *) RFMON_BASE)
#define RTC                             ((RTC_Type                *) RTC_BASE)
#define SMOTOR                          ((SMOTOR_Type             *) SMOTOR_BASE)
#define SNC                             ((SNC_Type                *) SNC_BASE)
#define SPI                             ((SPI_Type                *) SPI_BASE)
#define SPI2                            ((SPI2_Type               *) SPI2_BASE)
#define SYS_WDOG                        ((SYS_WDOG_Type           *) SYS_WDOG_BASE)
#define TIMER                           ((TIMER_Type              *) TIMER_BASE)
#define TIMER2                          ((TIMER2_Type             *) TIMER2_BASE)
#define TIMER3                          ((TIMER3_Type             *) TIMER3_BASE)
#define TIMER4                          ((TIMER4_Type             *) TIMER4_BASE)
#define TRNG                            ((TRNG_Type               *) TRNG_BASE)
#define UART                            ((UART_Type               *) UART_BASE)
#define UART2                           ((UART2_Type              *) UART2_BASE)
#define UART3                           ((UART3_Type              *) UART3_BASE)
#define USB                             ((USB_Type                *) USB_BASE)
#define WAKEUP                          ((WAKEUP_Type             *) WAKEUP_BASE)
/** @} */ /* End of group Device_Peripheral_Registers */
/** @} */ /* End of group D2522AA */
/** @} */ /* End of group Dialog */
#ifdef __cplusplus
}
#endif
#endif  /* D2522AA_H */
